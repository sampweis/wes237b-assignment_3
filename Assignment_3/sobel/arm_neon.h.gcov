        -:    0:Source:/usr/lib/gcc/aarch64-linux-gnu/7/include/arm_neon.h
        -:    0:Graph:objs/student_sobel.gcno
        -:    0:Data:objs/student_sobel.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/* ARM NEON intrinsics include file.
        -:    2:
        -:    3:   Copyright (C) 2011-2017 Free Software Foundation, Inc.
        -:    4:   Contributed by ARM Ltd.
        -:    5:
        -:    6:   This file is part of GCC.
        -:    7:
        -:    8:   GCC is free software; you can redistribute it and/or modify it
        -:    9:   under the terms of the GNU General Public License as published
        -:   10:   by the Free Software Foundation; either version 3, or (at your
        -:   11:   option) any later version.
        -:   12:
        -:   13:   GCC is distributed in the hope that it will be useful, but WITHOUT
        -:   14:   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        -:   15:   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
        -:   16:   License for more details.
        -:   17:
        -:   18:   Under Section 7 of GPL version 3, you are granted additional
        -:   19:   permissions described in the GCC Runtime Library Exception, version
        -:   20:   3.1, as published by the Free Software Foundation.
        -:   21:
        -:   22:   You should have received a copy of the GNU General Public License and
        -:   23:   a copy of the GCC Runtime Library Exception along with this program;
        -:   24:   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   25:   <http://www.gnu.org/licenses/>.  */
        -:   26:
        -:   27:#ifndef _AARCH64_NEON_H_
        -:   28:#define _AARCH64_NEON_H_
        -:   29:
        -:   30:#pragma GCC push_options
        -:   31:#pragma GCC target ("+nothing+simd")
        -:   32:
        -:   33:#include <stdint.h>
        -:   34:
        -:   35:#define __AARCH64_UINT64_C(__C) ((uint64_t) __C)
        -:   36:#define __AARCH64_INT64_C(__C) ((int64_t) __C)
        -:   37:
        -:   38:typedef __Int8x8_t int8x8_t;
        -:   39:typedef __Int16x4_t int16x4_t;
        -:   40:typedef __Int32x2_t int32x2_t;
        -:   41:typedef __Int64x1_t int64x1_t;
        -:   42:typedef __Float16x4_t float16x4_t;
        -:   43:typedef __Float32x2_t float32x2_t;
        -:   44:typedef __Poly8x8_t poly8x8_t;
        -:   45:typedef __Poly16x4_t poly16x4_t;
        -:   46:typedef __Uint8x8_t uint8x8_t;
        -:   47:typedef __Uint16x4_t uint16x4_t;
        -:   48:typedef __Uint32x2_t uint32x2_t;
        -:   49:typedef __Float64x1_t float64x1_t;
        -:   50:typedef __Uint64x1_t uint64x1_t;
        -:   51:typedef __Int8x16_t int8x16_t;
        -:   52:typedef __Int16x8_t int16x8_t;
        -:   53:typedef __Int32x4_t int32x4_t;
        -:   54:typedef __Int64x2_t int64x2_t;
        -:   55:typedef __Float16x8_t float16x8_t;
        -:   56:typedef __Float32x4_t float32x4_t;
        -:   57:typedef __Float64x2_t float64x2_t;
        -:   58:typedef __Poly8x16_t poly8x16_t;
        -:   59:typedef __Poly16x8_t poly16x8_t;
        -:   60:typedef __Poly64x2_t poly64x2_t;
        -:   61:typedef __Poly64x1_t poly64x1_t;
        -:   62:typedef __Uint8x16_t uint8x16_t;
        -:   63:typedef __Uint16x8_t uint16x8_t;
        -:   64:typedef __Uint32x4_t uint32x4_t;
        -:   65:typedef __Uint64x2_t uint64x2_t;
        -:   66:
        -:   67:typedef __Poly8_t poly8_t;
        -:   68:typedef __Poly16_t poly16_t;
        -:   69:typedef __Poly64_t poly64_t;
        -:   70:typedef __Poly128_t poly128_t;
        -:   71:
        -:   72:typedef __fp16 float16_t;
        -:   73:typedef float float32_t;
        -:   74:typedef double float64_t;
        -:   75:
        -:   76:typedef struct int8x8x2_t
        -:   77:{
        -:   78:  int8x8_t val[2];
        -:   79:} int8x8x2_t;
        -:   80:
        -:   81:typedef struct int8x16x2_t
        -:   82:{
        -:   83:  int8x16_t val[2];
        -:   84:} int8x16x2_t;
        -:   85:
        -:   86:typedef struct int16x4x2_t
        -:   87:{
        -:   88:  int16x4_t val[2];
        -:   89:} int16x4x2_t;
        -:   90:
        -:   91:typedef struct int16x8x2_t
        -:   92:{
        -:   93:  int16x8_t val[2];
        -:   94:} int16x8x2_t;
        -:   95:
        -:   96:typedef struct int32x2x2_t
        -:   97:{
        -:   98:  int32x2_t val[2];
        -:   99:} int32x2x2_t;
        -:  100:
        -:  101:typedef struct int32x4x2_t
        -:  102:{
        -:  103:  int32x4_t val[2];
        -:  104:} int32x4x2_t;
        -:  105:
        -:  106:typedef struct int64x1x2_t
        -:  107:{
        -:  108:  int64x1_t val[2];
        -:  109:} int64x1x2_t;
        -:  110:
        -:  111:typedef struct int64x2x2_t
        -:  112:{
        -:  113:  int64x2_t val[2];
        -:  114:} int64x2x2_t;
        -:  115:
        -:  116:typedef struct uint8x8x2_t
        -:  117:{
        -:  118:  uint8x8_t val[2];
        -:  119:} uint8x8x2_t;
        -:  120:
        -:  121:typedef struct uint8x16x2_t
        -:  122:{
        -:  123:  uint8x16_t val[2];
        -:  124:} uint8x16x2_t;
        -:  125:
        -:  126:typedef struct uint16x4x2_t
        -:  127:{
        -:  128:  uint16x4_t val[2];
        -:  129:} uint16x4x2_t;
        -:  130:
        -:  131:typedef struct uint16x8x2_t
        -:  132:{
        -:  133:  uint16x8_t val[2];
        -:  134:} uint16x8x2_t;
        -:  135:
        -:  136:typedef struct uint32x2x2_t
        -:  137:{
        -:  138:  uint32x2_t val[2];
        -:  139:} uint32x2x2_t;
        -:  140:
        -:  141:typedef struct uint32x4x2_t
        -:  142:{
        -:  143:  uint32x4_t val[2];
        -:  144:} uint32x4x2_t;
        -:  145:
        -:  146:typedef struct uint64x1x2_t
        -:  147:{
        -:  148:  uint64x1_t val[2];
        -:  149:} uint64x1x2_t;
        -:  150:
        -:  151:typedef struct uint64x2x2_t
        -:  152:{
        -:  153:  uint64x2_t val[2];
        -:  154:} uint64x2x2_t;
        -:  155:
        -:  156:typedef struct float16x4x2_t
        -:  157:{
        -:  158:  float16x4_t val[2];
        -:  159:} float16x4x2_t;
        -:  160:
        -:  161:typedef struct float16x8x2_t
        -:  162:{
        -:  163:  float16x8_t val[2];
        -:  164:} float16x8x2_t;
        -:  165:
        -:  166:typedef struct float32x2x2_t
        -:  167:{
        -:  168:  float32x2_t val[2];
        -:  169:} float32x2x2_t;
        -:  170:
        -:  171:typedef struct float32x4x2_t
        -:  172:{
        -:  173:  float32x4_t val[2];
        -:  174:} float32x4x2_t;
        -:  175:
        -:  176:typedef struct float64x2x2_t
        -:  177:{
        -:  178:  float64x2_t val[2];
        -:  179:} float64x2x2_t;
        -:  180:
        -:  181:typedef struct float64x1x2_t
        -:  182:{
        -:  183:  float64x1_t val[2];
        -:  184:} float64x1x2_t;
        -:  185:
        -:  186:typedef struct poly8x8x2_t
        -:  187:{
        -:  188:  poly8x8_t val[2];
        -:  189:} poly8x8x2_t;
        -:  190:
        -:  191:typedef struct poly8x16x2_t
        -:  192:{
        -:  193:  poly8x16_t val[2];
        -:  194:} poly8x16x2_t;
        -:  195:
        -:  196:typedef struct poly16x4x2_t
        -:  197:{
        -:  198:  poly16x4_t val[2];
        -:  199:} poly16x4x2_t;
        -:  200:
        -:  201:typedef struct poly16x8x2_t
        -:  202:{
        -:  203:  poly16x8_t val[2];
        -:  204:} poly16x8x2_t;
        -:  205:
        -:  206:typedef struct poly64x1x2_t
        -:  207:{
        -:  208:  poly64x1_t val[2];
        -:  209:} poly64x1x2_t;
        -:  210:
        -:  211:typedef struct poly64x1x3_t
        -:  212:{
        -:  213:  poly64x1_t val[3];
        -:  214:} poly64x1x3_t;
        -:  215:
        -:  216:typedef struct poly64x1x4_t
        -:  217:{
        -:  218:  poly64x1_t val[4];
        -:  219:} poly64x1x4_t;
        -:  220:
        -:  221:typedef struct poly64x2x2_t
        -:  222:{
        -:  223:  poly64x2_t val[2];
        -:  224:} poly64x2x2_t;
        -:  225:
        -:  226:typedef struct poly64x2x3_t
        -:  227:{
        -:  228:  poly64x2_t val[3];
        -:  229:} poly64x2x3_t;
        -:  230:
        -:  231:typedef struct poly64x2x4_t
        -:  232:{
        -:  233:  poly64x2_t val[4];
        -:  234:} poly64x2x4_t;
        -:  235:
        -:  236:typedef struct int8x8x3_t
        -:  237:{
        -:  238:  int8x8_t val[3];
        -:  239:} int8x8x3_t;
        -:  240:
        -:  241:typedef struct int8x16x3_t
        -:  242:{
        -:  243:  int8x16_t val[3];
        -:  244:} int8x16x3_t;
        -:  245:
        -:  246:typedef struct int16x4x3_t
        -:  247:{
        -:  248:  int16x4_t val[3];
        -:  249:} int16x4x3_t;
        -:  250:
        -:  251:typedef struct int16x8x3_t
        -:  252:{
        -:  253:  int16x8_t val[3];
        -:  254:} int16x8x3_t;
        -:  255:
        -:  256:typedef struct int32x2x3_t
        -:  257:{
        -:  258:  int32x2_t val[3];
        -:  259:} int32x2x3_t;
        -:  260:
        -:  261:typedef struct int32x4x3_t
        -:  262:{
        -:  263:  int32x4_t val[3];
        -:  264:} int32x4x3_t;
        -:  265:
        -:  266:typedef struct int64x1x3_t
        -:  267:{
        -:  268:  int64x1_t val[3];
        -:  269:} int64x1x3_t;
        -:  270:
        -:  271:typedef struct int64x2x3_t
        -:  272:{
        -:  273:  int64x2_t val[3];
        -:  274:} int64x2x3_t;
        -:  275:
        -:  276:typedef struct uint8x8x3_t
        -:  277:{
        -:  278:  uint8x8_t val[3];
        -:  279:} uint8x8x3_t;
        -:  280:
        -:  281:typedef struct uint8x16x3_t
        -:  282:{
        -:  283:  uint8x16_t val[3];
        -:  284:} uint8x16x3_t;
        -:  285:
        -:  286:typedef struct uint16x4x3_t
        -:  287:{
        -:  288:  uint16x4_t val[3];
        -:  289:} uint16x4x3_t;
        -:  290:
        -:  291:typedef struct uint16x8x3_t
        -:  292:{
        -:  293:  uint16x8_t val[3];
        -:  294:} uint16x8x3_t;
        -:  295:
        -:  296:typedef struct uint32x2x3_t
        -:  297:{
        -:  298:  uint32x2_t val[3];
        -:  299:} uint32x2x3_t;
        -:  300:
        -:  301:typedef struct uint32x4x3_t
        -:  302:{
        -:  303:  uint32x4_t val[3];
        -:  304:} uint32x4x3_t;
        -:  305:
        -:  306:typedef struct uint64x1x3_t
        -:  307:{
        -:  308:  uint64x1_t val[3];
        -:  309:} uint64x1x3_t;
        -:  310:
        -:  311:typedef struct uint64x2x3_t
        -:  312:{
        -:  313:  uint64x2_t val[3];
        -:  314:} uint64x2x3_t;
        -:  315:
        -:  316:typedef struct float16x4x3_t
        -:  317:{
        -:  318:  float16x4_t val[3];
        -:  319:} float16x4x3_t;
        -:  320:
        -:  321:typedef struct float16x8x3_t
        -:  322:{
        -:  323:  float16x8_t val[3];
        -:  324:} float16x8x3_t;
        -:  325:
        -:  326:typedef struct float32x2x3_t
        -:  327:{
        -:  328:  float32x2_t val[3];
        -:  329:} float32x2x3_t;
        -:  330:
        -:  331:typedef struct float32x4x3_t
        -:  332:{
        -:  333:  float32x4_t val[3];
        -:  334:} float32x4x3_t;
        -:  335:
        -:  336:typedef struct float64x2x3_t
        -:  337:{
        -:  338:  float64x2_t val[3];
        -:  339:} float64x2x3_t;
        -:  340:
        -:  341:typedef struct float64x1x3_t
        -:  342:{
        -:  343:  float64x1_t val[3];
        -:  344:} float64x1x3_t;
        -:  345:
        -:  346:typedef struct poly8x8x3_t
        -:  347:{
        -:  348:  poly8x8_t val[3];
        -:  349:} poly8x8x3_t;
        -:  350:
        -:  351:typedef struct poly8x16x3_t
        -:  352:{
        -:  353:  poly8x16_t val[3];
        -:  354:} poly8x16x3_t;
        -:  355:
        -:  356:typedef struct poly16x4x3_t
        -:  357:{
        -:  358:  poly16x4_t val[3];
        -:  359:} poly16x4x3_t;
        -:  360:
        -:  361:typedef struct poly16x8x3_t
        -:  362:{
        -:  363:  poly16x8_t val[3];
        -:  364:} poly16x8x3_t;
        -:  365:
        -:  366:typedef struct int8x8x4_t
        -:  367:{
        -:  368:  int8x8_t val[4];
        -:  369:} int8x8x4_t;
        -:  370:
        -:  371:typedef struct int8x16x4_t
        -:  372:{
        -:  373:  int8x16_t val[4];
        -:  374:} int8x16x4_t;
        -:  375:
        -:  376:typedef struct int16x4x4_t
        -:  377:{
        -:  378:  int16x4_t val[4];
        -:  379:} int16x4x4_t;
        -:  380:
        -:  381:typedef struct int16x8x4_t
        -:  382:{
        -:  383:  int16x8_t val[4];
        -:  384:} int16x8x4_t;
        -:  385:
        -:  386:typedef struct int32x2x4_t
        -:  387:{
        -:  388:  int32x2_t val[4];
        -:  389:} int32x2x4_t;
        -:  390:
        -:  391:typedef struct int32x4x4_t
        -:  392:{
        -:  393:  int32x4_t val[4];
        -:  394:} int32x4x4_t;
        -:  395:
        -:  396:typedef struct int64x1x4_t
        -:  397:{
        -:  398:  int64x1_t val[4];
        -:  399:} int64x1x4_t;
        -:  400:
        -:  401:typedef struct int64x2x4_t
        -:  402:{
        -:  403:  int64x2_t val[4];
        -:  404:} int64x2x4_t;
        -:  405:
        -:  406:typedef struct uint8x8x4_t
        -:  407:{
        -:  408:  uint8x8_t val[4];
        -:  409:} uint8x8x4_t;
        -:  410:
        -:  411:typedef struct uint8x16x4_t
        -:  412:{
        -:  413:  uint8x16_t val[4];
        -:  414:} uint8x16x4_t;
        -:  415:
        -:  416:typedef struct uint16x4x4_t
        -:  417:{
        -:  418:  uint16x4_t val[4];
        -:  419:} uint16x4x4_t;
        -:  420:
        -:  421:typedef struct uint16x8x4_t
        -:  422:{
        -:  423:  uint16x8_t val[4];
        -:  424:} uint16x8x4_t;
        -:  425:
        -:  426:typedef struct uint32x2x4_t
        -:  427:{
        -:  428:  uint32x2_t val[4];
        -:  429:} uint32x2x4_t;
        -:  430:
        -:  431:typedef struct uint32x4x4_t
        -:  432:{
        -:  433:  uint32x4_t val[4];
        -:  434:} uint32x4x4_t;
        -:  435:
        -:  436:typedef struct uint64x1x4_t
        -:  437:{
        -:  438:  uint64x1_t val[4];
        -:  439:} uint64x1x4_t;
        -:  440:
        -:  441:typedef struct uint64x2x4_t
        -:  442:{
        -:  443:  uint64x2_t val[4];
        -:  444:} uint64x2x4_t;
        -:  445:
        -:  446:typedef struct float16x4x4_t
        -:  447:{
        -:  448:  float16x4_t val[4];
        -:  449:} float16x4x4_t;
        -:  450:
        -:  451:typedef struct float16x8x4_t
        -:  452:{
        -:  453:  float16x8_t val[4];
        -:  454:} float16x8x4_t;
        -:  455:
        -:  456:typedef struct float32x2x4_t
        -:  457:{
        -:  458:  float32x2_t val[4];
        -:  459:} float32x2x4_t;
        -:  460:
        -:  461:typedef struct float32x4x4_t
        -:  462:{
        -:  463:  float32x4_t val[4];
        -:  464:} float32x4x4_t;
        -:  465:
        -:  466:typedef struct float64x2x4_t
        -:  467:{
        -:  468:  float64x2_t val[4];
        -:  469:} float64x2x4_t;
        -:  470:
        -:  471:typedef struct float64x1x4_t
        -:  472:{
        -:  473:  float64x1_t val[4];
        -:  474:} float64x1x4_t;
        -:  475:
        -:  476:typedef struct poly8x8x4_t
        -:  477:{
        -:  478:  poly8x8_t val[4];
        -:  479:} poly8x8x4_t;
        -:  480:
        -:  481:typedef struct poly8x16x4_t
        -:  482:{
        -:  483:  poly8x16_t val[4];
        -:  484:} poly8x16x4_t;
        -:  485:
        -:  486:typedef struct poly16x4x4_t
        -:  487:{
        -:  488:  poly16x4_t val[4];
        -:  489:} poly16x4x4_t;
        -:  490:
        -:  491:typedef struct poly16x8x4_t
        -:  492:{
        -:  493:  poly16x8_t val[4];
        -:  494:} poly16x8x4_t;
        -:  495:
        -:  496:/* __aarch64_vdup_lane internal macros.  */
        -:  497:#define __aarch64_vdup_lane_any(__size, __q, __a, __b) \
        -:  498:  vdup##__q##_n_##__size (__aarch64_vget_lane_any (__a, __b))
        -:  499:
        -:  500:#define __aarch64_vdup_lane_f16(__a, __b) \
        -:  501:   __aarch64_vdup_lane_any (f16, , __a, __b)
        -:  502:#define __aarch64_vdup_lane_f32(__a, __b) \
        -:  503:   __aarch64_vdup_lane_any (f32, , __a, __b)
        -:  504:#define __aarch64_vdup_lane_f64(__a, __b) \
        -:  505:   __aarch64_vdup_lane_any (f64, , __a, __b)
        -:  506:#define __aarch64_vdup_lane_p8(__a, __b) \
        -:  507:   __aarch64_vdup_lane_any (p8, , __a, __b)
        -:  508:#define __aarch64_vdup_lane_p16(__a, __b) \
        -:  509:   __aarch64_vdup_lane_any (p16, , __a, __b)
        -:  510:#define __aarch64_vdup_lane_p64(__a, __b) \
        -:  511:   __aarch64_vdup_lane_any (p64, , __a, __b)
        -:  512:#define __aarch64_vdup_lane_s8(__a, __b) \
        -:  513:   __aarch64_vdup_lane_any (s8, , __a, __b)
        -:  514:#define __aarch64_vdup_lane_s16(__a, __b) \
        -:  515:   __aarch64_vdup_lane_any (s16, , __a, __b)
        -:  516:#define __aarch64_vdup_lane_s32(__a, __b) \
        -:  517:   __aarch64_vdup_lane_any (s32, , __a, __b)
        -:  518:#define __aarch64_vdup_lane_s64(__a, __b) \
        -:  519:  __aarch64_vdup_lane_any (s64, , __a, __b)
        -:  520:#define __aarch64_vdup_lane_u8(__a, __b) \
        -:  521:   __aarch64_vdup_lane_any (u8, , __a, __b)
        -:  522:#define __aarch64_vdup_lane_u16(__a, __b) \
        -:  523:   __aarch64_vdup_lane_any (u16, , __a, __b)
        -:  524:#define __aarch64_vdup_lane_u32(__a, __b) \
        -:  525:   __aarch64_vdup_lane_any (u32, , __a, __b)
        -:  526:#define __aarch64_vdup_lane_u64(__a, __b) \
        -:  527:   __aarch64_vdup_lane_any (u64, , __a, __b)
        -:  528:
        -:  529:/* __aarch64_vdup_laneq internal macros.  */
        -:  530:#define __aarch64_vdup_laneq_f16(__a, __b) \
        -:  531:   __aarch64_vdup_lane_any (f16, , __a, __b)
        -:  532:#define __aarch64_vdup_laneq_f32(__a, __b) \
        -:  533:   __aarch64_vdup_lane_any (f32, , __a, __b)
        -:  534:#define __aarch64_vdup_laneq_f64(__a, __b) \
        -:  535:   __aarch64_vdup_lane_any (f64, , __a, __b)
        -:  536:#define __aarch64_vdup_laneq_p8(__a, __b) \
        -:  537:   __aarch64_vdup_lane_any (p8, , __a, __b)
        -:  538:#define __aarch64_vdup_laneq_p16(__a, __b) \
        -:  539:   __aarch64_vdup_lane_any (p16, , __a, __b)
        -:  540:#define __aarch64_vdup_laneq_p64(__a, __b) \
        -:  541:   __aarch64_vdup_lane_any (p64, , __a, __b)
        -:  542:#define __aarch64_vdup_laneq_s8(__a, __b) \
        -:  543:   __aarch64_vdup_lane_any (s8, , __a, __b)
        -:  544:#define __aarch64_vdup_laneq_s16(__a, __b) \
        -:  545:   __aarch64_vdup_lane_any (s16, , __a, __b)
        -:  546:#define __aarch64_vdup_laneq_s32(__a, __b) \
        -:  547:   __aarch64_vdup_lane_any (s32, , __a, __b)
        -:  548:#define __aarch64_vdup_laneq_s64(__a, __b) \
        -:  549:   __aarch64_vdup_lane_any (s64, , __a, __b)
        -:  550:#define __aarch64_vdup_laneq_u8(__a, __b) \
        -:  551:   __aarch64_vdup_lane_any (u8, , __a, __b)
        -:  552:#define __aarch64_vdup_laneq_u16(__a, __b) \
        -:  553:   __aarch64_vdup_lane_any (u16, , __a, __b)
        -:  554:#define __aarch64_vdup_laneq_u32(__a, __b) \
        -:  555:   __aarch64_vdup_lane_any (u32, , __a, __b)
        -:  556:#define __aarch64_vdup_laneq_u64(__a, __b) \
        -:  557:   __aarch64_vdup_lane_any (u64, , __a, __b)
        -:  558:
        -:  559:/* __aarch64_vdupq_lane internal macros.  */
        -:  560:#define __aarch64_vdupq_lane_f16(__a, __b) \
        -:  561:   __aarch64_vdup_lane_any (f16, q, __a, __b)
        -:  562:#define __aarch64_vdupq_lane_f32(__a, __b) \
        -:  563:   __aarch64_vdup_lane_any (f32, q, __a, __b)
        -:  564:#define __aarch64_vdupq_lane_f64(__a, __b) \
        -:  565:   __aarch64_vdup_lane_any (f64, q, __a, __b)
        -:  566:#define __aarch64_vdupq_lane_p8(__a, __b) \
        -:  567:   __aarch64_vdup_lane_any (p8, q, __a, __b)
        -:  568:#define __aarch64_vdupq_lane_p16(__a, __b) \
        -:  569:   __aarch64_vdup_lane_any (p16, q, __a, __b)
        -:  570:#define __aarch64_vdupq_lane_p64(__a, __b) \
        -:  571:   __aarch64_vdup_lane_any (p64, q, __a, __b)
        -:  572:#define __aarch64_vdupq_lane_s8(__a, __b) \
        -:  573:   __aarch64_vdup_lane_any (s8, q, __a, __b)
        -:  574:#define __aarch64_vdupq_lane_s16(__a, __b) \
        -:  575:   __aarch64_vdup_lane_any (s16, q, __a, __b)
        -:  576:#define __aarch64_vdupq_lane_s32(__a, __b) \
        -:  577:   __aarch64_vdup_lane_any (s32, q, __a, __b)
        -:  578:#define __aarch64_vdupq_lane_s64(__a, __b) \
        -:  579:   __aarch64_vdup_lane_any (s64, q, __a, __b)
        -:  580:#define __aarch64_vdupq_lane_u8(__a, __b) \
        -:  581:   __aarch64_vdup_lane_any (u8, q, __a, __b)
        -:  582:#define __aarch64_vdupq_lane_u16(__a, __b) \
        -:  583:   __aarch64_vdup_lane_any (u16, q, __a, __b)
        -:  584:#define __aarch64_vdupq_lane_u32(__a, __b) \
        -:  585:   __aarch64_vdup_lane_any (u32, q, __a, __b)
        -:  586:#define __aarch64_vdupq_lane_u64(__a, __b) \
        -:  587:   __aarch64_vdup_lane_any (u64, q, __a, __b)
        -:  588:
        -:  589:/* __aarch64_vdupq_laneq internal macros.  */
        -:  590:#define __aarch64_vdupq_laneq_f16(__a, __b) \
        -:  591:   __aarch64_vdup_lane_any (f16, q, __a, __b)
        -:  592:#define __aarch64_vdupq_laneq_f32(__a, __b) \
        -:  593:   __aarch64_vdup_lane_any (f32, q, __a, __b)
        -:  594:#define __aarch64_vdupq_laneq_f64(__a, __b) \
        -:  595:   __aarch64_vdup_lane_any (f64, q, __a, __b)
        -:  596:#define __aarch64_vdupq_laneq_p8(__a, __b) \
        -:  597:   __aarch64_vdup_lane_any (p8, q, __a, __b)
        -:  598:#define __aarch64_vdupq_laneq_p16(__a, __b) \
        -:  599:   __aarch64_vdup_lane_any (p16, q, __a, __b)
        -:  600:#define __aarch64_vdupq_laneq_p64(__a, __b) \
        -:  601:   __aarch64_vdup_lane_any (p64, q, __a, __b)
        -:  602:#define __aarch64_vdupq_laneq_s8(__a, __b) \
        -:  603:   __aarch64_vdup_lane_any (s8, q, __a, __b)
        -:  604:#define __aarch64_vdupq_laneq_s16(__a, __b) \
        -:  605:   __aarch64_vdup_lane_any (s16, q, __a, __b)
        -:  606:#define __aarch64_vdupq_laneq_s32(__a, __b) \
        -:  607:   __aarch64_vdup_lane_any (s32, q, __a, __b)
        -:  608:#define __aarch64_vdupq_laneq_s64(__a, __b) \
        -:  609:   __aarch64_vdup_lane_any (s64, q, __a, __b)
        -:  610:#define __aarch64_vdupq_laneq_u8(__a, __b) \
        -:  611:   __aarch64_vdup_lane_any (u8, q, __a, __b)
        -:  612:#define __aarch64_vdupq_laneq_u16(__a, __b) \
        -:  613:   __aarch64_vdup_lane_any (u16, q, __a, __b)
        -:  614:#define __aarch64_vdupq_laneq_u32(__a, __b) \
        -:  615:   __aarch64_vdup_lane_any (u32, q, __a, __b)
        -:  616:#define __aarch64_vdupq_laneq_u64(__a, __b) \
        -:  617:   __aarch64_vdup_lane_any (u64, q, __a, __b)
        -:  618:
        -:  619:/* Internal macro for lane indices.  */
        -:  620:
        -:  621:#define __AARCH64_NUM_LANES(__v) (sizeof (__v) / sizeof (__v[0]))
        -:  622:#define __AARCH64_LANE_CHECK(__vec, __idx)	\
        -:  623:	__builtin_aarch64_im_lane_boundsi (sizeof(__vec), sizeof(__vec[0]), __idx)
        -:  624:
        -:  625:/* For big-endian, GCC's vector indices are the opposite way around
        -:  626:   to the architectural lane indices used by Neon intrinsics.  */
        -:  627:#ifdef __AARCH64EB__
        -:  628:#define __aarch64_lane(__vec, __idx) (__AARCH64_NUM_LANES (__vec) - 1 - __idx)
        -:  629:#else
        -:  630:#define __aarch64_lane(__vec, __idx) __idx
        -:  631:#endif
        -:  632:
        -:  633:/* vget_lane internal macro.  */
        -:  634:#define __aarch64_vget_lane_any(__vec, __index)				\
        -:  635:  __extension__								\
        -:  636:  ({									\
        -:  637:    __AARCH64_LANE_CHECK (__vec, __index);				\
        -:  638:    __vec[__aarch64_lane (__vec, __index)];				\
        -:  639:  })
        -:  640:
        -:  641:/* vset_lane and vld1_lane internal macro.  */
        -:  642:#define __aarch64_vset_lane_any(__elem, __vec, __index)			\
        -:  643:  __extension__								\
        -:  644:  ({									\
        -:  645:    __AARCH64_LANE_CHECK (__vec, __index);				\
        -:  646:    __vec[__aarch64_lane (__vec, __index)] = __elem;			\
        -:  647:    __vec;								\
        -:  648:  })
        -:  649:
        -:  650:/* vadd  */
        -:  651:__extension__ extern __inline int8x8_t
        -:  652:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  653:vadd_s8 (int8x8_t __a, int8x8_t __b)
        -:  654:{
        -:  655:  return __a + __b;
        -:  656:}
        -:  657:
        -:  658:__extension__ extern __inline int16x4_t
        -:  659:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  660:vadd_s16 (int16x4_t __a, int16x4_t __b)
        -:  661:{
        -:  662:  return __a + __b;
        -:  663:}
        -:  664:
        -:  665:__extension__ extern __inline int32x2_t
        -:  666:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  667:vadd_s32 (int32x2_t __a, int32x2_t __b)
        -:  668:{
        -:  669:  return __a + __b;
        -:  670:}
        -:  671:
        -:  672:__extension__ extern __inline float32x2_t
        -:  673:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  674:vadd_f32 (float32x2_t __a, float32x2_t __b)
        -:  675:{
        -:  676:  return __a + __b;
        -:  677:}
        -:  678:
        -:  679:__extension__ extern __inline float64x1_t
        -:  680:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  681:vadd_f64 (float64x1_t __a, float64x1_t __b)
        -:  682:{
        -:  683:  return __a + __b;
        -:  684:}
        -:  685:
        -:  686:__extension__ extern __inline uint8x8_t
        -:  687:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  688:vadd_u8 (uint8x8_t __a, uint8x8_t __b)
        -:  689:{
        -:  690:  return __a + __b;
        -:  691:}
        -:  692:
        -:  693:__extension__ extern __inline uint16x4_t
        -:  694:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  695:vadd_u16 (uint16x4_t __a, uint16x4_t __b)
        -:  696:{
        -:  697:  return __a + __b;
        -:  698:}
        -:  699:
        -:  700:__extension__ extern __inline uint32x2_t
        -:  701:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  702:vadd_u32 (uint32x2_t __a, uint32x2_t __b)
        -:  703:{
        -:  704:  return __a + __b;
        -:  705:}
        -:  706:
        -:  707:__extension__ extern __inline int64x1_t
        -:  708:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  709:vadd_s64 (int64x1_t __a, int64x1_t __b)
        -:  710:{
        -:  711:  return __a + __b;
        -:  712:}
        -:  713:
        -:  714:__extension__ extern __inline uint64x1_t
        -:  715:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  716:vadd_u64 (uint64x1_t __a, uint64x1_t __b)
        -:  717:{
        -:  718:  return __a + __b;
        -:  719:}
        -:  720:
        -:  721:__extension__ extern __inline int8x16_t
        -:  722:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  723:vaddq_s8 (int8x16_t __a, int8x16_t __b)
        -:  724:{
        -:  725:  return __a + __b;
        -:  726:}
        -:  727:
        -:  728:__extension__ extern __inline int16x8_t
        -:  729:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  730:vaddq_s16 (int16x8_t __a, int16x8_t __b)
        -:  731:{
        -:  732:  return __a + __b;
        -:  733:}
        -:  734:
        -:  735:__extension__ extern __inline int32x4_t
        -:  736:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  737:vaddq_s32 (int32x4_t __a, int32x4_t __b)
        -:  738:{
        -:  739:  return __a + __b;
        -:  740:}
        -:  741:
        -:  742:__extension__ extern __inline int64x2_t
        -:  743:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  744:vaddq_s64 (int64x2_t __a, int64x2_t __b)
        -:  745:{
        -:  746:  return __a + __b;
        -:  747:}
        -:  748:
        -:  749:__extension__ extern __inline float32x4_t
        -:  750:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  751:vaddq_f32 (float32x4_t __a, float32x4_t __b)
        -:  752:{
        -:  753:  return __a + __b;
        -:  754:}
        -:  755:
        -:  756:__extension__ extern __inline float64x2_t
        -:  757:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  758:vaddq_f64 (float64x2_t __a, float64x2_t __b)
        -:  759:{
        -:  760:  return __a + __b;
        -:  761:}
        -:  762:
        -:  763:__extension__ extern __inline uint8x16_t
        -:  764:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  765:vaddq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:  766:{
        -:  767:  return __a + __b;
        -:  768:}
        -:  769:
        -:  770:__extension__ extern __inline uint16x8_t
        -:  771:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  772:vaddq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:  773:{
        -:  774:  return __a + __b;
        -:  775:}
        -:  776:
        -:  777:__extension__ extern __inline uint32x4_t
        -:  778:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  779:vaddq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:  780:{
        -:  781:  return __a + __b;
        -:  782:}
        -:  783:
        -:  784:__extension__ extern __inline uint64x2_t
        -:  785:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  786:vaddq_u64 (uint64x2_t __a, uint64x2_t __b)
        -:  787:{
        -:  788:  return __a + __b;
        -:  789:}
        -:  790:
        -:  791:__extension__ extern __inline int16x8_t
        -:  792:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  793:vaddl_s8 (int8x8_t __a, int8x8_t __b)
        -:  794:{
        -:  795:  return (int16x8_t) __builtin_aarch64_saddlv8qi (__a, __b);
        -:  796:}
        -:  797:
        -:  798:__extension__ extern __inline int32x4_t
        -:  799:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  800:vaddl_s16 (int16x4_t __a, int16x4_t __b)
        -:  801:{
        -:  802:  return (int32x4_t) __builtin_aarch64_saddlv4hi (__a, __b);
        -:  803:}
        -:  804:
        -:  805:__extension__ extern __inline int64x2_t
        -:  806:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  807:vaddl_s32 (int32x2_t __a, int32x2_t __b)
        -:  808:{
        -:  809:  return (int64x2_t) __builtin_aarch64_saddlv2si (__a, __b);
        -:  810:}
        -:  811:
        -:  812:__extension__ extern __inline uint16x8_t
        -:  813:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  814:vaddl_u8 (uint8x8_t __a, uint8x8_t __b)
        -:  815:{
        -:  816:  return (uint16x8_t) __builtin_aarch64_uaddlv8qi ((int8x8_t) __a,
        -:  817:						   (int8x8_t) __b);
        -:  818:}
        -:  819:
        -:  820:__extension__ extern __inline uint32x4_t
        -:  821:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  822:vaddl_u16 (uint16x4_t __a, uint16x4_t __b)
        -:  823:{
        -:  824:  return (uint32x4_t) __builtin_aarch64_uaddlv4hi ((int16x4_t) __a,
        -:  825:						   (int16x4_t) __b);
        -:  826:}
        -:  827:
        -:  828:__extension__ extern __inline uint64x2_t
        -:  829:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  830:vaddl_u32 (uint32x2_t __a, uint32x2_t __b)
        -:  831:{
        -:  832:  return (uint64x2_t) __builtin_aarch64_uaddlv2si ((int32x2_t) __a,
        -:  833:						   (int32x2_t) __b);
        -:  834:}
        -:  835:
        -:  836:__extension__ extern __inline int16x8_t
        -:  837:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  838:vaddl_high_s8 (int8x16_t __a, int8x16_t __b)
        -:  839:{
        -:  840:  return (int16x8_t) __builtin_aarch64_saddl2v16qi (__a, __b);
        -:  841:}
        -:  842:
        -:  843:__extension__ extern __inline int32x4_t
        -:  844:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  845:vaddl_high_s16 (int16x8_t __a, int16x8_t __b)
        -:  846:{
        -:  847:  return (int32x4_t) __builtin_aarch64_saddl2v8hi (__a, __b);
        -:  848:}
        -:  849:
        -:  850:__extension__ extern __inline int64x2_t
        -:  851:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  852:vaddl_high_s32 (int32x4_t __a, int32x4_t __b)
        -:  853:{
        -:  854:  return (int64x2_t) __builtin_aarch64_saddl2v4si (__a, __b);
        -:  855:}
        -:  856:
        -:  857:__extension__ extern __inline uint16x8_t
        -:  858:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  859:vaddl_high_u8 (uint8x16_t __a, uint8x16_t __b)
        -:  860:{
        -:  861:  return (uint16x8_t) __builtin_aarch64_uaddl2v16qi ((int8x16_t) __a,
        -:  862:						     (int8x16_t) __b);
        -:  863:}
        -:  864:
        -:  865:__extension__ extern __inline uint32x4_t
        -:  866:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  867:vaddl_high_u16 (uint16x8_t __a, uint16x8_t __b)
        -:  868:{
        -:  869:  return (uint32x4_t) __builtin_aarch64_uaddl2v8hi ((int16x8_t) __a,
        -:  870:						    (int16x8_t) __b);
        -:  871:}
        -:  872:
        -:  873:__extension__ extern __inline uint64x2_t
        -:  874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  875:vaddl_high_u32 (uint32x4_t __a, uint32x4_t __b)
        -:  876:{
        -:  877:  return (uint64x2_t) __builtin_aarch64_uaddl2v4si ((int32x4_t) __a,
        -:  878:						    (int32x4_t) __b);
        -:  879:}
        -:  880:
        -:  881:__extension__ extern __inline int16x8_t
        -:  882:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  883:vaddw_s8 (int16x8_t __a, int8x8_t __b)
        -:  884:{
        -:  885:  return (int16x8_t) __builtin_aarch64_saddwv8qi (__a, __b);
        -:  886:}
        -:  887:
        -:  888:__extension__ extern __inline int32x4_t
        -:  889:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  890:vaddw_s16 (int32x4_t __a, int16x4_t __b)
        -:  891:{
        -:  892:  return (int32x4_t) __builtin_aarch64_saddwv4hi (__a, __b);
        -:  893:}
        -:  894:
        -:  895:__extension__ extern __inline int64x2_t
        -:  896:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  897:vaddw_s32 (int64x2_t __a, int32x2_t __b)
        -:  898:{
        -:  899:  return (int64x2_t) __builtin_aarch64_saddwv2si (__a, __b);
        -:  900:}
        -:  901:
        -:  902:__extension__ extern __inline uint16x8_t
        -:  903:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  904:vaddw_u8 (uint16x8_t __a, uint8x8_t __b)
        -:  905:{
        -:  906:  return (uint16x8_t) __builtin_aarch64_uaddwv8qi ((int16x8_t) __a,
        -:  907:						   (int8x8_t) __b);
        -:  908:}
        -:  909:
        -:  910:__extension__ extern __inline uint32x4_t
        -:  911:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  912:vaddw_u16 (uint32x4_t __a, uint16x4_t __b)
        -:  913:{
        -:  914:  return (uint32x4_t) __builtin_aarch64_uaddwv4hi ((int32x4_t) __a,
        -:  915:						   (int16x4_t) __b);
        -:  916:}
        -:  917:
        -:  918:__extension__ extern __inline uint64x2_t
        -:  919:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  920:vaddw_u32 (uint64x2_t __a, uint32x2_t __b)
        -:  921:{
        -:  922:  return (uint64x2_t) __builtin_aarch64_uaddwv2si ((int64x2_t) __a,
        -:  923:						   (int32x2_t) __b);
        -:  924:}
        -:  925:
        -:  926:__extension__ extern __inline int16x8_t
        -:  927:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  928:vaddw_high_s8 (int16x8_t __a, int8x16_t __b)
        -:  929:{
        -:  930:  return (int16x8_t) __builtin_aarch64_saddw2v16qi (__a, __b);
        -:  931:}
        -:  932:
        -:  933:__extension__ extern __inline int32x4_t
        -:  934:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  935:vaddw_high_s16 (int32x4_t __a, int16x8_t __b)
        -:  936:{
        -:  937:  return (int32x4_t) __builtin_aarch64_saddw2v8hi (__a, __b);
        -:  938:}
        -:  939:
        -:  940:__extension__ extern __inline int64x2_t
        -:  941:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  942:vaddw_high_s32 (int64x2_t __a, int32x4_t __b)
        -:  943:{
        -:  944:  return (int64x2_t) __builtin_aarch64_saddw2v4si (__a, __b);
        -:  945:}
        -:  946:
        -:  947:__extension__ extern __inline uint16x8_t
        -:  948:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  949:vaddw_high_u8 (uint16x8_t __a, uint8x16_t __b)
        -:  950:{
        -:  951:  return (uint16x8_t) __builtin_aarch64_uaddw2v16qi ((int16x8_t) __a,
        -:  952:						     (int8x16_t) __b);
        -:  953:}
        -:  954:
        -:  955:__extension__ extern __inline uint32x4_t
        -:  956:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  957:vaddw_high_u16 (uint32x4_t __a, uint16x8_t __b)
        -:  958:{
        -:  959:  return (uint32x4_t) __builtin_aarch64_uaddw2v8hi ((int32x4_t) __a,
        -:  960:						    (int16x8_t) __b);
        -:  961:}
        -:  962:
        -:  963:__extension__ extern __inline uint64x2_t
        -:  964:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  965:vaddw_high_u32 (uint64x2_t __a, uint32x4_t __b)
        -:  966:{
        -:  967:  return (uint64x2_t) __builtin_aarch64_uaddw2v4si ((int64x2_t) __a,
        -:  968:						    (int32x4_t) __b);
        -:  969:}
        -:  970:
        -:  971:__extension__ extern __inline int8x8_t
        -:  972:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  973:vhadd_s8 (int8x8_t __a, int8x8_t __b)
        -:  974:{
        -:  975:  return (int8x8_t) __builtin_aarch64_shaddv8qi (__a, __b);
        -:  976:}
        -:  977:
        -:  978:__extension__ extern __inline int16x4_t
        -:  979:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  980:vhadd_s16 (int16x4_t __a, int16x4_t __b)
        -:  981:{
        -:  982:  return (int16x4_t) __builtin_aarch64_shaddv4hi (__a, __b);
        -:  983:}
        -:  984:
        -:  985:__extension__ extern __inline int32x2_t
        -:  986:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  987:vhadd_s32 (int32x2_t __a, int32x2_t __b)
        -:  988:{
        -:  989:  return (int32x2_t) __builtin_aarch64_shaddv2si (__a, __b);
        -:  990:}
        -:  991:
        -:  992:__extension__ extern __inline uint8x8_t
        -:  993:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:  994:vhadd_u8 (uint8x8_t __a, uint8x8_t __b)
        -:  995:{
        -:  996:  return (uint8x8_t) __builtin_aarch64_uhaddv8qi ((int8x8_t) __a,
        -:  997:						  (int8x8_t) __b);
        -:  998:}
        -:  999:
        -: 1000:__extension__ extern __inline uint16x4_t
        -: 1001:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1002:vhadd_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 1003:{
        -: 1004:  return (uint16x4_t) __builtin_aarch64_uhaddv4hi ((int16x4_t) __a,
        -: 1005:						   (int16x4_t) __b);
        -: 1006:}
        -: 1007:
        -: 1008:__extension__ extern __inline uint32x2_t
        -: 1009:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1010:vhadd_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 1011:{
        -: 1012:  return (uint32x2_t) __builtin_aarch64_uhaddv2si ((int32x2_t) __a,
        -: 1013:						   (int32x2_t) __b);
        -: 1014:}
        -: 1015:
        -: 1016:__extension__ extern __inline int8x16_t
        -: 1017:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1018:vhaddq_s8 (int8x16_t __a, int8x16_t __b)
        -: 1019:{
        -: 1020:  return (int8x16_t) __builtin_aarch64_shaddv16qi (__a, __b);
        -: 1021:}
        -: 1022:
        -: 1023:__extension__ extern __inline int16x8_t
        -: 1024:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1025:vhaddq_s16 (int16x8_t __a, int16x8_t __b)
        -: 1026:{
        -: 1027:  return (int16x8_t) __builtin_aarch64_shaddv8hi (__a, __b);
        -: 1028:}
        -: 1029:
        -: 1030:__extension__ extern __inline int32x4_t
        -: 1031:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1032:vhaddq_s32 (int32x4_t __a, int32x4_t __b)
        -: 1033:{
        -: 1034:  return (int32x4_t) __builtin_aarch64_shaddv4si (__a, __b);
        -: 1035:}
        -: 1036:
        -: 1037:__extension__ extern __inline uint8x16_t
        -: 1038:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1039:vhaddq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 1040:{
        -: 1041:  return (uint8x16_t) __builtin_aarch64_uhaddv16qi ((int8x16_t) __a,
        -: 1042:						    (int8x16_t) __b);
        -: 1043:}
        -: 1044:
        -: 1045:__extension__ extern __inline uint16x8_t
        -: 1046:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1047:vhaddq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1048:{
        -: 1049:  return (uint16x8_t) __builtin_aarch64_uhaddv8hi ((int16x8_t) __a,
        -: 1050:						   (int16x8_t) __b);
        -: 1051:}
        -: 1052:
        -: 1053:__extension__ extern __inline uint32x4_t
        -: 1054:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1055:vhaddq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1056:{
        -: 1057:  return (uint32x4_t) __builtin_aarch64_uhaddv4si ((int32x4_t) __a,
        -: 1058:						   (int32x4_t) __b);
        -: 1059:}
        -: 1060:
        -: 1061:__extension__ extern __inline int8x8_t
        -: 1062:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1063:vrhadd_s8 (int8x8_t __a, int8x8_t __b)
        -: 1064:{
        -: 1065:  return (int8x8_t) __builtin_aarch64_srhaddv8qi (__a, __b);
        -: 1066:}
        -: 1067:
        -: 1068:__extension__ extern __inline int16x4_t
        -: 1069:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1070:vrhadd_s16 (int16x4_t __a, int16x4_t __b)
        -: 1071:{
        -: 1072:  return (int16x4_t) __builtin_aarch64_srhaddv4hi (__a, __b);
        -: 1073:}
        -: 1074:
        -: 1075:__extension__ extern __inline int32x2_t
        -: 1076:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1077:vrhadd_s32 (int32x2_t __a, int32x2_t __b)
        -: 1078:{
        -: 1079:  return (int32x2_t) __builtin_aarch64_srhaddv2si (__a, __b);
        -: 1080:}
        -: 1081:
        -: 1082:__extension__ extern __inline uint8x8_t
        -: 1083:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1084:vrhadd_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 1085:{
        -: 1086:  return (uint8x8_t) __builtin_aarch64_urhaddv8qi ((int8x8_t) __a,
        -: 1087:						   (int8x8_t) __b);
        -: 1088:}
        -: 1089:
        -: 1090:__extension__ extern __inline uint16x4_t
        -: 1091:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1092:vrhadd_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 1093:{
        -: 1094:  return (uint16x4_t) __builtin_aarch64_urhaddv4hi ((int16x4_t) __a,
        -: 1095:						    (int16x4_t) __b);
        -: 1096:}
        -: 1097:
        -: 1098:__extension__ extern __inline uint32x2_t
        -: 1099:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1100:vrhadd_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 1101:{
        -: 1102:  return (uint32x2_t) __builtin_aarch64_urhaddv2si ((int32x2_t) __a,
        -: 1103:						    (int32x2_t) __b);
        -: 1104:}
        -: 1105:
        -: 1106:__extension__ extern __inline int8x16_t
        -: 1107:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1108:vrhaddq_s8 (int8x16_t __a, int8x16_t __b)
        -: 1109:{
        -: 1110:  return (int8x16_t) __builtin_aarch64_srhaddv16qi (__a, __b);
        -: 1111:}
        -: 1112:
        -: 1113:__extension__ extern __inline int16x8_t
        -: 1114:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1115:vrhaddq_s16 (int16x8_t __a, int16x8_t __b)
        -: 1116:{
        -: 1117:  return (int16x8_t) __builtin_aarch64_srhaddv8hi (__a, __b);
        -: 1118:}
        -: 1119:
        -: 1120:__extension__ extern __inline int32x4_t
        -: 1121:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1122:vrhaddq_s32 (int32x4_t __a, int32x4_t __b)
        -: 1123:{
        -: 1124:  return (int32x4_t) __builtin_aarch64_srhaddv4si (__a, __b);
        -: 1125:}
        -: 1126:
        -: 1127:__extension__ extern __inline uint8x16_t
        -: 1128:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1129:vrhaddq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 1130:{
        -: 1131:  return (uint8x16_t) __builtin_aarch64_urhaddv16qi ((int8x16_t) __a,
        -: 1132:						     (int8x16_t) __b);
        -: 1133:}
        -: 1134:
        -: 1135:__extension__ extern __inline uint16x8_t
        -: 1136:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1137:vrhaddq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1138:{
        -: 1139:  return (uint16x8_t) __builtin_aarch64_urhaddv8hi ((int16x8_t) __a,
        -: 1140:						    (int16x8_t) __b);
        -: 1141:}
        -: 1142:
        -: 1143:__extension__ extern __inline uint32x4_t
        -: 1144:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1145:vrhaddq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1146:{
        -: 1147:  return (uint32x4_t) __builtin_aarch64_urhaddv4si ((int32x4_t) __a,
        -: 1148:						    (int32x4_t) __b);
        -: 1149:}
        -: 1150:
        -: 1151:__extension__ extern __inline int8x8_t
        -: 1152:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1153:vaddhn_s16 (int16x8_t __a, int16x8_t __b)
        -: 1154:{
        -: 1155:  return (int8x8_t) __builtin_aarch64_addhnv8hi (__a, __b);
        -: 1156:}
        -: 1157:
        -: 1158:__extension__ extern __inline int16x4_t
        -: 1159:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1160:vaddhn_s32 (int32x4_t __a, int32x4_t __b)
        -: 1161:{
        -: 1162:  return (int16x4_t) __builtin_aarch64_addhnv4si (__a, __b);
        -: 1163:}
        -: 1164:
        -: 1165:__extension__ extern __inline int32x2_t
        -: 1166:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1167:vaddhn_s64 (int64x2_t __a, int64x2_t __b)
        -: 1168:{
        -: 1169:  return (int32x2_t) __builtin_aarch64_addhnv2di (__a, __b);
        -: 1170:}
        -: 1171:
        -: 1172:__extension__ extern __inline uint8x8_t
        -: 1173:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1174:vaddhn_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1175:{
        -: 1176:  return (uint8x8_t) __builtin_aarch64_addhnv8hi ((int16x8_t) __a,
        -: 1177:						  (int16x8_t) __b);
        -: 1178:}
        -: 1179:
        -: 1180:__extension__ extern __inline uint16x4_t
        -: 1181:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1182:vaddhn_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1183:{
        -: 1184:  return (uint16x4_t) __builtin_aarch64_addhnv4si ((int32x4_t) __a,
        -: 1185:						   (int32x4_t) __b);
        -: 1186:}
        -: 1187:
        -: 1188:__extension__ extern __inline uint32x2_t
        -: 1189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1190:vaddhn_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 1191:{
        -: 1192:  return (uint32x2_t) __builtin_aarch64_addhnv2di ((int64x2_t) __a,
        -: 1193:						   (int64x2_t) __b);
        -: 1194:}
        -: 1195:
        -: 1196:__extension__ extern __inline int8x8_t
        -: 1197:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1198:vraddhn_s16 (int16x8_t __a, int16x8_t __b)
        -: 1199:{
        -: 1200:  return (int8x8_t) __builtin_aarch64_raddhnv8hi (__a, __b);
        -: 1201:}
        -: 1202:
        -: 1203:__extension__ extern __inline int16x4_t
        -: 1204:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1205:vraddhn_s32 (int32x4_t __a, int32x4_t __b)
        -: 1206:{
        -: 1207:  return (int16x4_t) __builtin_aarch64_raddhnv4si (__a, __b);
        -: 1208:}
        -: 1209:
        -: 1210:__extension__ extern __inline int32x2_t
        -: 1211:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1212:vraddhn_s64 (int64x2_t __a, int64x2_t __b)
        -: 1213:{
        -: 1214:  return (int32x2_t) __builtin_aarch64_raddhnv2di (__a, __b);
        -: 1215:}
        -: 1216:
        -: 1217:__extension__ extern __inline uint8x8_t
        -: 1218:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1219:vraddhn_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1220:{
        -: 1221:  return (uint8x8_t) __builtin_aarch64_raddhnv8hi ((int16x8_t) __a,
        -: 1222:						   (int16x8_t) __b);
        -: 1223:}
        -: 1224:
        -: 1225:__extension__ extern __inline uint16x4_t
        -: 1226:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1227:vraddhn_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1228:{
        -: 1229:  return (uint16x4_t) __builtin_aarch64_raddhnv4si ((int32x4_t) __a,
        -: 1230:						    (int32x4_t) __b);
        -: 1231:}
        -: 1232:
        -: 1233:__extension__ extern __inline uint32x2_t
        -: 1234:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1235:vraddhn_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 1236:{
        -: 1237:  return (uint32x2_t) __builtin_aarch64_raddhnv2di ((int64x2_t) __a,
        -: 1238:						    (int64x2_t) __b);
        -: 1239:}
        -: 1240:
        -: 1241:__extension__ extern __inline int8x16_t
        -: 1242:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1243:vaddhn_high_s16 (int8x8_t __a, int16x8_t __b, int16x8_t __c)
        -: 1244:{
        -: 1245:  return (int8x16_t) __builtin_aarch64_addhn2v8hi (__a, __b, __c);
        -: 1246:}
        -: 1247:
        -: 1248:__extension__ extern __inline int16x8_t
        -: 1249:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1250:vaddhn_high_s32 (int16x4_t __a, int32x4_t __b, int32x4_t __c)
        -: 1251:{
        -: 1252:  return (int16x8_t) __builtin_aarch64_addhn2v4si (__a, __b, __c);
        -: 1253:}
        -: 1254:
        -: 1255:__extension__ extern __inline int32x4_t
        -: 1256:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1257:vaddhn_high_s64 (int32x2_t __a, int64x2_t __b, int64x2_t __c)
        -: 1258:{
        -: 1259:  return (int32x4_t) __builtin_aarch64_addhn2v2di (__a, __b, __c);
        -: 1260:}
        -: 1261:
        -: 1262:__extension__ extern __inline uint8x16_t
        -: 1263:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1264:vaddhn_high_u16 (uint8x8_t __a, uint16x8_t __b, uint16x8_t __c)
        -: 1265:{
        -: 1266:  return (uint8x16_t) __builtin_aarch64_addhn2v8hi ((int8x8_t) __a,
        -: 1267:						    (int16x8_t) __b,
        -: 1268:						    (int16x8_t) __c);
        -: 1269:}
        -: 1270:
        -: 1271:__extension__ extern __inline uint16x8_t
        -: 1272:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1273:vaddhn_high_u32 (uint16x4_t __a, uint32x4_t __b, uint32x4_t __c)
        -: 1274:{
        -: 1275:  return (uint16x8_t) __builtin_aarch64_addhn2v4si ((int16x4_t) __a,
        -: 1276:						    (int32x4_t) __b,
        -: 1277:						    (int32x4_t) __c);
        -: 1278:}
        -: 1279:
        -: 1280:__extension__ extern __inline uint32x4_t
        -: 1281:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1282:vaddhn_high_u64 (uint32x2_t __a, uint64x2_t __b, uint64x2_t __c)
        -: 1283:{
        -: 1284:  return (uint32x4_t) __builtin_aarch64_addhn2v2di ((int32x2_t) __a,
        -: 1285:						    (int64x2_t) __b,
        -: 1286:						    (int64x2_t) __c);
        -: 1287:}
        -: 1288:
        -: 1289:__extension__ extern __inline int8x16_t
        -: 1290:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1291:vraddhn_high_s16 (int8x8_t __a, int16x8_t __b, int16x8_t __c)
        -: 1292:{
        -: 1293:  return (int8x16_t) __builtin_aarch64_raddhn2v8hi (__a, __b, __c);
        -: 1294:}
        -: 1295:
        -: 1296:__extension__ extern __inline int16x8_t
        -: 1297:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1298:vraddhn_high_s32 (int16x4_t __a, int32x4_t __b, int32x4_t __c)
        -: 1299:{
        -: 1300:  return (int16x8_t) __builtin_aarch64_raddhn2v4si (__a, __b, __c);
        -: 1301:}
        -: 1302:
        -: 1303:__extension__ extern __inline int32x4_t
        -: 1304:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1305:vraddhn_high_s64 (int32x2_t __a, int64x2_t __b, int64x2_t __c)
        -: 1306:{
        -: 1307:  return (int32x4_t) __builtin_aarch64_raddhn2v2di (__a, __b, __c);
        -: 1308:}
        -: 1309:
        -: 1310:__extension__ extern __inline uint8x16_t
        -: 1311:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1312:vraddhn_high_u16 (uint8x8_t __a, uint16x8_t __b, uint16x8_t __c)
        -: 1313:{
        -: 1314:  return (uint8x16_t) __builtin_aarch64_raddhn2v8hi ((int8x8_t) __a,
        -: 1315:						     (int16x8_t) __b,
        -: 1316:						     (int16x8_t) __c);
        -: 1317:}
        -: 1318:
        -: 1319:__extension__ extern __inline uint16x8_t
        -: 1320:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1321:vraddhn_high_u32 (uint16x4_t __a, uint32x4_t __b, uint32x4_t __c)
        -: 1322:{
        -: 1323:  return (uint16x8_t) __builtin_aarch64_raddhn2v4si ((int16x4_t) __a,
        -: 1324:						     (int32x4_t) __b,
        -: 1325:						     (int32x4_t) __c);
        -: 1326:}
        -: 1327:
        -: 1328:__extension__ extern __inline uint32x4_t
        -: 1329:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1330:vraddhn_high_u64 (uint32x2_t __a, uint64x2_t __b, uint64x2_t __c)
        -: 1331:{
        -: 1332:  return (uint32x4_t) __builtin_aarch64_raddhn2v2di ((int32x2_t) __a,
        -: 1333:						     (int64x2_t) __b,
        -: 1334:						     (int64x2_t) __c);
        -: 1335:}
        -: 1336:
        -: 1337:__extension__ extern __inline float32x2_t
        -: 1338:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1339:vdiv_f32 (float32x2_t __a, float32x2_t __b)
        -: 1340:{
        -: 1341:  return __a / __b;
        -: 1342:}
        -: 1343:
        -: 1344:__extension__ extern __inline float64x1_t
        -: 1345:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1346:vdiv_f64 (float64x1_t __a, float64x1_t __b)
        -: 1347:{
        -: 1348:  return __a / __b;
        -: 1349:}
        -: 1350:
        -: 1351:__extension__ extern __inline float32x4_t
        -: 1352:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1353:vdivq_f32 (float32x4_t __a, float32x4_t __b)
        -: 1354:{
        -: 1355:  return __a / __b;
        -: 1356:}
        -: 1357:
        -: 1358:__extension__ extern __inline float64x2_t
        -: 1359:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1360:vdivq_f64 (float64x2_t __a, float64x2_t __b)
        -: 1361:{
        -: 1362:  return __a / __b;
        -: 1363:}
        -: 1364:
        -: 1365:__extension__ extern __inline int8x8_t
        -: 1366:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1367:vmul_s8 (int8x8_t __a, int8x8_t __b)
        -: 1368:{
        -: 1369:  return __a * __b;
        -: 1370:}
        -: 1371:
        -: 1372:__extension__ extern __inline int16x4_t
        -: 1373:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1374:vmul_s16 (int16x4_t __a, int16x4_t __b)
        -: 1375:{
        -: 1376:  return __a * __b;
        -: 1377:}
        -: 1378:
        -: 1379:__extension__ extern __inline int32x2_t
        -: 1380:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1381:vmul_s32 (int32x2_t __a, int32x2_t __b)
        -: 1382:{
        -: 1383:  return __a * __b;
        -: 1384:}
        -: 1385:
        -: 1386:__extension__ extern __inline float32x2_t
        -: 1387:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1388:vmul_f32 (float32x2_t __a, float32x2_t __b)
        -: 1389:{
        -: 1390:  return __a * __b;
        -: 1391:}
        -: 1392:
        -: 1393:__extension__ extern __inline float64x1_t
        -: 1394:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1395:vmul_f64 (float64x1_t __a, float64x1_t __b)
        -: 1396:{
        -: 1397:  return __a * __b;
        -: 1398:}
        -: 1399:
        -: 1400:__extension__ extern __inline uint8x8_t
        -: 1401:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1402:vmul_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 1403:{
        -: 1404:  return __a * __b;
        -: 1405:}
        -: 1406:
        -: 1407:__extension__ extern __inline uint16x4_t
        -: 1408:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1409:vmul_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 1410:{
        -: 1411:  return __a * __b;
        -: 1412:}
        -: 1413:
        -: 1414:__extension__ extern __inline uint32x2_t
        -: 1415:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1416:vmul_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 1417:{
        -: 1418:  return __a * __b;
        -: 1419:}
        -: 1420:
        -: 1421:__extension__ extern __inline poly8x8_t
        -: 1422:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1423:vmul_p8 (poly8x8_t __a, poly8x8_t __b)
        -: 1424:{
        -: 1425:  return (poly8x8_t) __builtin_aarch64_pmulv8qi ((int8x8_t) __a,
        -: 1426:						 (int8x8_t) __b);
        -: 1427:}
        -: 1428:
        -: 1429:__extension__ extern __inline int8x16_t
        -: 1430:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1431:vmulq_s8 (int8x16_t __a, int8x16_t __b)
        -: 1432:{
        -: 1433:  return __a * __b;
        -: 1434:}
        -: 1435:
        -: 1436:__extension__ extern __inline int16x8_t
        -: 1437:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1438:vmulq_s16 (int16x8_t __a, int16x8_t __b)
        -: 1439:{
195944004: 1440:  return __a * __b;
        -: 1441:}
        -: 1442:
        -: 1443:__extension__ extern __inline int32x4_t
        -: 1444:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1445:vmulq_s32 (int32x4_t __a, int32x4_t __b)
        -: 1446:{
        -: 1447:  return __a * __b;
        -: 1448:}
        -: 1449:
        -: 1450:__extension__ extern __inline float32x4_t
        -: 1451:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1452:vmulq_f32 (float32x4_t __a, float32x4_t __b)
        -: 1453:{
        -: 1454:  return __a * __b;
        -: 1455:}
        -: 1456:
        -: 1457:__extension__ extern __inline float64x2_t
        -: 1458:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1459:vmulq_f64 (float64x2_t __a, float64x2_t __b)
        -: 1460:{
        -: 1461:  return __a * __b;
        -: 1462:}
        -: 1463:
        -: 1464:__extension__ extern __inline uint8x16_t
        -: 1465:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1466:vmulq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 1467:{
        -: 1468:  return __a * __b;
        -: 1469:}
        -: 1470:
        -: 1471:__extension__ extern __inline uint16x8_t
        -: 1472:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1473:vmulq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1474:{
        -: 1475:  return __a * __b;
        -: 1476:}
        -: 1477:
        -: 1478:__extension__ extern __inline uint32x4_t
        -: 1479:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1480:vmulq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1481:{
        -: 1482:  return __a * __b;
        -: 1483:}
        -: 1484:
        -: 1485:__extension__ extern __inline poly8x16_t
        -: 1486:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1487:vmulq_p8 (poly8x16_t __a, poly8x16_t __b)
        -: 1488:{
        -: 1489:  return (poly8x16_t) __builtin_aarch64_pmulv16qi ((int8x16_t) __a,
        -: 1490:						   (int8x16_t) __b);
        -: 1491:}
        -: 1492:
        -: 1493:__extension__ extern __inline int8x8_t
        -: 1494:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1495:vand_s8 (int8x8_t __a, int8x8_t __b)
        -: 1496:{
        -: 1497:  return __a & __b;
        -: 1498:}
        -: 1499:
        -: 1500:__extension__ extern __inline int16x4_t
        -: 1501:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1502:vand_s16 (int16x4_t __a, int16x4_t __b)
        -: 1503:{
        -: 1504:  return __a & __b;
        -: 1505:}
        -: 1506:
        -: 1507:__extension__ extern __inline int32x2_t
        -: 1508:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1509:vand_s32 (int32x2_t __a, int32x2_t __b)
        -: 1510:{
        -: 1511:  return __a & __b;
        -: 1512:}
        -: 1513:
        -: 1514:__extension__ extern __inline uint8x8_t
        -: 1515:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1516:vand_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 1517:{
        -: 1518:  return __a & __b;
        -: 1519:}
        -: 1520:
        -: 1521:__extension__ extern __inline uint16x4_t
        -: 1522:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1523:vand_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 1524:{
        -: 1525:  return __a & __b;
        -: 1526:}
        -: 1527:
        -: 1528:__extension__ extern __inline uint32x2_t
        -: 1529:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1530:vand_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 1531:{
        -: 1532:  return __a & __b;
        -: 1533:}
        -: 1534:
        -: 1535:__extension__ extern __inline int64x1_t
        -: 1536:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1537:vand_s64 (int64x1_t __a, int64x1_t __b)
        -: 1538:{
        -: 1539:  return __a & __b;
        -: 1540:}
        -: 1541:
        -: 1542:__extension__ extern __inline uint64x1_t
        -: 1543:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1544:vand_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 1545:{
        -: 1546:  return __a & __b;
        -: 1547:}
        -: 1548:
        -: 1549:__extension__ extern __inline int8x16_t
        -: 1550:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1551:vandq_s8 (int8x16_t __a, int8x16_t __b)
        -: 1552:{
        -: 1553:  return __a & __b;
        -: 1554:}
        -: 1555:
        -: 1556:__extension__ extern __inline int16x8_t
        -: 1557:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1558:vandq_s16 (int16x8_t __a, int16x8_t __b)
        -: 1559:{
        -: 1560:  return __a & __b;
        -: 1561:}
        -: 1562:
        -: 1563:__extension__ extern __inline int32x4_t
        -: 1564:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1565:vandq_s32 (int32x4_t __a, int32x4_t __b)
        -: 1566:{
        -: 1567:  return __a & __b;
        -: 1568:}
        -: 1569:
        -: 1570:__extension__ extern __inline int64x2_t
        -: 1571:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1572:vandq_s64 (int64x2_t __a, int64x2_t __b)
        -: 1573:{
        -: 1574:  return __a & __b;
        -: 1575:}
        -: 1576:
        -: 1577:__extension__ extern __inline uint8x16_t
        -: 1578:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1579:vandq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 1580:{
        -: 1581:  return __a & __b;
        -: 1582:}
        -: 1583:
        -: 1584:__extension__ extern __inline uint16x8_t
        -: 1585:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1586:vandq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1587:{
        -: 1588:  return __a & __b;
        -: 1589:}
        -: 1590:
        -: 1591:__extension__ extern __inline uint32x4_t
        -: 1592:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1593:vandq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1594:{
        -: 1595:  return __a & __b;
        -: 1596:}
        -: 1597:
        -: 1598:__extension__ extern __inline uint64x2_t
        -: 1599:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1600:vandq_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 1601:{
        -: 1602:  return __a & __b;
        -: 1603:}
        -: 1604:
        -: 1605:__extension__ extern __inline int8x8_t
        -: 1606:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1607:vorr_s8 (int8x8_t __a, int8x8_t __b)
        -: 1608:{
        -: 1609:  return __a | __b;
        -: 1610:}
        -: 1611:
        -: 1612:__extension__ extern __inline int16x4_t
        -: 1613:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1614:vorr_s16 (int16x4_t __a, int16x4_t __b)
        -: 1615:{
        -: 1616:  return __a | __b;
        -: 1617:}
        -: 1618:
        -: 1619:__extension__ extern __inline int32x2_t
        -: 1620:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1621:vorr_s32 (int32x2_t __a, int32x2_t __b)
        -: 1622:{
        -: 1623:  return __a | __b;
        -: 1624:}
        -: 1625:
        -: 1626:__extension__ extern __inline uint8x8_t
        -: 1627:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1628:vorr_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 1629:{
        -: 1630:  return __a | __b;
        -: 1631:}
        -: 1632:
        -: 1633:__extension__ extern __inline uint16x4_t
        -: 1634:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1635:vorr_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 1636:{
        -: 1637:  return __a | __b;
        -: 1638:}
        -: 1639:
        -: 1640:__extension__ extern __inline uint32x2_t
        -: 1641:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1642:vorr_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 1643:{
        -: 1644:  return __a | __b;
        -: 1645:}
        -: 1646:
        -: 1647:__extension__ extern __inline int64x1_t
        -: 1648:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1649:vorr_s64 (int64x1_t __a, int64x1_t __b)
        -: 1650:{
        -: 1651:  return __a | __b;
        -: 1652:}
        -: 1653:
        -: 1654:__extension__ extern __inline uint64x1_t
        -: 1655:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1656:vorr_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 1657:{
        -: 1658:  return __a | __b;
        -: 1659:}
        -: 1660:
        -: 1661:__extension__ extern __inline int8x16_t
        -: 1662:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1663:vorrq_s8 (int8x16_t __a, int8x16_t __b)
        -: 1664:{
        -: 1665:  return __a | __b;
        -: 1666:}
        -: 1667:
        -: 1668:__extension__ extern __inline int16x8_t
        -: 1669:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1670:vorrq_s16 (int16x8_t __a, int16x8_t __b)
        -: 1671:{
        -: 1672:  return __a | __b;
        -: 1673:}
        -: 1674:
        -: 1675:__extension__ extern __inline int32x4_t
        -: 1676:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1677:vorrq_s32 (int32x4_t __a, int32x4_t __b)
        -: 1678:{
        -: 1679:  return __a | __b;
        -: 1680:}
        -: 1681:
        -: 1682:__extension__ extern __inline int64x2_t
        -: 1683:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1684:vorrq_s64 (int64x2_t __a, int64x2_t __b)
        -: 1685:{
        -: 1686:  return __a | __b;
        -: 1687:}
        -: 1688:
        -: 1689:__extension__ extern __inline uint8x16_t
        -: 1690:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1691:vorrq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 1692:{
        -: 1693:  return __a | __b;
        -: 1694:}
        -: 1695:
        -: 1696:__extension__ extern __inline uint16x8_t
        -: 1697:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1698:vorrq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1699:{
        -: 1700:  return __a | __b;
        -: 1701:}
        -: 1702:
        -: 1703:__extension__ extern __inline uint32x4_t
        -: 1704:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1705:vorrq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1706:{
        -: 1707:  return __a | __b;
        -: 1708:}
        -: 1709:
        -: 1710:__extension__ extern __inline uint64x2_t
        -: 1711:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1712:vorrq_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 1713:{
        -: 1714:  return __a | __b;
        -: 1715:}
        -: 1716:
        -: 1717:__extension__ extern __inline int8x8_t
        -: 1718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1719:veor_s8 (int8x8_t __a, int8x8_t __b)
        -: 1720:{
        -: 1721:  return __a ^ __b;
        -: 1722:}
        -: 1723:
        -: 1724:__extension__ extern __inline int16x4_t
        -: 1725:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1726:veor_s16 (int16x4_t __a, int16x4_t __b)
        -: 1727:{
        -: 1728:  return __a ^ __b;
        -: 1729:}
        -: 1730:
        -: 1731:__extension__ extern __inline int32x2_t
        -: 1732:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1733:veor_s32 (int32x2_t __a, int32x2_t __b)
        -: 1734:{
        -: 1735:  return __a ^ __b;
        -: 1736:}
        -: 1737:
        -: 1738:__extension__ extern __inline uint8x8_t
        -: 1739:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1740:veor_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 1741:{
        -: 1742:  return __a ^ __b;
        -: 1743:}
        -: 1744:
        -: 1745:__extension__ extern __inline uint16x4_t
        -: 1746:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1747:veor_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 1748:{
        -: 1749:  return __a ^ __b;
        -: 1750:}
        -: 1751:
        -: 1752:__extension__ extern __inline uint32x2_t
        -: 1753:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1754:veor_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 1755:{
        -: 1756:  return __a ^ __b;
        -: 1757:}
        -: 1758:
        -: 1759:__extension__ extern __inline int64x1_t
        -: 1760:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1761:veor_s64 (int64x1_t __a, int64x1_t __b)
        -: 1762:{
        -: 1763:  return __a ^ __b;
        -: 1764:}
        -: 1765:
        -: 1766:__extension__ extern __inline uint64x1_t
        -: 1767:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1768:veor_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 1769:{
        -: 1770:  return __a ^ __b;
        -: 1771:}
        -: 1772:
        -: 1773:__extension__ extern __inline int8x16_t
        -: 1774:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1775:veorq_s8 (int8x16_t __a, int8x16_t __b)
        -: 1776:{
        -: 1777:  return __a ^ __b;
        -: 1778:}
        -: 1779:
        -: 1780:__extension__ extern __inline int16x8_t
        -: 1781:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1782:veorq_s16 (int16x8_t __a, int16x8_t __b)
        -: 1783:{
        -: 1784:  return __a ^ __b;
        -: 1785:}
        -: 1786:
        -: 1787:__extension__ extern __inline int32x4_t
        -: 1788:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1789:veorq_s32 (int32x4_t __a, int32x4_t __b)
        -: 1790:{
        -: 1791:  return __a ^ __b;
        -: 1792:}
        -: 1793:
        -: 1794:__extension__ extern __inline int64x2_t
        -: 1795:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1796:veorq_s64 (int64x2_t __a, int64x2_t __b)
        -: 1797:{
        -: 1798:  return __a ^ __b;
        -: 1799:}
        -: 1800:
        -: 1801:__extension__ extern __inline uint8x16_t
        -: 1802:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1803:veorq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 1804:{
        -: 1805:  return __a ^ __b;
        -: 1806:}
        -: 1807:
        -: 1808:__extension__ extern __inline uint16x8_t
        -: 1809:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1810:veorq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1811:{
        -: 1812:  return __a ^ __b;
        -: 1813:}
        -: 1814:
        -: 1815:__extension__ extern __inline uint32x4_t
        -: 1816:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1817:veorq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1818:{
        -: 1819:  return __a ^ __b;
        -: 1820:}
        -: 1821:
        -: 1822:__extension__ extern __inline uint64x2_t
        -: 1823:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1824:veorq_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 1825:{
        -: 1826:  return __a ^ __b;
        -: 1827:}
        -: 1828:
        -: 1829:__extension__ extern __inline int8x8_t
        -: 1830:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1831:vbic_s8 (int8x8_t __a, int8x8_t __b)
        -: 1832:{
        -: 1833:  return __a & ~__b;
        -: 1834:}
        -: 1835:
        -: 1836:__extension__ extern __inline int16x4_t
        -: 1837:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1838:vbic_s16 (int16x4_t __a, int16x4_t __b)
        -: 1839:{
        -: 1840:  return __a & ~__b;
        -: 1841:}
        -: 1842:
        -: 1843:__extension__ extern __inline int32x2_t
        -: 1844:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1845:vbic_s32 (int32x2_t __a, int32x2_t __b)
        -: 1846:{
        -: 1847:  return __a & ~__b;
        -: 1848:}
        -: 1849:
        -: 1850:__extension__ extern __inline uint8x8_t
        -: 1851:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1852:vbic_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 1853:{
        -: 1854:  return __a & ~__b;
        -: 1855:}
        -: 1856:
        -: 1857:__extension__ extern __inline uint16x4_t
        -: 1858:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1859:vbic_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 1860:{
        -: 1861:  return __a & ~__b;
        -: 1862:}
        -: 1863:
        -: 1864:__extension__ extern __inline uint32x2_t
        -: 1865:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1866:vbic_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 1867:{
        -: 1868:  return __a & ~__b;
        -: 1869:}
        -: 1870:
        -: 1871:__extension__ extern __inline int64x1_t
        -: 1872:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1873:vbic_s64 (int64x1_t __a, int64x1_t __b)
        -: 1874:{
        -: 1875:  return __a & ~__b;
        -: 1876:}
        -: 1877:
        -: 1878:__extension__ extern __inline uint64x1_t
        -: 1879:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1880:vbic_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 1881:{
        -: 1882:  return __a & ~__b;
        -: 1883:}
        -: 1884:
        -: 1885:__extension__ extern __inline int8x16_t
        -: 1886:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1887:vbicq_s8 (int8x16_t __a, int8x16_t __b)
        -: 1888:{
        -: 1889:  return __a & ~__b;
        -: 1890:}
        -: 1891:
        -: 1892:__extension__ extern __inline int16x8_t
        -: 1893:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1894:vbicq_s16 (int16x8_t __a, int16x8_t __b)
        -: 1895:{
        -: 1896:  return __a & ~__b;
        -: 1897:}
        -: 1898:
        -: 1899:__extension__ extern __inline int32x4_t
        -: 1900:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1901:vbicq_s32 (int32x4_t __a, int32x4_t __b)
        -: 1902:{
        -: 1903:  return __a & ~__b;
        -: 1904:}
        -: 1905:
        -: 1906:__extension__ extern __inline int64x2_t
        -: 1907:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1908:vbicq_s64 (int64x2_t __a, int64x2_t __b)
        -: 1909:{
        -: 1910:  return __a & ~__b;
        -: 1911:}
        -: 1912:
        -: 1913:__extension__ extern __inline uint8x16_t
        -: 1914:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1915:vbicq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 1916:{
        -: 1917:  return __a & ~__b;
        -: 1918:}
        -: 1919:
        -: 1920:__extension__ extern __inline uint16x8_t
        -: 1921:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1922:vbicq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 1923:{
        -: 1924:  return __a & ~__b;
        -: 1925:}
        -: 1926:
        -: 1927:__extension__ extern __inline uint32x4_t
        -: 1928:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1929:vbicq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 1930:{
        -: 1931:  return __a & ~__b;
        -: 1932:}
        -: 1933:
        -: 1934:__extension__ extern __inline uint64x2_t
        -: 1935:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1936:vbicq_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 1937:{
        -: 1938:  return __a & ~__b;
        -: 1939:}
        -: 1940:
        -: 1941:__extension__ extern __inline int8x8_t
        -: 1942:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1943:vorn_s8 (int8x8_t __a, int8x8_t __b)
        -: 1944:{
        -: 1945:  return __a | ~__b;
        -: 1946:}
        -: 1947:
        -: 1948:__extension__ extern __inline int16x4_t
        -: 1949:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1950:vorn_s16 (int16x4_t __a, int16x4_t __b)
        -: 1951:{
        -: 1952:  return __a | ~__b;
        -: 1953:}
        -: 1954:
        -: 1955:__extension__ extern __inline int32x2_t
        -: 1956:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1957:vorn_s32 (int32x2_t __a, int32x2_t __b)
        -: 1958:{
        -: 1959:  return __a | ~__b;
        -: 1960:}
        -: 1961:
        -: 1962:__extension__ extern __inline uint8x8_t
        -: 1963:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1964:vorn_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 1965:{
        -: 1966:  return __a | ~__b;
        -: 1967:}
        -: 1968:
        -: 1969:__extension__ extern __inline uint16x4_t
        -: 1970:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1971:vorn_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 1972:{
        -: 1973:  return __a | ~__b;
        -: 1974:}
        -: 1975:
        -: 1976:__extension__ extern __inline uint32x2_t
        -: 1977:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1978:vorn_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 1979:{
        -: 1980:  return __a | ~__b;
        -: 1981:}
        -: 1982:
        -: 1983:__extension__ extern __inline int64x1_t
        -: 1984:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1985:vorn_s64 (int64x1_t __a, int64x1_t __b)
        -: 1986:{
        -: 1987:  return __a | ~__b;
        -: 1988:}
        -: 1989:
        -: 1990:__extension__ extern __inline uint64x1_t
        -: 1991:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1992:vorn_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 1993:{
        -: 1994:  return __a | ~__b;
        -: 1995:}
        -: 1996:
        -: 1997:__extension__ extern __inline int8x16_t
        -: 1998:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 1999:vornq_s8 (int8x16_t __a, int8x16_t __b)
        -: 2000:{
        -: 2001:  return __a | ~__b;
        -: 2002:}
        -: 2003:
        -: 2004:__extension__ extern __inline int16x8_t
        -: 2005:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2006:vornq_s16 (int16x8_t __a, int16x8_t __b)
        -: 2007:{
        -: 2008:  return __a | ~__b;
        -: 2009:}
        -: 2010:
        -: 2011:__extension__ extern __inline int32x4_t
        -: 2012:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2013:vornq_s32 (int32x4_t __a, int32x4_t __b)
        -: 2014:{
        -: 2015:  return __a | ~__b;
        -: 2016:}
        -: 2017:
        -: 2018:__extension__ extern __inline int64x2_t
        -: 2019:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2020:vornq_s64 (int64x2_t __a, int64x2_t __b)
        -: 2021:{
        -: 2022:  return __a | ~__b;
        -: 2023:}
        -: 2024:
        -: 2025:__extension__ extern __inline uint8x16_t
        -: 2026:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2027:vornq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 2028:{
        -: 2029:  return __a | ~__b;
        -: 2030:}
        -: 2031:
        -: 2032:__extension__ extern __inline uint16x8_t
        -: 2033:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2034:vornq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 2035:{
        -: 2036:  return __a | ~__b;
        -: 2037:}
        -: 2038:
        -: 2039:__extension__ extern __inline uint32x4_t
        -: 2040:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2041:vornq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 2042:{
        -: 2043:  return __a | ~__b;
        -: 2044:}
        -: 2045:
        -: 2046:__extension__ extern __inline uint64x2_t
        -: 2047:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2048:vornq_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 2049:{
        -: 2050:  return __a | ~__b;
        -: 2051:}
        -: 2052:
        -: 2053:__extension__ extern __inline int8x8_t
        -: 2054:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2055:vsub_s8 (int8x8_t __a, int8x8_t __b)
        -: 2056:{
        -: 2057:  return __a - __b;
        -: 2058:}
        -: 2059:
        -: 2060:__extension__ extern __inline int16x4_t
        -: 2061:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2062:vsub_s16 (int16x4_t __a, int16x4_t __b)
        -: 2063:{
        -: 2064:  return __a - __b;
        -: 2065:}
        -: 2066:
        -: 2067:__extension__ extern __inline int32x2_t
        -: 2068:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2069:vsub_s32 (int32x2_t __a, int32x2_t __b)
        -: 2070:{
        -: 2071:  return __a - __b;
        -: 2072:}
        -: 2073:
        -: 2074:__extension__ extern __inline float32x2_t
        -: 2075:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2076:vsub_f32 (float32x2_t __a, float32x2_t __b)
        -: 2077:{
        -: 2078:  return __a - __b;
        -: 2079:}
        -: 2080:
        -: 2081:__extension__ extern __inline float64x1_t
        -: 2082:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2083:vsub_f64 (float64x1_t __a, float64x1_t __b)
        -: 2084:{
        -: 2085:  return __a - __b;
        -: 2086:}
        -: 2087:
        -: 2088:__extension__ extern __inline uint8x8_t
        -: 2089:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2090:vsub_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 2091:{
        -: 2092:  return __a - __b;
        -: 2093:}
        -: 2094:
        -: 2095:__extension__ extern __inline uint16x4_t
        -: 2096:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2097:vsub_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 2098:{
        -: 2099:  return __a - __b;
        -: 2100:}
        -: 2101:
        -: 2102:__extension__ extern __inline uint32x2_t
        -: 2103:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2104:vsub_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 2105:{
        -: 2106:  return __a - __b;
        -: 2107:}
        -: 2108:
        -: 2109:__extension__ extern __inline int64x1_t
        -: 2110:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2111:vsub_s64 (int64x1_t __a, int64x1_t __b)
        -: 2112:{
        -: 2113:  return __a - __b;
        -: 2114:}
        -: 2115:
        -: 2116:__extension__ extern __inline uint64x1_t
        -: 2117:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2118:vsub_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 2119:{
        -: 2120:  return __a - __b;
        -: 2121:}
        -: 2122:
        -: 2123:__extension__ extern __inline int8x16_t
        -: 2124:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2125:vsubq_s8 (int8x16_t __a, int8x16_t __b)
        -: 2126:{
        -: 2127:  return __a - __b;
        -: 2128:}
        -: 2129:
        -: 2130:__extension__ extern __inline int16x8_t
        -: 2131:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2132:vsubq_s16 (int16x8_t __a, int16x8_t __b)
        -: 2133:{
        -: 2134:  return __a - __b;
        -: 2135:}
        -: 2136:
        -: 2137:__extension__ extern __inline int32x4_t
        -: 2138:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2139:vsubq_s32 (int32x4_t __a, int32x4_t __b)
        -: 2140:{
        -: 2141:  return __a - __b;
        -: 2142:}
        -: 2143:
        -: 2144:__extension__ extern __inline int64x2_t
        -: 2145:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2146:vsubq_s64 (int64x2_t __a, int64x2_t __b)
        -: 2147:{
        -: 2148:  return __a - __b;
        -: 2149:}
        -: 2150:
        -: 2151:__extension__ extern __inline float32x4_t
        -: 2152:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2153:vsubq_f32 (float32x4_t __a, float32x4_t __b)
        -: 2154:{
        -: 2155:  return __a - __b;
        -: 2156:}
        -: 2157:
        -: 2158:__extension__ extern __inline float64x2_t
        -: 2159:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2160:vsubq_f64 (float64x2_t __a, float64x2_t __b)
        -: 2161:{
        -: 2162:  return __a - __b;
        -: 2163:}
        -: 2164:
        -: 2165:__extension__ extern __inline uint8x16_t
        -: 2166:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2167:vsubq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 2168:{
        -: 2169:  return __a - __b;
        -: 2170:}
        -: 2171:
        -: 2172:__extension__ extern __inline uint16x8_t
        -: 2173:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2174:vsubq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 2175:{
        -: 2176:  return __a - __b;
        -: 2177:}
        -: 2178:
        -: 2179:__extension__ extern __inline uint32x4_t
        -: 2180:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2181:vsubq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 2182:{
        -: 2183:  return __a - __b;
        -: 2184:}
        -: 2185:
        -: 2186:__extension__ extern __inline uint64x2_t
        -: 2187:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2188:vsubq_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 2189:{
        -: 2190:  return __a - __b;
        -: 2191:}
        -: 2192:
        -: 2193:__extension__ extern __inline int16x8_t
        -: 2194:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2195:vsubl_s8 (int8x8_t __a, int8x8_t __b)
        -: 2196:{
        -: 2197:  return (int16x8_t) __builtin_aarch64_ssublv8qi (__a, __b);
        -: 2198:}
        -: 2199:
        -: 2200:__extension__ extern __inline int32x4_t
        -: 2201:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2202:vsubl_s16 (int16x4_t __a, int16x4_t __b)
        -: 2203:{
        -: 2204:  return (int32x4_t) __builtin_aarch64_ssublv4hi (__a, __b);
        -: 2205:}
        -: 2206:
        -: 2207:__extension__ extern __inline int64x2_t
        -: 2208:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2209:vsubl_s32 (int32x2_t __a, int32x2_t __b)
        -: 2210:{
        -: 2211:  return (int64x2_t) __builtin_aarch64_ssublv2si (__a, __b);
        -: 2212:}
        -: 2213:
        -: 2214:__extension__ extern __inline uint16x8_t
        -: 2215:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2216:vsubl_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 2217:{
        -: 2218:  return (uint16x8_t) __builtin_aarch64_usublv8qi ((int8x8_t) __a,
        -: 2219:						   (int8x8_t) __b);
        -: 2220:}
        -: 2221:
        -: 2222:__extension__ extern __inline uint32x4_t
        -: 2223:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2224:vsubl_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 2225:{
        -: 2226:  return (uint32x4_t) __builtin_aarch64_usublv4hi ((int16x4_t) __a,
        -: 2227:						   (int16x4_t) __b);
        -: 2228:}
        -: 2229:
        -: 2230:__extension__ extern __inline uint64x2_t
        -: 2231:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2232:vsubl_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 2233:{
        -: 2234:  return (uint64x2_t) __builtin_aarch64_usublv2si ((int32x2_t) __a,
        -: 2235:						   (int32x2_t) __b);
        -: 2236:}
        -: 2237:
        -: 2238:__extension__ extern __inline int16x8_t
        -: 2239:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2240:vsubl_high_s8 (int8x16_t __a, int8x16_t __b)
        -: 2241:{
        -: 2242:  return (int16x8_t) __builtin_aarch64_ssubl2v16qi (__a, __b);
        -: 2243:}
        -: 2244:
        -: 2245:__extension__ extern __inline int32x4_t
        -: 2246:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2247:vsubl_high_s16 (int16x8_t __a, int16x8_t __b)
        -: 2248:{
        -: 2249:  return (int32x4_t) __builtin_aarch64_ssubl2v8hi (__a, __b);
        -: 2250:}
        -: 2251:
        -: 2252:__extension__ extern __inline int64x2_t
        -: 2253:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2254:vsubl_high_s32 (int32x4_t __a, int32x4_t __b)
        -: 2255:{
        -: 2256:  return (int64x2_t) __builtin_aarch64_ssubl2v4si (__a, __b);
        -: 2257:}
        -: 2258:
        -: 2259:__extension__ extern __inline uint16x8_t
        -: 2260:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2261:vsubl_high_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 2262:{
        -: 2263:  return (uint16x8_t) __builtin_aarch64_usubl2v16qi ((int8x16_t) __a,
        -: 2264:						     (int8x16_t) __b);
        -: 2265:}
        -: 2266:
        -: 2267:__extension__ extern __inline uint32x4_t
        -: 2268:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2269:vsubl_high_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 2270:{
        -: 2271:  return (uint32x4_t) __builtin_aarch64_usubl2v8hi ((int16x8_t) __a,
        -: 2272:						    (int16x8_t) __b);
        -: 2273:}
        -: 2274:
        -: 2275:__extension__ extern __inline uint64x2_t
        -: 2276:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2277:vsubl_high_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 2278:{
        -: 2279:  return (uint64x2_t) __builtin_aarch64_usubl2v4si ((int32x4_t) __a,
        -: 2280:						    (int32x4_t) __b);
        -: 2281:}
        -: 2282:
        -: 2283:__extension__ extern __inline int16x8_t
        -: 2284:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2285:vsubw_s8 (int16x8_t __a, int8x8_t __b)
        -: 2286:{
        -: 2287:  return (int16x8_t) __builtin_aarch64_ssubwv8qi (__a, __b);
        -: 2288:}
        -: 2289:
        -: 2290:__extension__ extern __inline int32x4_t
        -: 2291:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2292:vsubw_s16 (int32x4_t __a, int16x4_t __b)
        -: 2293:{
        -: 2294:  return (int32x4_t) __builtin_aarch64_ssubwv4hi (__a, __b);
        -: 2295:}
        -: 2296:
        -: 2297:__extension__ extern __inline int64x2_t
        -: 2298:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2299:vsubw_s32 (int64x2_t __a, int32x2_t __b)
        -: 2300:{
        -: 2301:  return (int64x2_t) __builtin_aarch64_ssubwv2si (__a, __b);
        -: 2302:}
        -: 2303:
        -: 2304:__extension__ extern __inline uint16x8_t
        -: 2305:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2306:vsubw_u8 (uint16x8_t __a, uint8x8_t __b)
        -: 2307:{
        -: 2308:  return (uint16x8_t) __builtin_aarch64_usubwv8qi ((int16x8_t) __a,
        -: 2309:						   (int8x8_t) __b);
        -: 2310:}
        -: 2311:
        -: 2312:__extension__ extern __inline uint32x4_t
        -: 2313:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2314:vsubw_u16 (uint32x4_t __a, uint16x4_t __b)
        -: 2315:{
        -: 2316:  return (uint32x4_t) __builtin_aarch64_usubwv4hi ((int32x4_t) __a,
        -: 2317:						   (int16x4_t) __b);
        -: 2318:}
        -: 2319:
        -: 2320:__extension__ extern __inline uint64x2_t
        -: 2321:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2322:vsubw_u32 (uint64x2_t __a, uint32x2_t __b)
        -: 2323:{
        -: 2324:  return (uint64x2_t) __builtin_aarch64_usubwv2si ((int64x2_t) __a,
        -: 2325:						   (int32x2_t) __b);
        -: 2326:}
        -: 2327:
        -: 2328:__extension__ extern __inline int16x8_t
        -: 2329:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2330:vsubw_high_s8 (int16x8_t __a, int8x16_t __b)
        -: 2331:{
        -: 2332:  return (int16x8_t) __builtin_aarch64_ssubw2v16qi (__a, __b);
        -: 2333:}
        -: 2334:
        -: 2335:__extension__ extern __inline int32x4_t
        -: 2336:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2337:vsubw_high_s16 (int32x4_t __a, int16x8_t __b)
        -: 2338:{
        -: 2339:  return (int32x4_t) __builtin_aarch64_ssubw2v8hi (__a, __b);
        -: 2340:}
        -: 2341:
        -: 2342:__extension__ extern __inline int64x2_t
        -: 2343:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2344:vsubw_high_s32 (int64x2_t __a, int32x4_t __b)
        -: 2345:{
        -: 2346:  return (int64x2_t) __builtin_aarch64_ssubw2v4si (__a, __b);
        -: 2347:}
        -: 2348:
        -: 2349:__extension__ extern __inline uint16x8_t
        -: 2350:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2351:vsubw_high_u8 (uint16x8_t __a, uint8x16_t __b)
        -: 2352:{
        -: 2353:  return (uint16x8_t) __builtin_aarch64_usubw2v16qi ((int16x8_t) __a,
        -: 2354:						     (int8x16_t) __b);
        -: 2355:}
        -: 2356:
        -: 2357:__extension__ extern __inline uint32x4_t
        -: 2358:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2359:vsubw_high_u16 (uint32x4_t __a, uint16x8_t __b)
        -: 2360:{
        -: 2361:  return (uint32x4_t) __builtin_aarch64_usubw2v8hi ((int32x4_t) __a,
        -: 2362:						    (int16x8_t) __b);
        -: 2363:}
        -: 2364:
        -: 2365:__extension__ extern __inline uint64x2_t
        -: 2366:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2367:vsubw_high_u32 (uint64x2_t __a, uint32x4_t __b)
        -: 2368:{
        -: 2369:  return (uint64x2_t) __builtin_aarch64_usubw2v4si ((int64x2_t) __a,
        -: 2370:						    (int32x4_t) __b);
        -: 2371:}
        -: 2372:
        -: 2373:__extension__ extern __inline int8x8_t
        -: 2374:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2375:vqadd_s8 (int8x8_t __a, int8x8_t __b)
        -: 2376:{
        -: 2377:  return (int8x8_t) __builtin_aarch64_sqaddv8qi (__a, __b);
        -: 2378:}
        -: 2379:
        -: 2380:__extension__ extern __inline int16x4_t
        -: 2381:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2382:vqadd_s16 (int16x4_t __a, int16x4_t __b)
        -: 2383:{
        -: 2384:  return (int16x4_t) __builtin_aarch64_sqaddv4hi (__a, __b);
        -: 2385:}
        -: 2386:
        -: 2387:__extension__ extern __inline int32x2_t
        -: 2388:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2389:vqadd_s32 (int32x2_t __a, int32x2_t __b)
        -: 2390:{
        -: 2391:  return (int32x2_t) __builtin_aarch64_sqaddv2si (__a, __b);
        -: 2392:}
        -: 2393:
        -: 2394:__extension__ extern __inline int64x1_t
        -: 2395:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2396:vqadd_s64 (int64x1_t __a, int64x1_t __b)
        -: 2397:{
        -: 2398:  return (int64x1_t) {__builtin_aarch64_sqadddi (__a[0], __b[0])};
        -: 2399:}
        -: 2400:
        -: 2401:__extension__ extern __inline uint8x8_t
        -: 2402:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2403:vqadd_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 2404:{
        -: 2405:  return __builtin_aarch64_uqaddv8qi_uuu (__a, __b);
        -: 2406:}
        -: 2407:
        -: 2408:__extension__ extern __inline int8x8_t
        -: 2409:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2410:vhsub_s8 (int8x8_t __a, int8x8_t __b)
        -: 2411:{
        -: 2412:  return (int8x8_t)__builtin_aarch64_shsubv8qi (__a, __b);
        -: 2413:}
        -: 2414:
        -: 2415:__extension__ extern __inline int16x4_t
        -: 2416:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2417:vhsub_s16 (int16x4_t __a, int16x4_t __b)
        -: 2418:{
        -: 2419:  return (int16x4_t) __builtin_aarch64_shsubv4hi (__a, __b);
        -: 2420:}
        -: 2421:
        -: 2422:__extension__ extern __inline int32x2_t
        -: 2423:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2424:vhsub_s32 (int32x2_t __a, int32x2_t __b)
        -: 2425:{
        -: 2426:  return (int32x2_t) __builtin_aarch64_shsubv2si (__a, __b);
        -: 2427:}
        -: 2428:
        -: 2429:__extension__ extern __inline uint8x8_t
        -: 2430:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2431:vhsub_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 2432:{
        -: 2433:  return (uint8x8_t) __builtin_aarch64_uhsubv8qi ((int8x8_t) __a,
        -: 2434:						  (int8x8_t) __b);
        -: 2435:}
        -: 2436:
        -: 2437:__extension__ extern __inline uint16x4_t
        -: 2438:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2439:vhsub_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 2440:{
        -: 2441:  return (uint16x4_t) __builtin_aarch64_uhsubv4hi ((int16x4_t) __a,
        -: 2442:						   (int16x4_t) __b);
        -: 2443:}
        -: 2444:
        -: 2445:__extension__ extern __inline uint32x2_t
        -: 2446:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2447:vhsub_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 2448:{
        -: 2449:  return (uint32x2_t) __builtin_aarch64_uhsubv2si ((int32x2_t) __a,
        -: 2450:						   (int32x2_t) __b);
        -: 2451:}
        -: 2452:
        -: 2453:__extension__ extern __inline int8x16_t
        -: 2454:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2455:vhsubq_s8 (int8x16_t __a, int8x16_t __b)
        -: 2456:{
        -: 2457:  return (int8x16_t) __builtin_aarch64_shsubv16qi (__a, __b);
        -: 2458:}
        -: 2459:
        -: 2460:__extension__ extern __inline int16x8_t
        -: 2461:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2462:vhsubq_s16 (int16x8_t __a, int16x8_t __b)
        -: 2463:{
        -: 2464:  return (int16x8_t) __builtin_aarch64_shsubv8hi (__a, __b);
        -: 2465:}
        -: 2466:
        -: 2467:__extension__ extern __inline int32x4_t
        -: 2468:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2469:vhsubq_s32 (int32x4_t __a, int32x4_t __b)
        -: 2470:{
        -: 2471:  return (int32x4_t) __builtin_aarch64_shsubv4si (__a, __b);
        -: 2472:}
        -: 2473:
        -: 2474:__extension__ extern __inline uint8x16_t
        -: 2475:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2476:vhsubq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 2477:{
        -: 2478:  return (uint8x16_t) __builtin_aarch64_uhsubv16qi ((int8x16_t) __a,
        -: 2479:						    (int8x16_t) __b);
        -: 2480:}
        -: 2481:
        -: 2482:__extension__ extern __inline uint16x8_t
        -: 2483:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2484:vhsubq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 2485:{
        -: 2486:  return (uint16x8_t) __builtin_aarch64_uhsubv8hi ((int16x8_t) __a,
        -: 2487:						   (int16x8_t) __b);
        -: 2488:}
        -: 2489:
        -: 2490:__extension__ extern __inline uint32x4_t
        -: 2491:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2492:vhsubq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 2493:{
        -: 2494:  return (uint32x4_t) __builtin_aarch64_uhsubv4si ((int32x4_t) __a,
        -: 2495:						   (int32x4_t) __b);
        -: 2496:}
        -: 2497:
        -: 2498:__extension__ extern __inline int8x8_t
        -: 2499:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2500:vsubhn_s16 (int16x8_t __a, int16x8_t __b)
        -: 2501:{
        -: 2502:  return (int8x8_t) __builtin_aarch64_subhnv8hi (__a, __b);
        -: 2503:}
        -: 2504:
        -: 2505:__extension__ extern __inline int16x4_t
        -: 2506:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2507:vsubhn_s32 (int32x4_t __a, int32x4_t __b)
        -: 2508:{
        -: 2509:  return (int16x4_t) __builtin_aarch64_subhnv4si (__a, __b);
        -: 2510:}
        -: 2511:
        -: 2512:__extension__ extern __inline int32x2_t
        -: 2513:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2514:vsubhn_s64 (int64x2_t __a, int64x2_t __b)
        -: 2515:{
        -: 2516:  return (int32x2_t) __builtin_aarch64_subhnv2di (__a, __b);
        -: 2517:}
        -: 2518:
        -: 2519:__extension__ extern __inline uint8x8_t
        -: 2520:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2521:vsubhn_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 2522:{
        -: 2523:  return (uint8x8_t) __builtin_aarch64_subhnv8hi ((int16x8_t) __a,
        -: 2524:						  (int16x8_t) __b);
        -: 2525:}
        -: 2526:
        -: 2527:__extension__ extern __inline uint16x4_t
        -: 2528:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2529:vsubhn_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 2530:{
        -: 2531:  return (uint16x4_t) __builtin_aarch64_subhnv4si ((int32x4_t) __a,
        -: 2532:						   (int32x4_t) __b);
        -: 2533:}
        -: 2534:
        -: 2535:__extension__ extern __inline uint32x2_t
        -: 2536:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2537:vsubhn_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 2538:{
        -: 2539:  return (uint32x2_t) __builtin_aarch64_subhnv2di ((int64x2_t) __a,
        -: 2540:						   (int64x2_t) __b);
        -: 2541:}
        -: 2542:
        -: 2543:__extension__ extern __inline int8x8_t
        -: 2544:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2545:vrsubhn_s16 (int16x8_t __a, int16x8_t __b)
        -: 2546:{
        -: 2547:  return (int8x8_t) __builtin_aarch64_rsubhnv8hi (__a, __b);
        -: 2548:}
        -: 2549:
        -: 2550:__extension__ extern __inline int16x4_t
        -: 2551:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2552:vrsubhn_s32 (int32x4_t __a, int32x4_t __b)
        -: 2553:{
        -: 2554:  return (int16x4_t) __builtin_aarch64_rsubhnv4si (__a, __b);
        -: 2555:}
        -: 2556:
        -: 2557:__extension__ extern __inline int32x2_t
        -: 2558:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2559:vrsubhn_s64 (int64x2_t __a, int64x2_t __b)
        -: 2560:{
        -: 2561:  return (int32x2_t) __builtin_aarch64_rsubhnv2di (__a, __b);
        -: 2562:}
        -: 2563:
        -: 2564:__extension__ extern __inline uint8x8_t
        -: 2565:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2566:vrsubhn_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 2567:{
        -: 2568:  return (uint8x8_t) __builtin_aarch64_rsubhnv8hi ((int16x8_t) __a,
        -: 2569:						   (int16x8_t) __b);
        -: 2570:}
        -: 2571:
        -: 2572:__extension__ extern __inline uint16x4_t
        -: 2573:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2574:vrsubhn_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 2575:{
        -: 2576:  return (uint16x4_t) __builtin_aarch64_rsubhnv4si ((int32x4_t) __a,
        -: 2577:						    (int32x4_t) __b);
        -: 2578:}
        -: 2579:
        -: 2580:__extension__ extern __inline uint32x2_t
        -: 2581:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2582:vrsubhn_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 2583:{
        -: 2584:  return (uint32x2_t) __builtin_aarch64_rsubhnv2di ((int64x2_t) __a,
        -: 2585:						    (int64x2_t) __b);
        -: 2586:}
        -: 2587:
        -: 2588:__extension__ extern __inline int8x16_t
        -: 2589:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2590:vrsubhn_high_s16 (int8x8_t __a, int16x8_t __b, int16x8_t __c)
        -: 2591:{
        -: 2592:  return (int8x16_t) __builtin_aarch64_rsubhn2v8hi (__a, __b, __c);
        -: 2593:}
        -: 2594:
        -: 2595:__extension__ extern __inline int16x8_t
        -: 2596:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2597:vrsubhn_high_s32 (int16x4_t __a, int32x4_t __b, int32x4_t __c)
        -: 2598:{
        -: 2599:  return (int16x8_t) __builtin_aarch64_rsubhn2v4si (__a, __b, __c);
        -: 2600:}
        -: 2601:
        -: 2602:__extension__ extern __inline int32x4_t
        -: 2603:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2604:vrsubhn_high_s64 (int32x2_t __a, int64x2_t __b, int64x2_t __c)
        -: 2605:{
        -: 2606:  return (int32x4_t) __builtin_aarch64_rsubhn2v2di (__a, __b, __c);
        -: 2607:}
        -: 2608:
        -: 2609:__extension__ extern __inline uint8x16_t
        -: 2610:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2611:vrsubhn_high_u16 (uint8x8_t __a, uint16x8_t __b, uint16x8_t __c)
        -: 2612:{
        -: 2613:  return (uint8x16_t) __builtin_aarch64_rsubhn2v8hi ((int8x8_t) __a,
        -: 2614:						     (int16x8_t) __b,
        -: 2615:						     (int16x8_t) __c);
        -: 2616:}
        -: 2617:
        -: 2618:__extension__ extern __inline uint16x8_t
        -: 2619:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2620:vrsubhn_high_u32 (uint16x4_t __a, uint32x4_t __b, uint32x4_t __c)
        -: 2621:{
        -: 2622:  return (uint16x8_t) __builtin_aarch64_rsubhn2v4si ((int16x4_t) __a,
        -: 2623:						     (int32x4_t) __b,
        -: 2624:						     (int32x4_t) __c);
        -: 2625:}
        -: 2626:
        -: 2627:__extension__ extern __inline uint32x4_t
        -: 2628:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2629:vrsubhn_high_u64 (uint32x2_t __a, uint64x2_t __b, uint64x2_t __c)
        -: 2630:{
        -: 2631:  return (uint32x4_t) __builtin_aarch64_rsubhn2v2di ((int32x2_t) __a,
        -: 2632:						     (int64x2_t) __b,
        -: 2633:						     (int64x2_t) __c);
        -: 2634:}
        -: 2635:
        -: 2636:__extension__ extern __inline int8x16_t
        -: 2637:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2638:vsubhn_high_s16 (int8x8_t __a, int16x8_t __b, int16x8_t __c)
        -: 2639:{
        -: 2640:  return (int8x16_t) __builtin_aarch64_subhn2v8hi (__a, __b, __c);
        -: 2641:}
        -: 2642:
        -: 2643:__extension__ extern __inline int16x8_t
        -: 2644:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2645:vsubhn_high_s32 (int16x4_t __a, int32x4_t __b, int32x4_t __c)
        -: 2646:{
        -: 2647:  return (int16x8_t) __builtin_aarch64_subhn2v4si (__a, __b, __c);;
        -: 2648:}
        -: 2649:
        -: 2650:__extension__ extern __inline int32x4_t
        -: 2651:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2652:vsubhn_high_s64 (int32x2_t __a, int64x2_t __b, int64x2_t __c)
        -: 2653:{
        -: 2654:  return (int32x4_t) __builtin_aarch64_subhn2v2di (__a, __b, __c);
        -: 2655:}
        -: 2656:
        -: 2657:__extension__ extern __inline uint8x16_t
        -: 2658:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2659:vsubhn_high_u16 (uint8x8_t __a, uint16x8_t __b, uint16x8_t __c)
        -: 2660:{
        -: 2661:  return (uint8x16_t) __builtin_aarch64_subhn2v8hi ((int8x8_t) __a,
        -: 2662:						    (int16x8_t) __b,
        -: 2663:						    (int16x8_t) __c);
        -: 2664:}
        -: 2665:
        -: 2666:__extension__ extern __inline uint16x8_t
        -: 2667:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2668:vsubhn_high_u32 (uint16x4_t __a, uint32x4_t __b, uint32x4_t __c)
        -: 2669:{
        -: 2670:  return (uint16x8_t) __builtin_aarch64_subhn2v4si ((int16x4_t) __a,
        -: 2671:						    (int32x4_t) __b,
        -: 2672:						    (int32x4_t) __c);
        -: 2673:}
        -: 2674:
        -: 2675:__extension__ extern __inline uint32x4_t
        -: 2676:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2677:vsubhn_high_u64 (uint32x2_t __a, uint64x2_t __b, uint64x2_t __c)
        -: 2678:{
        -: 2679:  return (uint32x4_t) __builtin_aarch64_subhn2v2di ((int32x2_t) __a,
        -: 2680:						    (int64x2_t) __b,
        -: 2681:						    (int64x2_t) __c);
        -: 2682:}
        -: 2683:
        -: 2684:__extension__ extern __inline uint16x4_t
        -: 2685:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2686:vqadd_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 2687:{
        -: 2688:  return __builtin_aarch64_uqaddv4hi_uuu (__a, __b);
        -: 2689:}
        -: 2690:
        -: 2691:__extension__ extern __inline uint32x2_t
        -: 2692:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2693:vqadd_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 2694:{
        -: 2695:  return __builtin_aarch64_uqaddv2si_uuu (__a, __b);
        -: 2696:}
        -: 2697:
        -: 2698:__extension__ extern __inline uint64x1_t
        -: 2699:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2700:vqadd_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 2701:{
        -: 2702:  return (uint64x1_t) {__builtin_aarch64_uqadddi_uuu (__a[0], __b[0])};
        -: 2703:}
        -: 2704:
        -: 2705:__extension__ extern __inline int8x16_t
        -: 2706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2707:vqaddq_s8 (int8x16_t __a, int8x16_t __b)
        -: 2708:{
        -: 2709:  return (int8x16_t) __builtin_aarch64_sqaddv16qi (__a, __b);
        -: 2710:}
        -: 2711:
        -: 2712:__extension__ extern __inline int16x8_t
        -: 2713:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2714:vqaddq_s16 (int16x8_t __a, int16x8_t __b)
        -: 2715:{
        -: 2716:  return (int16x8_t) __builtin_aarch64_sqaddv8hi (__a, __b);
        -: 2717:}
        -: 2718:
        -: 2719:__extension__ extern __inline int32x4_t
        -: 2720:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2721:vqaddq_s32 (int32x4_t __a, int32x4_t __b)
        -: 2722:{
        -: 2723:  return (int32x4_t) __builtin_aarch64_sqaddv4si (__a, __b);
        -: 2724:}
        -: 2725:
        -: 2726:__extension__ extern __inline int64x2_t
        -: 2727:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2728:vqaddq_s64 (int64x2_t __a, int64x2_t __b)
        -: 2729:{
        -: 2730:  return (int64x2_t) __builtin_aarch64_sqaddv2di (__a, __b);
        -: 2731:}
        -: 2732:
        -: 2733:__extension__ extern __inline uint8x16_t
        -: 2734:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2735:vqaddq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 2736:{
        -: 2737:  return __builtin_aarch64_uqaddv16qi_uuu (__a, __b);
        -: 2738:}
        -: 2739:
        -: 2740:__extension__ extern __inline uint16x8_t
        -: 2741:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2742:vqaddq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 2743:{
        -: 2744:  return __builtin_aarch64_uqaddv8hi_uuu (__a, __b);
        -: 2745:}
        -: 2746:
        -: 2747:__extension__ extern __inline uint32x4_t
        -: 2748:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2749:vqaddq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 2750:{
        -: 2751:  return __builtin_aarch64_uqaddv4si_uuu (__a, __b);
        -: 2752:}
        -: 2753:
        -: 2754:__extension__ extern __inline uint64x2_t
        -: 2755:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2756:vqaddq_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 2757:{
        -: 2758:  return __builtin_aarch64_uqaddv2di_uuu (__a, __b);
        -: 2759:}
        -: 2760:
        -: 2761:__extension__ extern __inline int8x8_t
        -: 2762:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2763:vqsub_s8 (int8x8_t __a, int8x8_t __b)
        -: 2764:{
        -: 2765:  return (int8x8_t) __builtin_aarch64_sqsubv8qi (__a, __b);
        -: 2766:}
        -: 2767:
        -: 2768:__extension__ extern __inline int16x4_t
        -: 2769:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2770:vqsub_s16 (int16x4_t __a, int16x4_t __b)
        -: 2771:{
        -: 2772:  return (int16x4_t) __builtin_aarch64_sqsubv4hi (__a, __b);
        -: 2773:}
        -: 2774:
        -: 2775:__extension__ extern __inline int32x2_t
        -: 2776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2777:vqsub_s32 (int32x2_t __a, int32x2_t __b)
        -: 2778:{
        -: 2779:  return (int32x2_t) __builtin_aarch64_sqsubv2si (__a, __b);
        -: 2780:}
        -: 2781:
        -: 2782:__extension__ extern __inline int64x1_t
        -: 2783:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2784:vqsub_s64 (int64x1_t __a, int64x1_t __b)
        -: 2785:{
        -: 2786:  return (int64x1_t) {__builtin_aarch64_sqsubdi (__a[0], __b[0])};
        -: 2787:}
        -: 2788:
        -: 2789:__extension__ extern __inline uint8x8_t
        -: 2790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2791:vqsub_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 2792:{
        -: 2793:  return __builtin_aarch64_uqsubv8qi_uuu (__a, __b);
        -: 2794:}
        -: 2795:
        -: 2796:__extension__ extern __inline uint16x4_t
        -: 2797:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2798:vqsub_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 2799:{
        -: 2800:  return __builtin_aarch64_uqsubv4hi_uuu (__a, __b);
        -: 2801:}
        -: 2802:
        -: 2803:__extension__ extern __inline uint32x2_t
        -: 2804:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2805:vqsub_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 2806:{
        -: 2807:  return __builtin_aarch64_uqsubv2si_uuu (__a, __b);
        -: 2808:}
        -: 2809:
        -: 2810:__extension__ extern __inline uint64x1_t
        -: 2811:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2812:vqsub_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 2813:{
        -: 2814:  return (uint64x1_t) {__builtin_aarch64_uqsubdi_uuu (__a[0], __b[0])};
        -: 2815:}
        -: 2816:
        -: 2817:__extension__ extern __inline int8x16_t
        -: 2818:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2819:vqsubq_s8 (int8x16_t __a, int8x16_t __b)
        -: 2820:{
        -: 2821:  return (int8x16_t) __builtin_aarch64_sqsubv16qi (__a, __b);
        -: 2822:}
        -: 2823:
        -: 2824:__extension__ extern __inline int16x8_t
        -: 2825:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2826:vqsubq_s16 (int16x8_t __a, int16x8_t __b)
        -: 2827:{
        -: 2828:  return (int16x8_t) __builtin_aarch64_sqsubv8hi (__a, __b);
        -: 2829:}
        -: 2830:
        -: 2831:__extension__ extern __inline int32x4_t
        -: 2832:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2833:vqsubq_s32 (int32x4_t __a, int32x4_t __b)
        -: 2834:{
        -: 2835:  return (int32x4_t) __builtin_aarch64_sqsubv4si (__a, __b);
        -: 2836:}
        -: 2837:
        -: 2838:__extension__ extern __inline int64x2_t
        -: 2839:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2840:vqsubq_s64 (int64x2_t __a, int64x2_t __b)
        -: 2841:{
        -: 2842:  return (int64x2_t) __builtin_aarch64_sqsubv2di (__a, __b);
        -: 2843:}
        -: 2844:
        -: 2845:__extension__ extern __inline uint8x16_t
        -: 2846:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2847:vqsubq_u8 (uint8x16_t __a, uint8x16_t __b)
        -: 2848:{
        -: 2849:  return __builtin_aarch64_uqsubv16qi_uuu (__a, __b);
        -: 2850:}
        -: 2851:
        -: 2852:__extension__ extern __inline uint16x8_t
        -: 2853:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2854:vqsubq_u16 (uint16x8_t __a, uint16x8_t __b)
        -: 2855:{
        -: 2856:  return __builtin_aarch64_uqsubv8hi_uuu (__a, __b);
        -: 2857:}
        -: 2858:
        -: 2859:__extension__ extern __inline uint32x4_t
        -: 2860:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2861:vqsubq_u32 (uint32x4_t __a, uint32x4_t __b)
        -: 2862:{
        -: 2863:  return __builtin_aarch64_uqsubv4si_uuu (__a, __b);
        -: 2864:}
        -: 2865:
        -: 2866:__extension__ extern __inline uint64x2_t
        -: 2867:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2868:vqsubq_u64 (uint64x2_t __a, uint64x2_t __b)
        -: 2869:{
        -: 2870:  return __builtin_aarch64_uqsubv2di_uuu (__a, __b);
        -: 2871:}
        -: 2872:
        -: 2873:__extension__ extern __inline int8x8_t
        -: 2874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2875:vqneg_s8 (int8x8_t __a)
        -: 2876:{
        -: 2877:  return (int8x8_t) __builtin_aarch64_sqnegv8qi (__a);
        -: 2878:}
        -: 2879:
        -: 2880:__extension__ extern __inline int16x4_t
        -: 2881:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2882:vqneg_s16 (int16x4_t __a)
        -: 2883:{
        -: 2884:  return (int16x4_t) __builtin_aarch64_sqnegv4hi (__a);
        -: 2885:}
        -: 2886:
        -: 2887:__extension__ extern __inline int32x2_t
        -: 2888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2889:vqneg_s32 (int32x2_t __a)
        -: 2890:{
        -: 2891:  return (int32x2_t) __builtin_aarch64_sqnegv2si (__a);
        -: 2892:}
        -: 2893:
        -: 2894:__extension__ extern __inline int64x1_t
        -: 2895:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2896:vqneg_s64 (int64x1_t __a)
        -: 2897:{
        -: 2898:  return (int64x1_t) {__builtin_aarch64_sqnegdi (__a[0])};
        -: 2899:}
        -: 2900:
        -: 2901:__extension__ extern __inline int8x16_t
        -: 2902:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2903:vqnegq_s8 (int8x16_t __a)
        -: 2904:{
        -: 2905:  return (int8x16_t) __builtin_aarch64_sqnegv16qi (__a);
        -: 2906:}
        -: 2907:
        -: 2908:__extension__ extern __inline int16x8_t
        -: 2909:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2910:vqnegq_s16 (int16x8_t __a)
        -: 2911:{
        -: 2912:  return (int16x8_t) __builtin_aarch64_sqnegv8hi (__a);
        -: 2913:}
        -: 2914:
        -: 2915:__extension__ extern __inline int32x4_t
        -: 2916:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2917:vqnegq_s32 (int32x4_t __a)
        -: 2918:{
        -: 2919:  return (int32x4_t) __builtin_aarch64_sqnegv4si (__a);
        -: 2920:}
        -: 2921:
        -: 2922:__extension__ extern __inline int8x8_t
        -: 2923:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2924:vqabs_s8 (int8x8_t __a)
        -: 2925:{
        -: 2926:  return (int8x8_t) __builtin_aarch64_sqabsv8qi (__a);
        -: 2927:}
        -: 2928:
        -: 2929:__extension__ extern __inline int16x4_t
        -: 2930:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2931:vqabs_s16 (int16x4_t __a)
        -: 2932:{
        -: 2933:  return (int16x4_t) __builtin_aarch64_sqabsv4hi (__a);
        -: 2934:}
        -: 2935:
        -: 2936:__extension__ extern __inline int32x2_t
        -: 2937:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2938:vqabs_s32 (int32x2_t __a)
        -: 2939:{
        -: 2940:  return (int32x2_t) __builtin_aarch64_sqabsv2si (__a);
        -: 2941:}
        -: 2942:
        -: 2943:__extension__ extern __inline int64x1_t
        -: 2944:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2945:vqabs_s64 (int64x1_t __a)
        -: 2946:{
        -: 2947:  return (int64x1_t) {__builtin_aarch64_sqabsdi (__a[0])};
        -: 2948:}
        -: 2949:
        -: 2950:__extension__ extern __inline int8x16_t
        -: 2951:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2952:vqabsq_s8 (int8x16_t __a)
        -: 2953:{
        -: 2954:  return (int8x16_t) __builtin_aarch64_sqabsv16qi (__a);
        -: 2955:}
        -: 2956:
        -: 2957:__extension__ extern __inline int16x8_t
        -: 2958:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2959:vqabsq_s16 (int16x8_t __a)
        -: 2960:{
        -: 2961:  return (int16x8_t) __builtin_aarch64_sqabsv8hi (__a);
        -: 2962:}
        -: 2963:
        -: 2964:__extension__ extern __inline int32x4_t
        -: 2965:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2966:vqabsq_s32 (int32x4_t __a)
        -: 2967:{
        -: 2968:  return (int32x4_t) __builtin_aarch64_sqabsv4si (__a);
        -: 2969:}
        -: 2970:
        -: 2971:__extension__ extern __inline int16x4_t
        -: 2972:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2973:vqdmulh_s16 (int16x4_t __a, int16x4_t __b)
        -: 2974:{
        -: 2975:  return (int16x4_t) __builtin_aarch64_sqdmulhv4hi (__a, __b);
        -: 2976:}
        -: 2977:
        -: 2978:__extension__ extern __inline int32x2_t
        -: 2979:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2980:vqdmulh_s32 (int32x2_t __a, int32x2_t __b)
        -: 2981:{
        -: 2982:  return (int32x2_t) __builtin_aarch64_sqdmulhv2si (__a, __b);
        -: 2983:}
        -: 2984:
        -: 2985:__extension__ extern __inline int16x8_t
        -: 2986:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2987:vqdmulhq_s16 (int16x8_t __a, int16x8_t __b)
        -: 2988:{
        -: 2989:  return (int16x8_t) __builtin_aarch64_sqdmulhv8hi (__a, __b);
        -: 2990:}
        -: 2991:
        -: 2992:__extension__ extern __inline int32x4_t
        -: 2993:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 2994:vqdmulhq_s32 (int32x4_t __a, int32x4_t __b)
        -: 2995:{
        -: 2996:  return (int32x4_t) __builtin_aarch64_sqdmulhv4si (__a, __b);
        -: 2997:}
        -: 2998:
        -: 2999:__extension__ extern __inline int16x4_t
        -: 3000:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3001:vqrdmulh_s16 (int16x4_t __a, int16x4_t __b)
        -: 3002:{
        -: 3003:  return (int16x4_t) __builtin_aarch64_sqrdmulhv4hi (__a, __b);
        -: 3004:}
        -: 3005:
        -: 3006:__extension__ extern __inline int32x2_t
        -: 3007:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3008:vqrdmulh_s32 (int32x2_t __a, int32x2_t __b)
        -: 3009:{
        -: 3010:  return (int32x2_t) __builtin_aarch64_sqrdmulhv2si (__a, __b);
        -: 3011:}
        -: 3012:
        -: 3013:__extension__ extern __inline int16x8_t
        -: 3014:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3015:vqrdmulhq_s16 (int16x8_t __a, int16x8_t __b)
        -: 3016:{
        -: 3017:  return (int16x8_t) __builtin_aarch64_sqrdmulhv8hi (__a, __b);
        -: 3018:}
        -: 3019:
        -: 3020:__extension__ extern __inline int32x4_t
        -: 3021:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3022:vqrdmulhq_s32 (int32x4_t __a, int32x4_t __b)
        -: 3023:{
        -: 3024:  return (int32x4_t) __builtin_aarch64_sqrdmulhv4si (__a, __b);
        -: 3025:}
        -: 3026:
        -: 3027:__extension__ extern __inline int8x8_t
        -: 3028:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3029:vcreate_s8 (uint64_t __a)
        -: 3030:{
        -: 3031:  return (int8x8_t) __a;
        -: 3032:}
        -: 3033:
        -: 3034:__extension__ extern __inline int16x4_t
        -: 3035:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3036:vcreate_s16 (uint64_t __a)
        -: 3037:{
        -: 3038:  return (int16x4_t) __a;
        -: 3039:}
        -: 3040:
        -: 3041:__extension__ extern __inline int32x2_t
        -: 3042:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3043:vcreate_s32 (uint64_t __a)
        -: 3044:{
        -: 3045:  return (int32x2_t) __a;
        -: 3046:}
        -: 3047:
        -: 3048:__extension__ extern __inline int64x1_t
        -: 3049:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3050:vcreate_s64 (uint64_t __a)
        -: 3051:{
        -: 3052:  return (int64x1_t) {__a};
        -: 3053:}
        -: 3054:
        -: 3055:__extension__ extern __inline float16x4_t
        -: 3056:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3057:vcreate_f16 (uint64_t __a)
        -: 3058:{
        -: 3059:  return (float16x4_t) __a;
        -: 3060:}
        -: 3061:
        -: 3062:__extension__ extern __inline float32x2_t
        -: 3063:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3064:vcreate_f32 (uint64_t __a)
        -: 3065:{
        -: 3066:  return (float32x2_t) __a;
        -: 3067:}
        -: 3068:
        -: 3069:__extension__ extern __inline uint8x8_t
        -: 3070:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3071:vcreate_u8 (uint64_t __a)
        -: 3072:{
        -: 3073:  return (uint8x8_t) __a;
        -: 3074:}
        -: 3075:
        -: 3076:__extension__ extern __inline uint16x4_t
        -: 3077:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3078:vcreate_u16 (uint64_t __a)
        -: 3079:{
        -: 3080:  return (uint16x4_t) __a;
        -: 3081:}
        -: 3082:
        -: 3083:__extension__ extern __inline uint32x2_t
        -: 3084:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3085:vcreate_u32 (uint64_t __a)
        -: 3086:{
        -: 3087:  return (uint32x2_t) __a;
        -: 3088:}
        -: 3089:
        -: 3090:__extension__ extern __inline uint64x1_t
        -: 3091:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3092:vcreate_u64 (uint64_t __a)
        -: 3093:{
979720020: 3094:  return (uint64x1_t) {__a};
        -: 3095:}
        -: 3096:
        -: 3097:__extension__ extern __inline float64x1_t
        -: 3098:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3099:vcreate_f64 (uint64_t __a)
        -: 3100:{
        -: 3101:  return (float64x1_t) __a;
        -: 3102:}
        -: 3103:
        -: 3104:__extension__ extern __inline poly8x8_t
        -: 3105:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3106:vcreate_p8 (uint64_t __a)
        -: 3107:{
        -: 3108:  return (poly8x8_t) __a;
        -: 3109:}
        -: 3110:
        -: 3111:__extension__ extern __inline poly16x4_t
        -: 3112:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3113:vcreate_p16 (uint64_t __a)
        -: 3114:{
        -: 3115:  return (poly16x4_t) __a;
        -: 3116:}
        -: 3117:
        -: 3118:__extension__ extern __inline poly64x1_t
        -: 3119:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3120:vcreate_p64 (uint64_t __a)
        -: 3121:{
        -: 3122:  return (poly64x1_t) __a;
        -: 3123:}
        -: 3124:
        -: 3125:/* vget_lane  */
        -: 3126:
        -: 3127:__extension__ extern __inline float16_t
        -: 3128:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3129:vget_lane_f16 (float16x4_t __a, const int __b)
        -: 3130:{
        -: 3131:  return __aarch64_vget_lane_any (__a, __b);
        -: 3132:}
        -: 3133:
        -: 3134:__extension__ extern __inline float32_t
        -: 3135:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3136:vget_lane_f32 (float32x2_t __a, const int __b)
        -: 3137:{
        -: 3138:  return __aarch64_vget_lane_any (__a, __b);
        -: 3139:}
        -: 3140:
        -: 3141:__extension__ extern __inline float64_t
        -: 3142:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3143:vget_lane_f64 (float64x1_t __a, const int __b)
        -: 3144:{
        -: 3145:  return __aarch64_vget_lane_any (__a, __b);
        -: 3146:}
        -: 3147:
        -: 3148:__extension__ extern __inline poly8_t
        -: 3149:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3150:vget_lane_p8 (poly8x8_t __a, const int __b)
        -: 3151:{
        -: 3152:  return __aarch64_vget_lane_any (__a, __b);
        -: 3153:}
        -: 3154:
        -: 3155:__extension__ extern __inline poly16_t
        -: 3156:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3157:vget_lane_p16 (poly16x4_t __a, const int __b)
        -: 3158:{
        -: 3159:  return __aarch64_vget_lane_any (__a, __b);
        -: 3160:}
        -: 3161:
        -: 3162:__extension__ extern __inline poly64_t
        -: 3163:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3164:vget_lane_p64 (poly64x1_t __a, const int __b)
        -: 3165:{
        -: 3166:  return __aarch64_vget_lane_any (__a, __b);
        -: 3167:}
        -: 3168:
        -: 3169:__extension__ extern __inline int8_t
        -: 3170:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3171:vget_lane_s8 (int8x8_t __a, const int __b)
        -: 3172:{
        -: 3173:  return __aarch64_vget_lane_any (__a, __b);
        -: 3174:}
        -: 3175:
        -: 3176:__extension__ extern __inline int16_t
        -: 3177:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3178:vget_lane_s16 (int16x4_t __a, const int __b)
        -: 3179:{
        -: 3180:  return __aarch64_vget_lane_any (__a, __b);
        -: 3181:}
        -: 3182:
        -: 3183:__extension__ extern __inline int32_t
        -: 3184:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3185:vget_lane_s32 (int32x2_t __a, const int __b)
        -: 3186:{
        -: 3187:  return __aarch64_vget_lane_any (__a, __b);
        -: 3188:}
        -: 3189:
        -: 3190:__extension__ extern __inline int64_t
        -: 3191:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3192:vget_lane_s64 (int64x1_t __a, const int __b)
        -: 3193:{
        -: 3194:  return __aarch64_vget_lane_any (__a, __b);
        -: 3195:}
        -: 3196:
        -: 3197:__extension__ extern __inline uint8_t
        -: 3198:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3199:vget_lane_u8 (uint8x8_t __a, const int __b)
        -: 3200:{
        -: 3201:  return __aarch64_vget_lane_any (__a, __b);
        -: 3202:}
        -: 3203:
        -: 3204:__extension__ extern __inline uint16_t
        -: 3205:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3206:vget_lane_u16 (uint16x4_t __a, const int __b)
        -: 3207:{
        -: 3208:  return __aarch64_vget_lane_any (__a, __b);
        -: 3209:}
        -: 3210:
        -: 3211:__extension__ extern __inline uint32_t
        -: 3212:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3213:vget_lane_u32 (uint32x2_t __a, const int __b)
        -: 3214:{
        -: 3215:  return __aarch64_vget_lane_any (__a, __b);
        -: 3216:}
        -: 3217:
        -: 3218:__extension__ extern __inline uint64_t
        -: 3219:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3220:vget_lane_u64 (uint64x1_t __a, const int __b)
        -: 3221:{
        -: 3222:  return __aarch64_vget_lane_any (__a, __b);
        -: 3223:}
        -: 3224:
        -: 3225:/* vgetq_lane  */
        -: 3226:
        -: 3227:__extension__ extern __inline float16_t
        -: 3228:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3229:vgetq_lane_f16 (float16x8_t __a, const int __b)
        -: 3230:{
        -: 3231:  return __aarch64_vget_lane_any (__a, __b);
        -: 3232:}
        -: 3233:
        -: 3234:__extension__ extern __inline float32_t
        -: 3235:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3236:vgetq_lane_f32 (float32x4_t __a, const int __b)
        -: 3237:{
        -: 3238:  return __aarch64_vget_lane_any (__a, __b);
        -: 3239:}
        -: 3240:
        -: 3241:__extension__ extern __inline float64_t
        -: 3242:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3243:vgetq_lane_f64 (float64x2_t __a, const int __b)
        -: 3244:{
        -: 3245:  return __aarch64_vget_lane_any (__a, __b);
        -: 3246:}
        -: 3247:
        -: 3248:__extension__ extern __inline poly8_t
        -: 3249:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3250:vgetq_lane_p8 (poly8x16_t __a, const int __b)
        -: 3251:{
        -: 3252:  return __aarch64_vget_lane_any (__a, __b);
        -: 3253:}
        -: 3254:
        -: 3255:__extension__ extern __inline poly16_t
        -: 3256:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3257:vgetq_lane_p16 (poly16x8_t __a, const int __b)
        -: 3258:{
        -: 3259:  return __aarch64_vget_lane_any (__a, __b);
        -: 3260:}
        -: 3261:
        -: 3262:__extension__ extern __inline poly64_t
        -: 3263:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3264:vgetq_lane_p64 (poly64x2_t __a, const int __b)
        -: 3265:{
        -: 3266:  return __aarch64_vget_lane_any (__a, __b);
        -: 3267:}
        -: 3268:
        -: 3269:__extension__ extern __inline int8_t
        -: 3270:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3271:vgetq_lane_s8 (int8x16_t __a, const int __b)
        -: 3272:{
        -: 3273:  return __aarch64_vget_lane_any (__a, __b);
        -: 3274:}
        -: 3275:
        -: 3276:__extension__ extern __inline int16_t
        -: 3277:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3278:vgetq_lane_s16 (int16x8_t __a, const int __b)
        -: 3279:{
        -: 3280:  return __aarch64_vget_lane_any (__a, __b);
        -: 3281:}
        -: 3282:
        -: 3283:__extension__ extern __inline int32_t
        -: 3284:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3285:vgetq_lane_s32 (int32x4_t __a, const int __b)
        -: 3286:{
        -: 3287:  return __aarch64_vget_lane_any (__a, __b);
        -: 3288:}
        -: 3289:
        -: 3290:__extension__ extern __inline int64_t
        -: 3291:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3292:vgetq_lane_s64 (int64x2_t __a, const int __b)
        -: 3293:{
        -: 3294:  return __aarch64_vget_lane_any (__a, __b);
        -: 3295:}
        -: 3296:
        -: 3297:__extension__ extern __inline uint8_t
        -: 3298:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3299:vgetq_lane_u8 (uint8x16_t __a, const int __b)
        -: 3300:{
        -: 3301:  return __aarch64_vget_lane_any (__a, __b);
        -: 3302:}
        -: 3303:
        -: 3304:__extension__ extern __inline uint16_t
        -: 3305:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3306:vgetq_lane_u16 (uint16x8_t __a, const int __b)
        -: 3307:{
        -: 3308:  return __aarch64_vget_lane_any (__a, __b);
        -: 3309:}
        -: 3310:
        -: 3311:__extension__ extern __inline uint32_t
        -: 3312:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3313:vgetq_lane_u32 (uint32x4_t __a, const int __b)
        -: 3314:{
        -: 3315:  return __aarch64_vget_lane_any (__a, __b);
        -: 3316:}
        -: 3317:
        -: 3318:__extension__ extern __inline uint64_t
        -: 3319:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3320:vgetq_lane_u64 (uint64x2_t __a, const int __b)
        -: 3321:{
1175664024: 3322:  return __aarch64_vget_lane_any (__a, __b);
        -: 3323:}
        -: 3324:
        -: 3325:/* vreinterpret  */
        -: 3326:
        -: 3327:__extension__ extern __inline poly8x8_t
        -: 3328:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3329:vreinterpret_p8_f16 (float16x4_t __a)
        -: 3330:{
        -: 3331:  return (poly8x8_t) __a;
        -: 3332:}
        -: 3333:
        -: 3334:__extension__ extern __inline poly8x8_t
        -: 3335:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3336:vreinterpret_p8_f64 (float64x1_t __a)
        -: 3337:{
        -: 3338:  return (poly8x8_t) __a;
        -: 3339:}
        -: 3340:
        -: 3341:__extension__ extern __inline poly8x8_t
        -: 3342:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3343:vreinterpret_p8_s8 (int8x8_t __a)
        -: 3344:{
        -: 3345:  return (poly8x8_t) __a;
        -: 3346:}
        -: 3347:
        -: 3348:__extension__ extern __inline poly8x8_t
        -: 3349:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3350:vreinterpret_p8_s16 (int16x4_t __a)
        -: 3351:{
        -: 3352:  return (poly8x8_t) __a;
        -: 3353:}
        -: 3354:
        -: 3355:__extension__ extern __inline poly8x8_t
        -: 3356:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3357:vreinterpret_p8_s32 (int32x2_t __a)
        -: 3358:{
        -: 3359:  return (poly8x8_t) __a;
        -: 3360:}
        -: 3361:
        -: 3362:__extension__ extern __inline poly8x8_t
        -: 3363:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3364:vreinterpret_p8_s64 (int64x1_t __a)
        -: 3365:{
        -: 3366:  return (poly8x8_t) __a;
        -: 3367:}
        -: 3368:
        -: 3369:__extension__ extern __inline poly8x8_t
        -: 3370:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3371:vreinterpret_p8_f32 (float32x2_t __a)
        -: 3372:{
        -: 3373:  return (poly8x8_t) __a;
        -: 3374:}
        -: 3375:
        -: 3376:__extension__ extern __inline poly8x8_t
        -: 3377:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3378:vreinterpret_p8_u8 (uint8x8_t __a)
        -: 3379:{
        -: 3380:  return (poly8x8_t) __a;
        -: 3381:}
        -: 3382:
        -: 3383:__extension__ extern __inline poly8x8_t
        -: 3384:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3385:vreinterpret_p8_u16 (uint16x4_t __a)
        -: 3386:{
        -: 3387:  return (poly8x8_t) __a;
        -: 3388:}
        -: 3389:
        -: 3390:__extension__ extern __inline poly8x8_t
        -: 3391:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3392:vreinterpret_p8_u32 (uint32x2_t __a)
        -: 3393:{
        -: 3394:  return (poly8x8_t) __a;
        -: 3395:}
        -: 3396:
        -: 3397:__extension__ extern __inline poly8x8_t
        -: 3398:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3399:vreinterpret_p8_u64 (uint64x1_t __a)
        -: 3400:{
        -: 3401:  return (poly8x8_t) __a;
        -: 3402:}
        -: 3403:
        -: 3404:__extension__ extern __inline poly8x8_t
        -: 3405:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3406:vreinterpret_p8_p16 (poly16x4_t __a)
        -: 3407:{
        -: 3408:  return (poly8x8_t) __a;
        -: 3409:}
        -: 3410:
        -: 3411:__extension__ extern __inline poly8x8_t
        -: 3412:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3413:vreinterpret_p8_p64 (poly64x1_t __a)
        -: 3414:{
        -: 3415:  return (poly8x8_t) __a;
        -: 3416:}
        -: 3417:
        -: 3418:__extension__ extern __inline poly8x16_t
        -: 3419:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3420:vreinterpretq_p8_f64 (float64x2_t __a)
        -: 3421:{
        -: 3422:  return (poly8x16_t) __a;
        -: 3423:}
        -: 3424:
        -: 3425:__extension__ extern __inline poly8x16_t
        -: 3426:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3427:vreinterpretq_p8_s8 (int8x16_t __a)
        -: 3428:{
        -: 3429:  return (poly8x16_t) __a;
        -: 3430:}
        -: 3431:
        -: 3432:__extension__ extern __inline poly8x16_t
        -: 3433:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3434:vreinterpretq_p8_s16 (int16x8_t __a)
        -: 3435:{
        -: 3436:  return (poly8x16_t) __a;
        -: 3437:}
        -: 3438:
        -: 3439:__extension__ extern __inline poly8x16_t
        -: 3440:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3441:vreinterpretq_p8_s32 (int32x4_t __a)
        -: 3442:{
        -: 3443:  return (poly8x16_t) __a;
        -: 3444:}
        -: 3445:
        -: 3446:__extension__ extern __inline poly8x16_t
        -: 3447:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3448:vreinterpretq_p8_s64 (int64x2_t __a)
        -: 3449:{
        -: 3450:  return (poly8x16_t) __a;
        -: 3451:}
        -: 3452:
        -: 3453:__extension__ extern __inline poly8x16_t
        -: 3454:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3455:vreinterpretq_p8_f16 (float16x8_t __a)
        -: 3456:{
        -: 3457:  return (poly8x16_t) __a;
        -: 3458:}
        -: 3459:
        -: 3460:__extension__ extern __inline poly8x16_t
        -: 3461:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3462:vreinterpretq_p8_f32 (float32x4_t __a)
        -: 3463:{
        -: 3464:  return (poly8x16_t) __a;
        -: 3465:}
        -: 3466:
        -: 3467:__extension__ extern __inline poly8x16_t
        -: 3468:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3469:vreinterpretq_p8_u8 (uint8x16_t __a)
        -: 3470:{
        -: 3471:  return (poly8x16_t) __a;
        -: 3472:}
        -: 3473:
        -: 3474:__extension__ extern __inline poly8x16_t
        -: 3475:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3476:vreinterpretq_p8_u16 (uint16x8_t __a)
        -: 3477:{
        -: 3478:  return (poly8x16_t) __a;
        -: 3479:}
        -: 3480:
        -: 3481:__extension__ extern __inline poly8x16_t
        -: 3482:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3483:vreinterpretq_p8_u32 (uint32x4_t __a)
        -: 3484:{
        -: 3485:  return (poly8x16_t) __a;
        -: 3486:}
        -: 3487:
        -: 3488:__extension__ extern __inline poly8x16_t
        -: 3489:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3490:vreinterpretq_p8_u64 (uint64x2_t __a)
        -: 3491:{
        -: 3492:  return (poly8x16_t) __a;
        -: 3493:}
        -: 3494:
        -: 3495:__extension__ extern __inline poly8x16_t
        -: 3496:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3497:vreinterpretq_p8_p16 (poly16x8_t __a)
        -: 3498:{
        -: 3499:  return (poly8x16_t) __a;
        -: 3500:}
        -: 3501:
        -: 3502:__extension__ extern __inline poly8x16_t
        -: 3503:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3504:vreinterpretq_p8_p64 (poly64x2_t __a)
        -: 3505:{
        -: 3506:  return (poly8x16_t) __a;
        -: 3507:}
        -: 3508:
        -: 3509:__extension__ extern __inline poly8x16_t
        -: 3510:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3511:vreinterpretq_p8_p128 (poly128_t __a)
        -: 3512:{
        -: 3513:  return (poly8x16_t)__a;
        -: 3514:}
        -: 3515:
        -: 3516:__extension__ extern __inline poly16x4_t
        -: 3517:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3518:vreinterpret_p16_f16 (float16x4_t __a)
        -: 3519:{
        -: 3520:  return (poly16x4_t) __a;
        -: 3521:}
        -: 3522:
        -: 3523:__extension__ extern __inline poly16x4_t
        -: 3524:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3525:vreinterpret_p16_f64 (float64x1_t __a)
        -: 3526:{
        -: 3527:  return (poly16x4_t) __a;
        -: 3528:}
        -: 3529:
        -: 3530:__extension__ extern __inline poly16x4_t
        -: 3531:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3532:vreinterpret_p16_s8 (int8x8_t __a)
        -: 3533:{
        -: 3534:  return (poly16x4_t) __a;
        -: 3535:}
        -: 3536:
        -: 3537:__extension__ extern __inline poly16x4_t
        -: 3538:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3539:vreinterpret_p16_s16 (int16x4_t __a)
        -: 3540:{
        -: 3541:  return (poly16x4_t) __a;
        -: 3542:}
        -: 3543:
        -: 3544:__extension__ extern __inline poly16x4_t
        -: 3545:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3546:vreinterpret_p16_s32 (int32x2_t __a)
        -: 3547:{
        -: 3548:  return (poly16x4_t) __a;
        -: 3549:}
        -: 3550:
        -: 3551:__extension__ extern __inline poly16x4_t
        -: 3552:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3553:vreinterpret_p16_s64 (int64x1_t __a)
        -: 3554:{
        -: 3555:  return (poly16x4_t) __a;
        -: 3556:}
        -: 3557:
        -: 3558:__extension__ extern __inline poly16x4_t
        -: 3559:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3560:vreinterpret_p16_f32 (float32x2_t __a)
        -: 3561:{
        -: 3562:  return (poly16x4_t) __a;
        -: 3563:}
        -: 3564:
        -: 3565:__extension__ extern __inline poly16x4_t
        -: 3566:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3567:vreinterpret_p16_u8 (uint8x8_t __a)
        -: 3568:{
        -: 3569:  return (poly16x4_t) __a;
        -: 3570:}
        -: 3571:
        -: 3572:__extension__ extern __inline poly16x4_t
        -: 3573:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3574:vreinterpret_p16_u16 (uint16x4_t __a)
        -: 3575:{
        -: 3576:  return (poly16x4_t) __a;
        -: 3577:}
        -: 3578:
        -: 3579:__extension__ extern __inline poly16x4_t
        -: 3580:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3581:vreinterpret_p16_u32 (uint32x2_t __a)
        -: 3582:{
        -: 3583:  return (poly16x4_t) __a;
        -: 3584:}
        -: 3585:
        -: 3586:__extension__ extern __inline poly16x4_t
        -: 3587:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3588:vreinterpret_p16_u64 (uint64x1_t __a)
        -: 3589:{
        -: 3590:  return (poly16x4_t) __a;
        -: 3591:}
        -: 3592:
        -: 3593:__extension__ extern __inline poly16x4_t
        -: 3594:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3595:vreinterpret_p16_p8 (poly8x8_t __a)
        -: 3596:{
        -: 3597:  return (poly16x4_t) __a;
        -: 3598:}
        -: 3599:
        -: 3600:__extension__ extern __inline poly16x4_t
        -: 3601:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3602:vreinterpret_p16_p64 (poly64x1_t __a)
        -: 3603:{
        -: 3604:  return (poly16x4_t) __a;
        -: 3605:}
        -: 3606:
        -: 3607:__extension__ extern __inline poly16x8_t
        -: 3608:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3609:vreinterpretq_p16_f64 (float64x2_t __a)
        -: 3610:{
        -: 3611:  return (poly16x8_t) __a;
        -: 3612:}
        -: 3613:
        -: 3614:__extension__ extern __inline poly16x8_t
        -: 3615:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3616:vreinterpretq_p16_s8 (int8x16_t __a)
        -: 3617:{
        -: 3618:  return (poly16x8_t) __a;
        -: 3619:}
        -: 3620:
        -: 3621:__extension__ extern __inline poly16x8_t
        -: 3622:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3623:vreinterpretq_p16_s16 (int16x8_t __a)
        -: 3624:{
        -: 3625:  return (poly16x8_t) __a;
        -: 3626:}
        -: 3627:
        -: 3628:__extension__ extern __inline poly16x8_t
        -: 3629:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3630:vreinterpretq_p16_s32 (int32x4_t __a)
        -: 3631:{
        -: 3632:  return (poly16x8_t) __a;
        -: 3633:}
        -: 3634:
        -: 3635:__extension__ extern __inline poly16x8_t
        -: 3636:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3637:vreinterpretq_p16_s64 (int64x2_t __a)
        -: 3638:{
        -: 3639:  return (poly16x8_t) __a;
        -: 3640:}
        -: 3641:
        -: 3642:__extension__ extern __inline poly16x8_t
        -: 3643:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3644:vreinterpretq_p16_f16 (float16x8_t __a)
        -: 3645:{
        -: 3646:  return (poly16x8_t) __a;
        -: 3647:}
        -: 3648:
        -: 3649:__extension__ extern __inline poly16x8_t
        -: 3650:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3651:vreinterpretq_p16_f32 (float32x4_t __a)
        -: 3652:{
        -: 3653:  return (poly16x8_t) __a;
        -: 3654:}
        -: 3655:
        -: 3656:__extension__ extern __inline poly16x8_t
        -: 3657:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3658:vreinterpretq_p16_u8 (uint8x16_t __a)
        -: 3659:{
        -: 3660:  return (poly16x8_t) __a;
        -: 3661:}
        -: 3662:
        -: 3663:__extension__ extern __inline poly16x8_t
        -: 3664:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3665:vreinterpretq_p16_u16 (uint16x8_t __a)
        -: 3666:{
        -: 3667:  return (poly16x8_t) __a;
        -: 3668:}
        -: 3669:
        -: 3670:__extension__ extern __inline poly16x8_t
        -: 3671:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3672:vreinterpretq_p16_u32 (uint32x4_t __a)
        -: 3673:{
        -: 3674:  return (poly16x8_t) __a;
        -: 3675:}
        -: 3676:
        -: 3677:__extension__ extern __inline poly16x8_t
        -: 3678:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3679:vreinterpretq_p16_u64 (uint64x2_t __a)
        -: 3680:{
        -: 3681:  return (poly16x8_t) __a;
        -: 3682:}
        -: 3683:
        -: 3684:__extension__ extern __inline poly16x8_t
        -: 3685:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3686:vreinterpretq_p16_p8 (poly8x16_t __a)
        -: 3687:{
        -: 3688:  return (poly16x8_t) __a;
        -: 3689:}
        -: 3690:
        -: 3691:__extension__ extern __inline poly16x8_t
        -: 3692:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3693:vreinterpretq_p16_p64 (poly64x2_t __a)
        -: 3694:{
        -: 3695:  return (poly16x8_t) __a;
        -: 3696:}
        -: 3697:
        -: 3698:__extension__ extern __inline poly16x8_t
        -: 3699:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3700:vreinterpretq_p16_p128 (poly128_t __a)
        -: 3701:{
        -: 3702:  return (poly16x8_t)__a;
        -: 3703:}
        -: 3704:
        -: 3705:__extension__ extern __inline poly64x1_t
        -: 3706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3707:vreinterpret_p64_f16 (float16x4_t __a)
        -: 3708:{
        -: 3709:  return (poly64x1_t) __a;
        -: 3710:}
        -: 3711:
        -: 3712:__extension__ extern __inline poly64x1_t
        -: 3713:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3714:vreinterpret_p64_f64 (float64x1_t __a)
        -: 3715:{
        -: 3716:  return (poly64x1_t) __a;
        -: 3717:}
        -: 3718:
        -: 3719:__extension__ extern __inline poly64x1_t
        -: 3720:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3721:vreinterpret_p64_s8 (int8x8_t __a)
        -: 3722:{
        -: 3723:  return (poly64x1_t) __a;
        -: 3724:}
        -: 3725:
        -: 3726:__extension__ extern __inline poly64x1_t
        -: 3727:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3728:vreinterpret_p64_s16 (int16x4_t __a)
        -: 3729:{
        -: 3730:  return (poly64x1_t) __a;
        -: 3731:}
        -: 3732:
        -: 3733:__extension__ extern __inline poly64x1_t
        -: 3734:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3735:vreinterpret_p64_s32 (int32x2_t __a)
        -: 3736:{
        -: 3737:  return (poly64x1_t) __a;
        -: 3738:}
        -: 3739:
        -: 3740:__extension__ extern __inline poly64x1_t
        -: 3741:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3742:vreinterpret_p64_s64 (int64x1_t __a)
        -: 3743:{
        -: 3744:  return (poly64x1_t) __a;
        -: 3745:}
        -: 3746:
        -: 3747:__extension__ extern __inline poly64x1_t
        -: 3748:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3749:vreinterpret_p64_f32 (float32x2_t __a)
        -: 3750:{
        -: 3751:  return (poly64x1_t) __a;
        -: 3752:}
        -: 3753:
        -: 3754:__extension__ extern __inline poly64x1_t
        -: 3755:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3756:vreinterpret_p64_u8 (uint8x8_t __a)
        -: 3757:{
        -: 3758:  return (poly64x1_t) __a;
        -: 3759:}
        -: 3760:
        -: 3761:__extension__ extern __inline poly64x1_t
        -: 3762:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3763:vreinterpret_p64_u16 (uint16x4_t __a)
        -: 3764:{
        -: 3765:  return (poly64x1_t) __a;
        -: 3766:}
        -: 3767:
        -: 3768:__extension__ extern __inline poly64x1_t
        -: 3769:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3770:vreinterpret_p64_u32 (uint32x2_t __a)
        -: 3771:{
        -: 3772:  return (poly64x1_t) __a;
        -: 3773:}
        -: 3774:
        -: 3775:__extension__ extern __inline poly64x1_t
        -: 3776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3777:vreinterpret_p64_u64 (uint64x1_t __a)
        -: 3778:{
        -: 3779:  return (poly64x1_t) __a;
        -: 3780:}
        -: 3781:
        -: 3782:__extension__ extern __inline poly64x1_t
        -: 3783:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3784:vreinterpret_p64_p8 (poly8x8_t __a)
        -: 3785:{
        -: 3786:  return (poly64x1_t) __a;
        -: 3787:}
        -: 3788:
        -: 3789:__extension__ extern __inline poly64x1_t
        -: 3790:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3791:vreinterpret_p64_p16 (poly16x4_t __a)
        -: 3792:{
        -: 3793:  return (poly64x1_t)__a;
        -: 3794:}
        -: 3795:
        -: 3796:__extension__ extern __inline poly64x2_t
        -: 3797:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3798:vreinterpretq_p64_f64 (float64x2_t __a)
        -: 3799:{
        -: 3800:  return (poly64x2_t) __a;
        -: 3801:}
        -: 3802:
        -: 3803:__extension__ extern __inline poly64x2_t
        -: 3804:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3805:vreinterpretq_p64_s8 (int8x16_t __a)
        -: 3806:{
        -: 3807:  return (poly64x2_t) __a;
        -: 3808:}
        -: 3809:
        -: 3810:__extension__ extern __inline poly64x2_t
        -: 3811:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3812:vreinterpretq_p64_s16 (int16x8_t __a)
        -: 3813:{
        -: 3814:  return (poly64x2_t) __a;
        -: 3815:}
        -: 3816:
        -: 3817:__extension__ extern __inline poly64x2_t
        -: 3818:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3819:vreinterpretq_p64_s32 (int32x4_t __a)
        -: 3820:{
        -: 3821:  return (poly64x2_t) __a;
        -: 3822:}
        -: 3823:
        -: 3824:__extension__ extern __inline poly64x2_t
        -: 3825:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3826:vreinterpretq_p64_s64 (int64x2_t __a)
        -: 3827:{
        -: 3828:  return (poly64x2_t) __a;
        -: 3829:}
        -: 3830:
        -: 3831:__extension__ extern __inline poly64x2_t
        -: 3832:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3833:vreinterpretq_p64_f16 (float16x8_t __a)
        -: 3834:{
        -: 3835:  return (poly64x2_t) __a;
        -: 3836:}
        -: 3837:
        -: 3838:__extension__ extern __inline poly64x2_t
        -: 3839:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3840:vreinterpretq_p64_f32 (float32x4_t __a)
        -: 3841:{
        -: 3842:  return (poly64x2_t) __a;
        -: 3843:}
        -: 3844:
        -: 3845:__extension__ extern __inline poly64x2_t
        -: 3846:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3847:vreinterpretq_p64_p128 (poly128_t __a)
        -: 3848:{
        -: 3849:  return (poly64x2_t)__a;
        -: 3850:}
        -: 3851:
        -: 3852:__extension__ extern __inline poly64x2_t
        -: 3853:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3854:vreinterpretq_p64_u8 (uint8x16_t __a)
        -: 3855:{
        -: 3856:  return (poly64x2_t) __a;
        -: 3857:}
        -: 3858:
        -: 3859:__extension__ extern __inline poly64x2_t
        -: 3860:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3861:vreinterpretq_p64_u16 (uint16x8_t __a)
        -: 3862:{
        -: 3863:  return (poly64x2_t) __a;
        -: 3864:}
        -: 3865:
        -: 3866:__extension__ extern __inline poly64x2_t
        -: 3867:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3868:vreinterpretq_p64_p16 (poly16x8_t __a)
        -: 3869:{
        -: 3870:  return (poly64x2_t)__a;
        -: 3871:}
        -: 3872:
        -: 3873:__extension__ extern __inline poly64x2_t
        -: 3874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3875:vreinterpretq_p64_u32 (uint32x4_t __a)
        -: 3876:{
        -: 3877:  return (poly64x2_t) __a;
        -: 3878:}
        -: 3879:
        -: 3880:__extension__ extern __inline poly64x2_t
        -: 3881:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3882:vreinterpretq_p64_u64 (uint64x2_t __a)
        -: 3883:{
        -: 3884:  return (poly64x2_t) __a;
        -: 3885:}
        -: 3886:
        -: 3887:__extension__ extern __inline poly64x2_t
        -: 3888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3889:vreinterpretq_p64_p8 (poly8x16_t __a)
        -: 3890:{
        -: 3891:  return (poly64x2_t) __a;
        -: 3892:}
        -: 3893:
        -: 3894:__extension__ extern __inline poly128_t
        -: 3895:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3896:vreinterpretq_p128_p8 (poly8x16_t __a)
        -: 3897:{
        -: 3898:  return (poly128_t)__a;
        -: 3899:}
        -: 3900:
        -: 3901:__extension__ extern __inline poly128_t
        -: 3902:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3903:vreinterpretq_p128_p16 (poly16x8_t __a)
        -: 3904:{
        -: 3905:  return (poly128_t)__a;
        -: 3906:}
        -: 3907:
        -: 3908:__extension__ extern __inline poly128_t
        -: 3909:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3910:vreinterpretq_p128_f16 (float16x8_t __a)
        -: 3911:{
        -: 3912:  return (poly128_t) __a;
        -: 3913:}
        -: 3914:
        -: 3915:__extension__ extern __inline poly128_t
        -: 3916:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3917:vreinterpretq_p128_f32 (float32x4_t __a)
        -: 3918:{
        -: 3919:  return (poly128_t)__a;
        -: 3920:}
        -: 3921:
        -: 3922:__extension__ extern __inline poly128_t
        -: 3923:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3924:vreinterpretq_p128_p64 (poly64x2_t __a)
        -: 3925:{
        -: 3926:  return (poly128_t)__a;
        -: 3927:}
        -: 3928:
        -: 3929:__extension__ extern __inline poly128_t
        -: 3930:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3931:vreinterpretq_p128_s64 (int64x2_t __a)
        -: 3932:{
        -: 3933:  return (poly128_t)__a;
        -: 3934:}
        -: 3935:
        -: 3936:__extension__ extern __inline poly128_t
        -: 3937:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3938:vreinterpretq_p128_u64 (uint64x2_t __a)
        -: 3939:{
        -: 3940:  return (poly128_t)__a;
        -: 3941:}
        -: 3942:
        -: 3943:__extension__ extern __inline poly128_t
        -: 3944:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3945:vreinterpretq_p128_s8 (int8x16_t __a)
        -: 3946:{
        -: 3947:  return (poly128_t)__a;
        -: 3948:}
        -: 3949:
        -: 3950:__extension__ extern __inline poly128_t
        -: 3951:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3952:vreinterpretq_p128_s16 (int16x8_t __a)
        -: 3953:{
        -: 3954:  return (poly128_t)__a;
        -: 3955:}
        -: 3956:
        -: 3957:__extension__ extern __inline poly128_t
        -: 3958:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3959:vreinterpretq_p128_s32 (int32x4_t __a)
        -: 3960:{
        -: 3961:  return (poly128_t)__a;
        -: 3962:}
        -: 3963:
        -: 3964:__extension__ extern __inline poly128_t
        -: 3965:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3966:vreinterpretq_p128_u8 (uint8x16_t __a)
        -: 3967:{
        -: 3968:  return (poly128_t)__a;
        -: 3969:}
        -: 3970:
        -: 3971:__extension__ extern __inline poly128_t
        -: 3972:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3973:vreinterpretq_p128_u16 (uint16x8_t __a)
        -: 3974:{
        -: 3975:  return (poly128_t)__a;
        -: 3976:}
        -: 3977:
        -: 3978:__extension__ extern __inline poly128_t
        -: 3979:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3980:vreinterpretq_p128_u32 (uint32x4_t __a)
        -: 3981:{
        -: 3982:  return (poly128_t)__a;
        -: 3983:}
        -: 3984:
        -: 3985:__extension__ extern __inline float16x4_t
        -: 3986:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3987:vreinterpret_f16_f64 (float64x1_t __a)
        -: 3988:{
        -: 3989:  return (float16x4_t) __a;
        -: 3990:}
        -: 3991:
        -: 3992:__extension__ extern __inline float16x4_t
        -: 3993:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 3994:vreinterpret_f16_s8 (int8x8_t __a)
        -: 3995:{
        -: 3996:  return (float16x4_t) __a;
        -: 3997:}
        -: 3998:
        -: 3999:__extension__ extern __inline float16x4_t
        -: 4000:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4001:vreinterpret_f16_s16 (int16x4_t __a)
        -: 4002:{
        -: 4003:  return (float16x4_t) __a;
        -: 4004:}
        -: 4005:
        -: 4006:__extension__ extern __inline float16x4_t
        -: 4007:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4008:vreinterpret_f16_s32 (int32x2_t __a)
        -: 4009:{
        -: 4010:  return (float16x4_t) __a;
        -: 4011:}
        -: 4012:
        -: 4013:__extension__ extern __inline float16x4_t
        -: 4014:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4015:vreinterpret_f16_s64 (int64x1_t __a)
        -: 4016:{
        -: 4017:  return (float16x4_t) __a;
        -: 4018:}
        -: 4019:
        -: 4020:__extension__ extern __inline float16x4_t
        -: 4021:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4022:vreinterpret_f16_f32 (float32x2_t __a)
        -: 4023:{
        -: 4024:  return (float16x4_t) __a;
        -: 4025:}
        -: 4026:
        -: 4027:__extension__ extern __inline float16x4_t
        -: 4028:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4029:vreinterpret_f16_u8 (uint8x8_t __a)
        -: 4030:{
        -: 4031:  return (float16x4_t) __a;
        -: 4032:}
        -: 4033:
        -: 4034:__extension__ extern __inline float16x4_t
        -: 4035:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4036:vreinterpret_f16_u16 (uint16x4_t __a)
        -: 4037:{
        -: 4038:  return (float16x4_t) __a;
        -: 4039:}
        -: 4040:
        -: 4041:__extension__ extern __inline float16x4_t
        -: 4042:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4043:vreinterpret_f16_u32 (uint32x2_t __a)
        -: 4044:{
        -: 4045:  return (float16x4_t) __a;
        -: 4046:}
        -: 4047:
        -: 4048:__extension__ extern __inline float16x4_t
        -: 4049:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4050:vreinterpret_f16_u64 (uint64x1_t __a)
        -: 4051:{
        -: 4052:  return (float16x4_t) __a;
        -: 4053:}
        -: 4054:
        -: 4055:__extension__ extern __inline float16x4_t
        -: 4056:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4057:vreinterpret_f16_p8 (poly8x8_t __a)
        -: 4058:{
        -: 4059:  return (float16x4_t) __a;
        -: 4060:}
        -: 4061:
        -: 4062:__extension__ extern __inline float16x4_t
        -: 4063:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4064:vreinterpret_f16_p16 (poly16x4_t __a)
        -: 4065:{
        -: 4066:  return (float16x4_t) __a;
        -: 4067:}
        -: 4068:
        -: 4069:__extension__ extern __inline float16x4_t
        -: 4070:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4071:vreinterpret_f16_p64 (poly64x1_t __a)
        -: 4072:{
        -: 4073:  return (float16x4_t) __a;
        -: 4074:}
        -: 4075:
        -: 4076:__extension__ extern __inline float16x8_t
        -: 4077:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4078:vreinterpretq_f16_f64 (float64x2_t __a)
        -: 4079:{
        -: 4080:  return (float16x8_t) __a;
        -: 4081:}
        -: 4082:
        -: 4083:__extension__ extern __inline float16x8_t
        -: 4084:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4085:vreinterpretq_f16_s8 (int8x16_t __a)
        -: 4086:{
        -: 4087:  return (float16x8_t) __a;
        -: 4088:}
        -: 4089:
        -: 4090:__extension__ extern __inline float16x8_t
        -: 4091:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4092:vreinterpretq_f16_s16 (int16x8_t __a)
        -: 4093:{
        -: 4094:  return (float16x8_t) __a;
        -: 4095:}
        -: 4096:
        -: 4097:__extension__ extern __inline float16x8_t
        -: 4098:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4099:vreinterpretq_f16_s32 (int32x4_t __a)
        -: 4100:{
        -: 4101:  return (float16x8_t) __a;
        -: 4102:}
        -: 4103:
        -: 4104:__extension__ extern __inline float16x8_t
        -: 4105:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4106:vreinterpretq_f16_s64 (int64x2_t __a)
        -: 4107:{
        -: 4108:  return (float16x8_t) __a;
        -: 4109:}
        -: 4110:
        -: 4111:__extension__ extern __inline float16x8_t
        -: 4112:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4113:vreinterpretq_f16_f32 (float32x4_t __a)
        -: 4114:{
        -: 4115:  return (float16x8_t) __a;
        -: 4116:}
        -: 4117:
        -: 4118:__extension__ extern __inline float16x8_t
        -: 4119:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4120:vreinterpretq_f16_u8 (uint8x16_t __a)
        -: 4121:{
        -: 4122:  return (float16x8_t) __a;
        -: 4123:}
        -: 4124:
        -: 4125:__extension__ extern __inline float16x8_t
        -: 4126:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4127:vreinterpretq_f16_u16 (uint16x8_t __a)
        -: 4128:{
        -: 4129:  return (float16x8_t) __a;
        -: 4130:}
        -: 4131:
        -: 4132:__extension__ extern __inline float16x8_t
        -: 4133:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4134:vreinterpretq_f16_u32 (uint32x4_t __a)
        -: 4135:{
        -: 4136:  return (float16x8_t) __a;
        -: 4137:}
        -: 4138:
        -: 4139:__extension__ extern __inline float16x8_t
        -: 4140:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4141:vreinterpretq_f16_u64 (uint64x2_t __a)
        -: 4142:{
        -: 4143:  return (float16x8_t) __a;
        -: 4144:}
        -: 4145:
        -: 4146:__extension__ extern __inline float16x8_t
        -: 4147:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4148:vreinterpretq_f16_p8 (poly8x16_t __a)
        -: 4149:{
        -: 4150:  return (float16x8_t) __a;
        -: 4151:}
        -: 4152:
        -: 4153:__extension__ extern __inline float16x8_t
        -: 4154:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4155:vreinterpretq_f16_p128 (poly128_t __a)
        -: 4156:{
        -: 4157:  return (float16x8_t) __a;
        -: 4158:}
        -: 4159:
        -: 4160:__extension__ extern __inline float16x8_t
        -: 4161:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4162:vreinterpretq_f16_p16 (poly16x8_t __a)
        -: 4163:{
        -: 4164:  return (float16x8_t) __a;
        -: 4165:}
        -: 4166:
        -: 4167:__extension__ extern __inline float16x8_t
        -: 4168:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4169:vreinterpretq_f16_p64 (poly64x2_t __a)
        -: 4170:{
        -: 4171:  return (float16x8_t) __a;
        -: 4172:}
        -: 4173:
        -: 4174:__extension__ extern __inline float32x2_t
        -: 4175:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4176:vreinterpret_f32_f16 (float16x4_t __a)
        -: 4177:{
        -: 4178:  return (float32x2_t) __a;
        -: 4179:}
        -: 4180:
        -: 4181:__extension__ extern __inline float32x2_t
        -: 4182:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4183:vreinterpret_f32_f64 (float64x1_t __a)
        -: 4184:{
        -: 4185:  return (float32x2_t) __a;
        -: 4186:}
        -: 4187:
        -: 4188:__extension__ extern __inline float32x2_t
        -: 4189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4190:vreinterpret_f32_s8 (int8x8_t __a)
        -: 4191:{
        -: 4192:  return (float32x2_t) __a;
        -: 4193:}
        -: 4194:
        -: 4195:__extension__ extern __inline float32x2_t
        -: 4196:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4197:vreinterpret_f32_s16 (int16x4_t __a)
        -: 4198:{
        -: 4199:  return (float32x2_t) __a;
        -: 4200:}
        -: 4201:
        -: 4202:__extension__ extern __inline float32x2_t
        -: 4203:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4204:vreinterpret_f32_s32 (int32x2_t __a)
        -: 4205:{
        -: 4206:  return (float32x2_t) __a;
        -: 4207:}
        -: 4208:
        -: 4209:__extension__ extern __inline float32x2_t
        -: 4210:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4211:vreinterpret_f32_s64 (int64x1_t __a)
        -: 4212:{
        -: 4213:  return (float32x2_t) __a;
        -: 4214:}
        -: 4215:
        -: 4216:__extension__ extern __inline float32x2_t
        -: 4217:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4218:vreinterpret_f32_u8 (uint8x8_t __a)
        -: 4219:{
        -: 4220:  return (float32x2_t) __a;
        -: 4221:}
        -: 4222:
        -: 4223:__extension__ extern __inline float32x2_t
        -: 4224:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4225:vreinterpret_f32_u16 (uint16x4_t __a)
        -: 4226:{
        -: 4227:  return (float32x2_t) __a;
        -: 4228:}
        -: 4229:
        -: 4230:__extension__ extern __inline float32x2_t
        -: 4231:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4232:vreinterpret_f32_u32 (uint32x2_t __a)
        -: 4233:{
        -: 4234:  return (float32x2_t) __a;
        -: 4235:}
        -: 4236:
        -: 4237:__extension__ extern __inline float32x2_t
        -: 4238:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4239:vreinterpret_f32_u64 (uint64x1_t __a)
        -: 4240:{
        -: 4241:  return (float32x2_t) __a;
        -: 4242:}
        -: 4243:
        -: 4244:__extension__ extern __inline float32x2_t
        -: 4245:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4246:vreinterpret_f32_p8 (poly8x8_t __a)
        -: 4247:{
        -: 4248:  return (float32x2_t) __a;
        -: 4249:}
        -: 4250:
        -: 4251:__extension__ extern __inline float32x2_t
        -: 4252:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4253:vreinterpret_f32_p16 (poly16x4_t __a)
        -: 4254:{
        -: 4255:  return (float32x2_t) __a;
        -: 4256:}
        -: 4257:
        -: 4258:__extension__ extern __inline float32x2_t
        -: 4259:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4260:vreinterpret_f32_p64 (poly64x1_t __a)
        -: 4261:{
        -: 4262:  return (float32x2_t) __a;
        -: 4263:}
        -: 4264:
        -: 4265:__extension__ extern __inline float32x4_t
        -: 4266:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4267:vreinterpretq_f32_f16 (float16x8_t __a)
        -: 4268:{
        -: 4269:  return (float32x4_t) __a;
        -: 4270:}
        -: 4271:
        -: 4272:__extension__ extern __inline float32x4_t
        -: 4273:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4274:vreinterpretq_f32_f64 (float64x2_t __a)
        -: 4275:{
        -: 4276:  return (float32x4_t) __a;
        -: 4277:}
        -: 4278:
        -: 4279:__extension__ extern __inline float32x4_t
        -: 4280:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4281:vreinterpretq_f32_s8 (int8x16_t __a)
        -: 4282:{
        -: 4283:  return (float32x4_t) __a;
        -: 4284:}
        -: 4285:
        -: 4286:__extension__ extern __inline float32x4_t
        -: 4287:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4288:vreinterpretq_f32_s16 (int16x8_t __a)
        -: 4289:{
        -: 4290:  return (float32x4_t) __a;
        -: 4291:}
        -: 4292:
        -: 4293:__extension__ extern __inline float32x4_t
        -: 4294:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4295:vreinterpretq_f32_s32 (int32x4_t __a)
        -: 4296:{
        -: 4297:  return (float32x4_t) __a;
        -: 4298:}
        -: 4299:
        -: 4300:__extension__ extern __inline float32x4_t
        -: 4301:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4302:vreinterpretq_f32_s64 (int64x2_t __a)
        -: 4303:{
        -: 4304:  return (float32x4_t) __a;
        -: 4305:}
        -: 4306:
        -: 4307:__extension__ extern __inline float32x4_t
        -: 4308:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4309:vreinterpretq_f32_u8 (uint8x16_t __a)
        -: 4310:{
        -: 4311:  return (float32x4_t) __a;
        -: 4312:}
        -: 4313:
        -: 4314:__extension__ extern __inline float32x4_t
        -: 4315:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4316:vreinterpretq_f32_u16 (uint16x8_t __a)
        -: 4317:{
        -: 4318:  return (float32x4_t) __a;
        -: 4319:}
        -: 4320:
        -: 4321:__extension__ extern __inline float32x4_t
        -: 4322:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4323:vreinterpretq_f32_u32 (uint32x4_t __a)
        -: 4324:{
        -: 4325:  return (float32x4_t) __a;
        -: 4326:}
        -: 4327:
        -: 4328:__extension__ extern __inline float32x4_t
        -: 4329:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4330:vreinterpretq_f32_u64 (uint64x2_t __a)
        -: 4331:{
        -: 4332:  return (float32x4_t) __a;
        -: 4333:}
        -: 4334:
        -: 4335:__extension__ extern __inline float32x4_t
        -: 4336:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4337:vreinterpretq_f32_p8 (poly8x16_t __a)
        -: 4338:{
        -: 4339:  return (float32x4_t) __a;
        -: 4340:}
        -: 4341:
        -: 4342:__extension__ extern __inline float32x4_t
        -: 4343:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4344:vreinterpretq_f32_p16 (poly16x8_t __a)
        -: 4345:{
        -: 4346:  return (float32x4_t) __a;
        -: 4347:}
        -: 4348:
        -: 4349:__extension__ extern __inline float32x4_t
        -: 4350:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4351:vreinterpretq_f32_p64 (poly64x2_t __a)
        -: 4352:{
        -: 4353:  return (float32x4_t) __a;
        -: 4354:}
        -: 4355:
        -: 4356:__extension__ extern __inline float32x4_t
        -: 4357:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4358:vreinterpretq_f32_p128 (poly128_t __a)
        -: 4359:{
        -: 4360:  return (float32x4_t)__a;
        -: 4361:}
        -: 4362:
        -: 4363:
        -: 4364:__extension__ extern __inline float64x1_t
        -: 4365:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4366:vreinterpret_f64_f16 (float16x4_t __a)
        -: 4367:{
        -: 4368:  return (float64x1_t) __a;
        -: 4369:}
        -: 4370:
        -: 4371:__extension__ extern __inline float64x1_t
        -: 4372:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4373:vreinterpret_f64_f32 (float32x2_t __a)
        -: 4374:{
        -: 4375:  return (float64x1_t) __a;
        -: 4376:}
        -: 4377:
        -: 4378:__extension__ extern __inline float64x1_t
        -: 4379:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4380:vreinterpret_f64_p8 (poly8x8_t __a)
        -: 4381:{
        -: 4382:  return (float64x1_t) __a;
        -: 4383:}
        -: 4384:
        -: 4385:__extension__ extern __inline float64x1_t
        -: 4386:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4387:vreinterpret_f64_p16 (poly16x4_t __a)
        -: 4388:{
        -: 4389:  return (float64x1_t) __a;
        -: 4390:}
        -: 4391:
        -: 4392:__extension__ extern __inline float64x1_t
        -: 4393:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4394:vreinterpret_f64_p64 (poly64x1_t __a)
        -: 4395:{
        -: 4396:  return (float64x1_t) __a;
        -: 4397:}
        -: 4398:
        -: 4399:__extension__ extern __inline float64x1_t
        -: 4400:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4401:vreinterpret_f64_s8 (int8x8_t __a)
        -: 4402:{
        -: 4403:  return (float64x1_t) __a;
        -: 4404:}
        -: 4405:
        -: 4406:__extension__ extern __inline float64x1_t
        -: 4407:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4408:vreinterpret_f64_s16 (int16x4_t __a)
        -: 4409:{
        -: 4410:  return (float64x1_t) __a;
        -: 4411:}
        -: 4412:
        -: 4413:__extension__ extern __inline float64x1_t
        -: 4414:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4415:vreinterpret_f64_s32 (int32x2_t __a)
        -: 4416:{
        -: 4417:  return (float64x1_t) __a;
        -: 4418:}
        -: 4419:
        -: 4420:__extension__ extern __inline float64x1_t
        -: 4421:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4422:vreinterpret_f64_s64 (int64x1_t __a)
        -: 4423:{
        -: 4424:  return (float64x1_t) __a;
        -: 4425:}
        -: 4426:
        -: 4427:__extension__ extern __inline float64x1_t
        -: 4428:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4429:vreinterpret_f64_u8 (uint8x8_t __a)
        -: 4430:{
        -: 4431:  return (float64x1_t) __a;
        -: 4432:}
        -: 4433:
        -: 4434:__extension__ extern __inline float64x1_t
        -: 4435:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4436:vreinterpret_f64_u16 (uint16x4_t __a)
        -: 4437:{
        -: 4438:  return (float64x1_t) __a;
        -: 4439:}
        -: 4440:
        -: 4441:__extension__ extern __inline float64x1_t
        -: 4442:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4443:vreinterpret_f64_u32 (uint32x2_t __a)
        -: 4444:{
        -: 4445:  return (float64x1_t) __a;
        -: 4446:}
        -: 4447:
        -: 4448:__extension__ extern __inline float64x1_t
        -: 4449:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4450:vreinterpret_f64_u64 (uint64x1_t __a)
        -: 4451:{
        -: 4452:  return (float64x1_t) __a;
        -: 4453:}
        -: 4454:
        -: 4455:__extension__ extern __inline float64x2_t
        -: 4456:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4457:vreinterpretq_f64_f16 (float16x8_t __a)
        -: 4458:{
        -: 4459:  return (float64x2_t) __a;
        -: 4460:}
        -: 4461:
        -: 4462:__extension__ extern __inline float64x2_t
        -: 4463:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4464:vreinterpretq_f64_f32 (float32x4_t __a)
        -: 4465:{
        -: 4466:  return (float64x2_t) __a;
        -: 4467:}
        -: 4468:
        -: 4469:__extension__ extern __inline float64x2_t
        -: 4470:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4471:vreinterpretq_f64_p8 (poly8x16_t __a)
        -: 4472:{
        -: 4473:  return (float64x2_t) __a;
        -: 4474:}
        -: 4475:
        -: 4476:__extension__ extern __inline float64x2_t
        -: 4477:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4478:vreinterpretq_f64_p16 (poly16x8_t __a)
        -: 4479:{
        -: 4480:  return (float64x2_t) __a;
        -: 4481:}
        -: 4482:
        -: 4483:__extension__ extern __inline float64x2_t
        -: 4484:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4485:vreinterpretq_f64_p64 (poly64x2_t __a)
        -: 4486:{
        -: 4487:  return (float64x2_t) __a;
        -: 4488:}
        -: 4489:
        -: 4490:__extension__ extern __inline float64x2_t
        -: 4491:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4492:vreinterpretq_f64_s8 (int8x16_t __a)
        -: 4493:{
        -: 4494:  return (float64x2_t) __a;
        -: 4495:}
        -: 4496:
        -: 4497:__extension__ extern __inline float64x2_t
        -: 4498:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4499:vreinterpretq_f64_s16 (int16x8_t __a)
        -: 4500:{
        -: 4501:  return (float64x2_t) __a;
        -: 4502:}
        -: 4503:
        -: 4504:__extension__ extern __inline float64x2_t
        -: 4505:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4506:vreinterpretq_f64_s32 (int32x4_t __a)
        -: 4507:{
        -: 4508:  return (float64x2_t) __a;
        -: 4509:}
        -: 4510:
        -: 4511:__extension__ extern __inline float64x2_t
        -: 4512:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4513:vreinterpretq_f64_s64 (int64x2_t __a)
        -: 4514:{
        -: 4515:  return (float64x2_t) __a;
        -: 4516:}
        -: 4517:
        -: 4518:__extension__ extern __inline float64x2_t
        -: 4519:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4520:vreinterpretq_f64_u8 (uint8x16_t __a)
        -: 4521:{
        -: 4522:  return (float64x2_t) __a;
        -: 4523:}
        -: 4524:
        -: 4525:__extension__ extern __inline float64x2_t
        -: 4526:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4527:vreinterpretq_f64_u16 (uint16x8_t __a)
        -: 4528:{
        -: 4529:  return (float64x2_t) __a;
        -: 4530:}
        -: 4531:
        -: 4532:__extension__ extern __inline float64x2_t
        -: 4533:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4534:vreinterpretq_f64_u32 (uint32x4_t __a)
        -: 4535:{
        -: 4536:  return (float64x2_t) __a;
        -: 4537:}
        -: 4538:
        -: 4539:__extension__ extern __inline float64x2_t
        -: 4540:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4541:vreinterpretq_f64_u64 (uint64x2_t __a)
        -: 4542:{
        -: 4543:  return (float64x2_t) __a;
        -: 4544:}
        -: 4545:
        -: 4546:__extension__ extern __inline int64x1_t
        -: 4547:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4548:vreinterpret_s64_f16 (float16x4_t __a)
        -: 4549:{
        -: 4550:  return (int64x1_t) __a;
        -: 4551:}
        -: 4552:
        -: 4553:__extension__ extern __inline int64x1_t
        -: 4554:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4555:vreinterpret_s64_f64 (float64x1_t __a)
        -: 4556:{
        -: 4557:  return (int64x1_t) __a;
        -: 4558:}
        -: 4559:
        -: 4560:__extension__ extern __inline int64x1_t
        -: 4561:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4562:vreinterpret_s64_s8 (int8x8_t __a)
        -: 4563:{
        -: 4564:  return (int64x1_t) __a;
        -: 4565:}
        -: 4566:
        -: 4567:__extension__ extern __inline int64x1_t
        -: 4568:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4569:vreinterpret_s64_s16 (int16x4_t __a)
        -: 4570:{
        -: 4571:  return (int64x1_t) __a;
        -: 4572:}
        -: 4573:
        -: 4574:__extension__ extern __inline int64x1_t
        -: 4575:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4576:vreinterpret_s64_s32 (int32x2_t __a)
        -: 4577:{
        -: 4578:  return (int64x1_t) __a;
        -: 4579:}
        -: 4580:
        -: 4581:__extension__ extern __inline int64x1_t
        -: 4582:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4583:vreinterpret_s64_f32 (float32x2_t __a)
        -: 4584:{
        -: 4585:  return (int64x1_t) __a;
        -: 4586:}
        -: 4587:
        -: 4588:__extension__ extern __inline int64x1_t
        -: 4589:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4590:vreinterpret_s64_u8 (uint8x8_t __a)
        -: 4591:{
        -: 4592:  return (int64x1_t) __a;
        -: 4593:}
        -: 4594:
        -: 4595:__extension__ extern __inline int64x1_t
        -: 4596:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4597:vreinterpret_s64_u16 (uint16x4_t __a)
        -: 4598:{
        -: 4599:  return (int64x1_t) __a;
        -: 4600:}
        -: 4601:
        -: 4602:__extension__ extern __inline int64x1_t
        -: 4603:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4604:vreinterpret_s64_u32 (uint32x2_t __a)
        -: 4605:{
        -: 4606:  return (int64x1_t) __a;
        -: 4607:}
        -: 4608:
        -: 4609:__extension__ extern __inline int64x1_t
        -: 4610:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4611:vreinterpret_s64_u64 (uint64x1_t __a)
        -: 4612:{
        -: 4613:  return (int64x1_t) __a;
        -: 4614:}
        -: 4615:
        -: 4616:__extension__ extern __inline int64x1_t
        -: 4617:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4618:vreinterpret_s64_p8 (poly8x8_t __a)
        -: 4619:{
        -: 4620:  return (int64x1_t) __a;
        -: 4621:}
        -: 4622:
        -: 4623:__extension__ extern __inline int64x1_t
        -: 4624:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4625:vreinterpret_s64_p16 (poly16x4_t __a)
        -: 4626:{
        -: 4627:  return (int64x1_t) __a;
        -: 4628:}
        -: 4629:
        -: 4630:__extension__ extern __inline int64x1_t
        -: 4631:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4632:vreinterpret_s64_p64 (poly64x1_t __a)
        -: 4633:{
        -: 4634:  return (int64x1_t) __a;
        -: 4635:}
        -: 4636:
        -: 4637:__extension__ extern __inline int64x2_t
        -: 4638:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4639:vreinterpretq_s64_f64 (float64x2_t __a)
        -: 4640:{
        -: 4641:  return (int64x2_t) __a;
        -: 4642:}
        -: 4643:
        -: 4644:__extension__ extern __inline int64x2_t
        -: 4645:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4646:vreinterpretq_s64_s8 (int8x16_t __a)
        -: 4647:{
        -: 4648:  return (int64x2_t) __a;
        -: 4649:}
        -: 4650:
        -: 4651:__extension__ extern __inline int64x2_t
        -: 4652:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4653:vreinterpretq_s64_s16 (int16x8_t __a)
        -: 4654:{
        -: 4655:  return (int64x2_t) __a;
        -: 4656:}
        -: 4657:
        -: 4658:__extension__ extern __inline int64x2_t
        -: 4659:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4660:vreinterpretq_s64_s32 (int32x4_t __a)
        -: 4661:{
        -: 4662:  return (int64x2_t) __a;
        -: 4663:}
        -: 4664:
        -: 4665:__extension__ extern __inline int64x2_t
        -: 4666:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4667:vreinterpretq_s64_f16 (float16x8_t __a)
        -: 4668:{
        -: 4669:  return (int64x2_t) __a;
        -: 4670:}
        -: 4671:
        -: 4672:__extension__ extern __inline int64x2_t
        -: 4673:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4674:vreinterpretq_s64_f32 (float32x4_t __a)
        -: 4675:{
        -: 4676:  return (int64x2_t) __a;
        -: 4677:}
        -: 4678:
        -: 4679:__extension__ extern __inline int64x2_t
        -: 4680:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4681:vreinterpretq_s64_u8 (uint8x16_t __a)
        -: 4682:{
        -: 4683:  return (int64x2_t) __a;
        -: 4684:}
        -: 4685:
        -: 4686:__extension__ extern __inline int64x2_t
        -: 4687:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4688:vreinterpretq_s64_u16 (uint16x8_t __a)
        -: 4689:{
        -: 4690:  return (int64x2_t) __a;
        -: 4691:}
        -: 4692:
        -: 4693:__extension__ extern __inline int64x2_t
        -: 4694:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4695:vreinterpretq_s64_u32 (uint32x4_t __a)
        -: 4696:{
        -: 4697:  return (int64x2_t) __a;
        -: 4698:}
        -: 4699:
        -: 4700:__extension__ extern __inline int64x2_t
        -: 4701:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4702:vreinterpretq_s64_u64 (uint64x2_t __a)
        -: 4703:{
        -: 4704:  return (int64x2_t) __a;
        -: 4705:}
        -: 4706:
        -: 4707:__extension__ extern __inline int64x2_t
        -: 4708:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4709:vreinterpretq_s64_p8 (poly8x16_t __a)
        -: 4710:{
        -: 4711:  return (int64x2_t) __a;
        -: 4712:}
        -: 4713:
        -: 4714:__extension__ extern __inline int64x2_t
        -: 4715:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4716:vreinterpretq_s64_p16 (poly16x8_t __a)
        -: 4717:{
        -: 4718:  return (int64x2_t) __a;
        -: 4719:}
        -: 4720:
        -: 4721:__extension__ extern __inline int64x2_t
        -: 4722:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4723:vreinterpretq_s64_p64 (poly64x2_t __a)
        -: 4724:{
        -: 4725:  return (int64x2_t) __a;
        -: 4726:}
        -: 4727:
        -: 4728:__extension__ extern __inline int64x2_t
        -: 4729:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4730:vreinterpretq_s64_p128 (poly128_t __a)
        -: 4731:{
        -: 4732:  return (int64x2_t)__a;
        -: 4733:}
        -: 4734:
        -: 4735:__extension__ extern __inline uint64x1_t
        -: 4736:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4737:vreinterpret_u64_f16 (float16x4_t __a)
        -: 4738:{
        -: 4739:  return (uint64x1_t) __a;
        -: 4740:}
        -: 4741:
        -: 4742:__extension__ extern __inline uint64x1_t
        -: 4743:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4744:vreinterpret_u64_f64 (float64x1_t __a)
        -: 4745:{
        -: 4746:  return (uint64x1_t) __a;
        -: 4747:}
        -: 4748:
        -: 4749:__extension__ extern __inline uint64x1_t
        -: 4750:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4751:vreinterpret_u64_s8 (int8x8_t __a)
        -: 4752:{
        -: 4753:  return (uint64x1_t) __a;
        -: 4754:}
        -: 4755:
        -: 4756:__extension__ extern __inline uint64x1_t
        -: 4757:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4758:vreinterpret_u64_s16 (int16x4_t __a)
        -: 4759:{
        -: 4760:  return (uint64x1_t) __a;
        -: 4761:}
        -: 4762:
        -: 4763:__extension__ extern __inline uint64x1_t
        -: 4764:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4765:vreinterpret_u64_s32 (int32x2_t __a)
        -: 4766:{
        -: 4767:  return (uint64x1_t) __a;
        -: 4768:}
        -: 4769:
        -: 4770:__extension__ extern __inline uint64x1_t
        -: 4771:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4772:vreinterpret_u64_s64 (int64x1_t __a)
        -: 4773:{
        -: 4774:  return (uint64x1_t) __a;
        -: 4775:}
        -: 4776:
        -: 4777:__extension__ extern __inline uint64x1_t
        -: 4778:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4779:vreinterpret_u64_f32 (float32x2_t __a)
        -: 4780:{
        -: 4781:  return (uint64x1_t) __a;
        -: 4782:}
        -: 4783:
        -: 4784:__extension__ extern __inline uint64x1_t
        -: 4785:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4786:vreinterpret_u64_u8 (uint8x8_t __a)
        -: 4787:{
        -: 4788:  return (uint64x1_t) __a;
        -: 4789:}
        -: 4790:
        -: 4791:__extension__ extern __inline uint64x1_t
        -: 4792:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4793:vreinterpret_u64_u16 (uint16x4_t __a)
        -: 4794:{
        -: 4795:  return (uint64x1_t) __a;
        -: 4796:}
        -: 4797:
        -: 4798:__extension__ extern __inline uint64x1_t
        -: 4799:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4800:vreinterpret_u64_u32 (uint32x2_t __a)
        -: 4801:{
        -: 4802:  return (uint64x1_t) __a;
        -: 4803:}
        -: 4804:
        -: 4805:__extension__ extern __inline uint64x1_t
        -: 4806:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4807:vreinterpret_u64_p8 (poly8x8_t __a)
        -: 4808:{
        -: 4809:  return (uint64x1_t) __a;
        -: 4810:}
        -: 4811:
        -: 4812:__extension__ extern __inline uint64x1_t
        -: 4813:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4814:vreinterpret_u64_p16 (poly16x4_t __a)
        -: 4815:{
        -: 4816:  return (uint64x1_t) __a;
        -: 4817:}
        -: 4818:
        -: 4819:__extension__ extern __inline uint64x1_t
        -: 4820:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4821:vreinterpret_u64_p64 (poly64x1_t __a)
        -: 4822:{
        -: 4823:  return (uint64x1_t) __a;
        -: 4824:}
        -: 4825:
        -: 4826:__extension__ extern __inline uint64x2_t
        -: 4827:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4828:vreinterpretq_u64_f64 (float64x2_t __a)
        -: 4829:{
        -: 4830:  return (uint64x2_t) __a;
        -: 4831:}
        -: 4832:
        -: 4833:__extension__ extern __inline uint64x2_t
        -: 4834:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4835:vreinterpretq_u64_s8 (int8x16_t __a)
        -: 4836:{
        -: 4837:  return (uint64x2_t) __a;
        -: 4838:}
        -: 4839:
        -: 4840:__extension__ extern __inline uint64x2_t
        -: 4841:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4842:vreinterpretq_u64_s16 (int16x8_t __a)
        -: 4843:{
783776016: 4844:  return (uint64x2_t) __a;
        -: 4845:}
        -: 4846:
        -: 4847:__extension__ extern __inline uint64x2_t
        -: 4848:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4849:vreinterpretq_u64_s32 (int32x4_t __a)
        -: 4850:{
        -: 4851:  return (uint64x2_t) __a;
        -: 4852:}
        -: 4853:
        -: 4854:__extension__ extern __inline uint64x2_t
        -: 4855:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4856:vreinterpretq_u64_s64 (int64x2_t __a)
        -: 4857:{
        -: 4858:  return (uint64x2_t) __a;
        -: 4859:}
        -: 4860:
        -: 4861:__extension__ extern __inline uint64x2_t
        -: 4862:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4863:vreinterpretq_u64_f16 (float16x8_t __a)
        -: 4864:{
        -: 4865:  return (uint64x2_t) __a;
        -: 4866:}
        -: 4867:
        -: 4868:__extension__ extern __inline uint64x2_t
        -: 4869:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4870:vreinterpretq_u64_f32 (float32x4_t __a)
        -: 4871:{
        -: 4872:  return (uint64x2_t) __a;
        -: 4873:}
        -: 4874:
        -: 4875:__extension__ extern __inline uint64x2_t
        -: 4876:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4877:vreinterpretq_u64_u8 (uint8x16_t __a)
        -: 4878:{
        -: 4879:  return (uint64x2_t) __a;
        -: 4880:}
        -: 4881:
        -: 4882:__extension__ extern __inline uint64x2_t
        -: 4883:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4884:vreinterpretq_u64_u16 (uint16x8_t __a)
        -: 4885:{
        -: 4886:  return (uint64x2_t) __a;
        -: 4887:}
        -: 4888:
        -: 4889:__extension__ extern __inline uint64x2_t
        -: 4890:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4891:vreinterpretq_u64_u32 (uint32x4_t __a)
        -: 4892:{
        -: 4893:  return (uint64x2_t) __a;
        -: 4894:}
        -: 4895:
        -: 4896:__extension__ extern __inline uint64x2_t
        -: 4897:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4898:vreinterpretq_u64_p8 (poly8x16_t __a)
        -: 4899:{
        -: 4900:  return (uint64x2_t) __a;
        -: 4901:}
        -: 4902:
        -: 4903:__extension__ extern __inline uint64x2_t
        -: 4904:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4905:vreinterpretq_u64_p16 (poly16x8_t __a)
        -: 4906:{
        -: 4907:  return (uint64x2_t) __a;
        -: 4908:}
        -: 4909:
        -: 4910:__extension__ extern __inline uint64x2_t
        -: 4911:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4912:vreinterpretq_u64_p64 (poly64x2_t __a)
        -: 4913:{
        -: 4914:  return (uint64x2_t) __a;
        -: 4915:}
        -: 4916:
        -: 4917:__extension__ extern __inline uint64x2_t
        -: 4918:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4919:vreinterpretq_u64_p128 (poly128_t __a)
        -: 4920:{
        -: 4921:  return (uint64x2_t)__a;
        -: 4922:}
        -: 4923:
        -: 4924:__extension__ extern __inline int8x8_t
        -: 4925:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4926:vreinterpret_s8_f16 (float16x4_t __a)
        -: 4927:{
        -: 4928:  return (int8x8_t) __a;
        -: 4929:}
        -: 4930:
        -: 4931:__extension__ extern __inline int8x8_t
        -: 4932:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4933:vreinterpret_s8_f64 (float64x1_t __a)
        -: 4934:{
        -: 4935:  return (int8x8_t) __a;
        -: 4936:}
        -: 4937:
        -: 4938:__extension__ extern __inline int8x8_t
        -: 4939:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4940:vreinterpret_s8_s16 (int16x4_t __a)
        -: 4941:{
        -: 4942:  return (int8x8_t) __a;
        -: 4943:}
        -: 4944:
        -: 4945:__extension__ extern __inline int8x8_t
        -: 4946:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4947:vreinterpret_s8_s32 (int32x2_t __a)
        -: 4948:{
        -: 4949:  return (int8x8_t) __a;
        -: 4950:}
        -: 4951:
        -: 4952:__extension__ extern __inline int8x8_t
        -: 4953:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4954:vreinterpret_s8_s64 (int64x1_t __a)
        -: 4955:{
        -: 4956:  return (int8x8_t) __a;
        -: 4957:}
        -: 4958:
        -: 4959:__extension__ extern __inline int8x8_t
        -: 4960:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4961:vreinterpret_s8_f32 (float32x2_t __a)
        -: 4962:{
        -: 4963:  return (int8x8_t) __a;
        -: 4964:}
        -: 4965:
        -: 4966:__extension__ extern __inline int8x8_t
        -: 4967:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4968:vreinterpret_s8_u8 (uint8x8_t __a)
        -: 4969:{
        -: 4970:  return (int8x8_t) __a;
        -: 4971:}
        -: 4972:
        -: 4973:__extension__ extern __inline int8x8_t
        -: 4974:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4975:vreinterpret_s8_u16 (uint16x4_t __a)
        -: 4976:{
        -: 4977:  return (int8x8_t) __a;
        -: 4978:}
        -: 4979:
        -: 4980:__extension__ extern __inline int8x8_t
        -: 4981:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4982:vreinterpret_s8_u32 (uint32x2_t __a)
        -: 4983:{
        -: 4984:  return (int8x8_t) __a;
        -: 4985:}
        -: 4986:
        -: 4987:__extension__ extern __inline int8x8_t
        -: 4988:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4989:vreinterpret_s8_u64 (uint64x1_t __a)
        -: 4990:{
        -: 4991:  return (int8x8_t) __a;
        -: 4992:}
        -: 4993:
        -: 4994:__extension__ extern __inline int8x8_t
        -: 4995:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 4996:vreinterpret_s8_p8 (poly8x8_t __a)
        -: 4997:{
        -: 4998:  return (int8x8_t) __a;
        -: 4999:}
        -: 5000:
        -: 5001:__extension__ extern __inline int8x8_t
        -: 5002:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5003:vreinterpret_s8_p16 (poly16x4_t __a)
        -: 5004:{
        -: 5005:  return (int8x8_t) __a;
        -: 5006:}
        -: 5007:
        -: 5008:__extension__ extern __inline int8x8_t
        -: 5009:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5010:vreinterpret_s8_p64 (poly64x1_t __a)
        -: 5011:{
        -: 5012:  return (int8x8_t) __a;
        -: 5013:}
        -: 5014:
        -: 5015:__extension__ extern __inline int8x16_t
        -: 5016:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5017:vreinterpretq_s8_f64 (float64x2_t __a)
        -: 5018:{
        -: 5019:  return (int8x16_t) __a;
        -: 5020:}
        -: 5021:
        -: 5022:__extension__ extern __inline int8x16_t
        -: 5023:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5024:vreinterpretq_s8_s16 (int16x8_t __a)
        -: 5025:{
        -: 5026:  return (int8x16_t) __a;
        -: 5027:}
        -: 5028:
        -: 5029:__extension__ extern __inline int8x16_t
        -: 5030:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5031:vreinterpretq_s8_s32 (int32x4_t __a)
        -: 5032:{
        -: 5033:  return (int8x16_t) __a;
        -: 5034:}
        -: 5035:
        -: 5036:__extension__ extern __inline int8x16_t
        -: 5037:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5038:vreinterpretq_s8_s64 (int64x2_t __a)
        -: 5039:{
        -: 5040:  return (int8x16_t) __a;
        -: 5041:}
        -: 5042:
        -: 5043:__extension__ extern __inline int8x16_t
        -: 5044:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5045:vreinterpretq_s8_f16 (float16x8_t __a)
        -: 5046:{
        -: 5047:  return (int8x16_t) __a;
        -: 5048:}
        -: 5049:
        -: 5050:__extension__ extern __inline int8x16_t
        -: 5051:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5052:vreinterpretq_s8_f32 (float32x4_t __a)
        -: 5053:{
        -: 5054:  return (int8x16_t) __a;
        -: 5055:}
        -: 5056:
        -: 5057:__extension__ extern __inline int8x16_t
        -: 5058:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5059:vreinterpretq_s8_u8 (uint8x16_t __a)
        -: 5060:{
        -: 5061:  return (int8x16_t) __a;
        -: 5062:}
        -: 5063:
        -: 5064:__extension__ extern __inline int8x16_t
        -: 5065:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5066:vreinterpretq_s8_u16 (uint16x8_t __a)
        -: 5067:{
        -: 5068:  return (int8x16_t) __a;
        -: 5069:}
        -: 5070:
        -: 5071:__extension__ extern __inline int8x16_t
        -: 5072:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5073:vreinterpretq_s8_u32 (uint32x4_t __a)
        -: 5074:{
        -: 5075:  return (int8x16_t) __a;
        -: 5076:}
        -: 5077:
        -: 5078:__extension__ extern __inline int8x16_t
        -: 5079:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5080:vreinterpretq_s8_u64 (uint64x2_t __a)
        -: 5081:{
        -: 5082:  return (int8x16_t) __a;
        -: 5083:}
        -: 5084:
        -: 5085:__extension__ extern __inline int8x16_t
        -: 5086:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5087:vreinterpretq_s8_p8 (poly8x16_t __a)
        -: 5088:{
        -: 5089:  return (int8x16_t) __a;
        -: 5090:}
        -: 5091:
        -: 5092:__extension__ extern __inline int8x16_t
        -: 5093:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5094:vreinterpretq_s8_p16 (poly16x8_t __a)
        -: 5095:{
        -: 5096:  return (int8x16_t) __a;
        -: 5097:}
        -: 5098:
        -: 5099:__extension__ extern __inline int8x16_t
        -: 5100:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5101:vreinterpretq_s8_p64 (poly64x2_t __a)
        -: 5102:{
        -: 5103:  return (int8x16_t) __a;
        -: 5104:}
        -: 5105:
        -: 5106:__extension__ extern __inline int8x16_t
        -: 5107:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5108:vreinterpretq_s8_p128 (poly128_t __a)
        -: 5109:{
        -: 5110:  return (int8x16_t)__a;
        -: 5111:}
        -: 5112:
        -: 5113:__extension__ extern __inline int16x4_t
        -: 5114:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5115:vreinterpret_s16_f16 (float16x4_t __a)
        -: 5116:{
        -: 5117:  return (int16x4_t) __a;
        -: 5118:}
        -: 5119:
        -: 5120:__extension__ extern __inline int16x4_t
        -: 5121:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5122:vreinterpret_s16_f64 (float64x1_t __a)
        -: 5123:{
        -: 5124:  return (int16x4_t) __a;
        -: 5125:}
        -: 5126:
        -: 5127:__extension__ extern __inline int16x4_t
        -: 5128:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5129:vreinterpret_s16_s8 (int8x8_t __a)
        -: 5130:{
        -: 5131:  return (int16x4_t) __a;
        -: 5132:}
        -: 5133:
        -: 5134:__extension__ extern __inline int16x4_t
        -: 5135:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5136:vreinterpret_s16_s32 (int32x2_t __a)
        -: 5137:{
        -: 5138:  return (int16x4_t) __a;
        -: 5139:}
        -: 5140:
        -: 5141:__extension__ extern __inline int16x4_t
        -: 5142:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5143:vreinterpret_s16_s64 (int64x1_t __a)
        -: 5144:{
        -: 5145:  return (int16x4_t) __a;
        -: 5146:}
        -: 5147:
        -: 5148:__extension__ extern __inline int16x4_t
        -: 5149:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5150:vreinterpret_s16_f32 (float32x2_t __a)
        -: 5151:{
        -: 5152:  return (int16x4_t) __a;
        -: 5153:}
        -: 5154:
        -: 5155:__extension__ extern __inline int16x4_t
        -: 5156:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5157:vreinterpret_s16_u8 (uint8x8_t __a)
        -: 5158:{
        -: 5159:  return (int16x4_t) __a;
        -: 5160:}
        -: 5161:
        -: 5162:__extension__ extern __inline int16x4_t
        -: 5163:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5164:vreinterpret_s16_u16 (uint16x4_t __a)
        -: 5165:{
        -: 5166:  return (int16x4_t) __a;
        -: 5167:}
        -: 5168:
        -: 5169:__extension__ extern __inline int16x4_t
        -: 5170:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5171:vreinterpret_s16_u32 (uint32x2_t __a)
        -: 5172:{
        -: 5173:  return (int16x4_t) __a;
        -: 5174:}
        -: 5175:
        -: 5176:__extension__ extern __inline int16x4_t
        -: 5177:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5178:vreinterpret_s16_u64 (uint64x1_t __a)
        -: 5179:{
979720020: 5180:  return (int16x4_t) __a;
        -: 5181:}
        -: 5182:
        -: 5183:__extension__ extern __inline int16x4_t
        -: 5184:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5185:vreinterpret_s16_p8 (poly8x8_t __a)
        -: 5186:{
        -: 5187:  return (int16x4_t) __a;
        -: 5188:}
        -: 5189:
        -: 5190:__extension__ extern __inline int16x4_t
        -: 5191:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5192:vreinterpret_s16_p16 (poly16x4_t __a)
        -: 5193:{
        -: 5194:  return (int16x4_t) __a;
        -: 5195:}
        -: 5196:
        -: 5197:__extension__ extern __inline int16x4_t
        -: 5198:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5199:vreinterpret_s16_p64 (poly64x1_t __a)
        -: 5200:{
        -: 5201:  return (int16x4_t) __a;
        -: 5202:}
        -: 5203:
        -: 5204:__extension__ extern __inline int16x8_t
        -: 5205:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5206:vreinterpretq_s16_f64 (float64x2_t __a)
        -: 5207:{
        -: 5208:  return (int16x8_t) __a;
        -: 5209:}
        -: 5210:
        -: 5211:__extension__ extern __inline int16x8_t
        -: 5212:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5213:vreinterpretq_s16_s8 (int8x16_t __a)
        -: 5214:{
        -: 5215:  return (int16x8_t) __a;
        -: 5216:}
        -: 5217:
        -: 5218:__extension__ extern __inline int16x8_t
        -: 5219:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5220:vreinterpretq_s16_s32 (int32x4_t __a)
        -: 5221:{
        -: 5222:  return (int16x8_t) __a;
        -: 5223:}
        -: 5224:
        -: 5225:__extension__ extern __inline int16x8_t
        -: 5226:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5227:vreinterpretq_s16_s64 (int64x2_t __a)
        -: 5228:{
        -: 5229:  return (int16x8_t) __a;
        -: 5230:}
        -: 5231:
        -: 5232:__extension__ extern __inline int16x8_t
        -: 5233:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5234:vreinterpretq_s16_f16 (float16x8_t __a)
        -: 5235:{
        -: 5236:  return (int16x8_t) __a;
        -: 5237:}
        -: 5238:
        -: 5239:__extension__ extern __inline int16x8_t
        -: 5240:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5241:vreinterpretq_s16_f32 (float32x4_t __a)
        -: 5242:{
        -: 5243:  return (int16x8_t) __a;
        -: 5244:}
        -: 5245:
        -: 5246:__extension__ extern __inline int16x8_t
        -: 5247:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5248:vreinterpretq_s16_u8 (uint8x16_t __a)
        -: 5249:{
        -: 5250:  return (int16x8_t) __a;
        -: 5251:}
        -: 5252:
        -: 5253:__extension__ extern __inline int16x8_t
        -: 5254:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5255:vreinterpretq_s16_u16 (uint16x8_t __a)
        -: 5256:{
        -: 5257:  return (int16x8_t) __a;
        -: 5258:}
        -: 5259:
        -: 5260:__extension__ extern __inline int16x8_t
        -: 5261:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5262:vreinterpretq_s16_u32 (uint32x4_t __a)
        -: 5263:{
        -: 5264:  return (int16x8_t) __a;
        -: 5265:}
        -: 5266:
        -: 5267:__extension__ extern __inline int16x8_t
        -: 5268:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5269:vreinterpretq_s16_u64 (uint64x2_t __a)
        -: 5270:{
        -: 5271:  return (int16x8_t) __a;
        -: 5272:}
        -: 5273:
        -: 5274:__extension__ extern __inline int16x8_t
        -: 5275:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5276:vreinterpretq_s16_p8 (poly8x16_t __a)
        -: 5277:{
        -: 5278:  return (int16x8_t) __a;
        -: 5279:}
        -: 5280:
        -: 5281:__extension__ extern __inline int16x8_t
        -: 5282:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5283:vreinterpretq_s16_p16 (poly16x8_t __a)
        -: 5284:{
        -: 5285:  return (int16x8_t) __a;
        -: 5286:}
        -: 5287:
        -: 5288:__extension__ extern __inline int16x8_t
        -: 5289:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5290:vreinterpretq_s16_p64 (poly64x2_t __a)
        -: 5291:{
        -: 5292:  return (int16x8_t) __a;
        -: 5293:}
        -: 5294:
        -: 5295:__extension__ extern __inline int16x8_t
        -: 5296:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5297:vreinterpretq_s16_p128 (poly128_t __a)
        -: 5298:{
        -: 5299:  return (int16x8_t)__a;
        -: 5300:}
        -: 5301:
        -: 5302:__extension__ extern __inline int32x2_t
        -: 5303:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5304:vreinterpret_s32_f16 (float16x4_t __a)
        -: 5305:{
        -: 5306:  return (int32x2_t) __a;
        -: 5307:}
        -: 5308:
        -: 5309:__extension__ extern __inline int32x2_t
        -: 5310:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5311:vreinterpret_s32_f64 (float64x1_t __a)
        -: 5312:{
        -: 5313:  return (int32x2_t) __a;
        -: 5314:}
        -: 5315:
        -: 5316:__extension__ extern __inline int32x2_t
        -: 5317:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5318:vreinterpret_s32_s8 (int8x8_t __a)
        -: 5319:{
        -: 5320:  return (int32x2_t) __a;
        -: 5321:}
        -: 5322:
        -: 5323:__extension__ extern __inline int32x2_t
        -: 5324:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5325:vreinterpret_s32_s16 (int16x4_t __a)
        -: 5326:{
        -: 5327:  return (int32x2_t) __a;
        -: 5328:}
        -: 5329:
        -: 5330:__extension__ extern __inline int32x2_t
        -: 5331:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5332:vreinterpret_s32_s64 (int64x1_t __a)
        -: 5333:{
        -: 5334:  return (int32x2_t) __a;
        -: 5335:}
        -: 5336:
        -: 5337:__extension__ extern __inline int32x2_t
        -: 5338:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5339:vreinterpret_s32_f32 (float32x2_t __a)
        -: 5340:{
        -: 5341:  return (int32x2_t) __a;
        -: 5342:}
        -: 5343:
        -: 5344:__extension__ extern __inline int32x2_t
        -: 5345:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5346:vreinterpret_s32_u8 (uint8x8_t __a)
        -: 5347:{
        -: 5348:  return (int32x2_t) __a;
        -: 5349:}
        -: 5350:
        -: 5351:__extension__ extern __inline int32x2_t
        -: 5352:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5353:vreinterpret_s32_u16 (uint16x4_t __a)
        -: 5354:{
        -: 5355:  return (int32x2_t) __a;
        -: 5356:}
        -: 5357:
        -: 5358:__extension__ extern __inline int32x2_t
        -: 5359:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5360:vreinterpret_s32_u32 (uint32x2_t __a)
        -: 5361:{
        -: 5362:  return (int32x2_t) __a;
        -: 5363:}
        -: 5364:
        -: 5365:__extension__ extern __inline int32x2_t
        -: 5366:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5367:vreinterpret_s32_u64 (uint64x1_t __a)
        -: 5368:{
        -: 5369:  return (int32x2_t) __a;
        -: 5370:}
        -: 5371:
        -: 5372:__extension__ extern __inline int32x2_t
        -: 5373:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5374:vreinterpret_s32_p8 (poly8x8_t __a)
        -: 5375:{
        -: 5376:  return (int32x2_t) __a;
        -: 5377:}
        -: 5378:
        -: 5379:__extension__ extern __inline int32x2_t
        -: 5380:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5381:vreinterpret_s32_p16 (poly16x4_t __a)
        -: 5382:{
        -: 5383:  return (int32x2_t) __a;
        -: 5384:}
        -: 5385:
        -: 5386:__extension__ extern __inline int32x2_t
        -: 5387:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5388:vreinterpret_s32_p64 (poly64x1_t __a)
        -: 5389:{
        -: 5390:  return (int32x2_t) __a;
        -: 5391:}
        -: 5392:
        -: 5393:__extension__ extern __inline int32x4_t
        -: 5394:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5395:vreinterpretq_s32_f64 (float64x2_t __a)
        -: 5396:{
        -: 5397:  return (int32x4_t) __a;
        -: 5398:}
        -: 5399:
        -: 5400:__extension__ extern __inline int32x4_t
        -: 5401:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5402:vreinterpretq_s32_s8 (int8x16_t __a)
        -: 5403:{
        -: 5404:  return (int32x4_t) __a;
        -: 5405:}
        -: 5406:
        -: 5407:__extension__ extern __inline int32x4_t
        -: 5408:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5409:vreinterpretq_s32_s16 (int16x8_t __a)
        -: 5410:{
        -: 5411:  return (int32x4_t) __a;
        -: 5412:}
        -: 5413:
        -: 5414:__extension__ extern __inline int32x4_t
        -: 5415:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5416:vreinterpretq_s32_s64 (int64x2_t __a)
        -: 5417:{
        -: 5418:  return (int32x4_t) __a;
        -: 5419:}
        -: 5420:
        -: 5421:__extension__ extern __inline int32x4_t
        -: 5422:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5423:vreinterpretq_s32_f16 (float16x8_t __a)
        -: 5424:{
        -: 5425:  return (int32x4_t) __a;
        -: 5426:}
        -: 5427:
        -: 5428:__extension__ extern __inline int32x4_t
        -: 5429:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5430:vreinterpretq_s32_f32 (float32x4_t __a)
        -: 5431:{
        -: 5432:  return (int32x4_t) __a;
        -: 5433:}
        -: 5434:
        -: 5435:__extension__ extern __inline int32x4_t
        -: 5436:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5437:vreinterpretq_s32_u8 (uint8x16_t __a)
        -: 5438:{
        -: 5439:  return (int32x4_t) __a;
        -: 5440:}
        -: 5441:
        -: 5442:__extension__ extern __inline int32x4_t
        -: 5443:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5444:vreinterpretq_s32_u16 (uint16x8_t __a)
        -: 5445:{
        -: 5446:  return (int32x4_t) __a;
        -: 5447:}
        -: 5448:
        -: 5449:__extension__ extern __inline int32x4_t
        -: 5450:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5451:vreinterpretq_s32_u32 (uint32x4_t __a)
        -: 5452:{
        -: 5453:  return (int32x4_t) __a;
        -: 5454:}
        -: 5455:
        -: 5456:__extension__ extern __inline int32x4_t
        -: 5457:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5458:vreinterpretq_s32_u64 (uint64x2_t __a)
        -: 5459:{
        -: 5460:  return (int32x4_t) __a;
        -: 5461:}
        -: 5462:
        -: 5463:__extension__ extern __inline int32x4_t
        -: 5464:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5465:vreinterpretq_s32_p8 (poly8x16_t __a)
        -: 5466:{
        -: 5467:  return (int32x4_t) __a;
        -: 5468:}
        -: 5469:
        -: 5470:__extension__ extern __inline int32x4_t
        -: 5471:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5472:vreinterpretq_s32_p16 (poly16x8_t __a)
        -: 5473:{
        -: 5474:  return (int32x4_t) __a;
        -: 5475:}
        -: 5476:
        -: 5477:__extension__ extern __inline int32x4_t
        -: 5478:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5479:vreinterpretq_s32_p64 (poly64x2_t __a)
        -: 5480:{
        -: 5481:  return (int32x4_t) __a;
        -: 5482:}
        -: 5483:
        -: 5484:__extension__ extern __inline int32x4_t
        -: 5485:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5486:vreinterpretq_s32_p128 (poly128_t __a)
        -: 5487:{
        -: 5488:  return (int32x4_t)__a;
        -: 5489:}
        -: 5490:
        -: 5491:__extension__ extern __inline uint8x8_t
        -: 5492:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5493:vreinterpret_u8_f16 (float16x4_t __a)
        -: 5494:{
        -: 5495:  return (uint8x8_t) __a;
        -: 5496:}
        -: 5497:
        -: 5498:__extension__ extern __inline uint8x8_t
        -: 5499:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5500:vreinterpret_u8_f64 (float64x1_t __a)
        -: 5501:{
        -: 5502:  return (uint8x8_t) __a;
        -: 5503:}
        -: 5504:
        -: 5505:__extension__ extern __inline uint8x8_t
        -: 5506:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5507:vreinterpret_u8_s8 (int8x8_t __a)
        -: 5508:{
        -: 5509:  return (uint8x8_t) __a;
        -: 5510:}
        -: 5511:
        -: 5512:__extension__ extern __inline uint8x8_t
        -: 5513:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5514:vreinterpret_u8_s16 (int16x4_t __a)
        -: 5515:{
        -: 5516:  return (uint8x8_t) __a;
        -: 5517:}
        -: 5518:
        -: 5519:__extension__ extern __inline uint8x8_t
        -: 5520:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5521:vreinterpret_u8_s32 (int32x2_t __a)
        -: 5522:{
        -: 5523:  return (uint8x8_t) __a;
        -: 5524:}
        -: 5525:
        -: 5526:__extension__ extern __inline uint8x8_t
        -: 5527:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5528:vreinterpret_u8_s64 (int64x1_t __a)
        -: 5529:{
        -: 5530:  return (uint8x8_t) __a;
        -: 5531:}
        -: 5532:
        -: 5533:__extension__ extern __inline uint8x8_t
        -: 5534:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5535:vreinterpret_u8_f32 (float32x2_t __a)
        -: 5536:{
        -: 5537:  return (uint8x8_t) __a;
        -: 5538:}
        -: 5539:
        -: 5540:__extension__ extern __inline uint8x8_t
        -: 5541:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5542:vreinterpret_u8_u16 (uint16x4_t __a)
        -: 5543:{
        -: 5544:  return (uint8x8_t) __a;
        -: 5545:}
        -: 5546:
        -: 5547:__extension__ extern __inline uint8x8_t
        -: 5548:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5549:vreinterpret_u8_u32 (uint32x2_t __a)
        -: 5550:{
        -: 5551:  return (uint8x8_t) __a;
        -: 5552:}
        -: 5553:
        -: 5554:__extension__ extern __inline uint8x8_t
        -: 5555:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5556:vreinterpret_u8_u64 (uint64x1_t __a)
        -: 5557:{
        -: 5558:  return (uint8x8_t) __a;
        -: 5559:}
        -: 5560:
        -: 5561:__extension__ extern __inline uint8x8_t
        -: 5562:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5563:vreinterpret_u8_p8 (poly8x8_t __a)
        -: 5564:{
        -: 5565:  return (uint8x8_t) __a;
        -: 5566:}
        -: 5567:
        -: 5568:__extension__ extern __inline uint8x8_t
        -: 5569:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5570:vreinterpret_u8_p16 (poly16x4_t __a)
        -: 5571:{
        -: 5572:  return (uint8x8_t) __a;
        -: 5573:}
        -: 5574:
        -: 5575:__extension__ extern __inline uint8x8_t
        -: 5576:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5577:vreinterpret_u8_p64 (poly64x1_t __a)
        -: 5578:{
        -: 5579:  return (uint8x8_t) __a;
        -: 5580:}
        -: 5581:
        -: 5582:__extension__ extern __inline uint8x16_t
        -: 5583:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5584:vreinterpretq_u8_f64 (float64x2_t __a)
        -: 5585:{
        -: 5586:  return (uint8x16_t) __a;
        -: 5587:}
        -: 5588:
        -: 5589:__extension__ extern __inline uint8x16_t
        -: 5590:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5591:vreinterpretq_u8_s8 (int8x16_t __a)
        -: 5592:{
        -: 5593:  return (uint8x16_t) __a;
        -: 5594:}
        -: 5595:
        -: 5596:__extension__ extern __inline uint8x16_t
        -: 5597:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5598:vreinterpretq_u8_s16 (int16x8_t __a)
        -: 5599:{
        -: 5600:  return (uint8x16_t) __a;
        -: 5601:}
        -: 5602:
        -: 5603:__extension__ extern __inline uint8x16_t
        -: 5604:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5605:vreinterpretq_u8_s32 (int32x4_t __a)
        -: 5606:{
        -: 5607:  return (uint8x16_t) __a;
        -: 5608:}
        -: 5609:
        -: 5610:__extension__ extern __inline uint8x16_t
        -: 5611:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5612:vreinterpretq_u8_s64 (int64x2_t __a)
        -: 5613:{
        -: 5614:  return (uint8x16_t) __a;
        -: 5615:}
        -: 5616:
        -: 5617:__extension__ extern __inline uint8x16_t
        -: 5618:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5619:vreinterpretq_u8_f16 (float16x8_t __a)
        -: 5620:{
        -: 5621:  return (uint8x16_t) __a;
        -: 5622:}
        -: 5623:
        -: 5624:__extension__ extern __inline uint8x16_t
        -: 5625:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5626:vreinterpretq_u8_f32 (float32x4_t __a)
        -: 5627:{
        -: 5628:  return (uint8x16_t) __a;
        -: 5629:}
        -: 5630:
        -: 5631:__extension__ extern __inline uint8x16_t
        -: 5632:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5633:vreinterpretq_u8_u16 (uint16x8_t __a)
        -: 5634:{
        -: 5635:  return (uint8x16_t) __a;
        -: 5636:}
        -: 5637:
        -: 5638:__extension__ extern __inline uint8x16_t
        -: 5639:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5640:vreinterpretq_u8_u32 (uint32x4_t __a)
        -: 5641:{
        -: 5642:  return (uint8x16_t) __a;
        -: 5643:}
        -: 5644:
        -: 5645:__extension__ extern __inline uint8x16_t
        -: 5646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5647:vreinterpretq_u8_u64 (uint64x2_t __a)
        -: 5648:{
        -: 5649:  return (uint8x16_t) __a;
        -: 5650:}
        -: 5651:
        -: 5652:__extension__ extern __inline uint8x16_t
        -: 5653:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5654:vreinterpretq_u8_p8 (poly8x16_t __a)
        -: 5655:{
        -: 5656:  return (uint8x16_t) __a;
        -: 5657:}
        -: 5658:
        -: 5659:__extension__ extern __inline uint8x16_t
        -: 5660:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5661:vreinterpretq_u8_p16 (poly16x8_t __a)
        -: 5662:{
        -: 5663:  return (uint8x16_t) __a;
        -: 5664:}
        -: 5665:
        -: 5666:__extension__ extern __inline uint8x16_t
        -: 5667:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5668:vreinterpretq_u8_p64 (poly64x2_t __a)
        -: 5669:{
        -: 5670:  return (uint8x16_t) __a;
        -: 5671:}
        -: 5672:
        -: 5673:__extension__ extern __inline uint8x16_t
        -: 5674:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5675:vreinterpretq_u8_p128 (poly128_t __a)
        -: 5676:{
        -: 5677:  return (uint8x16_t)__a;
        -: 5678:}
        -: 5679:
        -: 5680:__extension__ extern __inline uint16x4_t
        -: 5681:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5682:vreinterpret_u16_f16 (float16x4_t __a)
        -: 5683:{
        -: 5684:  return (uint16x4_t) __a;
        -: 5685:}
        -: 5686:
        -: 5687:__extension__ extern __inline uint16x4_t
        -: 5688:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5689:vreinterpret_u16_f64 (float64x1_t __a)
        -: 5690:{
        -: 5691:  return (uint16x4_t) __a;
        -: 5692:}
        -: 5693:
        -: 5694:__extension__ extern __inline uint16x4_t
        -: 5695:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5696:vreinterpret_u16_s8 (int8x8_t __a)
        -: 5697:{
        -: 5698:  return (uint16x4_t) __a;
        -: 5699:}
        -: 5700:
        -: 5701:__extension__ extern __inline uint16x4_t
        -: 5702:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5703:vreinterpret_u16_s16 (int16x4_t __a)
        -: 5704:{
        -: 5705:  return (uint16x4_t) __a;
        -: 5706:}
        -: 5707:
        -: 5708:__extension__ extern __inline uint16x4_t
        -: 5709:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5710:vreinterpret_u16_s32 (int32x2_t __a)
        -: 5711:{
        -: 5712:  return (uint16x4_t) __a;
        -: 5713:}
        -: 5714:
        -: 5715:__extension__ extern __inline uint16x4_t
        -: 5716:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5717:vreinterpret_u16_s64 (int64x1_t __a)
        -: 5718:{
        -: 5719:  return (uint16x4_t) __a;
        -: 5720:}
        -: 5721:
        -: 5722:__extension__ extern __inline uint16x4_t
        -: 5723:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5724:vreinterpret_u16_f32 (float32x2_t __a)
        -: 5725:{
        -: 5726:  return (uint16x4_t) __a;
        -: 5727:}
        -: 5728:
        -: 5729:__extension__ extern __inline uint16x4_t
        -: 5730:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5731:vreinterpret_u16_u8 (uint8x8_t __a)
        -: 5732:{
        -: 5733:  return (uint16x4_t) __a;
        -: 5734:}
        -: 5735:
        -: 5736:__extension__ extern __inline uint16x4_t
        -: 5737:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5738:vreinterpret_u16_u32 (uint32x2_t __a)
        -: 5739:{
        -: 5740:  return (uint16x4_t) __a;
        -: 5741:}
        -: 5742:
        -: 5743:__extension__ extern __inline uint16x4_t
        -: 5744:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5745:vreinterpret_u16_u64 (uint64x1_t __a)
        -: 5746:{
        -: 5747:  return (uint16x4_t) __a;
        -: 5748:}
        -: 5749:
        -: 5750:__extension__ extern __inline uint16x4_t
        -: 5751:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5752:vreinterpret_u16_p8 (poly8x8_t __a)
        -: 5753:{
        -: 5754:  return (uint16x4_t) __a;
        -: 5755:}
        -: 5756:
        -: 5757:__extension__ extern __inline uint16x4_t
        -: 5758:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5759:vreinterpret_u16_p16 (poly16x4_t __a)
        -: 5760:{
        -: 5761:  return (uint16x4_t) __a;
        -: 5762:}
        -: 5763:
        -: 5764:__extension__ extern __inline uint16x4_t
        -: 5765:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5766:vreinterpret_u16_p64 (poly64x1_t __a)
        -: 5767:{
        -: 5768:  return (uint16x4_t) __a;
        -: 5769:}
        -: 5770:
        -: 5771:__extension__ extern __inline uint16x8_t
        -: 5772:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5773:vreinterpretq_u16_f64 (float64x2_t __a)
        -: 5774:{
        -: 5775:  return (uint16x8_t) __a;
        -: 5776:}
        -: 5777:
        -: 5778:__extension__ extern __inline uint16x8_t
        -: 5779:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5780:vreinterpretq_u16_s8 (int8x16_t __a)
        -: 5781:{
        -: 5782:  return (uint16x8_t) __a;
        -: 5783:}
        -: 5784:
        -: 5785:__extension__ extern __inline uint16x8_t
        -: 5786:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5787:vreinterpretq_u16_s16 (int16x8_t __a)
        -: 5788:{
        -: 5789:  return (uint16x8_t) __a;
        -: 5790:}
        -: 5791:
        -: 5792:__extension__ extern __inline uint16x8_t
        -: 5793:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5794:vreinterpretq_u16_s32 (int32x4_t __a)
        -: 5795:{
        -: 5796:  return (uint16x8_t) __a;
        -: 5797:}
        -: 5798:
        -: 5799:__extension__ extern __inline uint16x8_t
        -: 5800:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5801:vreinterpretq_u16_s64 (int64x2_t __a)
        -: 5802:{
        -: 5803:  return (uint16x8_t) __a;
        -: 5804:}
        -: 5805:
        -: 5806:__extension__ extern __inline uint16x8_t
        -: 5807:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5808:vreinterpretq_u16_f16 (float16x8_t __a)
        -: 5809:{
        -: 5810:  return (uint16x8_t) __a;
        -: 5811:}
        -: 5812:
        -: 5813:__extension__ extern __inline uint16x8_t
        -: 5814:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5815:vreinterpretq_u16_f32 (float32x4_t __a)
        -: 5816:{
        -: 5817:  return (uint16x8_t) __a;
        -: 5818:}
        -: 5819:
        -: 5820:__extension__ extern __inline uint16x8_t
        -: 5821:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5822:vreinterpretq_u16_u8 (uint8x16_t __a)
        -: 5823:{
        -: 5824:  return (uint16x8_t) __a;
        -: 5825:}
        -: 5826:
        -: 5827:__extension__ extern __inline uint16x8_t
        -: 5828:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5829:vreinterpretq_u16_u32 (uint32x4_t __a)
        -: 5830:{
        -: 5831:  return (uint16x8_t) __a;
        -: 5832:}
        -: 5833:
        -: 5834:__extension__ extern __inline uint16x8_t
        -: 5835:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5836:vreinterpretq_u16_u64 (uint64x2_t __a)
        -: 5837:{
        -: 5838:  return (uint16x8_t) __a;
        -: 5839:}
        -: 5840:
        -: 5841:__extension__ extern __inline uint16x8_t
        -: 5842:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5843:vreinterpretq_u16_p8 (poly8x16_t __a)
        -: 5844:{
        -: 5845:  return (uint16x8_t) __a;
        -: 5846:}
        -: 5847:
        -: 5848:__extension__ extern __inline uint16x8_t
        -: 5849:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5850:vreinterpretq_u16_p16 (poly16x8_t __a)
        -: 5851:{
        -: 5852:  return (uint16x8_t) __a;
        -: 5853:}
        -: 5854:
        -: 5855:__extension__ extern __inline uint16x8_t
        -: 5856:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5857:vreinterpretq_u16_p64 (poly64x2_t __a)
        -: 5858:{
        -: 5859:  return (uint16x8_t) __a;
        -: 5860:}
        -: 5861:
        -: 5862:__extension__ extern __inline uint16x8_t
        -: 5863:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5864:vreinterpretq_u16_p128 (poly128_t __a)
        -: 5865:{
        -: 5866:  return (uint16x8_t)__a;
        -: 5867:}
        -: 5868:
        -: 5869:__extension__ extern __inline uint32x2_t
        -: 5870:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5871:vreinterpret_u32_f16 (float16x4_t __a)
        -: 5872:{
        -: 5873:  return (uint32x2_t) __a;
        -: 5874:}
        -: 5875:
        -: 5876:__extension__ extern __inline uint32x2_t
        -: 5877:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5878:vreinterpret_u32_f64 (float64x1_t __a)
        -: 5879:{
        -: 5880:  return (uint32x2_t) __a;
        -: 5881:}
        -: 5882:
        -: 5883:__extension__ extern __inline uint32x2_t
        -: 5884:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5885:vreinterpret_u32_s8 (int8x8_t __a)
        -: 5886:{
        -: 5887:  return (uint32x2_t) __a;
        -: 5888:}
        -: 5889:
        -: 5890:__extension__ extern __inline uint32x2_t
        -: 5891:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5892:vreinterpret_u32_s16 (int16x4_t __a)
        -: 5893:{
        -: 5894:  return (uint32x2_t) __a;
        -: 5895:}
        -: 5896:
        -: 5897:__extension__ extern __inline uint32x2_t
        -: 5898:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5899:vreinterpret_u32_s32 (int32x2_t __a)
        -: 5900:{
        -: 5901:  return (uint32x2_t) __a;
        -: 5902:}
        -: 5903:
        -: 5904:__extension__ extern __inline uint32x2_t
        -: 5905:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5906:vreinterpret_u32_s64 (int64x1_t __a)
        -: 5907:{
        -: 5908:  return (uint32x2_t) __a;
        -: 5909:}
        -: 5910:
        -: 5911:__extension__ extern __inline uint32x2_t
        -: 5912:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5913:vreinterpret_u32_f32 (float32x2_t __a)
        -: 5914:{
        -: 5915:  return (uint32x2_t) __a;
        -: 5916:}
        -: 5917:
        -: 5918:__extension__ extern __inline uint32x2_t
        -: 5919:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5920:vreinterpret_u32_u8 (uint8x8_t __a)
        -: 5921:{
        -: 5922:  return (uint32x2_t) __a;
        -: 5923:}
        -: 5924:
        -: 5925:__extension__ extern __inline uint32x2_t
        -: 5926:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5927:vreinterpret_u32_u16 (uint16x4_t __a)
        -: 5928:{
        -: 5929:  return (uint32x2_t) __a;
        -: 5930:}
        -: 5931:
        -: 5932:__extension__ extern __inline uint32x2_t
        -: 5933:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5934:vreinterpret_u32_u64 (uint64x1_t __a)
        -: 5935:{
        -: 5936:  return (uint32x2_t) __a;
        -: 5937:}
        -: 5938:
        -: 5939:__extension__ extern __inline uint32x2_t
        -: 5940:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5941:vreinterpret_u32_p8 (poly8x8_t __a)
        -: 5942:{
        -: 5943:  return (uint32x2_t) __a;
        -: 5944:}
        -: 5945:
        -: 5946:__extension__ extern __inline uint32x2_t
        -: 5947:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5948:vreinterpret_u32_p16 (poly16x4_t __a)
        -: 5949:{
        -: 5950:  return (uint32x2_t) __a;
        -: 5951:}
        -: 5952:
        -: 5953:__extension__ extern __inline uint32x2_t
        -: 5954:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5955:vreinterpret_u32_p64 (poly64x1_t __a)
        -: 5956:{
        -: 5957:  return (uint32x2_t) __a;
        -: 5958:}
        -: 5959:
        -: 5960:__extension__ extern __inline uint32x4_t
        -: 5961:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5962:vreinterpretq_u32_f64 (float64x2_t __a)
        -: 5963:{
        -: 5964:  return (uint32x4_t) __a;
        -: 5965:}
        -: 5966:
        -: 5967:__extension__ extern __inline uint32x4_t
        -: 5968:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5969:vreinterpretq_u32_s8 (int8x16_t __a)
        -: 5970:{
        -: 5971:  return (uint32x4_t) __a;
        -: 5972:}
        -: 5973:
        -: 5974:__extension__ extern __inline uint32x4_t
        -: 5975:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5976:vreinterpretq_u32_s16 (int16x8_t __a)
        -: 5977:{
        -: 5978:  return (uint32x4_t) __a;
        -: 5979:}
        -: 5980:
        -: 5981:__extension__ extern __inline uint32x4_t
        -: 5982:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5983:vreinterpretq_u32_s32 (int32x4_t __a)
        -: 5984:{
        -: 5985:  return (uint32x4_t) __a;
        -: 5986:}
        -: 5987:
        -: 5988:__extension__ extern __inline uint32x4_t
        -: 5989:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5990:vreinterpretq_u32_s64 (int64x2_t __a)
        -: 5991:{
        -: 5992:  return (uint32x4_t) __a;
        -: 5993:}
        -: 5994:
        -: 5995:__extension__ extern __inline uint32x4_t
        -: 5996:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 5997:vreinterpretq_u32_f16 (float16x8_t __a)
        -: 5998:{
        -: 5999:  return (uint32x4_t) __a;
        -: 6000:}
        -: 6001:
        -: 6002:__extension__ extern __inline uint32x4_t
        -: 6003:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6004:vreinterpretq_u32_f32 (float32x4_t __a)
        -: 6005:{
        -: 6006:  return (uint32x4_t) __a;
        -: 6007:}
        -: 6008:
        -: 6009:__extension__ extern __inline uint32x4_t
        -: 6010:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6011:vreinterpretq_u32_u8 (uint8x16_t __a)
        -: 6012:{
        -: 6013:  return (uint32x4_t) __a;
        -: 6014:}
        -: 6015:
        -: 6016:__extension__ extern __inline uint32x4_t
        -: 6017:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6018:vreinterpretq_u32_u16 (uint16x8_t __a)
        -: 6019:{
        -: 6020:  return (uint32x4_t) __a;
        -: 6021:}
        -: 6022:
        -: 6023:__extension__ extern __inline uint32x4_t
        -: 6024:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6025:vreinterpretq_u32_u64 (uint64x2_t __a)
        -: 6026:{
        -: 6027:  return (uint32x4_t) __a;
        -: 6028:}
        -: 6029:
        -: 6030:__extension__ extern __inline uint32x4_t
        -: 6031:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6032:vreinterpretq_u32_p8 (poly8x16_t __a)
        -: 6033:{
        -: 6034:  return (uint32x4_t) __a;
        -: 6035:}
        -: 6036:
        -: 6037:__extension__ extern __inline uint32x4_t
        -: 6038:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6039:vreinterpretq_u32_p16 (poly16x8_t __a)
        -: 6040:{
        -: 6041:  return (uint32x4_t) __a;
        -: 6042:}
        -: 6043:
        -: 6044:__extension__ extern __inline uint32x4_t
        -: 6045:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6046:vreinterpretq_u32_p64 (poly64x2_t __a)
        -: 6047:{
        -: 6048:  return (uint32x4_t) __a;
        -: 6049:}
        -: 6050:
        -: 6051:__extension__ extern __inline uint32x4_t
        -: 6052:__attribute__  ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6053:vreinterpretq_u32_p128 (poly128_t __a)
        -: 6054:{
        -: 6055:  return (uint32x4_t)__a;
        -: 6056:}
        -: 6057:
        -: 6058:/* vset_lane  */
        -: 6059:
        -: 6060:__extension__ extern __inline float16x4_t
        -: 6061:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6062:vset_lane_f16 (float16_t __elem, float16x4_t __vec, const int __index)
        -: 6063:{
        -: 6064:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6065:}
        -: 6066:
        -: 6067:__extension__ extern __inline float32x2_t
        -: 6068:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6069:vset_lane_f32 (float32_t __elem, float32x2_t __vec, const int __index)
        -: 6070:{
        -: 6071:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6072:}
        -: 6073:
        -: 6074:__extension__ extern __inline float64x1_t
        -: 6075:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6076:vset_lane_f64 (float64_t __elem, float64x1_t __vec, const int __index)
        -: 6077:{
        -: 6078:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6079:}
        -: 6080:
        -: 6081:__extension__ extern __inline poly8x8_t
        -: 6082:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6083:vset_lane_p8 (poly8_t __elem, poly8x8_t __vec, const int __index)
        -: 6084:{
        -: 6085:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6086:}
        -: 6087:
        -: 6088:__extension__ extern __inline poly16x4_t
        -: 6089:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6090:vset_lane_p16 (poly16_t __elem, poly16x4_t __vec, const int __index)
        -: 6091:{
        -: 6092:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6093:}
        -: 6094:
        -: 6095:__extension__ extern __inline poly64x1_t
        -: 6096:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6097:vset_lane_p64 (poly64_t __elem, poly64x1_t __vec, const int __index)
        -: 6098:{
        -: 6099:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6100:}
        -: 6101:
        -: 6102:__extension__ extern __inline int8x8_t
        -: 6103:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6104:vset_lane_s8 (int8_t __elem, int8x8_t __vec, const int __index)
        -: 6105:{
        -: 6106:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6107:}
        -: 6108:
        -: 6109:__extension__ extern __inline int16x4_t
        -: 6110:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6111:vset_lane_s16 (int16_t __elem, int16x4_t __vec, const int __index)
        -: 6112:{
        -: 6113:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6114:}
        -: 6115:
        -: 6116:__extension__ extern __inline int32x2_t
        -: 6117:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6118:vset_lane_s32 (int32_t __elem, int32x2_t __vec, const int __index)
        -: 6119:{
        -: 6120:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6121:}
        -: 6122:
        -: 6123:__extension__ extern __inline int64x1_t
        -: 6124:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6125:vset_lane_s64 (int64_t __elem, int64x1_t __vec, const int __index)
        -: 6126:{
        -: 6127:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6128:}
        -: 6129:
        -: 6130:__extension__ extern __inline uint8x8_t
        -: 6131:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6132:vset_lane_u8 (uint8_t __elem, uint8x8_t __vec, const int __index)
        -: 6133:{
        -: 6134:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6135:}
        -: 6136:
        -: 6137:__extension__ extern __inline uint16x4_t
        -: 6138:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6139:vset_lane_u16 (uint16_t __elem, uint16x4_t __vec, const int __index)
        -: 6140:{
        -: 6141:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6142:}
        -: 6143:
        -: 6144:__extension__ extern __inline uint32x2_t
        -: 6145:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6146:vset_lane_u32 (uint32_t __elem, uint32x2_t __vec, const int __index)
        -: 6147:{
        -: 6148:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6149:}
        -: 6150:
        -: 6151:__extension__ extern __inline uint64x1_t
        -: 6152:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6153:vset_lane_u64 (uint64_t __elem, uint64x1_t __vec, const int __index)
        -: 6154:{
        -: 6155:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6156:}
        -: 6157:
        -: 6158:/* vsetq_lane  */
        -: 6159:
        -: 6160:__extension__ extern __inline float16x8_t
        -: 6161:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6162:vsetq_lane_f16 (float16_t __elem, float16x8_t __vec, const int __index)
        -: 6163:{
        -: 6164:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6165:}
        -: 6166:
        -: 6167:__extension__ extern __inline float32x4_t
        -: 6168:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6169:vsetq_lane_f32 (float32_t __elem, float32x4_t __vec, const int __index)
        -: 6170:{
        -: 6171:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6172:}
        -: 6173:
        -: 6174:__extension__ extern __inline float64x2_t
        -: 6175:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6176:vsetq_lane_f64 (float64_t __elem, float64x2_t __vec, const int __index)
        -: 6177:{
        -: 6178:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6179:}
        -: 6180:
        -: 6181:__extension__ extern __inline poly8x16_t
        -: 6182:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6183:vsetq_lane_p8 (poly8_t __elem, poly8x16_t __vec, const int __index)
        -: 6184:{
        -: 6185:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6186:}
        -: 6187:
        -: 6188:__extension__ extern __inline poly16x8_t
        -: 6189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6190:vsetq_lane_p16 (poly16_t __elem, poly16x8_t __vec, const int __index)
        -: 6191:{
        -: 6192:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6193:}
        -: 6194:
        -: 6195:__extension__ extern __inline poly64x2_t
        -: 6196:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6197:vsetq_lane_p64 (poly64_t __elem, poly64x2_t __vec, const int __index)
        -: 6198:{
        -: 6199:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6200:}
        -: 6201:
        -: 6202:__extension__ extern __inline int8x16_t
        -: 6203:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6204:vsetq_lane_s8 (int8_t __elem, int8x16_t __vec, const int __index)
        -: 6205:{
        -: 6206:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6207:}
        -: 6208:
        -: 6209:__extension__ extern __inline int16x8_t
        -: 6210:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6211:vsetq_lane_s16 (int16_t __elem, int16x8_t __vec, const int __index)
        -: 6212:{
        -: 6213:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6214:}
        -: 6215:
        -: 6216:__extension__ extern __inline int32x4_t
        -: 6217:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6218:vsetq_lane_s32 (int32_t __elem, int32x4_t __vec, const int __index)
        -: 6219:{
        -: 6220:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6221:}
        -: 6222:
        -: 6223:__extension__ extern __inline int64x2_t
        -: 6224:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6225:vsetq_lane_s64 (int64_t __elem, int64x2_t __vec, const int __index)
        -: 6226:{
        -: 6227:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6228:}
        -: 6229:
        -: 6230:__extension__ extern __inline uint8x16_t
        -: 6231:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6232:vsetq_lane_u8 (uint8_t __elem, uint8x16_t __vec, const int __index)
        -: 6233:{
        -: 6234:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6235:}
        -: 6236:
        -: 6237:__extension__ extern __inline uint16x8_t
        -: 6238:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6239:vsetq_lane_u16 (uint16_t __elem, uint16x8_t __vec, const int __index)
        -: 6240:{
        -: 6241:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6242:}
        -: 6243:
        -: 6244:__extension__ extern __inline uint32x4_t
        -: 6245:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6246:vsetq_lane_u32 (uint32_t __elem, uint32x4_t __vec, const int __index)
        -: 6247:{
        -: 6248:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6249:}
        -: 6250:
        -: 6251:__extension__ extern __inline uint64x2_t
        -: 6252:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6253:vsetq_lane_u64 (uint64_t __elem, uint64x2_t __vec, const int __index)
        -: 6254:{
        -: 6255:  return __aarch64_vset_lane_any (__elem, __vec, __index);
        -: 6256:}
        -: 6257:
        -: 6258:#define __GET_LOW(__TYPE) \
        -: 6259:  uint64x2_t tmp = vreinterpretq_u64_##__TYPE (__a);  \
        -: 6260:  uint64x1_t lo = vcreate_u64 (vgetq_lane_u64 (tmp, 0));  \
        -: 6261:  return vreinterpret_##__TYPE##_u64 (lo);
        -: 6262:
        -: 6263:__extension__ extern __inline float16x4_t
        -: 6264:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6265:vget_low_f16 (float16x8_t __a)
        -: 6266:{
        -: 6267:  __GET_LOW (f16);
        -: 6268:}
        -: 6269:
        -: 6270:__extension__ extern __inline float32x2_t
        -: 6271:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6272:vget_low_f32 (float32x4_t __a)
        -: 6273:{
        -: 6274:  __GET_LOW (f32);
        -: 6275:}
        -: 6276:
        -: 6277:__extension__ extern __inline float64x1_t
        -: 6278:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6279:vget_low_f64 (float64x2_t __a)
        -: 6280:{
        -: 6281:  return (float64x1_t) {vgetq_lane_f64 (__a, 0)};
        -: 6282:}
        -: 6283:
        -: 6284:__extension__ extern __inline poly8x8_t
        -: 6285:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6286:vget_low_p8 (poly8x16_t __a)
        -: 6287:{
        -: 6288:  __GET_LOW (p8);
        -: 6289:}
        -: 6290:
        -: 6291:__extension__ extern __inline poly16x4_t
        -: 6292:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6293:vget_low_p16 (poly16x8_t __a)
        -: 6294:{
        -: 6295:  __GET_LOW (p16);
        -: 6296:}
        -: 6297:
        -: 6298:__extension__ extern __inline poly64x1_t
        -: 6299:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6300:vget_low_p64 (poly64x2_t __a)
        -: 6301:{
        -: 6302:  __GET_LOW (p64);
        -: 6303:}
        -: 6304:
        -: 6305:__extension__ extern __inline int8x8_t
        -: 6306:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6307:vget_low_s8 (int8x16_t __a)
        -: 6308:{
        -: 6309:  __GET_LOW (s8);
        -: 6310:}
        -: 6311:
        -: 6312:__extension__ extern __inline int16x4_t
        -: 6313:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6314:vget_low_s16 (int16x8_t __a)
        -: 6315:{
        -: 6316:  __GET_LOW (s16);
        -: 6317:}
        -: 6318:
        -: 6319:__extension__ extern __inline int32x2_t
        -: 6320:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6321:vget_low_s32 (int32x4_t __a)
        -: 6322:{
        -: 6323:  __GET_LOW (s32);
        -: 6324:}
        -: 6325:
        -: 6326:__extension__ extern __inline int64x1_t
        -: 6327:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6328:vget_low_s64 (int64x2_t __a)
        -: 6329:{
        -: 6330:  __GET_LOW (s64);
        -: 6331:}
        -: 6332:
        -: 6333:__extension__ extern __inline uint8x8_t
        -: 6334:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6335:vget_low_u8 (uint8x16_t __a)
        -: 6336:{
        -: 6337:  __GET_LOW (u8);
        -: 6338:}
        -: 6339:
        -: 6340:__extension__ extern __inline uint16x4_t
        -: 6341:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6342:vget_low_u16 (uint16x8_t __a)
        -: 6343:{
        -: 6344:  __GET_LOW (u16);
        -: 6345:}
        -: 6346:
        -: 6347:__extension__ extern __inline uint32x2_t
        -: 6348:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6349:vget_low_u32 (uint32x4_t __a)
        -: 6350:{
        -: 6351:  __GET_LOW (u32);
        -: 6352:}
        -: 6353:
        -: 6354:__extension__ extern __inline uint64x1_t
        -: 6355:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6356:vget_low_u64 (uint64x2_t __a)
        -: 6357:{
        -: 6358:  return vcreate_u64 (vgetq_lane_u64 (__a, 0));
        -: 6359:}
        -: 6360:
        -: 6361:#undef __GET_LOW
        -: 6362:
        -: 6363:#define __GET_HIGH(__TYPE)					\
        -: 6364:  uint64x2_t tmp = vreinterpretq_u64_##__TYPE (__a);		\
        -: 6365:  uint64x1_t hi = vcreate_u64 (vgetq_lane_u64 (tmp, 1));	\
        -: 6366:  return vreinterpret_##__TYPE##_u64 (hi);
        -: 6367:
        -: 6368:__extension__ extern __inline float16x4_t
        -: 6369:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6370:vget_high_f16 (float16x8_t __a)
        -: 6371:{
        -: 6372:  __GET_HIGH (f16);
        -: 6373:}
        -: 6374:
        -: 6375:__extension__ extern __inline float32x2_t
        -: 6376:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6377:vget_high_f32 (float32x4_t __a)
        -: 6378:{
        -: 6379:  __GET_HIGH (f32);
        -: 6380:}
        -: 6381:
        -: 6382:__extension__ extern __inline float64x1_t
        -: 6383:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6384:vget_high_f64 (float64x2_t __a)
        -: 6385:{
        -: 6386:  __GET_HIGH (f64);
        -: 6387:}
        -: 6388:
        -: 6389:__extension__ extern __inline poly8x8_t
        -: 6390:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6391:vget_high_p8 (poly8x16_t __a)
        -: 6392:{
        -: 6393:  __GET_HIGH (p8);
        -: 6394:}
        -: 6395:
        -: 6396:__extension__ extern __inline poly16x4_t
        -: 6397:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6398:vget_high_p16 (poly16x8_t __a)
        -: 6399:{
        -: 6400:  __GET_HIGH (p16);
        -: 6401:}
        -: 6402:
        -: 6403:__extension__ extern __inline poly64x1_t
        -: 6404:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6405:vget_high_p64 (poly64x2_t __a)
        -: 6406:{
        -: 6407:  __GET_HIGH (p64);
        -: 6408:}
        -: 6409:
        -: 6410:__extension__ extern __inline int8x8_t
        -: 6411:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6412:vget_high_s8 (int8x16_t __a)
        -: 6413:{
        -: 6414:  __GET_HIGH (s8);
        -: 6415:}
        -: 6416:
        -: 6417:__extension__ extern __inline int16x4_t
        -: 6418:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6419:vget_high_s16 (int16x8_t __a)
        -: 6420:{
        -: 6421:  __GET_HIGH (s16);
        -: 6422:}
        -: 6423:
        -: 6424:__extension__ extern __inline int32x2_t
        -: 6425:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6426:vget_high_s32 (int32x4_t __a)
        -: 6427:{
        -: 6428:  __GET_HIGH (s32);
        -: 6429:}
        -: 6430:
        -: 6431:__extension__ extern __inline int64x1_t
        -: 6432:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6433:vget_high_s64 (int64x2_t __a)
        -: 6434:{
        -: 6435:  __GET_HIGH (s64);
        -: 6436:}
        -: 6437:
        -: 6438:__extension__ extern __inline uint8x8_t
        -: 6439:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6440:vget_high_u8 (uint8x16_t __a)
        -: 6441:{
        -: 6442:  __GET_HIGH (u8);
        -: 6443:}
        -: 6444:
        -: 6445:__extension__ extern __inline uint16x4_t
        -: 6446:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6447:vget_high_u16 (uint16x8_t __a)
        -: 6448:{
        -: 6449:  __GET_HIGH (u16);
        -: 6450:}
        -: 6451:
        -: 6452:__extension__ extern __inline uint32x2_t
        -: 6453:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6454:vget_high_u32 (uint32x4_t __a)
        -: 6455:{
        -: 6456:  __GET_HIGH (u32);
        -: 6457:}
        -: 6458:
        -: 6459:#undef __GET_HIGH
        -: 6460:
        -: 6461:__extension__ extern __inline uint64x1_t
        -: 6462:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6463:vget_high_u64 (uint64x2_t __a)
        -: 6464:{
        -: 6465:  return vcreate_u64 (vgetq_lane_u64 (__a, 1));
        -: 6466:}
        -: 6467:
        -: 6468:__extension__ extern __inline int8x16_t
        -: 6469:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6470:vcombine_s8 (int8x8_t __a, int8x8_t __b)
        -: 6471:{
        -: 6472:  return (int8x16_t) __builtin_aarch64_combinev8qi (__a, __b);
        -: 6473:}
        -: 6474:
        -: 6475:__extension__ extern __inline int16x8_t
        -: 6476:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6477:vcombine_s16 (int16x4_t __a, int16x4_t __b)
        -: 6478:{
391888008: 6479:  return (int16x8_t) __builtin_aarch64_combinev4hi (__a, __b);
        -: 6480:}
        -: 6481:
        -: 6482:__extension__ extern __inline int32x4_t
        -: 6483:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6484:vcombine_s32 (int32x2_t __a, int32x2_t __b)
        -: 6485:{
        -: 6486:  return (int32x4_t) __builtin_aarch64_combinev2si (__a, __b);
        -: 6487:}
        -: 6488:
        -: 6489:__extension__ extern __inline int64x2_t
        -: 6490:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6491:vcombine_s64 (int64x1_t __a, int64x1_t __b)
        -: 6492:{
        -: 6493:  return __builtin_aarch64_combinedi (__a[0], __b[0]);
        -: 6494:}
        -: 6495:
        -: 6496:__extension__ extern __inline float16x8_t
        -: 6497:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6498:vcombine_f16 (float16x4_t __a, float16x4_t __b)
        -: 6499:{
        -: 6500:  return __builtin_aarch64_combinev4hf (__a, __b);
        -: 6501:}
        -: 6502:
        -: 6503:__extension__ extern __inline float32x4_t
        -: 6504:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6505:vcombine_f32 (float32x2_t __a, float32x2_t __b)
        -: 6506:{
        -: 6507:  return (float32x4_t) __builtin_aarch64_combinev2sf (__a, __b);
        -: 6508:}
        -: 6509:
        -: 6510:__extension__ extern __inline uint8x16_t
        -: 6511:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6512:vcombine_u8 (uint8x8_t __a, uint8x8_t __b)
        -: 6513:{
        -: 6514:  return (uint8x16_t) __builtin_aarch64_combinev8qi ((int8x8_t) __a,
        -: 6515:						     (int8x8_t) __b);
        -: 6516:}
        -: 6517:
        -: 6518:__extension__ extern __inline uint16x8_t
        -: 6519:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6520:vcombine_u16 (uint16x4_t __a, uint16x4_t __b)
        -: 6521:{
        -: 6522:  return (uint16x8_t) __builtin_aarch64_combinev4hi ((int16x4_t) __a,
        -: 6523:						     (int16x4_t) __b);
        -: 6524:}
        -: 6525:
        -: 6526:__extension__ extern __inline uint32x4_t
        -: 6527:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6528:vcombine_u32 (uint32x2_t __a, uint32x2_t __b)
        -: 6529:{
        -: 6530:  return (uint32x4_t) __builtin_aarch64_combinev2si ((int32x2_t) __a,
        -: 6531:						     (int32x2_t) __b);
        -: 6532:}
        -: 6533:
        -: 6534:__extension__ extern __inline uint64x2_t
        -: 6535:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6536:vcombine_u64 (uint64x1_t __a, uint64x1_t __b)
        -: 6537:{
        -: 6538:  return (uint64x2_t) __builtin_aarch64_combinedi (__a[0], __b[0]);
        -: 6539:}
        -: 6540:
        -: 6541:__extension__ extern __inline float64x2_t
        -: 6542:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6543:vcombine_f64 (float64x1_t __a, float64x1_t __b)
        -: 6544:{
        -: 6545:  return __builtin_aarch64_combinedf (__a[0], __b[0]);
        -: 6546:}
        -: 6547:
        -: 6548:__extension__ extern __inline poly8x16_t
        -: 6549:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6550:vcombine_p8 (poly8x8_t __a, poly8x8_t __b)
        -: 6551:{
        -: 6552:  return (poly8x16_t) __builtin_aarch64_combinev8qi ((int8x8_t) __a,
        -: 6553:						     (int8x8_t) __b);
        -: 6554:}
        -: 6555:
        -: 6556:__extension__ extern __inline poly16x8_t
        -: 6557:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6558:vcombine_p16 (poly16x4_t __a, poly16x4_t __b)
        -: 6559:{
        -: 6560:  return (poly16x8_t) __builtin_aarch64_combinev4hi ((int16x4_t) __a,
        -: 6561:						     (int16x4_t) __b);
        -: 6562:}
        -: 6563:
        -: 6564:__extension__ extern __inline poly64x2_t
        -: 6565:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6566:vcombine_p64 (poly64x1_t __a, poly64x1_t __b)
        -: 6567:{
        -: 6568:  return (poly64x2_t) __builtin_aarch64_combinedi_ppp (__a[0], __b[0]);
        -: 6569:}
        -: 6570:
        -: 6571:/* Start of temporary inline asm implementations.  */
        -: 6572:
        -: 6573:__extension__ extern __inline int8x8_t
        -: 6574:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6575:vaba_s8 (int8x8_t a, int8x8_t b, int8x8_t c)
        -: 6576:{
        -: 6577:  int8x8_t result;
        -: 6578:  __asm__ ("saba %0.8b,%2.8b,%3.8b"
        -: 6579:           : "=w"(result)
        -: 6580:           : "0"(a), "w"(b), "w"(c)
        -: 6581:           : /* No clobbers */);
        -: 6582:  return result;
        -: 6583:}
        -: 6584:
        -: 6585:__extension__ extern __inline int16x4_t
        -: 6586:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6587:vaba_s16 (int16x4_t a, int16x4_t b, int16x4_t c)
        -: 6588:{
        -: 6589:  int16x4_t result;
        -: 6590:  __asm__ ("saba %0.4h,%2.4h,%3.4h"
        -: 6591:           : "=w"(result)
        -: 6592:           : "0"(a), "w"(b), "w"(c)
        -: 6593:           : /* No clobbers */);
        -: 6594:  return result;
        -: 6595:}
        -: 6596:
        -: 6597:__extension__ extern __inline int32x2_t
        -: 6598:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6599:vaba_s32 (int32x2_t a, int32x2_t b, int32x2_t c)
        -: 6600:{
        -: 6601:  int32x2_t result;
        -: 6602:  __asm__ ("saba %0.2s,%2.2s,%3.2s"
        -: 6603:           : "=w"(result)
        -: 6604:           : "0"(a), "w"(b), "w"(c)
        -: 6605:           : /* No clobbers */);
        -: 6606:  return result;
        -: 6607:}
        -: 6608:
        -: 6609:__extension__ extern __inline uint8x8_t
        -: 6610:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6611:vaba_u8 (uint8x8_t a, uint8x8_t b, uint8x8_t c)
        -: 6612:{
        -: 6613:  uint8x8_t result;
        -: 6614:  __asm__ ("uaba %0.8b,%2.8b,%3.8b"
        -: 6615:           : "=w"(result)
        -: 6616:           : "0"(a), "w"(b), "w"(c)
        -: 6617:           : /* No clobbers */);
        -: 6618:  return result;
        -: 6619:}
        -: 6620:
        -: 6621:__extension__ extern __inline uint16x4_t
        -: 6622:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6623:vaba_u16 (uint16x4_t a, uint16x4_t b, uint16x4_t c)
        -: 6624:{
        -: 6625:  uint16x4_t result;
        -: 6626:  __asm__ ("uaba %0.4h,%2.4h,%3.4h"
        -: 6627:           : "=w"(result)
        -: 6628:           : "0"(a), "w"(b), "w"(c)
        -: 6629:           : /* No clobbers */);
        -: 6630:  return result;
        -: 6631:}
        -: 6632:
        -: 6633:__extension__ extern __inline uint32x2_t
        -: 6634:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6635:vaba_u32 (uint32x2_t a, uint32x2_t b, uint32x2_t c)
        -: 6636:{
        -: 6637:  uint32x2_t result;
        -: 6638:  __asm__ ("uaba %0.2s,%2.2s,%3.2s"
        -: 6639:           : "=w"(result)
        -: 6640:           : "0"(a), "w"(b), "w"(c)
        -: 6641:           : /* No clobbers */);
        -: 6642:  return result;
        -: 6643:}
        -: 6644:
        -: 6645:__extension__ extern __inline int16x8_t
        -: 6646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6647:vabal_high_s8 (int16x8_t a, int8x16_t b, int8x16_t c)
        -: 6648:{
        -: 6649:  int16x8_t result;
        -: 6650:  __asm__ ("sabal2 %0.8h,%2.16b,%3.16b"
        -: 6651:           : "=w"(result)
        -: 6652:           : "0"(a), "w"(b), "w"(c)
        -: 6653:           : /* No clobbers */);
        -: 6654:  return result;
        -: 6655:}
        -: 6656:
        -: 6657:__extension__ extern __inline int32x4_t
        -: 6658:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6659:vabal_high_s16 (int32x4_t a, int16x8_t b, int16x8_t c)
        -: 6660:{
        -: 6661:  int32x4_t result;
        -: 6662:  __asm__ ("sabal2 %0.4s,%2.8h,%3.8h"
        -: 6663:           : "=w"(result)
        -: 6664:           : "0"(a), "w"(b), "w"(c)
        -: 6665:           : /* No clobbers */);
        -: 6666:  return result;
        -: 6667:}
        -: 6668:
        -: 6669:__extension__ extern __inline int64x2_t
        -: 6670:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6671:vabal_high_s32 (int64x2_t a, int32x4_t b, int32x4_t c)
        -: 6672:{
        -: 6673:  int64x2_t result;
        -: 6674:  __asm__ ("sabal2 %0.2d,%2.4s,%3.4s"
        -: 6675:           : "=w"(result)
        -: 6676:           : "0"(a), "w"(b), "w"(c)
        -: 6677:           : /* No clobbers */);
        -: 6678:  return result;
        -: 6679:}
        -: 6680:
        -: 6681:__extension__ extern __inline uint16x8_t
        -: 6682:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6683:vabal_high_u8 (uint16x8_t a, uint8x16_t b, uint8x16_t c)
        -: 6684:{
        -: 6685:  uint16x8_t result;
        -: 6686:  __asm__ ("uabal2 %0.8h,%2.16b,%3.16b"
        -: 6687:           : "=w"(result)
        -: 6688:           : "0"(a), "w"(b), "w"(c)
        -: 6689:           : /* No clobbers */);
        -: 6690:  return result;
        -: 6691:}
        -: 6692:
        -: 6693:__extension__ extern __inline uint32x4_t
        -: 6694:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6695:vabal_high_u16 (uint32x4_t a, uint16x8_t b, uint16x8_t c)
        -: 6696:{
        -: 6697:  uint32x4_t result;
        -: 6698:  __asm__ ("uabal2 %0.4s,%2.8h,%3.8h"
        -: 6699:           : "=w"(result)
        -: 6700:           : "0"(a), "w"(b), "w"(c)
        -: 6701:           : /* No clobbers */);
        -: 6702:  return result;
        -: 6703:}
        -: 6704:
        -: 6705:__extension__ extern __inline uint64x2_t
        -: 6706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6707:vabal_high_u32 (uint64x2_t a, uint32x4_t b, uint32x4_t c)
        -: 6708:{
        -: 6709:  uint64x2_t result;
        -: 6710:  __asm__ ("uabal2 %0.2d,%2.4s,%3.4s"
        -: 6711:           : "=w"(result)
        -: 6712:           : "0"(a), "w"(b), "w"(c)
        -: 6713:           : /* No clobbers */);
        -: 6714:  return result;
        -: 6715:}
        -: 6716:
        -: 6717:__extension__ extern __inline int16x8_t
        -: 6718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6719:vabal_s8 (int16x8_t a, int8x8_t b, int8x8_t c)
        -: 6720:{
        -: 6721:  int16x8_t result;
        -: 6722:  __asm__ ("sabal %0.8h,%2.8b,%3.8b"
        -: 6723:           : "=w"(result)
        -: 6724:           : "0"(a), "w"(b), "w"(c)
        -: 6725:           : /* No clobbers */);
        -: 6726:  return result;
        -: 6727:}
        -: 6728:
        -: 6729:__extension__ extern __inline int32x4_t
        -: 6730:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6731:vabal_s16 (int32x4_t a, int16x4_t b, int16x4_t c)
        -: 6732:{
        -: 6733:  int32x4_t result;
        -: 6734:  __asm__ ("sabal %0.4s,%2.4h,%3.4h"
        -: 6735:           : "=w"(result)
        -: 6736:           : "0"(a), "w"(b), "w"(c)
        -: 6737:           : /* No clobbers */);
        -: 6738:  return result;
        -: 6739:}
        -: 6740:
        -: 6741:__extension__ extern __inline int64x2_t
        -: 6742:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6743:vabal_s32 (int64x2_t a, int32x2_t b, int32x2_t c)
        -: 6744:{
        -: 6745:  int64x2_t result;
        -: 6746:  __asm__ ("sabal %0.2d,%2.2s,%3.2s"
        -: 6747:           : "=w"(result)
        -: 6748:           : "0"(a), "w"(b), "w"(c)
        -: 6749:           : /* No clobbers */);
        -: 6750:  return result;
        -: 6751:}
        -: 6752:
        -: 6753:__extension__ extern __inline uint16x8_t
        -: 6754:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6755:vabal_u8 (uint16x8_t a, uint8x8_t b, uint8x8_t c)
        -: 6756:{
        -: 6757:  uint16x8_t result;
        -: 6758:  __asm__ ("uabal %0.8h,%2.8b,%3.8b"
        -: 6759:           : "=w"(result)
        -: 6760:           : "0"(a), "w"(b), "w"(c)
        -: 6761:           : /* No clobbers */);
        -: 6762:  return result;
        -: 6763:}
        -: 6764:
        -: 6765:__extension__ extern __inline uint32x4_t
        -: 6766:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6767:vabal_u16 (uint32x4_t a, uint16x4_t b, uint16x4_t c)
        -: 6768:{
        -: 6769:  uint32x4_t result;
        -: 6770:  __asm__ ("uabal %0.4s,%2.4h,%3.4h"
        -: 6771:           : "=w"(result)
        -: 6772:           : "0"(a), "w"(b), "w"(c)
        -: 6773:           : /* No clobbers */);
        -: 6774:  return result;
        -: 6775:}
        -: 6776:
        -: 6777:__extension__ extern __inline uint64x2_t
        -: 6778:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6779:vabal_u32 (uint64x2_t a, uint32x2_t b, uint32x2_t c)
        -: 6780:{
        -: 6781:  uint64x2_t result;
        -: 6782:  __asm__ ("uabal %0.2d,%2.2s,%3.2s"
        -: 6783:           : "=w"(result)
        -: 6784:           : "0"(a), "w"(b), "w"(c)
        -: 6785:           : /* No clobbers */);
        -: 6786:  return result;
        -: 6787:}
        -: 6788:
        -: 6789:__extension__ extern __inline int8x16_t
        -: 6790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6791:vabaq_s8 (int8x16_t a, int8x16_t b, int8x16_t c)
        -: 6792:{
        -: 6793:  int8x16_t result;
        -: 6794:  __asm__ ("saba %0.16b,%2.16b,%3.16b"
        -: 6795:           : "=w"(result)
        -: 6796:           : "0"(a), "w"(b), "w"(c)
        -: 6797:           : /* No clobbers */);
        -: 6798:  return result;
        -: 6799:}
        -: 6800:
        -: 6801:__extension__ extern __inline int16x8_t
        -: 6802:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6803:vabaq_s16 (int16x8_t a, int16x8_t b, int16x8_t c)
        -: 6804:{
        -: 6805:  int16x8_t result;
        -: 6806:  __asm__ ("saba %0.8h,%2.8h,%3.8h"
        -: 6807:           : "=w"(result)
        -: 6808:           : "0"(a), "w"(b), "w"(c)
        -: 6809:           : /* No clobbers */);
        -: 6810:  return result;
        -: 6811:}
        -: 6812:
        -: 6813:__extension__ extern __inline int32x4_t
        -: 6814:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6815:vabaq_s32 (int32x4_t a, int32x4_t b, int32x4_t c)
        -: 6816:{
        -: 6817:  int32x4_t result;
        -: 6818:  __asm__ ("saba %0.4s,%2.4s,%3.4s"
        -: 6819:           : "=w"(result)
        -: 6820:           : "0"(a), "w"(b), "w"(c)
        -: 6821:           : /* No clobbers */);
        -: 6822:  return result;
        -: 6823:}
        -: 6824:
        -: 6825:__extension__ extern __inline uint8x16_t
        -: 6826:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6827:vabaq_u8 (uint8x16_t a, uint8x16_t b, uint8x16_t c)
        -: 6828:{
        -: 6829:  uint8x16_t result;
        -: 6830:  __asm__ ("uaba %0.16b,%2.16b,%3.16b"
        -: 6831:           : "=w"(result)
        -: 6832:           : "0"(a), "w"(b), "w"(c)
        -: 6833:           : /* No clobbers */);
        -: 6834:  return result;
        -: 6835:}
        -: 6836:
        -: 6837:__extension__ extern __inline uint16x8_t
        -: 6838:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6839:vabaq_u16 (uint16x8_t a, uint16x8_t b, uint16x8_t c)
        -: 6840:{
        -: 6841:  uint16x8_t result;
        -: 6842:  __asm__ ("uaba %0.8h,%2.8h,%3.8h"
        -: 6843:           : "=w"(result)
        -: 6844:           : "0"(a), "w"(b), "w"(c)
        -: 6845:           : /* No clobbers */);
        -: 6846:  return result;
        -: 6847:}
        -: 6848:
        -: 6849:__extension__ extern __inline uint32x4_t
        -: 6850:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6851:vabaq_u32 (uint32x4_t a, uint32x4_t b, uint32x4_t c)
        -: 6852:{
        -: 6853:  uint32x4_t result;
        -: 6854:  __asm__ ("uaba %0.4s,%2.4s,%3.4s"
        -: 6855:           : "=w"(result)
        -: 6856:           : "0"(a), "w"(b), "w"(c)
        -: 6857:           : /* No clobbers */);
        -: 6858:  return result;
        -: 6859:}
        -: 6860:
        -: 6861:__extension__ extern __inline int8x8_t
        -: 6862:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6863:vabd_s8 (int8x8_t a, int8x8_t b)
        -: 6864:{
        -: 6865:  int8x8_t result;
        -: 6866:  __asm__ ("sabd %0.8b, %1.8b, %2.8b"
        -: 6867:           : "=w"(result)
        -: 6868:           : "w"(a), "w"(b)
        -: 6869:           : /* No clobbers */);
        -: 6870:  return result;
        -: 6871:}
        -: 6872:
        -: 6873:__extension__ extern __inline int16x4_t
        -: 6874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6875:vabd_s16 (int16x4_t a, int16x4_t b)
        -: 6876:{
        -: 6877:  int16x4_t result;
        -: 6878:  __asm__ ("sabd %0.4h, %1.4h, %2.4h"
        -: 6879:           : "=w"(result)
        -: 6880:           : "w"(a), "w"(b)
        -: 6881:           : /* No clobbers */);
        -: 6882:  return result;
        -: 6883:}
        -: 6884:
        -: 6885:__extension__ extern __inline int32x2_t
        -: 6886:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6887:vabd_s32 (int32x2_t a, int32x2_t b)
        -: 6888:{
        -: 6889:  int32x2_t result;
        -: 6890:  __asm__ ("sabd %0.2s, %1.2s, %2.2s"
        -: 6891:           : "=w"(result)
        -: 6892:           : "w"(a), "w"(b)
        -: 6893:           : /* No clobbers */);
        -: 6894:  return result;
        -: 6895:}
        -: 6896:
        -: 6897:__extension__ extern __inline uint8x8_t
        -: 6898:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6899:vabd_u8 (uint8x8_t a, uint8x8_t b)
        -: 6900:{
        -: 6901:  uint8x8_t result;
        -: 6902:  __asm__ ("uabd %0.8b, %1.8b, %2.8b"
        -: 6903:           : "=w"(result)
        -: 6904:           : "w"(a), "w"(b)
        -: 6905:           : /* No clobbers */);
        -: 6906:  return result;
        -: 6907:}
        -: 6908:
        -: 6909:__extension__ extern __inline uint16x4_t
        -: 6910:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6911:vabd_u16 (uint16x4_t a, uint16x4_t b)
        -: 6912:{
        -: 6913:  uint16x4_t result;
        -: 6914:  __asm__ ("uabd %0.4h, %1.4h, %2.4h"
        -: 6915:           : "=w"(result)
        -: 6916:           : "w"(a), "w"(b)
        -: 6917:           : /* No clobbers */);
        -: 6918:  return result;
        -: 6919:}
        -: 6920:
        -: 6921:__extension__ extern __inline uint32x2_t
        -: 6922:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6923:vabd_u32 (uint32x2_t a, uint32x2_t b)
        -: 6924:{
        -: 6925:  uint32x2_t result;
        -: 6926:  __asm__ ("uabd %0.2s, %1.2s, %2.2s"
        -: 6927:           : "=w"(result)
        -: 6928:           : "w"(a), "w"(b)
        -: 6929:           : /* No clobbers */);
        -: 6930:  return result;
        -: 6931:}
        -: 6932:
        -: 6933:__extension__ extern __inline int16x8_t
        -: 6934:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6935:vabdl_high_s8 (int8x16_t a, int8x16_t b)
        -: 6936:{
        -: 6937:  int16x8_t result;
        -: 6938:  __asm__ ("sabdl2 %0.8h,%1.16b,%2.16b"
        -: 6939:           : "=w"(result)
        -: 6940:           : "w"(a), "w"(b)
        -: 6941:           : /* No clobbers */);
        -: 6942:  return result;
        -: 6943:}
        -: 6944:
        -: 6945:__extension__ extern __inline int32x4_t
        -: 6946:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6947:vabdl_high_s16 (int16x8_t a, int16x8_t b)
        -: 6948:{
        -: 6949:  int32x4_t result;
        -: 6950:  __asm__ ("sabdl2 %0.4s,%1.8h,%2.8h"
        -: 6951:           : "=w"(result)
        -: 6952:           : "w"(a), "w"(b)
        -: 6953:           : /* No clobbers */);
        -: 6954:  return result;
        -: 6955:}
        -: 6956:
        -: 6957:__extension__ extern __inline int64x2_t
        -: 6958:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6959:vabdl_high_s32 (int32x4_t a, int32x4_t b)
        -: 6960:{
        -: 6961:  int64x2_t result;
        -: 6962:  __asm__ ("sabdl2 %0.2d,%1.4s,%2.4s"
        -: 6963:           : "=w"(result)
        -: 6964:           : "w"(a), "w"(b)
        -: 6965:           : /* No clobbers */);
        -: 6966:  return result;
        -: 6967:}
        -: 6968:
        -: 6969:__extension__ extern __inline uint16x8_t
        -: 6970:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6971:vabdl_high_u8 (uint8x16_t a, uint8x16_t b)
        -: 6972:{
        -: 6973:  uint16x8_t result;
        -: 6974:  __asm__ ("uabdl2 %0.8h,%1.16b,%2.16b"
        -: 6975:           : "=w"(result)
        -: 6976:           : "w"(a), "w"(b)
        -: 6977:           : /* No clobbers */);
        -: 6978:  return result;
        -: 6979:}
        -: 6980:
        -: 6981:__extension__ extern __inline uint32x4_t
        -: 6982:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6983:vabdl_high_u16 (uint16x8_t a, uint16x8_t b)
        -: 6984:{
        -: 6985:  uint32x4_t result;
        -: 6986:  __asm__ ("uabdl2 %0.4s,%1.8h,%2.8h"
        -: 6987:           : "=w"(result)
        -: 6988:           : "w"(a), "w"(b)
        -: 6989:           : /* No clobbers */);
        -: 6990:  return result;
        -: 6991:}
        -: 6992:
        -: 6993:__extension__ extern __inline uint64x2_t
        -: 6994:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 6995:vabdl_high_u32 (uint32x4_t a, uint32x4_t b)
        -: 6996:{
        -: 6997:  uint64x2_t result;
        -: 6998:  __asm__ ("uabdl2 %0.2d,%1.4s,%2.4s"
        -: 6999:           : "=w"(result)
        -: 7000:           : "w"(a), "w"(b)
        -: 7001:           : /* No clobbers */);
        -: 7002:  return result;
        -: 7003:}
        -: 7004:
        -: 7005:__extension__ extern __inline int16x8_t
        -: 7006:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7007:vabdl_s8 (int8x8_t a, int8x8_t b)
        -: 7008:{
        -: 7009:  int16x8_t result;
        -: 7010:  __asm__ ("sabdl %0.8h, %1.8b, %2.8b"
        -: 7011:           : "=w"(result)
        -: 7012:           : "w"(a), "w"(b)
        -: 7013:           : /* No clobbers */);
        -: 7014:  return result;
        -: 7015:}
        -: 7016:
        -: 7017:__extension__ extern __inline int32x4_t
        -: 7018:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7019:vabdl_s16 (int16x4_t a, int16x4_t b)
        -: 7020:{
        -: 7021:  int32x4_t result;
        -: 7022:  __asm__ ("sabdl %0.4s, %1.4h, %2.4h"
        -: 7023:           : "=w"(result)
        -: 7024:           : "w"(a), "w"(b)
        -: 7025:           : /* No clobbers */);
        -: 7026:  return result;
        -: 7027:}
        -: 7028:
        -: 7029:__extension__ extern __inline int64x2_t
        -: 7030:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7031:vabdl_s32 (int32x2_t a, int32x2_t b)
        -: 7032:{
        -: 7033:  int64x2_t result;
        -: 7034:  __asm__ ("sabdl %0.2d, %1.2s, %2.2s"
        -: 7035:           : "=w"(result)
        -: 7036:           : "w"(a), "w"(b)
        -: 7037:           : /* No clobbers */);
        -: 7038:  return result;
        -: 7039:}
        -: 7040:
        -: 7041:__extension__ extern __inline uint16x8_t
        -: 7042:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7043:vabdl_u8 (uint8x8_t a, uint8x8_t b)
        -: 7044:{
        -: 7045:  uint16x8_t result;
        -: 7046:  __asm__ ("uabdl %0.8h, %1.8b, %2.8b"
        -: 7047:           : "=w"(result)
        -: 7048:           : "w"(a), "w"(b)
        -: 7049:           : /* No clobbers */);
        -: 7050:  return result;
        -: 7051:}
        -: 7052:
        -: 7053:__extension__ extern __inline uint32x4_t
        -: 7054:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7055:vabdl_u16 (uint16x4_t a, uint16x4_t b)
        -: 7056:{
        -: 7057:  uint32x4_t result;
        -: 7058:  __asm__ ("uabdl %0.4s, %1.4h, %2.4h"
        -: 7059:           : "=w"(result)
        -: 7060:           : "w"(a), "w"(b)
        -: 7061:           : /* No clobbers */);
        -: 7062:  return result;
        -: 7063:}
        -: 7064:
        -: 7065:__extension__ extern __inline uint64x2_t
        -: 7066:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7067:vabdl_u32 (uint32x2_t a, uint32x2_t b)
        -: 7068:{
        -: 7069:  uint64x2_t result;
        -: 7070:  __asm__ ("uabdl %0.2d, %1.2s, %2.2s"
        -: 7071:           : "=w"(result)
        -: 7072:           : "w"(a), "w"(b)
        -: 7073:           : /* No clobbers */);
        -: 7074:  return result;
        -: 7075:}
        -: 7076:
        -: 7077:__extension__ extern __inline int8x16_t
        -: 7078:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7079:vabdq_s8 (int8x16_t a, int8x16_t b)
        -: 7080:{
        -: 7081:  int8x16_t result;
        -: 7082:  __asm__ ("sabd %0.16b, %1.16b, %2.16b"
        -: 7083:           : "=w"(result)
        -: 7084:           : "w"(a), "w"(b)
        -: 7085:           : /* No clobbers */);
        -: 7086:  return result;
        -: 7087:}
        -: 7088:
        -: 7089:__extension__ extern __inline int16x8_t
        -: 7090:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7091:vabdq_s16 (int16x8_t a, int16x8_t b)
        -: 7092:{
        -: 7093:  int16x8_t result;
        -: 7094:  __asm__ ("sabd %0.8h, %1.8h, %2.8h"
        -: 7095:           : "=w"(result)
        -: 7096:           : "w"(a), "w"(b)
        -: 7097:           : /* No clobbers */);
        -: 7098:  return result;
        -: 7099:}
        -: 7100:
        -: 7101:__extension__ extern __inline int32x4_t
        -: 7102:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7103:vabdq_s32 (int32x4_t a, int32x4_t b)
        -: 7104:{
        -: 7105:  int32x4_t result;
        -: 7106:  __asm__ ("sabd %0.4s, %1.4s, %2.4s"
        -: 7107:           : "=w"(result)
        -: 7108:           : "w"(a), "w"(b)
        -: 7109:           : /* No clobbers */);
        -: 7110:  return result;
        -: 7111:}
        -: 7112:
        -: 7113:__extension__ extern __inline uint8x16_t
        -: 7114:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7115:vabdq_u8 (uint8x16_t a, uint8x16_t b)
        -: 7116:{
        -: 7117:  uint8x16_t result;
        -: 7118:  __asm__ ("uabd %0.16b, %1.16b, %2.16b"
        -: 7119:           : "=w"(result)
        -: 7120:           : "w"(a), "w"(b)
        -: 7121:           : /* No clobbers */);
        -: 7122:  return result;
        -: 7123:}
        -: 7124:
        -: 7125:__extension__ extern __inline uint16x8_t
        -: 7126:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7127:vabdq_u16 (uint16x8_t a, uint16x8_t b)
        -: 7128:{
        -: 7129:  uint16x8_t result;
        -: 7130:  __asm__ ("uabd %0.8h, %1.8h, %2.8h"
        -: 7131:           : "=w"(result)
        -: 7132:           : "w"(a), "w"(b)
        -: 7133:           : /* No clobbers */);
        -: 7134:  return result;
        -: 7135:}
        -: 7136:
        -: 7137:__extension__ extern __inline uint32x4_t
        -: 7138:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7139:vabdq_u32 (uint32x4_t a, uint32x4_t b)
        -: 7140:{
        -: 7141:  uint32x4_t result;
        -: 7142:  __asm__ ("uabd %0.4s, %1.4s, %2.4s"
        -: 7143:           : "=w"(result)
        -: 7144:           : "w"(a), "w"(b)
        -: 7145:           : /* No clobbers */);
        -: 7146:  return result;
        -: 7147:}
        -: 7148:
        -: 7149:__extension__ extern __inline int16_t
        -: 7150:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7151:vaddlv_s8 (int8x8_t a)
        -: 7152:{
        -: 7153:  int16_t result;
        -: 7154:  __asm__ ("saddlv %h0,%1.8b"
        -: 7155:           : "=w"(result)
        -: 7156:           : "w"(a)
        -: 7157:           : /* No clobbers */);
        -: 7158:  return result;
        -: 7159:}
        -: 7160:
        -: 7161:__extension__ extern __inline int32_t
        -: 7162:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7163:vaddlv_s16 (int16x4_t a)
        -: 7164:{
        -: 7165:  int32_t result;
        -: 7166:  __asm__ ("saddlv %s0,%1.4h"
        -: 7167:           : "=w"(result)
        -: 7168:           : "w"(a)
        -: 7169:           : /* No clobbers */);
        -: 7170:  return result;
        -: 7171:}
        -: 7172:
        -: 7173:__extension__ extern __inline uint16_t
        -: 7174:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7175:vaddlv_u8 (uint8x8_t a)
        -: 7176:{
        -: 7177:  uint16_t result;
        -: 7178:  __asm__ ("uaddlv %h0,%1.8b"
        -: 7179:           : "=w"(result)
        -: 7180:           : "w"(a)
        -: 7181:           : /* No clobbers */);
        -: 7182:  return result;
        -: 7183:}
        -: 7184:
        -: 7185:__extension__ extern __inline uint32_t
        -: 7186:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7187:vaddlv_u16 (uint16x4_t a)
        -: 7188:{
        -: 7189:  uint32_t result;
        -: 7190:  __asm__ ("uaddlv %s0,%1.4h"
        -: 7191:           : "=w"(result)
        -: 7192:           : "w"(a)
        -: 7193:           : /* No clobbers */);
        -: 7194:  return result;
        -: 7195:}
        -: 7196:
        -: 7197:__extension__ extern __inline int16_t
        -: 7198:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7199:vaddlvq_s8 (int8x16_t a)
        -: 7200:{
        -: 7201:  int16_t result;
        -: 7202:  __asm__ ("saddlv %h0,%1.16b"
        -: 7203:           : "=w"(result)
        -: 7204:           : "w"(a)
        -: 7205:           : /* No clobbers */);
        -: 7206:  return result;
        -: 7207:}
        -: 7208:
        -: 7209:__extension__ extern __inline int32_t
        -: 7210:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7211:vaddlvq_s16 (int16x8_t a)
        -: 7212:{
        -: 7213:  int32_t result;
        -: 7214:  __asm__ ("saddlv %s0,%1.8h"
        -: 7215:           : "=w"(result)
        -: 7216:           : "w"(a)
        -: 7217:           : /* No clobbers */);
        -: 7218:  return result;
        -: 7219:}
        -: 7220:
        -: 7221:__extension__ extern __inline int64_t
        -: 7222:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7223:vaddlvq_s32 (int32x4_t a)
        -: 7224:{
        -: 7225:  int64_t result;
        -: 7226:  __asm__ ("saddlv %d0,%1.4s"
        -: 7227:           : "=w"(result)
        -: 7228:           : "w"(a)
        -: 7229:           : /* No clobbers */);
        -: 7230:  return result;
        -: 7231:}
        -: 7232:
        -: 7233:__extension__ extern __inline uint16_t
        -: 7234:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7235:vaddlvq_u8 (uint8x16_t a)
        -: 7236:{
        -: 7237:  uint16_t result;
        -: 7238:  __asm__ ("uaddlv %h0,%1.16b"
        -: 7239:           : "=w"(result)
        -: 7240:           : "w"(a)
        -: 7241:           : /* No clobbers */);
        -: 7242:  return result;
        -: 7243:}
        -: 7244:
        -: 7245:__extension__ extern __inline uint32_t
        -: 7246:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7247:vaddlvq_u16 (uint16x8_t a)
        -: 7248:{
        -: 7249:  uint32_t result;
        -: 7250:  __asm__ ("uaddlv %s0,%1.8h"
        -: 7251:           : "=w"(result)
        -: 7252:           : "w"(a)
        -: 7253:           : /* No clobbers */);
        -: 7254:  return result;
        -: 7255:}
        -: 7256:
        -: 7257:__extension__ extern __inline uint64_t
        -: 7258:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7259:vaddlvq_u32 (uint32x4_t a)
        -: 7260:{
        -: 7261:  uint64_t result;
        -: 7262:  __asm__ ("uaddlv %d0,%1.4s"
        -: 7263:           : "=w"(result)
        -: 7264:           : "w"(a)
        -: 7265:           : /* No clobbers */);
        -: 7266:  return result;
        -: 7267:}
        -: 7268:
        -: 7269:__extension__ extern __inline float32x2_t
        -: 7270:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7271:vcvtx_f32_f64 (float64x2_t a)
        -: 7272:{
        -: 7273:  float32x2_t result;
        -: 7274:  __asm__ ("fcvtxn %0.2s,%1.2d"
        -: 7275:           : "=w"(result)
        -: 7276:           : "w"(a)
        -: 7277:           : /* No clobbers */);
        -: 7278:  return result;
        -: 7279:}
        -: 7280:
        -: 7281:__extension__ extern __inline float32x4_t
        -: 7282:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7283:vcvtx_high_f32_f64 (float32x2_t a, float64x2_t b)
        -: 7284:{
        -: 7285:  float32x4_t result;
        -: 7286:  __asm__ ("fcvtxn2 %0.4s,%1.2d"
        -: 7287:           : "=w"(result)
        -: 7288:           : "w" (b), "0"(a)
        -: 7289:           : /* No clobbers */);
        -: 7290:  return result;
        -: 7291:}
        -: 7292:
        -: 7293:__extension__ extern __inline float32_t
        -: 7294:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7295:vcvtxd_f32_f64 (float64_t a)
        -: 7296:{
        -: 7297:  float32_t result;
        -: 7298:  __asm__ ("fcvtxn %s0,%d1"
        -: 7299:           : "=w"(result)
        -: 7300:           : "w"(a)
        -: 7301:           : /* No clobbers */);
        -: 7302:  return result;
        -: 7303:}
        -: 7304:
        -: 7305:__extension__ extern __inline float32x2_t
        -: 7306:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7307:vmla_n_f32 (float32x2_t a, float32x2_t b, float32_t c)
        -: 7308:{
        -: 7309:  float32x2_t result;
        -: 7310:  float32x2_t t1;
        -: 7311:  __asm__ ("fmul %1.2s, %3.2s, %4.s[0]; fadd %0.2s, %0.2s, %1.2s"
        -: 7312:           : "=w"(result), "=w"(t1)
        -: 7313:           : "0"(a), "w"(b), "w"(c)
        -: 7314:           : /* No clobbers */);
        -: 7315:  return result;
        -: 7316:}
        -: 7317:
        -: 7318:__extension__ extern __inline int16x4_t
        -: 7319:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7320:vmla_n_s16 (int16x4_t a, int16x4_t b, int16_t c)
        -: 7321:{
        -: 7322:  int16x4_t result;
        -: 7323:  __asm__ ("mla %0.4h,%2.4h,%3.h[0]"
        -: 7324:           : "=w"(result)
        -: 7325:           : "0"(a), "w"(b), "x"(c)
        -: 7326:           : /* No clobbers */);
        -: 7327:  return result;
        -: 7328:}
        -: 7329:
        -: 7330:__extension__ extern __inline int32x2_t
        -: 7331:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7332:vmla_n_s32 (int32x2_t a, int32x2_t b, int32_t c)
        -: 7333:{
        -: 7334:  int32x2_t result;
        -: 7335:  __asm__ ("mla %0.2s,%2.2s,%3.s[0]"
        -: 7336:           : "=w"(result)
        -: 7337:           : "0"(a), "w"(b), "w"(c)
        -: 7338:           : /* No clobbers */);
        -: 7339:  return result;
        -: 7340:}
        -: 7341:
        -: 7342:__extension__ extern __inline uint16x4_t
        -: 7343:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7344:vmla_n_u16 (uint16x4_t a, uint16x4_t b, uint16_t c)
        -: 7345:{
        -: 7346:  uint16x4_t result;
        -: 7347:  __asm__ ("mla %0.4h,%2.4h,%3.h[0]"
        -: 7348:           : "=w"(result)
        -: 7349:           : "0"(a), "w"(b), "x"(c)
        -: 7350:           : /* No clobbers */);
        -: 7351:  return result;
        -: 7352:}
        -: 7353:
        -: 7354:__extension__ extern __inline uint32x2_t
        -: 7355:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7356:vmla_n_u32 (uint32x2_t a, uint32x2_t b, uint32_t c)
        -: 7357:{
        -: 7358:  uint32x2_t result;
        -: 7359:  __asm__ ("mla %0.2s,%2.2s,%3.s[0]"
        -: 7360:           : "=w"(result)
        -: 7361:           : "0"(a), "w"(b), "w"(c)
        -: 7362:           : /* No clobbers */);
        -: 7363:  return result;
        -: 7364:}
        -: 7365:
        -: 7366:__extension__ extern __inline int8x8_t
        -: 7367:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7368:vmla_s8 (int8x8_t a, int8x8_t b, int8x8_t c)
        -: 7369:{
        -: 7370:  int8x8_t result;
        -: 7371:  __asm__ ("mla %0.8b, %2.8b, %3.8b"
        -: 7372:           : "=w"(result)
        -: 7373:           : "0"(a), "w"(b), "w"(c)
        -: 7374:           : /* No clobbers */);
        -: 7375:  return result;
        -: 7376:}
        -: 7377:
        -: 7378:__extension__ extern __inline int16x4_t
        -: 7379:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7380:vmla_s16 (int16x4_t a, int16x4_t b, int16x4_t c)
        -: 7381:{
        -: 7382:  int16x4_t result;
        -: 7383:  __asm__ ("mla %0.4h, %2.4h, %3.4h"
        -: 7384:           : "=w"(result)
        -: 7385:           : "0"(a), "w"(b), "w"(c)
        -: 7386:           : /* No clobbers */);
        -: 7387:  return result;
        -: 7388:}
        -: 7389:
        -: 7390:__extension__ extern __inline int32x2_t
        -: 7391:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7392:vmla_s32 (int32x2_t a, int32x2_t b, int32x2_t c)
        -: 7393:{
        -: 7394:  int32x2_t result;
        -: 7395:  __asm__ ("mla %0.2s, %2.2s, %3.2s"
        -: 7396:           : "=w"(result)
        -: 7397:           : "0"(a), "w"(b), "w"(c)
        -: 7398:           : /* No clobbers */);
        -: 7399:  return result;
        -: 7400:}
        -: 7401:
        -: 7402:__extension__ extern __inline uint8x8_t
        -: 7403:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7404:vmla_u8 (uint8x8_t a, uint8x8_t b, uint8x8_t c)
        -: 7405:{
        -: 7406:  uint8x8_t result;
        -: 7407:  __asm__ ("mla %0.8b, %2.8b, %3.8b"
        -: 7408:           : "=w"(result)
        -: 7409:           : "0"(a), "w"(b), "w"(c)
        -: 7410:           : /* No clobbers */);
        -: 7411:  return result;
        -: 7412:}
        -: 7413:
        -: 7414:__extension__ extern __inline uint16x4_t
        -: 7415:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7416:vmla_u16 (uint16x4_t a, uint16x4_t b, uint16x4_t c)
        -: 7417:{
        -: 7418:  uint16x4_t result;
        -: 7419:  __asm__ ("mla %0.4h, %2.4h, %3.4h"
        -: 7420:           : "=w"(result)
        -: 7421:           : "0"(a), "w"(b), "w"(c)
        -: 7422:           : /* No clobbers */);
        -: 7423:  return result;
        -: 7424:}
        -: 7425:
        -: 7426:__extension__ extern __inline uint32x2_t
        -: 7427:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7428:vmla_u32 (uint32x2_t a, uint32x2_t b, uint32x2_t c)
        -: 7429:{
        -: 7430:  uint32x2_t result;
        -: 7431:  __asm__ ("mla %0.2s, %2.2s, %3.2s"
        -: 7432:           : "=w"(result)
        -: 7433:           : "0"(a), "w"(b), "w"(c)
        -: 7434:           : /* No clobbers */);
        -: 7435:  return result;
        -: 7436:}
        -: 7437:
        -: 7438:#define vmlal_high_lane_s16(a, b, c, d)                                 \
        -: 7439:  __extension__                                                         \
        -: 7440:    ({                                                                  \
        -: 7441:       int16x4_t c_ = (c);                                              \
        -: 7442:       int16x8_t b_ = (b);                                              \
        -: 7443:       int32x4_t a_ = (a);                                              \
        -: 7444:       int32x4_t result;                                                \
        -: 7445:       __asm__ ("smlal2 %0.4s, %2.8h, %3.h[%4]"                         \
        -: 7446:                : "=w"(result)                                          \
        -: 7447:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 7448:                : /* No clobbers */);                                   \
        -: 7449:       result;                                                          \
        -: 7450:     })
        -: 7451:
        -: 7452:#define vmlal_high_lane_s32(a, b, c, d)                                 \
        -: 7453:  __extension__                                                         \
        -: 7454:    ({                                                                  \
        -: 7455:       int32x2_t c_ = (c);                                              \
        -: 7456:       int32x4_t b_ = (b);                                              \
        -: 7457:       int64x2_t a_ = (a);                                              \
        -: 7458:       int64x2_t result;                                                \
        -: 7459:       __asm__ ("smlal2 %0.2d, %2.4s, %3.s[%4]"                         \
        -: 7460:                : "=w"(result)                                          \
        -: 7461:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 7462:                : /* No clobbers */);                                   \
        -: 7463:       result;                                                          \
        -: 7464:     })
        -: 7465:
        -: 7466:#define vmlal_high_lane_u16(a, b, c, d)                                 \
        -: 7467:  __extension__                                                         \
        -: 7468:    ({                                                                  \
        -: 7469:       uint16x4_t c_ = (c);                                             \
        -: 7470:       uint16x8_t b_ = (b);                                             \
        -: 7471:       uint32x4_t a_ = (a);                                             \
        -: 7472:       uint32x4_t result;                                               \
        -: 7473:       __asm__ ("umlal2 %0.4s, %2.8h, %3.h[%4]"                         \
        -: 7474:                : "=w"(result)                                          \
        -: 7475:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 7476:                : /* No clobbers */);                                   \
        -: 7477:       result;                                                          \
        -: 7478:     })
        -: 7479:
        -: 7480:#define vmlal_high_lane_u32(a, b, c, d)                                 \
        -: 7481:  __extension__                                                         \
        -: 7482:    ({                                                                  \
        -: 7483:       uint32x2_t c_ = (c);                                             \
        -: 7484:       uint32x4_t b_ = (b);                                             \
        -: 7485:       uint64x2_t a_ = (a);                                             \
        -: 7486:       uint64x2_t result;                                               \
        -: 7487:       __asm__ ("umlal2 %0.2d, %2.4s, %3.s[%4]"                         \
        -: 7488:                : "=w"(result)                                          \
        -: 7489:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 7490:                : /* No clobbers */);                                   \
        -: 7491:       result;                                                          \
        -: 7492:     })
        -: 7493:
        -: 7494:#define vmlal_high_laneq_s16(a, b, c, d)                                \
        -: 7495:  __extension__                                                         \
        -: 7496:    ({                                                                  \
        -: 7497:       int16x8_t c_ = (c);                                              \
        -: 7498:       int16x8_t b_ = (b);                                              \
        -: 7499:       int32x4_t a_ = (a);                                              \
        -: 7500:       int32x4_t result;                                                \
        -: 7501:       __asm__ ("smlal2 %0.4s, %2.8h, %3.h[%4]"                         \
        -: 7502:                : "=w"(result)                                          \
        -: 7503:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 7504:                : /* No clobbers */);                                   \
        -: 7505:       result;                                                          \
        -: 7506:     })
        -: 7507:
        -: 7508:#define vmlal_high_laneq_s32(a, b, c, d)                                \
        -: 7509:  __extension__                                                         \
        -: 7510:    ({                                                                  \
        -: 7511:       int32x4_t c_ = (c);                                              \
        -: 7512:       int32x4_t b_ = (b);                                              \
        -: 7513:       int64x2_t a_ = (a);                                              \
        -: 7514:       int64x2_t result;                                                \
        -: 7515:       __asm__ ("smlal2 %0.2d, %2.4s, %3.s[%4]"                         \
        -: 7516:                : "=w"(result)                                          \
        -: 7517:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 7518:                : /* No clobbers */);                                   \
        -: 7519:       result;                                                          \
        -: 7520:     })
        -: 7521:
        -: 7522:#define vmlal_high_laneq_u16(a, b, c, d)                                \
        -: 7523:  __extension__                                                         \
        -: 7524:    ({                                                                  \
        -: 7525:       uint16x8_t c_ = (c);                                             \
        -: 7526:       uint16x8_t b_ = (b);                                             \
        -: 7527:       uint32x4_t a_ = (a);                                             \
        -: 7528:       uint32x4_t result;                                               \
        -: 7529:       __asm__ ("umlal2 %0.4s, %2.8h, %3.h[%4]"                         \
        -: 7530:                : "=w"(result)                                          \
        -: 7531:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 7532:                : /* No clobbers */);                                   \
        -: 7533:       result;                                                          \
        -: 7534:     })
        -: 7535:
        -: 7536:#define vmlal_high_laneq_u32(a, b, c, d)                                \
        -: 7537:  __extension__                                                         \
        -: 7538:    ({                                                                  \
        -: 7539:       uint32x4_t c_ = (c);                                             \
        -: 7540:       uint32x4_t b_ = (b);                                             \
        -: 7541:       uint64x2_t a_ = (a);                                             \
        -: 7542:       uint64x2_t result;                                               \
        -: 7543:       __asm__ ("umlal2 %0.2d, %2.4s, %3.s[%4]"                         \
        -: 7544:                : "=w"(result)                                          \
        -: 7545:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 7546:                : /* No clobbers */);                                   \
        -: 7547:       result;                                                          \
        -: 7548:     })
        -: 7549:
        -: 7550:__extension__ extern __inline int32x4_t
        -: 7551:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7552:vmlal_high_n_s16 (int32x4_t a, int16x8_t b, int16_t c)
        -: 7553:{
        -: 7554:  int32x4_t result;
        -: 7555:  __asm__ ("smlal2 %0.4s,%2.8h,%3.h[0]"
        -: 7556:           : "=w"(result)
        -: 7557:           : "0"(a), "w"(b), "x"(c)
        -: 7558:           : /* No clobbers */);
        -: 7559:  return result;
        -: 7560:}
        -: 7561:
        -: 7562:__extension__ extern __inline int64x2_t
        -: 7563:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7564:vmlal_high_n_s32 (int64x2_t a, int32x4_t b, int32_t c)
        -: 7565:{
        -: 7566:  int64x2_t result;
        -: 7567:  __asm__ ("smlal2 %0.2d,%2.4s,%3.s[0]"
        -: 7568:           : "=w"(result)
        -: 7569:           : "0"(a), "w"(b), "w"(c)
        -: 7570:           : /* No clobbers */);
        -: 7571:  return result;
        -: 7572:}
        -: 7573:
        -: 7574:__extension__ extern __inline uint32x4_t
        -: 7575:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7576:vmlal_high_n_u16 (uint32x4_t a, uint16x8_t b, uint16_t c)
        -: 7577:{
        -: 7578:  uint32x4_t result;
        -: 7579:  __asm__ ("umlal2 %0.4s,%2.8h,%3.h[0]"
        -: 7580:           : "=w"(result)
        -: 7581:           : "0"(a), "w"(b), "x"(c)
        -: 7582:           : /* No clobbers */);
        -: 7583:  return result;
        -: 7584:}
        -: 7585:
        -: 7586:__extension__ extern __inline uint64x2_t
        -: 7587:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7588:vmlal_high_n_u32 (uint64x2_t a, uint32x4_t b, uint32_t c)
        -: 7589:{
        -: 7590:  uint64x2_t result;
        -: 7591:  __asm__ ("umlal2 %0.2d,%2.4s,%3.s[0]"
        -: 7592:           : "=w"(result)
        -: 7593:           : "0"(a), "w"(b), "w"(c)
        -: 7594:           : /* No clobbers */);
        -: 7595:  return result;
        -: 7596:}
        -: 7597:
        -: 7598:__extension__ extern __inline int16x8_t
        -: 7599:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7600:vmlal_high_s8 (int16x8_t a, int8x16_t b, int8x16_t c)
        -: 7601:{
        -: 7602:  int16x8_t result;
        -: 7603:  __asm__ ("smlal2 %0.8h,%2.16b,%3.16b"
        -: 7604:           : "=w"(result)
        -: 7605:           : "0"(a), "w"(b), "w"(c)
        -: 7606:           : /* No clobbers */);
        -: 7607:  return result;
        -: 7608:}
        -: 7609:
        -: 7610:__extension__ extern __inline int32x4_t
        -: 7611:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7612:vmlal_high_s16 (int32x4_t a, int16x8_t b, int16x8_t c)
        -: 7613:{
        -: 7614:  int32x4_t result;
        -: 7615:  __asm__ ("smlal2 %0.4s,%2.8h,%3.8h"
        -: 7616:           : "=w"(result)
        -: 7617:           : "0"(a), "w"(b), "w"(c)
        -: 7618:           : /* No clobbers */);
        -: 7619:  return result;
        -: 7620:}
        -: 7621:
        -: 7622:__extension__ extern __inline int64x2_t
        -: 7623:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7624:vmlal_high_s32 (int64x2_t a, int32x4_t b, int32x4_t c)
        -: 7625:{
        -: 7626:  int64x2_t result;
        -: 7627:  __asm__ ("smlal2 %0.2d,%2.4s,%3.4s"
        -: 7628:           : "=w"(result)
        -: 7629:           : "0"(a), "w"(b), "w"(c)
        -: 7630:           : /* No clobbers */);
        -: 7631:  return result;
        -: 7632:}
        -: 7633:
        -: 7634:__extension__ extern __inline uint16x8_t
        -: 7635:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7636:vmlal_high_u8 (uint16x8_t a, uint8x16_t b, uint8x16_t c)
        -: 7637:{
        -: 7638:  uint16x8_t result;
        -: 7639:  __asm__ ("umlal2 %0.8h,%2.16b,%3.16b"
        -: 7640:           : "=w"(result)
        -: 7641:           : "0"(a), "w"(b), "w"(c)
        -: 7642:           : /* No clobbers */);
        -: 7643:  return result;
        -: 7644:}
        -: 7645:
        -: 7646:__extension__ extern __inline uint32x4_t
        -: 7647:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7648:vmlal_high_u16 (uint32x4_t a, uint16x8_t b, uint16x8_t c)
        -: 7649:{
        -: 7650:  uint32x4_t result;
        -: 7651:  __asm__ ("umlal2 %0.4s,%2.8h,%3.8h"
        -: 7652:           : "=w"(result)
        -: 7653:           : "0"(a), "w"(b), "w"(c)
        -: 7654:           : /* No clobbers */);
        -: 7655:  return result;
        -: 7656:}
        -: 7657:
        -: 7658:__extension__ extern __inline uint64x2_t
        -: 7659:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7660:vmlal_high_u32 (uint64x2_t a, uint32x4_t b, uint32x4_t c)
        -: 7661:{
        -: 7662:  uint64x2_t result;
        -: 7663:  __asm__ ("umlal2 %0.2d,%2.4s,%3.4s"
        -: 7664:           : "=w"(result)
        -: 7665:           : "0"(a), "w"(b), "w"(c)
        -: 7666:           : /* No clobbers */);
        -: 7667:  return result;
        -: 7668:}
        -: 7669:
        -: 7670:#define vmlal_lane_s16(a, b, c, d)                                      \
        -: 7671:  __extension__                                                         \
        -: 7672:    ({                                                                  \
        -: 7673:       int16x4_t c_ = (c);                                              \
        -: 7674:       int16x4_t b_ = (b);                                              \
        -: 7675:       int32x4_t a_ = (a);                                              \
        -: 7676:       int32x4_t result;                                                \
        -: 7677:       __asm__ ("smlal %0.4s,%2.4h,%3.h[%4]"                            \
        -: 7678:                : "=w"(result)                                          \
        -: 7679:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 7680:                : /* No clobbers */);                                   \
        -: 7681:       result;                                                          \
        -: 7682:     })
        -: 7683:
        -: 7684:#define vmlal_lane_s32(a, b, c, d)                                      \
        -: 7685:  __extension__                                                         \
        -: 7686:    ({                                                                  \
        -: 7687:       int32x2_t c_ = (c);                                              \
        -: 7688:       int32x2_t b_ = (b);                                              \
        -: 7689:       int64x2_t a_ = (a);                                              \
        -: 7690:       int64x2_t result;                                                \
        -: 7691:       __asm__ ("smlal %0.2d,%2.2s,%3.s[%4]"                            \
        -: 7692:                : "=w"(result)                                          \
        -: 7693:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 7694:                : /* No clobbers */);                                   \
        -: 7695:       result;                                                          \
        -: 7696:     })
        -: 7697:
        -: 7698:#define vmlal_lane_u16(a, b, c, d)                                      \
        -: 7699:  __extension__                                                         \
        -: 7700:    ({                                                                  \
        -: 7701:       uint16x4_t c_ = (c);                                             \
        -: 7702:       uint16x4_t b_ = (b);                                             \
        -: 7703:       uint32x4_t a_ = (a);                                             \
        -: 7704:       uint32x4_t result;                                               \
        -: 7705:       __asm__ ("umlal %0.4s,%2.4h,%3.h[%4]"                            \
        -: 7706:                : "=w"(result)                                          \
        -: 7707:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 7708:                : /* No clobbers */);                                   \
        -: 7709:       result;                                                          \
        -: 7710:     })
        -: 7711:
        -: 7712:#define vmlal_lane_u32(a, b, c, d)                                      \
        -: 7713:  __extension__                                                         \
        -: 7714:    ({                                                                  \
        -: 7715:       uint32x2_t c_ = (c);                                             \
        -: 7716:       uint32x2_t b_ = (b);                                             \
        -: 7717:       uint64x2_t a_ = (a);                                             \
        -: 7718:       uint64x2_t result;                                               \
        -: 7719:       __asm__ ("umlal %0.2d, %2.2s, %3.s[%4]"                          \
        -: 7720:                : "=w"(result)                                          \
        -: 7721:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 7722:                : /* No clobbers */);                                   \
        -: 7723:       result;                                                          \
        -: 7724:     })
        -: 7725:
        -: 7726:#define vmlal_laneq_s16(a, b, c, d)                                     \
        -: 7727:  __extension__                                                         \
        -: 7728:    ({                                                                  \
        -: 7729:       int16x8_t c_ = (c);                                              \
        -: 7730:       int16x4_t b_ = (b);                                              \
        -: 7731:       int32x4_t a_ = (a);                                              \
        -: 7732:       int32x4_t result;                                                \
        -: 7733:       __asm__ ("smlal %0.4s, %2.4h, %3.h[%4]"                          \
        -: 7734:                : "=w"(result)                                          \
        -: 7735:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 7736:                : /* No clobbers */);                                   \
        -: 7737:       result;                                                          \
        -: 7738:     })
        -: 7739:
        -: 7740:#define vmlal_laneq_s32(a, b, c, d)                                     \
        -: 7741:  __extension__                                                         \
        -: 7742:    ({                                                                  \
        -: 7743:       int32x4_t c_ = (c);                                              \
        -: 7744:       int32x2_t b_ = (b);                                              \
        -: 7745:       int64x2_t a_ = (a);                                              \
        -: 7746:       int64x2_t result;                                                \
        -: 7747:       __asm__ ("smlal %0.2d, %2.2s, %3.s[%4]"                          \
        -: 7748:                : "=w"(result)                                          \
        -: 7749:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 7750:                : /* No clobbers */);                                   \
        -: 7751:       result;                                                          \
        -: 7752:     })
        -: 7753:
        -: 7754:#define vmlal_laneq_u16(a, b, c, d)                                     \
        -: 7755:  __extension__                                                         \
        -: 7756:    ({                                                                  \
        -: 7757:       uint16x8_t c_ = (c);                                             \
        -: 7758:       uint16x4_t b_ = (b);                                             \
        -: 7759:       uint32x4_t a_ = (a);                                             \
        -: 7760:       uint32x4_t result;                                               \
        -: 7761:       __asm__ ("umlal %0.4s, %2.4h, %3.h[%4]"                          \
        -: 7762:                : "=w"(result)                                          \
        -: 7763:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 7764:                : /* No clobbers */);                                   \
        -: 7765:       result;                                                          \
        -: 7766:     })
        -: 7767:
        -: 7768:#define vmlal_laneq_u32(a, b, c, d)                                     \
        -: 7769:  __extension__                                                         \
        -: 7770:    ({                                                                  \
        -: 7771:       uint32x4_t c_ = (c);                                             \
        -: 7772:       uint32x2_t b_ = (b);                                             \
        -: 7773:       uint64x2_t a_ = (a);                                             \
        -: 7774:       uint64x2_t result;                                               \
        -: 7775:       __asm__ ("umlal %0.2d, %2.2s, %3.s[%4]"                          \
        -: 7776:                : "=w"(result)                                          \
        -: 7777:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 7778:                : /* No clobbers */);                                   \
        -: 7779:       result;                                                          \
        -: 7780:     })
        -: 7781:
        -: 7782:__extension__ extern __inline int32x4_t
        -: 7783:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7784:vmlal_n_s16 (int32x4_t a, int16x4_t b, int16_t c)
        -: 7785:{
        -: 7786:  int32x4_t result;
        -: 7787:  __asm__ ("smlal %0.4s,%2.4h,%3.h[0]"
        -: 7788:           : "=w"(result)
        -: 7789:           : "0"(a), "w"(b), "x"(c)
        -: 7790:           : /* No clobbers */);
        -: 7791:  return result;
        -: 7792:}
        -: 7793:
        -: 7794:__extension__ extern __inline int64x2_t
        -: 7795:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7796:vmlal_n_s32 (int64x2_t a, int32x2_t b, int32_t c)
        -: 7797:{
        -: 7798:  int64x2_t result;
        -: 7799:  __asm__ ("smlal %0.2d,%2.2s,%3.s[0]"
        -: 7800:           : "=w"(result)
        -: 7801:           : "0"(a), "w"(b), "w"(c)
        -: 7802:           : /* No clobbers */);
        -: 7803:  return result;
        -: 7804:}
        -: 7805:
        -: 7806:__extension__ extern __inline uint32x4_t
        -: 7807:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7808:vmlal_n_u16 (uint32x4_t a, uint16x4_t b, uint16_t c)
        -: 7809:{
        -: 7810:  uint32x4_t result;
        -: 7811:  __asm__ ("umlal %0.4s,%2.4h,%3.h[0]"
        -: 7812:           : "=w"(result)
        -: 7813:           : "0"(a), "w"(b), "x"(c)
        -: 7814:           : /* No clobbers */);
        -: 7815:  return result;
        -: 7816:}
        -: 7817:
        -: 7818:__extension__ extern __inline uint64x2_t
        -: 7819:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7820:vmlal_n_u32 (uint64x2_t a, uint32x2_t b, uint32_t c)
        -: 7821:{
        -: 7822:  uint64x2_t result;
        -: 7823:  __asm__ ("umlal %0.2d,%2.2s,%3.s[0]"
        -: 7824:           : "=w"(result)
        -: 7825:           : "0"(a), "w"(b), "w"(c)
        -: 7826:           : /* No clobbers */);
        -: 7827:  return result;
        -: 7828:}
        -: 7829:
        -: 7830:__extension__ extern __inline int16x8_t
        -: 7831:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7832:vmlal_s8 (int16x8_t a, int8x8_t b, int8x8_t c)
        -: 7833:{
        -: 7834:  int16x8_t result;
        -: 7835:  __asm__ ("smlal %0.8h,%2.8b,%3.8b"
        -: 7836:           : "=w"(result)
        -: 7837:           : "0"(a), "w"(b), "w"(c)
        -: 7838:           : /* No clobbers */);
        -: 7839:  return result;
        -: 7840:}
        -: 7841:
        -: 7842:__extension__ extern __inline int32x4_t
        -: 7843:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7844:vmlal_s16 (int32x4_t a, int16x4_t b, int16x4_t c)
        -: 7845:{
        -: 7846:  int32x4_t result;
        -: 7847:  __asm__ ("smlal %0.4s,%2.4h,%3.4h"
        -: 7848:           : "=w"(result)
        -: 7849:           : "0"(a), "w"(b), "w"(c)
        -: 7850:           : /* No clobbers */);
        -: 7851:  return result;
        -: 7852:}
        -: 7853:
        -: 7854:__extension__ extern __inline int64x2_t
        -: 7855:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7856:vmlal_s32 (int64x2_t a, int32x2_t b, int32x2_t c)
        -: 7857:{
        -: 7858:  int64x2_t result;
        -: 7859:  __asm__ ("smlal %0.2d,%2.2s,%3.2s"
        -: 7860:           : "=w"(result)
        -: 7861:           : "0"(a), "w"(b), "w"(c)
        -: 7862:           : /* No clobbers */);
        -: 7863:  return result;
        -: 7864:}
        -: 7865:
        -: 7866:__extension__ extern __inline uint16x8_t
        -: 7867:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7868:vmlal_u8 (uint16x8_t a, uint8x8_t b, uint8x8_t c)
        -: 7869:{
        -: 7870:  uint16x8_t result;
        -: 7871:  __asm__ ("umlal %0.8h,%2.8b,%3.8b"
        -: 7872:           : "=w"(result)
        -: 7873:           : "0"(a), "w"(b), "w"(c)
        -: 7874:           : /* No clobbers */);
        -: 7875:  return result;
        -: 7876:}
        -: 7877:
        -: 7878:__extension__ extern __inline uint32x4_t
        -: 7879:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7880:vmlal_u16 (uint32x4_t a, uint16x4_t b, uint16x4_t c)
        -: 7881:{
        -: 7882:  uint32x4_t result;
        -: 7883:  __asm__ ("umlal %0.4s,%2.4h,%3.4h"
        -: 7884:           : "=w"(result)
        -: 7885:           : "0"(a), "w"(b), "w"(c)
        -: 7886:           : /* No clobbers */);
        -: 7887:  return result;
        -: 7888:}
        -: 7889:
        -: 7890:__extension__ extern __inline uint64x2_t
        -: 7891:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7892:vmlal_u32 (uint64x2_t a, uint32x2_t b, uint32x2_t c)
        -: 7893:{
        -: 7894:  uint64x2_t result;
        -: 7895:  __asm__ ("umlal %0.2d,%2.2s,%3.2s"
        -: 7896:           : "=w"(result)
        -: 7897:           : "0"(a), "w"(b), "w"(c)
        -: 7898:           : /* No clobbers */);
        -: 7899:  return result;
        -: 7900:}
        -: 7901:
        -: 7902:__extension__ extern __inline float32x4_t
        -: 7903:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7904:vmlaq_n_f32 (float32x4_t a, float32x4_t b, float32_t c)
        -: 7905:{
        -: 7906:  float32x4_t result;
        -: 7907:  float32x4_t t1;
        -: 7908:  __asm__ ("fmul %1.4s, %3.4s, %4.s[0]; fadd %0.4s, %0.4s, %1.4s"
        -: 7909:           : "=w"(result), "=w"(t1)
        -: 7910:           : "0"(a), "w"(b), "w"(c)
        -: 7911:           : /* No clobbers */);
        -: 7912:  return result;
        -: 7913:}
        -: 7914:
        -: 7915:__extension__ extern __inline int16x8_t
        -: 7916:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7917:vmlaq_n_s16 (int16x8_t a, int16x8_t b, int16_t c)
        -: 7918:{
        -: 7919:  int16x8_t result;
        -: 7920:  __asm__ ("mla %0.8h,%2.8h,%3.h[0]"
        -: 7921:           : "=w"(result)
        -: 7922:           : "0"(a), "w"(b), "x"(c)
        -: 7923:           : /* No clobbers */);
        -: 7924:  return result;
        -: 7925:}
        -: 7926:
        -: 7927:__extension__ extern __inline int32x4_t
        -: 7928:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7929:vmlaq_n_s32 (int32x4_t a, int32x4_t b, int32_t c)
        -: 7930:{
        -: 7931:  int32x4_t result;
        -: 7932:  __asm__ ("mla %0.4s,%2.4s,%3.s[0]"
        -: 7933:           : "=w"(result)
        -: 7934:           : "0"(a), "w"(b), "w"(c)
        -: 7935:           : /* No clobbers */);
        -: 7936:  return result;
        -: 7937:}
        -: 7938:
        -: 7939:__extension__ extern __inline uint16x8_t
        -: 7940:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7941:vmlaq_n_u16 (uint16x8_t a, uint16x8_t b, uint16_t c)
        -: 7942:{
        -: 7943:  uint16x8_t result;
        -: 7944:  __asm__ ("mla %0.8h,%2.8h,%3.h[0]"
        -: 7945:           : "=w"(result)
        -: 7946:           : "0"(a), "w"(b), "x"(c)
        -: 7947:           : /* No clobbers */);
        -: 7948:  return result;
        -: 7949:}
        -: 7950:
        -: 7951:__extension__ extern __inline uint32x4_t
        -: 7952:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7953:vmlaq_n_u32 (uint32x4_t a, uint32x4_t b, uint32_t c)
        -: 7954:{
        -: 7955:  uint32x4_t result;
        -: 7956:  __asm__ ("mla %0.4s,%2.4s,%3.s[0]"
        -: 7957:           : "=w"(result)
        -: 7958:           : "0"(a), "w"(b), "w"(c)
        -: 7959:           : /* No clobbers */);
        -: 7960:  return result;
        -: 7961:}
        -: 7962:
        -: 7963:__extension__ extern __inline int8x16_t
        -: 7964:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7965:vmlaq_s8 (int8x16_t a, int8x16_t b, int8x16_t c)
        -: 7966:{
        -: 7967:  int8x16_t result;
        -: 7968:  __asm__ ("mla %0.16b, %2.16b, %3.16b"
        -: 7969:           : "=w"(result)
        -: 7970:           : "0"(a), "w"(b), "w"(c)
        -: 7971:           : /* No clobbers */);
        -: 7972:  return result;
        -: 7973:}
        -: 7974:
        -: 7975:__extension__ extern __inline int16x8_t
        -: 7976:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7977:vmlaq_s16 (int16x8_t a, int16x8_t b, int16x8_t c)
        -: 7978:{
        -: 7979:  int16x8_t result;
        -: 7980:  __asm__ ("mla %0.8h, %2.8h, %3.8h"
        -: 7981:           : "=w"(result)
        -: 7982:           : "0"(a), "w"(b), "w"(c)
        -: 7983:           : /* No clobbers */);
        -: 7984:  return result;
        -: 7985:}
        -: 7986:
        -: 7987:__extension__ extern __inline int32x4_t
        -: 7988:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 7989:vmlaq_s32 (int32x4_t a, int32x4_t b, int32x4_t c)
        -: 7990:{
        -: 7991:  int32x4_t result;
        -: 7992:  __asm__ ("mla %0.4s, %2.4s, %3.4s"
        -: 7993:           : "=w"(result)
        -: 7994:           : "0"(a), "w"(b), "w"(c)
        -: 7995:           : /* No clobbers */);
        -: 7996:  return result;
        -: 7997:}
        -: 7998:
        -: 7999:__extension__ extern __inline uint8x16_t
        -: 8000:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8001:vmlaq_u8 (uint8x16_t a, uint8x16_t b, uint8x16_t c)
        -: 8002:{
        -: 8003:  uint8x16_t result;
        -: 8004:  __asm__ ("mla %0.16b, %2.16b, %3.16b"
        -: 8005:           : "=w"(result)
        -: 8006:           : "0"(a), "w"(b), "w"(c)
        -: 8007:           : /* No clobbers */);
        -: 8008:  return result;
        -: 8009:}
        -: 8010:
        -: 8011:__extension__ extern __inline uint16x8_t
        -: 8012:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8013:vmlaq_u16 (uint16x8_t a, uint16x8_t b, uint16x8_t c)
        -: 8014:{
        -: 8015:  uint16x8_t result;
        -: 8016:  __asm__ ("mla %0.8h, %2.8h, %3.8h"
        -: 8017:           : "=w"(result)
        -: 8018:           : "0"(a), "w"(b), "w"(c)
        -: 8019:           : /* No clobbers */);
        -: 8020:  return result;
        -: 8021:}
        -: 8022:
        -: 8023:__extension__ extern __inline uint32x4_t
        -: 8024:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8025:vmlaq_u32 (uint32x4_t a, uint32x4_t b, uint32x4_t c)
        -: 8026:{
        -: 8027:  uint32x4_t result;
        -: 8028:  __asm__ ("mla %0.4s, %2.4s, %3.4s"
        -: 8029:           : "=w"(result)
        -: 8030:           : "0"(a), "w"(b), "w"(c)
        -: 8031:           : /* No clobbers */);
        -: 8032:  return result;
        -: 8033:}
        -: 8034:
        -: 8035:__extension__ extern __inline float32x2_t
        -: 8036:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8037:vmls_n_f32 (float32x2_t a, float32x2_t b, float32_t c)
        -: 8038:{
        -: 8039:  float32x2_t result;
        -: 8040:  float32x2_t t1;
        -: 8041:  __asm__ ("fmul %1.2s, %3.2s, %4.s[0]; fsub %0.2s, %0.2s, %1.2s"
        -: 8042:           : "=w"(result), "=w"(t1)
        -: 8043:           : "0"(a), "w"(b), "w"(c)
        -: 8044:           : /* No clobbers */);
        -: 8045:  return result;
        -: 8046:}
        -: 8047:
        -: 8048:__extension__ extern __inline int16x4_t
        -: 8049:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8050:vmls_n_s16 (int16x4_t a, int16x4_t b, int16_t c)
        -: 8051:{
        -: 8052:  int16x4_t result;
        -: 8053:  __asm__ ("mls %0.4h, %2.4h, %3.h[0]"
        -: 8054:           : "=w"(result)
        -: 8055:           : "0"(a), "w"(b), "x"(c)
        -: 8056:           : /* No clobbers */);
        -: 8057:  return result;
        -: 8058:}
        -: 8059:
        -: 8060:__extension__ extern __inline int32x2_t
        -: 8061:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8062:vmls_n_s32 (int32x2_t a, int32x2_t b, int32_t c)
        -: 8063:{
        -: 8064:  int32x2_t result;
        -: 8065:  __asm__ ("mls %0.2s, %2.2s, %3.s[0]"
        -: 8066:           : "=w"(result)
        -: 8067:           : "0"(a), "w"(b), "w"(c)
        -: 8068:           : /* No clobbers */);
        -: 8069:  return result;
        -: 8070:}
        -: 8071:
        -: 8072:__extension__ extern __inline uint16x4_t
        -: 8073:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8074:vmls_n_u16 (uint16x4_t a, uint16x4_t b, uint16_t c)
        -: 8075:{
        -: 8076:  uint16x4_t result;
        -: 8077:  __asm__ ("mls %0.4h, %2.4h, %3.h[0]"
        -: 8078:           : "=w"(result)
        -: 8079:           : "0"(a), "w"(b), "x"(c)
        -: 8080:           : /* No clobbers */);
        -: 8081:  return result;
        -: 8082:}
        -: 8083:
        -: 8084:__extension__ extern __inline uint32x2_t
        -: 8085:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8086:vmls_n_u32 (uint32x2_t a, uint32x2_t b, uint32_t c)
        -: 8087:{
        -: 8088:  uint32x2_t result;
        -: 8089:  __asm__ ("mls %0.2s, %2.2s, %3.s[0]"
        -: 8090:           : "=w"(result)
        -: 8091:           : "0"(a), "w"(b), "w"(c)
        -: 8092:           : /* No clobbers */);
        -: 8093:  return result;
        -: 8094:}
        -: 8095:
        -: 8096:__extension__ extern __inline int8x8_t
        -: 8097:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8098:vmls_s8 (int8x8_t a, int8x8_t b, int8x8_t c)
        -: 8099:{
        -: 8100:  int8x8_t result;
        -: 8101:  __asm__ ("mls %0.8b,%2.8b,%3.8b"
        -: 8102:           : "=w"(result)
        -: 8103:           : "0"(a), "w"(b), "w"(c)
        -: 8104:           : /* No clobbers */);
        -: 8105:  return result;
        -: 8106:}
        -: 8107:
        -: 8108:__extension__ extern __inline int16x4_t
        -: 8109:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8110:vmls_s16 (int16x4_t a, int16x4_t b, int16x4_t c)
        -: 8111:{
        -: 8112:  int16x4_t result;
        -: 8113:  __asm__ ("mls %0.4h,%2.4h,%3.4h"
        -: 8114:           : "=w"(result)
        -: 8115:           : "0"(a), "w"(b), "w"(c)
        -: 8116:           : /* No clobbers */);
        -: 8117:  return result;
        -: 8118:}
        -: 8119:
        -: 8120:__extension__ extern __inline int32x2_t
        -: 8121:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8122:vmls_s32 (int32x2_t a, int32x2_t b, int32x2_t c)
        -: 8123:{
        -: 8124:  int32x2_t result;
        -: 8125:  __asm__ ("mls %0.2s,%2.2s,%3.2s"
        -: 8126:           : "=w"(result)
        -: 8127:           : "0"(a), "w"(b), "w"(c)
        -: 8128:           : /* No clobbers */);
        -: 8129:  return result;
        -: 8130:}
        -: 8131:
        -: 8132:__extension__ extern __inline uint8x8_t
        -: 8133:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8134:vmls_u8 (uint8x8_t a, uint8x8_t b, uint8x8_t c)
        -: 8135:{
        -: 8136:  uint8x8_t result;
        -: 8137:  __asm__ ("mls %0.8b,%2.8b,%3.8b"
        -: 8138:           : "=w"(result)
        -: 8139:           : "0"(a), "w"(b), "w"(c)
        -: 8140:           : /* No clobbers */);
        -: 8141:  return result;
        -: 8142:}
        -: 8143:
        -: 8144:__extension__ extern __inline uint16x4_t
        -: 8145:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8146:vmls_u16 (uint16x4_t a, uint16x4_t b, uint16x4_t c)
        -: 8147:{
        -: 8148:  uint16x4_t result;
        -: 8149:  __asm__ ("mls %0.4h,%2.4h,%3.4h"
        -: 8150:           : "=w"(result)
        -: 8151:           : "0"(a), "w"(b), "w"(c)
        -: 8152:           : /* No clobbers */);
        -: 8153:  return result;
        -: 8154:}
        -: 8155:
        -: 8156:__extension__ extern __inline uint32x2_t
        -: 8157:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8158:vmls_u32 (uint32x2_t a, uint32x2_t b, uint32x2_t c)
        -: 8159:{
        -: 8160:  uint32x2_t result;
        -: 8161:  __asm__ ("mls %0.2s,%2.2s,%3.2s"
        -: 8162:           : "=w"(result)
        -: 8163:           : "0"(a), "w"(b), "w"(c)
        -: 8164:           : /* No clobbers */);
        -: 8165:  return result;
        -: 8166:}
        -: 8167:
        -: 8168:#define vmlsl_high_lane_s16(a, b, c, d)                                 \
        -: 8169:  __extension__                                                         \
        -: 8170:    ({                                                                  \
        -: 8171:       int16x4_t c_ = (c);                                              \
        -: 8172:       int16x8_t b_ = (b);                                              \
        -: 8173:       int32x4_t a_ = (a);                                              \
        -: 8174:       int32x4_t result;                                                \
        -: 8175:       __asm__ ("smlsl2 %0.4s, %2.8h, %3.h[%4]"                         \
        -: 8176:                : "=w"(result)                                          \
        -: 8177:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 8178:                : /* No clobbers */);                                   \
        -: 8179:       result;                                                          \
        -: 8180:     })
        -: 8181:
        -: 8182:#define vmlsl_high_lane_s32(a, b, c, d)                                 \
        -: 8183:  __extension__                                                         \
        -: 8184:    ({                                                                  \
        -: 8185:       int32x2_t c_ = (c);                                              \
        -: 8186:       int32x4_t b_ = (b);                                              \
        -: 8187:       int64x2_t a_ = (a);                                              \
        -: 8188:       int64x2_t result;                                                \
        -: 8189:       __asm__ ("smlsl2 %0.2d, %2.4s, %3.s[%4]"                         \
        -: 8190:                : "=w"(result)                                          \
        -: 8191:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 8192:                : /* No clobbers */);                                   \
        -: 8193:       result;                                                          \
        -: 8194:     })
        -: 8195:
        -: 8196:#define vmlsl_high_lane_u16(a, b, c, d)                                 \
        -: 8197:  __extension__                                                         \
        -: 8198:    ({                                                                  \
        -: 8199:       uint16x4_t c_ = (c);                                             \
        -: 8200:       uint16x8_t b_ = (b);                                             \
        -: 8201:       uint32x4_t a_ = (a);                                             \
        -: 8202:       uint32x4_t result;                                               \
        -: 8203:       __asm__ ("umlsl2 %0.4s, %2.8h, %3.h[%4]"                         \
        -: 8204:                : "=w"(result)                                          \
        -: 8205:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 8206:                : /* No clobbers */);                                   \
        -: 8207:       result;                                                          \
        -: 8208:     })
        -: 8209:
        -: 8210:#define vmlsl_high_lane_u32(a, b, c, d)                                 \
        -: 8211:  __extension__                                                         \
        -: 8212:    ({                                                                  \
        -: 8213:       uint32x2_t c_ = (c);                                             \
        -: 8214:       uint32x4_t b_ = (b);                                             \
        -: 8215:       uint64x2_t a_ = (a);                                             \
        -: 8216:       uint64x2_t result;                                               \
        -: 8217:       __asm__ ("umlsl2 %0.2d, %2.4s, %3.s[%4]"                         \
        -: 8218:                : "=w"(result)                                          \
        -: 8219:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 8220:                : /* No clobbers */);                                   \
        -: 8221:       result;                                                          \
        -: 8222:     })
        -: 8223:
        -: 8224:#define vmlsl_high_laneq_s16(a, b, c, d)                                \
        -: 8225:  __extension__                                                         \
        -: 8226:    ({                                                                  \
        -: 8227:       int16x8_t c_ = (c);                                              \
        -: 8228:       int16x8_t b_ = (b);                                              \
        -: 8229:       int32x4_t a_ = (a);                                              \
        -: 8230:       int32x4_t result;                                                \
        -: 8231:       __asm__ ("smlsl2 %0.4s, %2.8h, %3.h[%4]"                         \
        -: 8232:                : "=w"(result)                                          \
        -: 8233:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 8234:                : /* No clobbers */);                                   \
        -: 8235:       result;                                                          \
        -: 8236:     })
        -: 8237:
        -: 8238:#define vmlsl_high_laneq_s32(a, b, c, d)                                \
        -: 8239:  __extension__                                                         \
        -: 8240:    ({                                                                  \
        -: 8241:       int32x4_t c_ = (c);                                              \
        -: 8242:       int32x4_t b_ = (b);                                              \
        -: 8243:       int64x2_t a_ = (a);                                              \
        -: 8244:       int64x2_t result;                                                \
        -: 8245:       __asm__ ("smlsl2 %0.2d, %2.4s, %3.s[%4]"                         \
        -: 8246:                : "=w"(result)                                          \
        -: 8247:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 8248:                : /* No clobbers */);                                   \
        -: 8249:       result;                                                          \
        -: 8250:     })
        -: 8251:
        -: 8252:#define vmlsl_high_laneq_u16(a, b, c, d)                                \
        -: 8253:  __extension__                                                         \
        -: 8254:    ({                                                                  \
        -: 8255:       uint16x8_t c_ = (c);                                             \
        -: 8256:       uint16x8_t b_ = (b);                                             \
        -: 8257:       uint32x4_t a_ = (a);                                             \
        -: 8258:       uint32x4_t result;                                               \
        -: 8259:       __asm__ ("umlsl2 %0.4s, %2.8h, %3.h[%4]"                         \
        -: 8260:                : "=w"(result)                                          \
        -: 8261:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 8262:                : /* No clobbers */);                                   \
        -: 8263:       result;                                                          \
        -: 8264:     })
        -: 8265:
        -: 8266:#define vmlsl_high_laneq_u32(a, b, c, d)                                \
        -: 8267:  __extension__                                                         \
        -: 8268:    ({                                                                  \
        -: 8269:       uint32x4_t c_ = (c);                                             \
        -: 8270:       uint32x4_t b_ = (b);                                             \
        -: 8271:       uint64x2_t a_ = (a);                                             \
        -: 8272:       uint64x2_t result;                                               \
        -: 8273:       __asm__ ("umlsl2 %0.2d, %2.4s, %3.s[%4]"                         \
        -: 8274:                : "=w"(result)                                          \
        -: 8275:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 8276:                : /* No clobbers */);                                   \
        -: 8277:       result;                                                          \
        -: 8278:     })
        -: 8279:
        -: 8280:__extension__ extern __inline int32x4_t
        -: 8281:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8282:vmlsl_high_n_s16 (int32x4_t a, int16x8_t b, int16_t c)
        -: 8283:{
        -: 8284:  int32x4_t result;
        -: 8285:  __asm__ ("smlsl2 %0.4s, %2.8h, %3.h[0]"
        -: 8286:           : "=w"(result)
        -: 8287:           : "0"(a), "w"(b), "x"(c)
        -: 8288:           : /* No clobbers */);
        -: 8289:  return result;
        -: 8290:}
        -: 8291:
        -: 8292:__extension__ extern __inline int64x2_t
        -: 8293:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8294:vmlsl_high_n_s32 (int64x2_t a, int32x4_t b, int32_t c)
        -: 8295:{
        -: 8296:  int64x2_t result;
        -: 8297:  __asm__ ("smlsl2 %0.2d, %2.4s, %3.s[0]"
        -: 8298:           : "=w"(result)
        -: 8299:           : "0"(a), "w"(b), "w"(c)
        -: 8300:           : /* No clobbers */);
        -: 8301:  return result;
        -: 8302:}
        -: 8303:
        -: 8304:__extension__ extern __inline uint32x4_t
        -: 8305:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8306:vmlsl_high_n_u16 (uint32x4_t a, uint16x8_t b, uint16_t c)
        -: 8307:{
        -: 8308:  uint32x4_t result;
        -: 8309:  __asm__ ("umlsl2 %0.4s, %2.8h, %3.h[0]"
        -: 8310:           : "=w"(result)
        -: 8311:           : "0"(a), "w"(b), "x"(c)
        -: 8312:           : /* No clobbers */);
        -: 8313:  return result;
        -: 8314:}
        -: 8315:
        -: 8316:__extension__ extern __inline uint64x2_t
        -: 8317:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8318:vmlsl_high_n_u32 (uint64x2_t a, uint32x4_t b, uint32_t c)
        -: 8319:{
        -: 8320:  uint64x2_t result;
        -: 8321:  __asm__ ("umlsl2 %0.2d, %2.4s, %3.s[0]"
        -: 8322:           : "=w"(result)
        -: 8323:           : "0"(a), "w"(b), "w"(c)
        -: 8324:           : /* No clobbers */);
        -: 8325:  return result;
        -: 8326:}
        -: 8327:
        -: 8328:__extension__ extern __inline int16x8_t
        -: 8329:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8330:vmlsl_high_s8 (int16x8_t a, int8x16_t b, int8x16_t c)
        -: 8331:{
        -: 8332:  int16x8_t result;
        -: 8333:  __asm__ ("smlsl2 %0.8h,%2.16b,%3.16b"
        -: 8334:           : "=w"(result)
        -: 8335:           : "0"(a), "w"(b), "w"(c)
        -: 8336:           : /* No clobbers */);
        -: 8337:  return result;
        -: 8338:}
        -: 8339:
        -: 8340:__extension__ extern __inline int32x4_t
        -: 8341:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8342:vmlsl_high_s16 (int32x4_t a, int16x8_t b, int16x8_t c)
        -: 8343:{
        -: 8344:  int32x4_t result;
        -: 8345:  __asm__ ("smlsl2 %0.4s,%2.8h,%3.8h"
        -: 8346:           : "=w"(result)
        -: 8347:           : "0"(a), "w"(b), "w"(c)
        -: 8348:           : /* No clobbers */);
        -: 8349:  return result;
        -: 8350:}
        -: 8351:
        -: 8352:__extension__ extern __inline int64x2_t
        -: 8353:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8354:vmlsl_high_s32 (int64x2_t a, int32x4_t b, int32x4_t c)
        -: 8355:{
        -: 8356:  int64x2_t result;
        -: 8357:  __asm__ ("smlsl2 %0.2d,%2.4s,%3.4s"
        -: 8358:           : "=w"(result)
        -: 8359:           : "0"(a), "w"(b), "w"(c)
        -: 8360:           : /* No clobbers */);
        -: 8361:  return result;
        -: 8362:}
        -: 8363:
        -: 8364:__extension__ extern __inline uint16x8_t
        -: 8365:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8366:vmlsl_high_u8 (uint16x8_t a, uint8x16_t b, uint8x16_t c)
        -: 8367:{
        -: 8368:  uint16x8_t result;
        -: 8369:  __asm__ ("umlsl2 %0.8h,%2.16b,%3.16b"
        -: 8370:           : "=w"(result)
        -: 8371:           : "0"(a), "w"(b), "w"(c)
        -: 8372:           : /* No clobbers */);
        -: 8373:  return result;
        -: 8374:}
        -: 8375:
        -: 8376:__extension__ extern __inline uint32x4_t
        -: 8377:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8378:vmlsl_high_u16 (uint32x4_t a, uint16x8_t b, uint16x8_t c)
        -: 8379:{
        -: 8380:  uint32x4_t result;
        -: 8381:  __asm__ ("umlsl2 %0.4s,%2.8h,%3.8h"
        -: 8382:           : "=w"(result)
        -: 8383:           : "0"(a), "w"(b), "w"(c)
        -: 8384:           : /* No clobbers */);
        -: 8385:  return result;
        -: 8386:}
        -: 8387:
        -: 8388:__extension__ extern __inline uint64x2_t
        -: 8389:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8390:vmlsl_high_u32 (uint64x2_t a, uint32x4_t b, uint32x4_t c)
        -: 8391:{
        -: 8392:  uint64x2_t result;
        -: 8393:  __asm__ ("umlsl2 %0.2d,%2.4s,%3.4s"
        -: 8394:           : "=w"(result)
        -: 8395:           : "0"(a), "w"(b), "w"(c)
        -: 8396:           : /* No clobbers */);
        -: 8397:  return result;
        -: 8398:}
        -: 8399:
        -: 8400:#define vmlsl_lane_s16(a, b, c, d)                                      \
        -: 8401:  __extension__                                                         \
        -: 8402:    ({                                                                  \
        -: 8403:       int16x4_t c_ = (c);                                              \
        -: 8404:       int16x4_t b_ = (b);                                              \
        -: 8405:       int32x4_t a_ = (a);                                              \
        -: 8406:       int32x4_t result;                                                \
        -: 8407:       __asm__ ("smlsl %0.4s, %2.4h, %3.h[%4]"                          \
        -: 8408:                : "=w"(result)                                          \
        -: 8409:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 8410:                : /* No clobbers */);                                   \
        -: 8411:       result;                                                          \
        -: 8412:     })
        -: 8413:
        -: 8414:#define vmlsl_lane_s32(a, b, c, d)                                      \
        -: 8415:  __extension__                                                         \
        -: 8416:    ({                                                                  \
        -: 8417:       int32x2_t c_ = (c);                                              \
        -: 8418:       int32x2_t b_ = (b);                                              \
        -: 8419:       int64x2_t a_ = (a);                                              \
        -: 8420:       int64x2_t result;                                                \
        -: 8421:       __asm__ ("smlsl %0.2d, %2.2s, %3.s[%4]"                          \
        -: 8422:                : "=w"(result)                                          \
        -: 8423:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 8424:                : /* No clobbers */);                                   \
        -: 8425:       result;                                                          \
        -: 8426:     })
        -: 8427:
        -: 8428:#define vmlsl_lane_u16(a, b, c, d)                                      \
        -: 8429:  __extension__                                                         \
        -: 8430:    ({                                                                  \
        -: 8431:       uint16x4_t c_ = (c);                                             \
        -: 8432:       uint16x4_t b_ = (b);                                             \
        -: 8433:       uint32x4_t a_ = (a);                                             \
        -: 8434:       uint32x4_t result;                                               \
        -: 8435:       __asm__ ("umlsl %0.4s, %2.4h, %3.h[%4]"                          \
        -: 8436:                : "=w"(result)                                          \
        -: 8437:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 8438:                : /* No clobbers */);                                   \
        -: 8439:       result;                                                          \
        -: 8440:     })
        -: 8441:
        -: 8442:#define vmlsl_lane_u32(a, b, c, d)                                      \
        -: 8443:  __extension__                                                         \
        -: 8444:    ({                                                                  \
        -: 8445:       uint32x2_t c_ = (c);                                             \
        -: 8446:       uint32x2_t b_ = (b);                                             \
        -: 8447:       uint64x2_t a_ = (a);                                             \
        -: 8448:       uint64x2_t result;                                               \
        -: 8449:       __asm__ ("umlsl %0.2d, %2.2s, %3.s[%4]"                          \
        -: 8450:                : "=w"(result)                                          \
        -: 8451:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 8452:                : /* No clobbers */);                                   \
        -: 8453:       result;                                                          \
        -: 8454:     })
        -: 8455:
        -: 8456:#define vmlsl_laneq_s16(a, b, c, d)                                     \
        -: 8457:  __extension__                                                         \
        -: 8458:    ({                                                                  \
        -: 8459:       int16x8_t c_ = (c);                                              \
        -: 8460:       int16x4_t b_ = (b);                                              \
        -: 8461:       int32x4_t a_ = (a);                                              \
        -: 8462:       int32x4_t result;                                                \
        -: 8463:       __asm__ ("smlsl %0.4s, %2.4h, %3.h[%4]"                          \
        -: 8464:                : "=w"(result)                                          \
        -: 8465:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 8466:                : /* No clobbers */);                                   \
        -: 8467:       result;                                                          \
        -: 8468:     })
        -: 8469:
        -: 8470:#define vmlsl_laneq_s32(a, b, c, d)                                     \
        -: 8471:  __extension__                                                         \
        -: 8472:    ({                                                                  \
        -: 8473:       int32x4_t c_ = (c);                                              \
        -: 8474:       int32x2_t b_ = (b);                                              \
        -: 8475:       int64x2_t a_ = (a);                                              \
        -: 8476:       int64x2_t result;                                                \
        -: 8477:       __asm__ ("smlsl %0.2d, %2.2s, %3.s[%4]"                          \
        -: 8478:                : "=w"(result)                                          \
        -: 8479:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 8480:                : /* No clobbers */);                                   \
        -: 8481:       result;                                                          \
        -: 8482:     })
        -: 8483:
        -: 8484:#define vmlsl_laneq_u16(a, b, c, d)                                     \
        -: 8485:  __extension__                                                         \
        -: 8486:    ({                                                                  \
        -: 8487:       uint16x8_t c_ = (c);                                             \
        -: 8488:       uint16x4_t b_ = (b);                                             \
        -: 8489:       uint32x4_t a_ = (a);                                             \
        -: 8490:       uint32x4_t result;                                               \
        -: 8491:       __asm__ ("umlsl %0.4s, %2.4h, %3.h[%4]"                          \
        -: 8492:                : "=w"(result)                                          \
        -: 8493:                : "0"(a_), "w"(b_), "x"(c_), "i"(d)                     \
        -: 8494:                : /* No clobbers */);                                   \
        -: 8495:       result;                                                          \
        -: 8496:     })
        -: 8497:
        -: 8498:#define vmlsl_laneq_u32(a, b, c, d)                                     \
        -: 8499:  __extension__                                                         \
        -: 8500:    ({                                                                  \
        -: 8501:       uint32x4_t c_ = (c);                                             \
        -: 8502:       uint32x2_t b_ = (b);                                             \
        -: 8503:       uint64x2_t a_ = (a);                                             \
        -: 8504:       uint64x2_t result;                                               \
        -: 8505:       __asm__ ("umlsl %0.2d, %2.2s, %3.s[%4]"                          \
        -: 8506:                : "=w"(result)                                          \
        -: 8507:                : "0"(a_), "w"(b_), "w"(c_), "i"(d)                     \
        -: 8508:                : /* No clobbers */);                                   \
        -: 8509:       result;                                                          \
        -: 8510:     })
        -: 8511:
        -: 8512:__extension__ extern __inline int32x4_t
        -: 8513:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8514:vmlsl_n_s16 (int32x4_t a, int16x4_t b, int16_t c)
        -: 8515:{
        -: 8516:  int32x4_t result;
        -: 8517:  __asm__ ("smlsl %0.4s, %2.4h, %3.h[0]"
        -: 8518:           : "=w"(result)
        -: 8519:           : "0"(a), "w"(b), "x"(c)
        -: 8520:           : /* No clobbers */);
        -: 8521:  return result;
        -: 8522:}
        -: 8523:
        -: 8524:__extension__ extern __inline int64x2_t
        -: 8525:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8526:vmlsl_n_s32 (int64x2_t a, int32x2_t b, int32_t c)
        -: 8527:{
        -: 8528:  int64x2_t result;
        -: 8529:  __asm__ ("smlsl %0.2d, %2.2s, %3.s[0]"
        -: 8530:           : "=w"(result)
        -: 8531:           : "0"(a), "w"(b), "w"(c)
        -: 8532:           : /* No clobbers */);
        -: 8533:  return result;
        -: 8534:}
        -: 8535:
        -: 8536:__extension__ extern __inline uint32x4_t
        -: 8537:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8538:vmlsl_n_u16 (uint32x4_t a, uint16x4_t b, uint16_t c)
        -: 8539:{
        -: 8540:  uint32x4_t result;
        -: 8541:  __asm__ ("umlsl %0.4s, %2.4h, %3.h[0]"
        -: 8542:           : "=w"(result)
        -: 8543:           : "0"(a), "w"(b), "x"(c)
        -: 8544:           : /* No clobbers */);
        -: 8545:  return result;
        -: 8546:}
        -: 8547:
        -: 8548:__extension__ extern __inline uint64x2_t
        -: 8549:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8550:vmlsl_n_u32 (uint64x2_t a, uint32x2_t b, uint32_t c)
        -: 8551:{
        -: 8552:  uint64x2_t result;
        -: 8553:  __asm__ ("umlsl %0.2d, %2.2s, %3.s[0]"
        -: 8554:           : "=w"(result)
        -: 8555:           : "0"(a), "w"(b), "w"(c)
        -: 8556:           : /* No clobbers */);
        -: 8557:  return result;
        -: 8558:}
        -: 8559:
        -: 8560:__extension__ extern __inline int16x8_t
        -: 8561:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8562:vmlsl_s8 (int16x8_t a, int8x8_t b, int8x8_t c)
        -: 8563:{
        -: 8564:  int16x8_t result;
        -: 8565:  __asm__ ("smlsl %0.8h, %2.8b, %3.8b"
        -: 8566:           : "=w"(result)
        -: 8567:           : "0"(a), "w"(b), "w"(c)
        -: 8568:           : /* No clobbers */);
        -: 8569:  return result;
        -: 8570:}
        -: 8571:
        -: 8572:__extension__ extern __inline int32x4_t
        -: 8573:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8574:vmlsl_s16 (int32x4_t a, int16x4_t b, int16x4_t c)
        -: 8575:{
        -: 8576:  int32x4_t result;
        -: 8577:  __asm__ ("smlsl %0.4s, %2.4h, %3.4h"
        -: 8578:           : "=w"(result)
        -: 8579:           : "0"(a), "w"(b), "w"(c)
        -: 8580:           : /* No clobbers */);
        -: 8581:  return result;
        -: 8582:}
        -: 8583:
        -: 8584:__extension__ extern __inline int64x2_t
        -: 8585:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8586:vmlsl_s32 (int64x2_t a, int32x2_t b, int32x2_t c)
        -: 8587:{
        -: 8588:  int64x2_t result;
        -: 8589:  __asm__ ("smlsl %0.2d, %2.2s, %3.2s"
        -: 8590:           : "=w"(result)
        -: 8591:           : "0"(a), "w"(b), "w"(c)
        -: 8592:           : /* No clobbers */);
        -: 8593:  return result;
        -: 8594:}
        -: 8595:
        -: 8596:__extension__ extern __inline uint16x8_t
        -: 8597:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8598:vmlsl_u8 (uint16x8_t a, uint8x8_t b, uint8x8_t c)
        -: 8599:{
        -: 8600:  uint16x8_t result;
        -: 8601:  __asm__ ("umlsl %0.8h, %2.8b, %3.8b"
        -: 8602:           : "=w"(result)
        -: 8603:           : "0"(a), "w"(b), "w"(c)
        -: 8604:           : /* No clobbers */);
        -: 8605:  return result;
        -: 8606:}
        -: 8607:
        -: 8608:__extension__ extern __inline uint32x4_t
        -: 8609:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8610:vmlsl_u16 (uint32x4_t a, uint16x4_t b, uint16x4_t c)
        -: 8611:{
        -: 8612:  uint32x4_t result;
        -: 8613:  __asm__ ("umlsl %0.4s, %2.4h, %3.4h"
        -: 8614:           : "=w"(result)
        -: 8615:           : "0"(a), "w"(b), "w"(c)
        -: 8616:           : /* No clobbers */);
        -: 8617:  return result;
        -: 8618:}
        -: 8619:
        -: 8620:__extension__ extern __inline uint64x2_t
        -: 8621:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8622:vmlsl_u32 (uint64x2_t a, uint32x2_t b, uint32x2_t c)
        -: 8623:{
        -: 8624:  uint64x2_t result;
        -: 8625:  __asm__ ("umlsl %0.2d, %2.2s, %3.2s"
        -: 8626:           : "=w"(result)
        -: 8627:           : "0"(a), "w"(b), "w"(c)
        -: 8628:           : /* No clobbers */);
        -: 8629:  return result;
        -: 8630:}
        -: 8631:
        -: 8632:__extension__ extern __inline float32x4_t
        -: 8633:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8634:vmlsq_n_f32 (float32x4_t a, float32x4_t b, float32_t c)
        -: 8635:{
        -: 8636:  float32x4_t result;
        -: 8637:  float32x4_t t1;
        -: 8638:  __asm__ ("fmul %1.4s, %3.4s, %4.s[0]; fsub %0.4s, %0.4s, %1.4s"
        -: 8639:           : "=w"(result), "=w"(t1)
        -: 8640:           : "0"(a), "w"(b), "w"(c)
        -: 8641:           : /* No clobbers */);
        -: 8642:  return result;
        -: 8643:}
        -: 8644:
        -: 8645:__extension__ extern __inline int16x8_t
        -: 8646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8647:vmlsq_n_s16 (int16x8_t a, int16x8_t b, int16_t c)
        -: 8648:{
        -: 8649:  int16x8_t result;
        -: 8650:  __asm__ ("mls %0.8h, %2.8h, %3.h[0]"
        -: 8651:           : "=w"(result)
        -: 8652:           : "0"(a), "w"(b), "x"(c)
        -: 8653:           : /* No clobbers */);
        -: 8654:  return result;
        -: 8655:}
        -: 8656:
        -: 8657:__extension__ extern __inline int32x4_t
        -: 8658:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8659:vmlsq_n_s32 (int32x4_t a, int32x4_t b, int32_t c)
        -: 8660:{
        -: 8661:  int32x4_t result;
        -: 8662:  __asm__ ("mls %0.4s, %2.4s, %3.s[0]"
        -: 8663:           : "=w"(result)
        -: 8664:           : "0"(a), "w"(b), "w"(c)
        -: 8665:           : /* No clobbers */);
        -: 8666:  return result;
        -: 8667:}
        -: 8668:
        -: 8669:__extension__ extern __inline uint16x8_t
        -: 8670:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8671:vmlsq_n_u16 (uint16x8_t a, uint16x8_t b, uint16_t c)
        -: 8672:{
        -: 8673:  uint16x8_t result;
        -: 8674:  __asm__ ("mls %0.8h, %2.8h, %3.h[0]"
        -: 8675:           : "=w"(result)
        -: 8676:           : "0"(a), "w"(b), "x"(c)
        -: 8677:           : /* No clobbers */);
        -: 8678:  return result;
        -: 8679:}
        -: 8680:
        -: 8681:__extension__ extern __inline uint32x4_t
        -: 8682:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8683:vmlsq_n_u32 (uint32x4_t a, uint32x4_t b, uint32_t c)
        -: 8684:{
        -: 8685:  uint32x4_t result;
        -: 8686:  __asm__ ("mls %0.4s, %2.4s, %3.s[0]"
        -: 8687:           : "=w"(result)
        -: 8688:           : "0"(a), "w"(b), "w"(c)
        -: 8689:           : /* No clobbers */);
        -: 8690:  return result;
        -: 8691:}
        -: 8692:
        -: 8693:__extension__ extern __inline int8x16_t
        -: 8694:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8695:vmlsq_s8 (int8x16_t a, int8x16_t b, int8x16_t c)
        -: 8696:{
        -: 8697:  int8x16_t result;
        -: 8698:  __asm__ ("mls %0.16b,%2.16b,%3.16b"
        -: 8699:           : "=w"(result)
        -: 8700:           : "0"(a), "w"(b), "w"(c)
        -: 8701:           : /* No clobbers */);
        -: 8702:  return result;
        -: 8703:}
        -: 8704:
        -: 8705:__extension__ extern __inline int16x8_t
        -: 8706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8707:vmlsq_s16 (int16x8_t a, int16x8_t b, int16x8_t c)
        -: 8708:{
        -: 8709:  int16x8_t result;
        -: 8710:  __asm__ ("mls %0.8h,%2.8h,%3.8h"
        -: 8711:           : "=w"(result)
        -: 8712:           : "0"(a), "w"(b), "w"(c)
        -: 8713:           : /* No clobbers */);
        -: 8714:  return result;
        -: 8715:}
        -: 8716:
        -: 8717:__extension__ extern __inline int32x4_t
        -: 8718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8719:vmlsq_s32 (int32x4_t a, int32x4_t b, int32x4_t c)
        -: 8720:{
        -: 8721:  int32x4_t result;
        -: 8722:  __asm__ ("mls %0.4s,%2.4s,%3.4s"
        -: 8723:           : "=w"(result)
        -: 8724:           : "0"(a), "w"(b), "w"(c)
        -: 8725:           : /* No clobbers */);
        -: 8726:  return result;
        -: 8727:}
        -: 8728:
        -: 8729:__extension__ extern __inline uint8x16_t
        -: 8730:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8731:vmlsq_u8 (uint8x16_t a, uint8x16_t b, uint8x16_t c)
        -: 8732:{
        -: 8733:  uint8x16_t result;
        -: 8734:  __asm__ ("mls %0.16b,%2.16b,%3.16b"
        -: 8735:           : "=w"(result)
        -: 8736:           : "0"(a), "w"(b), "w"(c)
        -: 8737:           : /* No clobbers */);
        -: 8738:  return result;
        -: 8739:}
        -: 8740:
        -: 8741:__extension__ extern __inline uint16x8_t
        -: 8742:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8743:vmlsq_u16 (uint16x8_t a, uint16x8_t b, uint16x8_t c)
        -: 8744:{
        -: 8745:  uint16x8_t result;
        -: 8746:  __asm__ ("mls %0.8h,%2.8h,%3.8h"
        -: 8747:           : "=w"(result)
        -: 8748:           : "0"(a), "w"(b), "w"(c)
        -: 8749:           : /* No clobbers */);
        -: 8750:  return result;
        -: 8751:}
        -: 8752:
        -: 8753:__extension__ extern __inline uint32x4_t
        -: 8754:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8755:vmlsq_u32 (uint32x4_t a, uint32x4_t b, uint32x4_t c)
        -: 8756:{
        -: 8757:  uint32x4_t result;
        -: 8758:  __asm__ ("mls %0.4s,%2.4s,%3.4s"
        -: 8759:           : "=w"(result)
        -: 8760:           : "0"(a), "w"(b), "w"(c)
        -: 8761:           : /* No clobbers */);
        -: 8762:  return result;
        -: 8763:}
        -: 8764:
        -: 8765:__extension__ extern __inline int16x8_t
        -: 8766:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8767:vmovl_high_s8 (int8x16_t a)
        -: 8768:{
        -: 8769:  int16x8_t result;
        -: 8770:  __asm__ ("sshll2 %0.8h,%1.16b,#0"
        -: 8771:           : "=w"(result)
        -: 8772:           : "w"(a)
        -: 8773:           : /* No clobbers */);
        -: 8774:  return result;
        -: 8775:}
        -: 8776:
        -: 8777:__extension__ extern __inline int32x4_t
        -: 8778:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8779:vmovl_high_s16 (int16x8_t a)
        -: 8780:{
        -: 8781:  int32x4_t result;
        -: 8782:  __asm__ ("sshll2 %0.4s,%1.8h,#0"
        -: 8783:           : "=w"(result)
        -: 8784:           : "w"(a)
        -: 8785:           : /* No clobbers */);
        -: 8786:  return result;
        -: 8787:}
        -: 8788:
        -: 8789:__extension__ extern __inline int64x2_t
        -: 8790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8791:vmovl_high_s32 (int32x4_t a)
        -: 8792:{
        -: 8793:  int64x2_t result;
        -: 8794:  __asm__ ("sshll2 %0.2d,%1.4s,#0"
        -: 8795:           : "=w"(result)
        -: 8796:           : "w"(a)
        -: 8797:           : /* No clobbers */);
        -: 8798:  return result;
        -: 8799:}
        -: 8800:
        -: 8801:__extension__ extern __inline uint16x8_t
        -: 8802:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8803:vmovl_high_u8 (uint8x16_t a)
        -: 8804:{
        -: 8805:  uint16x8_t result;
        -: 8806:  __asm__ ("ushll2 %0.8h,%1.16b,#0"
        -: 8807:           : "=w"(result)
        -: 8808:           : "w"(a)
        -: 8809:           : /* No clobbers */);
        -: 8810:  return result;
        -: 8811:}
        -: 8812:
        -: 8813:__extension__ extern __inline uint32x4_t
        -: 8814:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8815:vmovl_high_u16 (uint16x8_t a)
        -: 8816:{
        -: 8817:  uint32x4_t result;
        -: 8818:  __asm__ ("ushll2 %0.4s,%1.8h,#0"
        -: 8819:           : "=w"(result)
        -: 8820:           : "w"(a)
        -: 8821:           : /* No clobbers */);
        -: 8822:  return result;
        -: 8823:}
        -: 8824:
        -: 8825:__extension__ extern __inline uint64x2_t
        -: 8826:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8827:vmovl_high_u32 (uint32x4_t a)
        -: 8828:{
        -: 8829:  uint64x2_t result;
        -: 8830:  __asm__ ("ushll2 %0.2d,%1.4s,#0"
        -: 8831:           : "=w"(result)
        -: 8832:           : "w"(a)
        -: 8833:           : /* No clobbers */);
        -: 8834:  return result;
        -: 8835:}
        -: 8836:
        -: 8837:__extension__ extern __inline int16x8_t
        -: 8838:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8839:vmovl_s8 (int8x8_t a)
        -: 8840:{
        -: 8841:  int16x8_t result;
        -: 8842:  __asm__ ("sshll %0.8h,%1.8b,#0"
        -: 8843:           : "=w"(result)
        -: 8844:           : "w"(a)
        -: 8845:           : /* No clobbers */);
        -: 8846:  return result;
        -: 8847:}
        -: 8848:
        -: 8849:__extension__ extern __inline int32x4_t
        -: 8850:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8851:vmovl_s16 (int16x4_t a)
        -: 8852:{
        -: 8853:  int32x4_t result;
        -: 8854:  __asm__ ("sshll %0.4s,%1.4h,#0"
        -: 8855:           : "=w"(result)
        -: 8856:           : "w"(a)
        -: 8857:           : /* No clobbers */);
        -: 8858:  return result;
        -: 8859:}
        -: 8860:
        -: 8861:__extension__ extern __inline int64x2_t
        -: 8862:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8863:vmovl_s32 (int32x2_t a)
        -: 8864:{
        -: 8865:  int64x2_t result;
        -: 8866:  __asm__ ("sshll %0.2d,%1.2s,#0"
        -: 8867:           : "=w"(result)
        -: 8868:           : "w"(a)
        -: 8869:           : /* No clobbers */);
        -: 8870:  return result;
        -: 8871:}
        -: 8872:
        -: 8873:__extension__ extern __inline uint16x8_t
        -: 8874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8875:vmovl_u8 (uint8x8_t a)
        -: 8876:{
        -: 8877:  uint16x8_t result;
        -: 8878:  __asm__ ("ushll %0.8h,%1.8b,#0"
        -: 8879:           : "=w"(result)
        -: 8880:           : "w"(a)
195944004: 8881:           : /* No clobbers */);
        -: 8882:  return result;
        -: 8883:}
        -: 8884:
        -: 8885:__extension__ extern __inline uint32x4_t
        -: 8886:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8887:vmovl_u16 (uint16x4_t a)
        -: 8888:{
        -: 8889:  uint32x4_t result;
        -: 8890:  __asm__ ("ushll %0.4s,%1.4h,#0"
        -: 8891:           : "=w"(result)
        -: 8892:           : "w"(a)
        -: 8893:           : /* No clobbers */);
        -: 8894:  return result;
        -: 8895:}
        -: 8896:
        -: 8897:__extension__ extern __inline uint64x2_t
        -: 8898:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8899:vmovl_u32 (uint32x2_t a)
        -: 8900:{
        -: 8901:  uint64x2_t result;
        -: 8902:  __asm__ ("ushll %0.2d,%1.2s,#0"
        -: 8903:           : "=w"(result)
        -: 8904:           : "w"(a)
        -: 8905:           : /* No clobbers */);
        -: 8906:  return result;
        -: 8907:}
        -: 8908:
        -: 8909:__extension__ extern __inline int8x16_t
        -: 8910:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8911:vmovn_high_s16 (int8x8_t a, int16x8_t b)
        -: 8912:{
        -: 8913:  int8x16_t result = vcombine_s8 (a, vcreate_s8 (__AARCH64_UINT64_C (0x0)));
        -: 8914:  __asm__ ("xtn2 %0.16b,%1.8h"
        -: 8915:           : "+w"(result)
        -: 8916:           : "w"(b)
        -: 8917:           : /* No clobbers */);
        -: 8918:  return result;
        -: 8919:}
        -: 8920:
        -: 8921:__extension__ extern __inline int16x8_t
        -: 8922:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8923:vmovn_high_s32 (int16x4_t a, int32x4_t b)
        -: 8924:{
        -: 8925:  int16x8_t result = vcombine_s16 (a, vcreate_s16 (__AARCH64_UINT64_C (0x0)));
        -: 8926:  __asm__ ("xtn2 %0.8h,%1.4s"
        -: 8927:           : "+w"(result)
        -: 8928:           : "w"(b)
        -: 8929:           : /* No clobbers */);
        -: 8930:  return result;
        -: 8931:}
        -: 8932:
        -: 8933:__extension__ extern __inline int32x4_t
        -: 8934:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8935:vmovn_high_s64 (int32x2_t a, int64x2_t b)
        -: 8936:{
        -: 8937:  int32x4_t result = vcombine_s32 (a, vcreate_s32 (__AARCH64_UINT64_C (0x0)));
        -: 8938:  __asm__ ("xtn2 %0.4s,%1.2d"
        -: 8939:           : "+w"(result)
        -: 8940:           : "w"(b)
        -: 8941:           : /* No clobbers */);
        -: 8942:  return result;
        -: 8943:}
        -: 8944:
        -: 8945:__extension__ extern __inline uint8x16_t
        -: 8946:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8947:vmovn_high_u16 (uint8x8_t a, uint16x8_t b)
        -: 8948:{
        -: 8949:  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (__AARCH64_UINT64_C (0x0)));
        -: 8950:  __asm__ ("xtn2 %0.16b,%1.8h"
        -: 8951:           : "+w"(result)
        -: 8952:           : "w"(b)
        -: 8953:           : /* No clobbers */);
        -: 8954:  return result;
        -: 8955:}
        -: 8956:
        -: 8957:__extension__ extern __inline uint16x8_t
        -: 8958:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8959:vmovn_high_u32 (uint16x4_t a, uint32x4_t b)
        -: 8960:{
        -: 8961:  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (__AARCH64_UINT64_C (0x0)));
        -: 8962:  __asm__ ("xtn2 %0.8h,%1.4s"
        -: 8963:           : "+w"(result)
        -: 8964:           : "w"(b)
        -: 8965:           : /* No clobbers */);
        -: 8966:  return result;
        -: 8967:}
        -: 8968:
        -: 8969:__extension__ extern __inline uint32x4_t
        -: 8970:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8971:vmovn_high_u64 (uint32x2_t a, uint64x2_t b)
        -: 8972:{
        -: 8973:  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (__AARCH64_UINT64_C (0x0)));
        -: 8974:  __asm__ ("xtn2 %0.4s,%1.2d"
        -: 8975:           : "+w"(result)
        -: 8976:           : "w"(b)
        -: 8977:           : /* No clobbers */);
        -: 8978:  return result;
        -: 8979:}
        -: 8980:
        -: 8981:__extension__ extern __inline int8x8_t
        -: 8982:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8983:vmovn_s16 (int16x8_t a)
        -: 8984:{
        -: 8985:  int8x8_t result;
        -: 8986:  __asm__ ("xtn %0.8b,%1.8h"
        -: 8987:           : "=w"(result)
        -: 8988:           : "w"(a)
        -: 8989:           : /* No clobbers */);
        -: 8990:  return result;
        -: 8991:}
        -: 8992:
        -: 8993:__extension__ extern __inline int16x4_t
        -: 8994:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 8995:vmovn_s32 (int32x4_t a)
        -: 8996:{
        -: 8997:  int16x4_t result;
        -: 8998:  __asm__ ("xtn %0.4h,%1.4s"
        -: 8999:           : "=w"(result)
        -: 9000:           : "w"(a)
        -: 9001:           : /* No clobbers */);
        -: 9002:  return result;
        -: 9003:}
        -: 9004:
        -: 9005:__extension__ extern __inline int32x2_t
        -: 9006:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9007:vmovn_s64 (int64x2_t a)
        -: 9008:{
        -: 9009:  int32x2_t result;
        -: 9010:  __asm__ ("xtn %0.2s,%1.2d"
        -: 9011:           : "=w"(result)
        -: 9012:           : "w"(a)
        -: 9013:           : /* No clobbers */);
        -: 9014:  return result;
        -: 9015:}
        -: 9016:
        -: 9017:__extension__ extern __inline uint8x8_t
        -: 9018:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9019:vmovn_u16 (uint16x8_t a)
        -: 9020:{
        -: 9021:  uint8x8_t result;
        -: 9022:  __asm__ ("xtn %0.8b,%1.8h"
        -: 9023:           : "=w"(result)
        -: 9024:           : "w"(a)
        -: 9025:           : /* No clobbers */);
        -: 9026:  return result;
        -: 9027:}
        -: 9028:
        -: 9029:__extension__ extern __inline uint16x4_t
        -: 9030:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9031:vmovn_u32 (uint32x4_t a)
        -: 9032:{
        -: 9033:  uint16x4_t result;
        -: 9034:  __asm__ ("xtn %0.4h,%1.4s"
        -: 9035:           : "=w"(result)
        -: 9036:           : "w"(a)
        -: 9037:           : /* No clobbers */);
        -: 9038:  return result;
        -: 9039:}
        -: 9040:
        -: 9041:__extension__ extern __inline uint32x2_t
        -: 9042:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9043:vmovn_u64 (uint64x2_t a)
        -: 9044:{
        -: 9045:  uint32x2_t result;
        -: 9046:  __asm__ ("xtn %0.2s,%1.2d"
        -: 9047:           : "=w"(result)
        -: 9048:           : "w"(a)
        -: 9049:           : /* No clobbers */);
        -: 9050:  return result;
        -: 9051:}
        -: 9052:
        -: 9053:#define vmull_high_lane_s16(a, b, c)                                    \
        -: 9054:  __extension__                                                         \
        -: 9055:    ({                                                                  \
        -: 9056:       int16x4_t b_ = (b);                                              \
        -: 9057:       int16x8_t a_ = (a);                                              \
        -: 9058:       int32x4_t result;                                                \
        -: 9059:       __asm__ ("smull2 %0.4s, %1.8h, %2.h[%3]"                         \
        -: 9060:                : "=w"(result)                                          \
        -: 9061:                : "w"(a_), "x"(b_), "i"(c)                              \
        -: 9062:                : /* No clobbers */);                                   \
        -: 9063:       result;                                                          \
        -: 9064:     })
        -: 9065:
        -: 9066:#define vmull_high_lane_s32(a, b, c)                                    \
        -: 9067:  __extension__                                                         \
        -: 9068:    ({                                                                  \
        -: 9069:       int32x2_t b_ = (b);                                              \
        -: 9070:       int32x4_t a_ = (a);                                              \
        -: 9071:       int64x2_t result;                                                \
        -: 9072:       __asm__ ("smull2 %0.2d, %1.4s, %2.s[%3]"                         \
        -: 9073:                : "=w"(result)                                          \
        -: 9074:                : "w"(a_), "w"(b_), "i"(c)                              \
        -: 9075:                : /* No clobbers */);                                   \
        -: 9076:       result;                                                          \
        -: 9077:     })
        -: 9078:
        -: 9079:#define vmull_high_lane_u16(a, b, c)                                    \
        -: 9080:  __extension__                                                         \
        -: 9081:    ({                                                                  \
        -: 9082:       uint16x4_t b_ = (b);                                             \
        -: 9083:       uint16x8_t a_ = (a);                                             \
        -: 9084:       uint32x4_t result;                                               \
        -: 9085:       __asm__ ("umull2 %0.4s, %1.8h, %2.h[%3]"                         \
        -: 9086:                : "=w"(result)                                          \
        -: 9087:                : "w"(a_), "x"(b_), "i"(c)                              \
        -: 9088:                : /* No clobbers */);                                   \
        -: 9089:       result;                                                          \
        -: 9090:     })
        -: 9091:
        -: 9092:#define vmull_high_lane_u32(a, b, c)                                    \
        -: 9093:  __extension__                                                         \
        -: 9094:    ({                                                                  \
        -: 9095:       uint32x2_t b_ = (b);                                             \
        -: 9096:       uint32x4_t a_ = (a);                                             \
        -: 9097:       uint64x2_t result;                                               \
        -: 9098:       __asm__ ("umull2 %0.2d, %1.4s, %2.s[%3]"                         \
        -: 9099:                : "=w"(result)                                          \
        -: 9100:                : "w"(a_), "w"(b_), "i"(c)                              \
        -: 9101:                : /* No clobbers */);                                   \
        -: 9102:       result;                                                          \
        -: 9103:     })
        -: 9104:
        -: 9105:#define vmull_high_laneq_s16(a, b, c)                                   \
        -: 9106:  __extension__                                                         \
        -: 9107:    ({                                                                  \
        -: 9108:       int16x8_t b_ = (b);                                              \
        -: 9109:       int16x8_t a_ = (a);                                              \
        -: 9110:       int32x4_t result;                                                \
        -: 9111:       __asm__ ("smull2 %0.4s, %1.8h, %2.h[%3]"                         \
        -: 9112:                : "=w"(result)                                          \
        -: 9113:                : "w"(a_), "x"(b_), "i"(c)                              \
        -: 9114:                : /* No clobbers */);                                   \
        -: 9115:       result;                                                          \
        -: 9116:     })
        -: 9117:
        -: 9118:#define vmull_high_laneq_s32(a, b, c)                                   \
        -: 9119:  __extension__                                                         \
        -: 9120:    ({                                                                  \
        -: 9121:       int32x4_t b_ = (b);                                              \
        -: 9122:       int32x4_t a_ = (a);                                              \
        -: 9123:       int64x2_t result;                                                \
        -: 9124:       __asm__ ("smull2 %0.2d, %1.4s, %2.s[%3]"                         \
        -: 9125:                : "=w"(result)                                          \
        -: 9126:                : "w"(a_), "w"(b_), "i"(c)                              \
        -: 9127:                : /* No clobbers */);                                   \
        -: 9128:       result;                                                          \
        -: 9129:     })
        -: 9130:
        -: 9131:#define vmull_high_laneq_u16(a, b, c)                                   \
        -: 9132:  __extension__                                                         \
        -: 9133:    ({                                                                  \
        -: 9134:       uint16x8_t b_ = (b);                                             \
        -: 9135:       uint16x8_t a_ = (a);                                             \
        -: 9136:       uint32x4_t result;                                               \
        -: 9137:       __asm__ ("umull2 %0.4s, %1.8h, %2.h[%3]"                         \
        -: 9138:                : "=w"(result)                                          \
        -: 9139:                : "w"(a_), "x"(b_), "i"(c)                              \
        -: 9140:                : /* No clobbers */);                                   \
        -: 9141:       result;                                                          \
        -: 9142:     })
        -: 9143:
        -: 9144:#define vmull_high_laneq_u32(a, b, c)                                   \
        -: 9145:  __extension__                                                         \
        -: 9146:    ({                                                                  \
        -: 9147:       uint32x4_t b_ = (b);                                             \
        -: 9148:       uint32x4_t a_ = (a);                                             \
        -: 9149:       uint64x2_t result;                                               \
        -: 9150:       __asm__ ("umull2 %0.2d, %1.4s, %2.s[%3]"                         \
        -: 9151:                : "=w"(result)                                          \
        -: 9152:                : "w"(a_), "w"(b_), "i"(c)                              \
        -: 9153:                : /* No clobbers */);                                   \
        -: 9154:       result;                                                          \
        -: 9155:     })
        -: 9156:
        -: 9157:__extension__ extern __inline int32x4_t
        -: 9158:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9159:vmull_high_n_s16 (int16x8_t a, int16_t b)
        -: 9160:{
        -: 9161:  int32x4_t result;
        -: 9162:  __asm__ ("smull2 %0.4s,%1.8h,%2.h[0]"
        -: 9163:           : "=w"(result)
        -: 9164:           : "w"(a), "x"(b)
        -: 9165:           : /* No clobbers */);
        -: 9166:  return result;
        -: 9167:}
        -: 9168:
        -: 9169:__extension__ extern __inline int64x2_t
        -: 9170:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9171:vmull_high_n_s32 (int32x4_t a, int32_t b)
        -: 9172:{
        -: 9173:  int64x2_t result;
        -: 9174:  __asm__ ("smull2 %0.2d,%1.4s,%2.s[0]"
        -: 9175:           : "=w"(result)
        -: 9176:           : "w"(a), "w"(b)
        -: 9177:           : /* No clobbers */);
        -: 9178:  return result;
        -: 9179:}
        -: 9180:
        -: 9181:__extension__ extern __inline uint32x4_t
        -: 9182:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9183:vmull_high_n_u16 (uint16x8_t a, uint16_t b)
        -: 9184:{
        -: 9185:  uint32x4_t result;
        -: 9186:  __asm__ ("umull2 %0.4s,%1.8h,%2.h[0]"
        -: 9187:           : "=w"(result)
        -: 9188:           : "w"(a), "x"(b)
        -: 9189:           : /* No clobbers */);
        -: 9190:  return result;
        -: 9191:}
        -: 9192:
        -: 9193:__extension__ extern __inline uint64x2_t
        -: 9194:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9195:vmull_high_n_u32 (uint32x4_t a, uint32_t b)
        -: 9196:{
        -: 9197:  uint64x2_t result;
        -: 9198:  __asm__ ("umull2 %0.2d,%1.4s,%2.s[0]"
        -: 9199:           : "=w"(result)
        -: 9200:           : "w"(a), "w"(b)
        -: 9201:           : /* No clobbers */);
        -: 9202:  return result;
        -: 9203:}
        -: 9204:
        -: 9205:__extension__ extern __inline poly16x8_t
        -: 9206:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9207:vmull_high_p8 (poly8x16_t a, poly8x16_t b)
        -: 9208:{
        -: 9209:  poly16x8_t result;
        -: 9210:  __asm__ ("pmull2 %0.8h,%1.16b,%2.16b"
        -: 9211:           : "=w"(result)
        -: 9212:           : "w"(a), "w"(b)
        -: 9213:           : /* No clobbers */);
        -: 9214:  return result;
        -: 9215:}
        -: 9216:
        -: 9217:__extension__ extern __inline int16x8_t
        -: 9218:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9219:vmull_high_s8 (int8x16_t a, int8x16_t b)
        -: 9220:{
        -: 9221:  int16x8_t result;
        -: 9222:  __asm__ ("smull2 %0.8h,%1.16b,%2.16b"
        -: 9223:           : "=w"(result)
        -: 9224:           : "w"(a), "w"(b)
        -: 9225:           : /* No clobbers */);
        -: 9226:  return result;
        -: 9227:}
        -: 9228:
        -: 9229:__extension__ extern __inline int32x4_t
        -: 9230:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9231:vmull_high_s16 (int16x8_t a, int16x8_t b)
        -: 9232:{
        -: 9233:  int32x4_t result;
        -: 9234:  __asm__ ("smull2 %0.4s,%1.8h,%2.8h"
        -: 9235:           : "=w"(result)
        -: 9236:           : "w"(a), "w"(b)
        -: 9237:           : /* No clobbers */);
        -: 9238:  return result;
        -: 9239:}
        -: 9240:
        -: 9241:__extension__ extern __inline int64x2_t
        -: 9242:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9243:vmull_high_s32 (int32x4_t a, int32x4_t b)
        -: 9244:{
        -: 9245:  int64x2_t result;
        -: 9246:  __asm__ ("smull2 %0.2d,%1.4s,%2.4s"
        -: 9247:           : "=w"(result)
        -: 9248:           : "w"(a), "w"(b)
        -: 9249:           : /* No clobbers */);
        -: 9250:  return result;
        -: 9251:}
        -: 9252:
        -: 9253:__extension__ extern __inline uint16x8_t
        -: 9254:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9255:vmull_high_u8 (uint8x16_t a, uint8x16_t b)
        -: 9256:{
        -: 9257:  uint16x8_t result;
        -: 9258:  __asm__ ("umull2 %0.8h,%1.16b,%2.16b"
        -: 9259:           : "=w"(result)
        -: 9260:           : "w"(a), "w"(b)
        -: 9261:           : /* No clobbers */);
        -: 9262:  return result;
        -: 9263:}
        -: 9264:
        -: 9265:__extension__ extern __inline uint32x4_t
        -: 9266:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9267:vmull_high_u16 (uint16x8_t a, uint16x8_t b)
        -: 9268:{
        -: 9269:  uint32x4_t result;
        -: 9270:  __asm__ ("umull2 %0.4s,%1.8h,%2.8h"
        -: 9271:           : "=w"(result)
        -: 9272:           : "w"(a), "w"(b)
        -: 9273:           : /* No clobbers */);
        -: 9274:  return result;
        -: 9275:}
        -: 9276:
        -: 9277:__extension__ extern __inline uint64x2_t
        -: 9278:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9279:vmull_high_u32 (uint32x4_t a, uint32x4_t b)
        -: 9280:{
        -: 9281:  uint64x2_t result;
        -: 9282:  __asm__ ("umull2 %0.2d,%1.4s,%2.4s"
        -: 9283:           : "=w"(result)
        -: 9284:           : "w"(a), "w"(b)
        -: 9285:           : /* No clobbers */);
        -: 9286:  return result;
        -: 9287:}
        -: 9288:
        -: 9289:#define vmull_lane_s16(a, b, c)                                         \
        -: 9290:  __extension__                                                         \
        -: 9291:    ({                                                                  \
        -: 9292:       int16x4_t b_ = (b);                                              \
        -: 9293:       int16x4_t a_ = (a);                                              \
        -: 9294:       int32x4_t result;                                                \
        -: 9295:       __asm__ ("smull %0.4s,%1.4h,%2.h[%3]"                            \
        -: 9296:                : "=w"(result)                                          \
        -: 9297:                : "w"(a_), "x"(b_), "i"(c)                              \
        -: 9298:                : /* No clobbers */);                                   \
        -: 9299:       result;                                                          \
        -: 9300:     })
        -: 9301:
        -: 9302:#define vmull_lane_s32(a, b, c)                                         \
        -: 9303:  __extension__                                                         \
        -: 9304:    ({                                                                  \
        -: 9305:       int32x2_t b_ = (b);                                              \
        -: 9306:       int32x2_t a_ = (a);                                              \
        -: 9307:       int64x2_t result;                                                \
        -: 9308:       __asm__ ("smull %0.2d,%1.2s,%2.s[%3]"                            \
        -: 9309:                : "=w"(result)                                          \
        -: 9310:                : "w"(a_), "w"(b_), "i"(c)                              \
        -: 9311:                : /* No clobbers */);                                   \
        -: 9312:       result;                                                          \
        -: 9313:     })
        -: 9314:
        -: 9315:#define vmull_lane_u16(a, b, c)                                         \
        -: 9316:  __extension__                                                         \
        -: 9317:    ({                                                                  \
        -: 9318:       uint16x4_t b_ = (b);                                             \
        -: 9319:       uint16x4_t a_ = (a);                                             \
        -: 9320:       uint32x4_t result;                                               \
        -: 9321:       __asm__ ("umull %0.4s,%1.4h,%2.h[%3]"                            \
        -: 9322:                : "=w"(result)                                          \
        -: 9323:                : "w"(a_), "x"(b_), "i"(c)                              \
        -: 9324:                : /* No clobbers */);                                   \
        -: 9325:       result;                                                          \
        -: 9326:     })
        -: 9327:
        -: 9328:#define vmull_lane_u32(a, b, c)                                         \
        -: 9329:  __extension__                                                         \
        -: 9330:    ({                                                                  \
        -: 9331:       uint32x2_t b_ = (b);                                             \
        -: 9332:       uint32x2_t a_ = (a);                                             \
        -: 9333:       uint64x2_t result;                                               \
        -: 9334:       __asm__ ("umull %0.2d, %1.2s, %2.s[%3]"                          \
        -: 9335:                : "=w"(result)                                          \
        -: 9336:                : "w"(a_), "w"(b_), "i"(c)                              \
        -: 9337:                : /* No clobbers */);                                   \
        -: 9338:       result;                                                          \
        -: 9339:     })
        -: 9340:
        -: 9341:#define vmull_laneq_s16(a, b, c)                                        \
        -: 9342:  __extension__                                                         \
        -: 9343:    ({                                                                  \
        -: 9344:       int16x8_t b_ = (b);                                              \
        -: 9345:       int16x4_t a_ = (a);                                              \
        -: 9346:       int32x4_t result;                                                \
        -: 9347:       __asm__ ("smull %0.4s, %1.4h, %2.h[%3]"                          \
        -: 9348:                : "=w"(result)                                          \
        -: 9349:                : "w"(a_), "x"(b_), "i"(c)                              \
        -: 9350:                : /* No clobbers */);                                   \
        -: 9351:       result;                                                          \
        -: 9352:     })
        -: 9353:
        -: 9354:#define vmull_laneq_s32(a, b, c)                                        \
        -: 9355:  __extension__                                                         \
        -: 9356:    ({                                                                  \
        -: 9357:       int32x4_t b_ = (b);                                              \
        -: 9358:       int32x2_t a_ = (a);                                              \
        -: 9359:       int64x2_t result;                                                \
        -: 9360:       __asm__ ("smull %0.2d, %1.2s, %2.s[%3]"                          \
        -: 9361:                : "=w"(result)                                          \
        -: 9362:                : "w"(a_), "w"(b_), "i"(c)                              \
        -: 9363:                : /* No clobbers */);                                   \
        -: 9364:       result;                                                          \
        -: 9365:     })
        -: 9366:
        -: 9367:#define vmull_laneq_u16(a, b, c)                                        \
        -: 9368:  __extension__                                                         \
        -: 9369:    ({                                                                  \
        -: 9370:       uint16x8_t b_ = (b);                                             \
        -: 9371:       uint16x4_t a_ = (a);                                             \
        -: 9372:       uint32x4_t result;                                               \
        -: 9373:       __asm__ ("umull %0.4s, %1.4h, %2.h[%3]"                          \
        -: 9374:                : "=w"(result)                                          \
        -: 9375:                : "w"(a_), "x"(b_), "i"(c)                              \
        -: 9376:                : /* No clobbers */);                                   \
        -: 9377:       result;                                                          \
        -: 9378:     })
        -: 9379:
        -: 9380:#define vmull_laneq_u32(a, b, c)                                        \
        -: 9381:  __extension__                                                         \
        -: 9382:    ({                                                                  \
        -: 9383:       uint32x4_t b_ = (b);                                             \
        -: 9384:       uint32x2_t a_ = (a);                                             \
        -: 9385:       uint64x2_t result;                                               \
        -: 9386:       __asm__ ("umull %0.2d, %1.2s, %2.s[%3]"                          \
        -: 9387:                : "=w"(result)                                          \
        -: 9388:                : "w"(a_), "w"(b_), "i"(c)                              \
        -: 9389:                : /* No clobbers */);                                   \
        -: 9390:       result;                                                          \
        -: 9391:     })
        -: 9392:
        -: 9393:__extension__ extern __inline int32x4_t
        -: 9394:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9395:vmull_n_s16 (int16x4_t a, int16_t b)
        -: 9396:{
        -: 9397:  int32x4_t result;
        -: 9398:  __asm__ ("smull %0.4s,%1.4h,%2.h[0]"
        -: 9399:           : "=w"(result)
        -: 9400:           : "w"(a), "x"(b)
        -: 9401:           : /* No clobbers */);
        -: 9402:  return result;
        -: 9403:}
        -: 9404:
        -: 9405:__extension__ extern __inline int64x2_t
        -: 9406:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9407:vmull_n_s32 (int32x2_t a, int32_t b)
        -: 9408:{
        -: 9409:  int64x2_t result;
        -: 9410:  __asm__ ("smull %0.2d,%1.2s,%2.s[0]"
        -: 9411:           : "=w"(result)
        -: 9412:           : "w"(a), "w"(b)
        -: 9413:           : /* No clobbers */);
        -: 9414:  return result;
        -: 9415:}
        -: 9416:
        -: 9417:__extension__ extern __inline uint32x4_t
        -: 9418:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9419:vmull_n_u16 (uint16x4_t a, uint16_t b)
        -: 9420:{
        -: 9421:  uint32x4_t result;
        -: 9422:  __asm__ ("umull %0.4s,%1.4h,%2.h[0]"
        -: 9423:           : "=w"(result)
        -: 9424:           : "w"(a), "x"(b)
        -: 9425:           : /* No clobbers */);
        -: 9426:  return result;
        -: 9427:}
        -: 9428:
        -: 9429:__extension__ extern __inline uint64x2_t
        -: 9430:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9431:vmull_n_u32 (uint32x2_t a, uint32_t b)
        -: 9432:{
        -: 9433:  uint64x2_t result;
        -: 9434:  __asm__ ("umull %0.2d,%1.2s,%2.s[0]"
        -: 9435:           : "=w"(result)
        -: 9436:           : "w"(a), "w"(b)
        -: 9437:           : /* No clobbers */);
        -: 9438:  return result;
        -: 9439:}
        -: 9440:
        -: 9441:__extension__ extern __inline poly16x8_t
        -: 9442:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9443:vmull_p8 (poly8x8_t a, poly8x8_t b)
        -: 9444:{
        -: 9445:  poly16x8_t result;
        -: 9446:  __asm__ ("pmull %0.8h, %1.8b, %2.8b"
        -: 9447:           : "=w"(result)
        -: 9448:           : "w"(a), "w"(b)
        -: 9449:           : /* No clobbers */);
        -: 9450:  return result;
        -: 9451:}
        -: 9452:
        -: 9453:__extension__ extern __inline int16x8_t
        -: 9454:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9455:vmull_s8 (int8x8_t a, int8x8_t b)
        -: 9456:{
        -: 9457:  int16x8_t result;
        -: 9458:  __asm__ ("smull %0.8h, %1.8b, %2.8b"
        -: 9459:           : "=w"(result)
        -: 9460:           : "w"(a), "w"(b)
        -: 9461:           : /* No clobbers */);
        -: 9462:  return result;
        -: 9463:}
        -: 9464:
        -: 9465:__extension__ extern __inline int32x4_t
        -: 9466:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9467:vmull_s16 (int16x4_t a, int16x4_t b)
        -: 9468:{
        -: 9469:  int32x4_t result;
        -: 9470:  __asm__ ("smull %0.4s, %1.4h, %2.4h"
        -: 9471:           : "=w"(result)
        -: 9472:           : "w"(a), "w"(b)
        -: 9473:           : /* No clobbers */);
        -: 9474:  return result;
        -: 9475:}
        -: 9476:
        -: 9477:__extension__ extern __inline int64x2_t
        -: 9478:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9479:vmull_s32 (int32x2_t a, int32x2_t b)
        -: 9480:{
        -: 9481:  int64x2_t result;
        -: 9482:  __asm__ ("smull %0.2d, %1.2s, %2.2s"
        -: 9483:           : "=w"(result)
        -: 9484:           : "w"(a), "w"(b)
        -: 9485:           : /* No clobbers */);
        -: 9486:  return result;
        -: 9487:}
        -: 9488:
        -: 9489:__extension__ extern __inline uint16x8_t
        -: 9490:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9491:vmull_u8 (uint8x8_t a, uint8x8_t b)
        -: 9492:{
        -: 9493:  uint16x8_t result;
        -: 9494:  __asm__ ("umull %0.8h, %1.8b, %2.8b"
        -: 9495:           : "=w"(result)
        -: 9496:           : "w"(a), "w"(b)
        -: 9497:           : /* No clobbers */);
        -: 9498:  return result;
        -: 9499:}
        -: 9500:
        -: 9501:__extension__ extern __inline uint32x4_t
        -: 9502:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9503:vmull_u16 (uint16x4_t a, uint16x4_t b)
        -: 9504:{
        -: 9505:  uint32x4_t result;
        -: 9506:  __asm__ ("umull %0.4s, %1.4h, %2.4h"
        -: 9507:           : "=w"(result)
        -: 9508:           : "w"(a), "w"(b)
        -: 9509:           : /* No clobbers */);
        -: 9510:  return result;
        -: 9511:}
        -: 9512:
        -: 9513:__extension__ extern __inline uint64x2_t
        -: 9514:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9515:vmull_u32 (uint32x2_t a, uint32x2_t b)
        -: 9516:{
        -: 9517:  uint64x2_t result;
        -: 9518:  __asm__ ("umull %0.2d, %1.2s, %2.2s"
        -: 9519:           : "=w"(result)
        -: 9520:           : "w"(a), "w"(b)
        -: 9521:           : /* No clobbers */);
        -: 9522:  return result;
        -: 9523:}
        -: 9524:
        -: 9525:__extension__ extern __inline int16x4_t
        -: 9526:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9527:vpadal_s8 (int16x4_t a, int8x8_t b)
        -: 9528:{
        -: 9529:  int16x4_t result;
        -: 9530:  __asm__ ("sadalp %0.4h,%2.8b"
        -: 9531:           : "=w"(result)
        -: 9532:           : "0"(a), "w"(b)
        -: 9533:           : /* No clobbers */);
        -: 9534:  return result;
        -: 9535:}
        -: 9536:
        -: 9537:__extension__ extern __inline int32x2_t
        -: 9538:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9539:vpadal_s16 (int32x2_t a, int16x4_t b)
        -: 9540:{
        -: 9541:  int32x2_t result;
        -: 9542:  __asm__ ("sadalp %0.2s,%2.4h"
        -: 9543:           : "=w"(result)
        -: 9544:           : "0"(a), "w"(b)
        -: 9545:           : /* No clobbers */);
        -: 9546:  return result;
        -: 9547:}
        -: 9548:
        -: 9549:__extension__ extern __inline int64x1_t
        -: 9550:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9551:vpadal_s32 (int64x1_t a, int32x2_t b)
        -: 9552:{
        -: 9553:  int64x1_t result;
        -: 9554:  __asm__ ("sadalp %0.1d,%2.2s"
        -: 9555:           : "=w"(result)
        -: 9556:           : "0"(a), "w"(b)
        -: 9557:           : /* No clobbers */);
        -: 9558:  return result;
        -: 9559:}
        -: 9560:
        -: 9561:__extension__ extern __inline uint16x4_t
        -: 9562:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9563:vpadal_u8 (uint16x4_t a, uint8x8_t b)
        -: 9564:{
        -: 9565:  uint16x4_t result;
        -: 9566:  __asm__ ("uadalp %0.4h,%2.8b"
        -: 9567:           : "=w"(result)
        -: 9568:           : "0"(a), "w"(b)
        -: 9569:           : /* No clobbers */);
        -: 9570:  return result;
        -: 9571:}
        -: 9572:
        -: 9573:__extension__ extern __inline uint32x2_t
        -: 9574:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9575:vpadal_u16 (uint32x2_t a, uint16x4_t b)
        -: 9576:{
        -: 9577:  uint32x2_t result;
        -: 9578:  __asm__ ("uadalp %0.2s,%2.4h"
        -: 9579:           : "=w"(result)
        -: 9580:           : "0"(a), "w"(b)
        -: 9581:           : /* No clobbers */);
        -: 9582:  return result;
        -: 9583:}
        -: 9584:
        -: 9585:__extension__ extern __inline uint64x1_t
        -: 9586:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9587:vpadal_u32 (uint64x1_t a, uint32x2_t b)
        -: 9588:{
        -: 9589:  uint64x1_t result;
        -: 9590:  __asm__ ("uadalp %0.1d,%2.2s"
        -: 9591:           : "=w"(result)
        -: 9592:           : "0"(a), "w"(b)
        -: 9593:           : /* No clobbers */);
        -: 9594:  return result;
        -: 9595:}
        -: 9596:
        -: 9597:__extension__ extern __inline int16x8_t
        -: 9598:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9599:vpadalq_s8 (int16x8_t a, int8x16_t b)
        -: 9600:{
        -: 9601:  int16x8_t result;
        -: 9602:  __asm__ ("sadalp %0.8h,%2.16b"
        -: 9603:           : "=w"(result)
        -: 9604:           : "0"(a), "w"(b)
        -: 9605:           : /* No clobbers */);
        -: 9606:  return result;
        -: 9607:}
        -: 9608:
        -: 9609:__extension__ extern __inline int32x4_t
        -: 9610:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9611:vpadalq_s16 (int32x4_t a, int16x8_t b)
        -: 9612:{
        -: 9613:  int32x4_t result;
        -: 9614:  __asm__ ("sadalp %0.4s,%2.8h"
        -: 9615:           : "=w"(result)
        -: 9616:           : "0"(a), "w"(b)
        -: 9617:           : /* No clobbers */);
        -: 9618:  return result;
        -: 9619:}
        -: 9620:
        -: 9621:__extension__ extern __inline int64x2_t
        -: 9622:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9623:vpadalq_s32 (int64x2_t a, int32x4_t b)
        -: 9624:{
        -: 9625:  int64x2_t result;
        -: 9626:  __asm__ ("sadalp %0.2d,%2.4s"
        -: 9627:           : "=w"(result)
        -: 9628:           : "0"(a), "w"(b)
        -: 9629:           : /* No clobbers */);
        -: 9630:  return result;
        -: 9631:}
        -: 9632:
        -: 9633:__extension__ extern __inline uint16x8_t
        -: 9634:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9635:vpadalq_u8 (uint16x8_t a, uint8x16_t b)
        -: 9636:{
        -: 9637:  uint16x8_t result;
        -: 9638:  __asm__ ("uadalp %0.8h,%2.16b"
        -: 9639:           : "=w"(result)
        -: 9640:           : "0"(a), "w"(b)
        -: 9641:           : /* No clobbers */);
        -: 9642:  return result;
        -: 9643:}
        -: 9644:
        -: 9645:__extension__ extern __inline uint32x4_t
        -: 9646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9647:vpadalq_u16 (uint32x4_t a, uint16x8_t b)
        -: 9648:{
        -: 9649:  uint32x4_t result;
        -: 9650:  __asm__ ("uadalp %0.4s,%2.8h"
        -: 9651:           : "=w"(result)
        -: 9652:           : "0"(a), "w"(b)
        -: 9653:           : /* No clobbers */);
        -: 9654:  return result;
        -: 9655:}
        -: 9656:
        -: 9657:__extension__ extern __inline uint64x2_t
        -: 9658:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9659:vpadalq_u32 (uint64x2_t a, uint32x4_t b)
        -: 9660:{
        -: 9661:  uint64x2_t result;
        -: 9662:  __asm__ ("uadalp %0.2d,%2.4s"
        -: 9663:           : "=w"(result)
        -: 9664:           : "0"(a), "w"(b)
        -: 9665:           : /* No clobbers */);
        -: 9666:  return result;
        -: 9667:}
        -: 9668:
        -: 9669:__extension__ extern __inline int16x4_t
        -: 9670:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9671:vpaddl_s8 (int8x8_t a)
        -: 9672:{
        -: 9673:  int16x4_t result;
        -: 9674:  __asm__ ("saddlp %0.4h,%1.8b"
        -: 9675:           : "=w"(result)
        -: 9676:           : "w"(a)
        -: 9677:           : /* No clobbers */);
        -: 9678:  return result;
        -: 9679:}
        -: 9680:
        -: 9681:__extension__ extern __inline int32x2_t
        -: 9682:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9683:vpaddl_s16 (int16x4_t a)
        -: 9684:{
        -: 9685:  int32x2_t result;
        -: 9686:  __asm__ ("saddlp %0.2s,%1.4h"
        -: 9687:           : "=w"(result)
        -: 9688:           : "w"(a)
        -: 9689:           : /* No clobbers */);
        -: 9690:  return result;
        -: 9691:}
        -: 9692:
        -: 9693:__extension__ extern __inline int64x1_t
        -: 9694:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9695:vpaddl_s32 (int32x2_t a)
        -: 9696:{
        -: 9697:  int64x1_t result;
        -: 9698:  __asm__ ("saddlp %0.1d,%1.2s"
        -: 9699:           : "=w"(result)
        -: 9700:           : "w"(a)
        -: 9701:           : /* No clobbers */);
        -: 9702:  return result;
        -: 9703:}
        -: 9704:
        -: 9705:__extension__ extern __inline uint16x4_t
        -: 9706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9707:vpaddl_u8 (uint8x8_t a)
        -: 9708:{
        -: 9709:  uint16x4_t result;
        -: 9710:  __asm__ ("uaddlp %0.4h,%1.8b"
        -: 9711:           : "=w"(result)
        -: 9712:           : "w"(a)
        -: 9713:           : /* No clobbers */);
        -: 9714:  return result;
        -: 9715:}
        -: 9716:
        -: 9717:__extension__ extern __inline uint32x2_t
        -: 9718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9719:vpaddl_u16 (uint16x4_t a)
        -: 9720:{
        -: 9721:  uint32x2_t result;
        -: 9722:  __asm__ ("uaddlp %0.2s,%1.4h"
        -: 9723:           : "=w"(result)
        -: 9724:           : "w"(a)
        -: 9725:           : /* No clobbers */);
        -: 9726:  return result;
        -: 9727:}
        -: 9728:
        -: 9729:__extension__ extern __inline uint64x1_t
        -: 9730:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9731:vpaddl_u32 (uint32x2_t a)
        -: 9732:{
        -: 9733:  uint64x1_t result;
        -: 9734:  __asm__ ("uaddlp %0.1d,%1.2s"
        -: 9735:           : "=w"(result)
        -: 9736:           : "w"(a)
        -: 9737:           : /* No clobbers */);
        -: 9738:  return result;
        -: 9739:}
        -: 9740:
        -: 9741:__extension__ extern __inline int16x8_t
        -: 9742:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9743:vpaddlq_s8 (int8x16_t a)
        -: 9744:{
        -: 9745:  int16x8_t result;
        -: 9746:  __asm__ ("saddlp %0.8h,%1.16b"
        -: 9747:           : "=w"(result)
        -: 9748:           : "w"(a)
        -: 9749:           : /* No clobbers */);
        -: 9750:  return result;
        -: 9751:}
        -: 9752:
        -: 9753:__extension__ extern __inline int32x4_t
        -: 9754:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9755:vpaddlq_s16 (int16x8_t a)
        -: 9756:{
        -: 9757:  int32x4_t result;
        -: 9758:  __asm__ ("saddlp %0.4s,%1.8h"
        -: 9759:           : "=w"(result)
        -: 9760:           : "w"(a)
        -: 9761:           : /* No clobbers */);
        -: 9762:  return result;
        -: 9763:}
        -: 9764:
        -: 9765:__extension__ extern __inline int64x2_t
        -: 9766:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9767:vpaddlq_s32 (int32x4_t a)
        -: 9768:{
        -: 9769:  int64x2_t result;
        -: 9770:  __asm__ ("saddlp %0.2d,%1.4s"
        -: 9771:           : "=w"(result)
        -: 9772:           : "w"(a)
        -: 9773:           : /* No clobbers */);
        -: 9774:  return result;
        -: 9775:}
        -: 9776:
        -: 9777:__extension__ extern __inline uint16x8_t
        -: 9778:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9779:vpaddlq_u8 (uint8x16_t a)
        -: 9780:{
        -: 9781:  uint16x8_t result;
        -: 9782:  __asm__ ("uaddlp %0.8h,%1.16b"
        -: 9783:           : "=w"(result)
        -: 9784:           : "w"(a)
        -: 9785:           : /* No clobbers */);
        -: 9786:  return result;
        -: 9787:}
        -: 9788:
        -: 9789:__extension__ extern __inline uint32x4_t
        -: 9790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9791:vpaddlq_u16 (uint16x8_t a)
        -: 9792:{
        -: 9793:  uint32x4_t result;
        -: 9794:  __asm__ ("uaddlp %0.4s,%1.8h"
        -: 9795:           : "=w"(result)
        -: 9796:           : "w"(a)
        -: 9797:           : /* No clobbers */);
        -: 9798:  return result;
        -: 9799:}
        -: 9800:
        -: 9801:__extension__ extern __inline uint64x2_t
        -: 9802:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9803:vpaddlq_u32 (uint32x4_t a)
        -: 9804:{
        -: 9805:  uint64x2_t result;
        -: 9806:  __asm__ ("uaddlp %0.2d,%1.4s"
        -: 9807:           : "=w"(result)
        -: 9808:           : "w"(a)
        -: 9809:           : /* No clobbers */);
        -: 9810:  return result;
        -: 9811:}
        -: 9812:
        -: 9813:__extension__ extern __inline int8x16_t
        -: 9814:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9815:vpaddq_s8 (int8x16_t a, int8x16_t b)
        -: 9816:{
        -: 9817:  int8x16_t result;
        -: 9818:  __asm__ ("addp %0.16b,%1.16b,%2.16b"
        -: 9819:           : "=w"(result)
        -: 9820:           : "w"(a), "w"(b)
        -: 9821:           : /* No clobbers */);
        -: 9822:  return result;
        -: 9823:}
        -: 9824:
        -: 9825:__extension__ extern __inline int16x8_t
        -: 9826:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9827:vpaddq_s16 (int16x8_t a, int16x8_t b)
        -: 9828:{
        -: 9829:  int16x8_t result;
        -: 9830:  __asm__ ("addp %0.8h,%1.8h,%2.8h"
        -: 9831:           : "=w"(result)
        -: 9832:           : "w"(a), "w"(b)
        -: 9833:           : /* No clobbers */);
        -: 9834:  return result;
        -: 9835:}
        -: 9836:
        -: 9837:__extension__ extern __inline int32x4_t
        -: 9838:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9839:vpaddq_s32 (int32x4_t a, int32x4_t b)
        -: 9840:{
        -: 9841:  int32x4_t result;
        -: 9842:  __asm__ ("addp %0.4s,%1.4s,%2.4s"
        -: 9843:           : "=w"(result)
        -: 9844:           : "w"(a), "w"(b)
        -: 9845:           : /* No clobbers */);
        -: 9846:  return result;
        -: 9847:}
        -: 9848:
        -: 9849:__extension__ extern __inline int64x2_t
        -: 9850:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9851:vpaddq_s64 (int64x2_t a, int64x2_t b)
        -: 9852:{
        -: 9853:  int64x2_t result;
        -: 9854:  __asm__ ("addp %0.2d,%1.2d,%2.2d"
        -: 9855:           : "=w"(result)
        -: 9856:           : "w"(a), "w"(b)
        -: 9857:           : /* No clobbers */);
        -: 9858:  return result;
        -: 9859:}
        -: 9860:
        -: 9861:__extension__ extern __inline uint8x16_t
        -: 9862:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9863:vpaddq_u8 (uint8x16_t a, uint8x16_t b)
        -: 9864:{
        -: 9865:  uint8x16_t result;
        -: 9866:  __asm__ ("addp %0.16b,%1.16b,%2.16b"
        -: 9867:           : "=w"(result)
        -: 9868:           : "w"(a), "w"(b)
        -: 9869:           : /* No clobbers */);
        -: 9870:  return result;
        -: 9871:}
        -: 9872:
        -: 9873:__extension__ extern __inline uint16x8_t
        -: 9874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9875:vpaddq_u16 (uint16x8_t a, uint16x8_t b)
        -: 9876:{
        -: 9877:  uint16x8_t result;
        -: 9878:  __asm__ ("addp %0.8h,%1.8h,%2.8h"
        -: 9879:           : "=w"(result)
        -: 9880:           : "w"(a), "w"(b)
        -: 9881:           : /* No clobbers */);
        -: 9882:  return result;
        -: 9883:}
        -: 9884:
        -: 9885:__extension__ extern __inline uint32x4_t
        -: 9886:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9887:vpaddq_u32 (uint32x4_t a, uint32x4_t b)
        -: 9888:{
        -: 9889:  uint32x4_t result;
        -: 9890:  __asm__ ("addp %0.4s,%1.4s,%2.4s"
        -: 9891:           : "=w"(result)
        -: 9892:           : "w"(a), "w"(b)
        -: 9893:           : /* No clobbers */);
        -: 9894:  return result;
        -: 9895:}
        -: 9896:
        -: 9897:__extension__ extern __inline uint64x2_t
        -: 9898:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9899:vpaddq_u64 (uint64x2_t a, uint64x2_t b)
        -: 9900:{
        -: 9901:  uint64x2_t result;
        -: 9902:  __asm__ ("addp %0.2d,%1.2d,%2.2d"
        -: 9903:           : "=w"(result)
        -: 9904:           : "w"(a), "w"(b)
        -: 9905:           : /* No clobbers */);
        -: 9906:  return result;
        -: 9907:}
        -: 9908:
        -: 9909:__extension__ extern __inline int16x4_t
        -: 9910:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9911:vqdmulh_n_s16 (int16x4_t a, int16_t b)
        -: 9912:{
        -: 9913:  int16x4_t result;
        -: 9914:  __asm__ ("sqdmulh %0.4h,%1.4h,%2.h[0]"
        -: 9915:           : "=w"(result)
        -: 9916:           : "w"(a), "x"(b)
        -: 9917:           : /* No clobbers */);
        -: 9918:  return result;
        -: 9919:}
        -: 9920:
        -: 9921:__extension__ extern __inline int32x2_t
        -: 9922:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9923:vqdmulh_n_s32 (int32x2_t a, int32_t b)
        -: 9924:{
        -: 9925:  int32x2_t result;
        -: 9926:  __asm__ ("sqdmulh %0.2s,%1.2s,%2.s[0]"
        -: 9927:           : "=w"(result)
        -: 9928:           : "w"(a), "w"(b)
        -: 9929:           : /* No clobbers */);
        -: 9930:  return result;
        -: 9931:}
        -: 9932:
        -: 9933:__extension__ extern __inline int16x8_t
        -: 9934:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9935:vqdmulhq_n_s16 (int16x8_t a, int16_t b)
        -: 9936:{
        -: 9937:  int16x8_t result;
        -: 9938:  __asm__ ("sqdmulh %0.8h,%1.8h,%2.h[0]"
        -: 9939:           : "=w"(result)
        -: 9940:           : "w"(a), "x"(b)
        -: 9941:           : /* No clobbers */);
        -: 9942:  return result;
        -: 9943:}
        -: 9944:
        -: 9945:__extension__ extern __inline int32x4_t
        -: 9946:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9947:vqdmulhq_n_s32 (int32x4_t a, int32_t b)
        -: 9948:{
        -: 9949:  int32x4_t result;
        -: 9950:  __asm__ ("sqdmulh %0.4s,%1.4s,%2.s[0]"
        -: 9951:           : "=w"(result)
        -: 9952:           : "w"(a), "w"(b)
        -: 9953:           : /* No clobbers */);
        -: 9954:  return result;
        -: 9955:}
        -: 9956:
        -: 9957:__extension__ extern __inline int8x16_t
        -: 9958:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9959:vqmovn_high_s16 (int8x8_t a, int16x8_t b)
        -: 9960:{
        -: 9961:  int8x16_t result = vcombine_s8 (a, vcreate_s8 (__AARCH64_UINT64_C (0x0)));
        -: 9962:  __asm__ ("sqxtn2 %0.16b, %1.8h"
        -: 9963:           : "+w"(result)
        -: 9964:           : "w"(b)
        -: 9965:           : /* No clobbers */);
        -: 9966:  return result;
        -: 9967:}
        -: 9968:
        -: 9969:__extension__ extern __inline int16x8_t
        -: 9970:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9971:vqmovn_high_s32 (int16x4_t a, int32x4_t b)
        -: 9972:{
        -: 9973:  int16x8_t result = vcombine_s16 (a, vcreate_s16 (__AARCH64_UINT64_C (0x0)));
        -: 9974:  __asm__ ("sqxtn2 %0.8h, %1.4s"
        -: 9975:           : "+w"(result)
        -: 9976:           : "w"(b)
        -: 9977:           : /* No clobbers */);
        -: 9978:  return result;
        -: 9979:}
        -: 9980:
        -: 9981:__extension__ extern __inline int32x4_t
        -: 9982:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9983:vqmovn_high_s64 (int32x2_t a, int64x2_t b)
        -: 9984:{
        -: 9985:  int32x4_t result = vcombine_s32 (a, vcreate_s32 (__AARCH64_UINT64_C (0x0)));
        -: 9986:  __asm__ ("sqxtn2 %0.4s, %1.2d"
        -: 9987:           : "+w"(result)
        -: 9988:           : "w"(b)
        -: 9989:           : /* No clobbers */);
        -: 9990:  return result;
        -: 9991:}
        -: 9992:
        -: 9993:__extension__ extern __inline uint8x16_t
        -: 9994:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -: 9995:vqmovn_high_u16 (uint8x8_t a, uint16x8_t b)
        -: 9996:{
        -: 9997:  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (__AARCH64_UINT64_C (0x0)));
        -: 9998:  __asm__ ("uqxtn2 %0.16b, %1.8h"
        -: 9999:           : "+w"(result)
        -:10000:           : "w"(b)
        -:10001:           : /* No clobbers */);
        -:10002:  return result;
        -:10003:}
        -:10004:
        -:10005:__extension__ extern __inline uint16x8_t
        -:10006:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10007:vqmovn_high_u32 (uint16x4_t a, uint32x4_t b)
        -:10008:{
        -:10009:  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (__AARCH64_UINT64_C (0x0)));
        -:10010:  __asm__ ("uqxtn2 %0.8h, %1.4s"
        -:10011:           : "+w"(result)
        -:10012:           : "w"(b)
        -:10013:           : /* No clobbers */);
        -:10014:  return result;
        -:10015:}
        -:10016:
        -:10017:__extension__ extern __inline uint32x4_t
        -:10018:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10019:vqmovn_high_u64 (uint32x2_t a, uint64x2_t b)
        -:10020:{
        -:10021:  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (__AARCH64_UINT64_C (0x0)));
        -:10022:  __asm__ ("uqxtn2 %0.4s, %1.2d"
        -:10023:           : "+w"(result)
        -:10024:           : "w"(b)
        -:10025:           : /* No clobbers */);
        -:10026:  return result;
        -:10027:}
        -:10028:
        -:10029:__extension__ extern __inline uint8x16_t
        -:10030:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10031:vqmovun_high_s16 (uint8x8_t a, int16x8_t b)
        -:10032:{
        -:10033:  uint8x16_t result = vcombine_u8 (a, vcreate_u8 (__AARCH64_UINT64_C (0x0)));
        -:10034:  __asm__ ("sqxtun2 %0.16b, %1.8h"
        -:10035:           : "+w"(result)
        -:10036:           : "w"(b)
        -:10037:           : /* No clobbers */);
        -:10038:  return result;
        -:10039:}
        -:10040:
        -:10041:__extension__ extern __inline uint16x8_t
        -:10042:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10043:vqmovun_high_s32 (uint16x4_t a, int32x4_t b)
        -:10044:{
        -:10045:  uint16x8_t result = vcombine_u16 (a, vcreate_u16 (__AARCH64_UINT64_C (0x0)));
        -:10046:  __asm__ ("sqxtun2 %0.8h, %1.4s"
        -:10047:           : "+w"(result)
        -:10048:           : "w"(b)
        -:10049:           : /* No clobbers */);
        -:10050:  return result;
        -:10051:}
        -:10052:
        -:10053:__extension__ extern __inline uint32x4_t
        -:10054:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10055:vqmovun_high_s64 (uint32x2_t a, int64x2_t b)
        -:10056:{
        -:10057:  uint32x4_t result = vcombine_u32 (a, vcreate_u32 (__AARCH64_UINT64_C (0x0)));
        -:10058:  __asm__ ("sqxtun2 %0.4s, %1.2d"
        -:10059:           : "+w"(result)
        -:10060:           : "w"(b)
        -:10061:           : /* No clobbers */);
        -:10062:  return result;
        -:10063:}
        -:10064:
        -:10065:__extension__ extern __inline int16x4_t
        -:10066:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10067:vqrdmulh_n_s16 (int16x4_t a, int16_t b)
        -:10068:{
        -:10069:  int16x4_t result;
        -:10070:  __asm__ ("sqrdmulh %0.4h,%1.4h,%2.h[0]"
        -:10071:           : "=w"(result)
        -:10072:           : "w"(a), "x"(b)
        -:10073:           : /* No clobbers */);
        -:10074:  return result;
        -:10075:}
        -:10076:
        -:10077:__extension__ extern __inline int32x2_t
        -:10078:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10079:vqrdmulh_n_s32 (int32x2_t a, int32_t b)
        -:10080:{
        -:10081:  int32x2_t result;
        -:10082:  __asm__ ("sqrdmulh %0.2s,%1.2s,%2.s[0]"
        -:10083:           : "=w"(result)
        -:10084:           : "w"(a), "w"(b)
        -:10085:           : /* No clobbers */);
        -:10086:  return result;
        -:10087:}
        -:10088:
        -:10089:__extension__ extern __inline int16x8_t
        -:10090:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10091:vqrdmulhq_n_s16 (int16x8_t a, int16_t b)
        -:10092:{
        -:10093:  int16x8_t result;
        -:10094:  __asm__ ("sqrdmulh %0.8h,%1.8h,%2.h[0]"
        -:10095:           : "=w"(result)
        -:10096:           : "w"(a), "x"(b)
        -:10097:           : /* No clobbers */);
        -:10098:  return result;
        -:10099:}
        -:10100:
        -:10101:__extension__ extern __inline int32x4_t
        -:10102:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10103:vqrdmulhq_n_s32 (int32x4_t a, int32_t b)
        -:10104:{
        -:10105:  int32x4_t result;
        -:10106:  __asm__ ("sqrdmulh %0.4s,%1.4s,%2.s[0]"
        -:10107:           : "=w"(result)
        -:10108:           : "w"(a), "w"(b)
        -:10109:           : /* No clobbers */);
        -:10110:  return result;
        -:10111:}
        -:10112:
        -:10113:#define vqrshrn_high_n_s16(a, b, c)                                     \
        -:10114:  __extension__                                                         \
        -:10115:    ({                                                                  \
        -:10116:       int16x8_t b_ = (b);                                              \
        -:10117:       int8x8_t a_ = (a);                                               \
        -:10118:       int8x16_t result = vcombine_s8                                   \
        -:10119:                            (a_, vcreate_s8                             \
        -:10120:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10121:       __asm__ ("sqrshrn2 %0.16b, %1.8h, #%2"                           \
        -:10122:                : "+w"(result)                                          \
        -:10123:                : "w"(b_), "i"(c)                                       \
        -:10124:                : /* No clobbers */);                                   \
        -:10125:       result;                                                          \
        -:10126:     })
        -:10127:
        -:10128:#define vqrshrn_high_n_s32(a, b, c)                                     \
        -:10129:  __extension__                                                         \
        -:10130:    ({                                                                  \
        -:10131:       int32x4_t b_ = (b);                                              \
        -:10132:       int16x4_t a_ = (a);                                              \
        -:10133:       int16x8_t result = vcombine_s16                                  \
        -:10134:                            (a_, vcreate_s16                            \
        -:10135:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10136:       __asm__ ("sqrshrn2 %0.8h, %1.4s, #%2"                            \
        -:10137:                : "+w"(result)                                          \
        -:10138:                : "w"(b_), "i"(c)                                       \
        -:10139:                : /* No clobbers */);                                   \
        -:10140:       result;                                                          \
        -:10141:     })
        -:10142:
        -:10143:#define vqrshrn_high_n_s64(a, b, c)                                     \
        -:10144:  __extension__                                                         \
        -:10145:    ({                                                                  \
        -:10146:       int64x2_t b_ = (b);                                              \
        -:10147:       int32x2_t a_ = (a);                                              \
        -:10148:       int32x4_t result = vcombine_s32                                  \
        -:10149:                            (a_, vcreate_s32                            \
        -:10150:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10151:       __asm__ ("sqrshrn2 %0.4s, %1.2d, #%2"                            \
        -:10152:                : "+w"(result)                                          \
        -:10153:                : "w"(b_), "i"(c)                                       \
        -:10154:                : /* No clobbers */);                                   \
        -:10155:       result;                                                          \
        -:10156:     })
        -:10157:
        -:10158:#define vqrshrn_high_n_u16(a, b, c)                                     \
        -:10159:  __extension__                                                         \
        -:10160:    ({                                                                  \
        -:10161:       uint16x8_t b_ = (b);                                             \
        -:10162:       uint8x8_t a_ = (a);                                              \
        -:10163:       uint8x16_t result = vcombine_u8                                  \
        -:10164:                             (a_, vcreate_u8                            \
        -:10165:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10166:       __asm__ ("uqrshrn2 %0.16b, %1.8h, #%2"                           \
        -:10167:                : "+w"(result)                                          \
        -:10168:                : "w"(b_), "i"(c)                                       \
        -:10169:                : /* No clobbers */);                                   \
        -:10170:       result;                                                          \
        -:10171:     })
        -:10172:
        -:10173:#define vqrshrn_high_n_u32(a, b, c)                                     \
        -:10174:  __extension__                                                         \
        -:10175:    ({                                                                  \
        -:10176:       uint32x4_t b_ = (b);                                             \
        -:10177:       uint16x4_t a_ = (a);                                             \
        -:10178:       uint16x8_t result = vcombine_u16                                 \
        -:10179:                             (a_, vcreate_u16                           \
        -:10180:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10181:       __asm__ ("uqrshrn2 %0.8h, %1.4s, #%2"                            \
        -:10182:                : "+w"(result)                                          \
        -:10183:                : "w"(b_), "i"(c)                                       \
        -:10184:                : /* No clobbers */);                                   \
        -:10185:       result;                                                          \
        -:10186:     })
        -:10187:
        -:10188:#define vqrshrn_high_n_u64(a, b, c)                                     \
        -:10189:  __extension__                                                         \
        -:10190:    ({                                                                  \
        -:10191:       uint64x2_t b_ = (b);                                             \
        -:10192:       uint32x2_t a_ = (a);                                             \
        -:10193:       uint32x4_t result = vcombine_u32                                 \
        -:10194:                             (a_, vcreate_u32                           \
        -:10195:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10196:       __asm__ ("uqrshrn2 %0.4s, %1.2d, #%2"                            \
        -:10197:                : "+w"(result)                                          \
        -:10198:                : "w"(b_), "i"(c)                                       \
        -:10199:                : /* No clobbers */);                                   \
        -:10200:       result;                                                          \
        -:10201:     })
        -:10202:
        -:10203:#define vqrshrun_high_n_s16(a, b, c)                                    \
        -:10204:  __extension__                                                         \
        -:10205:    ({                                                                  \
        -:10206:       int16x8_t b_ = (b);                                              \
        -:10207:       uint8x8_t a_ = (a);                                              \
        -:10208:       uint8x16_t result = vcombine_u8                                  \
        -:10209:                             (a_, vcreate_u8                            \
        -:10210:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10211:       __asm__ ("sqrshrun2 %0.16b, %1.8h, #%2"                          \
        -:10212:                : "+w"(result)                                          \
        -:10213:                : "w"(b_), "i"(c)                                       \
        -:10214:                : /* No clobbers */);                                   \
        -:10215:       result;                                                          \
        -:10216:     })
        -:10217:
        -:10218:#define vqrshrun_high_n_s32(a, b, c)                                    \
        -:10219:  __extension__                                                         \
        -:10220:    ({                                                                  \
        -:10221:       int32x4_t b_ = (b);                                              \
        -:10222:       uint16x4_t a_ = (a);                                             \
        -:10223:       uint16x8_t result = vcombine_u16                                 \
        -:10224:                             (a_, vcreate_u16                           \
        -:10225:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10226:       __asm__ ("sqrshrun2 %0.8h, %1.4s, #%2"                           \
        -:10227:                : "+w"(result)                                          \
        -:10228:                : "w"(b_), "i"(c)                                       \
        -:10229:                : /* No clobbers */);                                   \
        -:10230:       result;                                                          \
        -:10231:     })
        -:10232:
        -:10233:#define vqrshrun_high_n_s64(a, b, c)                                    \
        -:10234:  __extension__                                                         \
        -:10235:    ({                                                                  \
        -:10236:       int64x2_t b_ = (b);                                              \
        -:10237:       uint32x2_t a_ = (a);                                             \
        -:10238:       uint32x4_t result = vcombine_u32                                 \
        -:10239:                             (a_, vcreate_u32                           \
        -:10240:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10241:       __asm__ ("sqrshrun2 %0.4s, %1.2d, #%2"                           \
        -:10242:                : "+w"(result)                                          \
        -:10243:                : "w"(b_), "i"(c)                                       \
        -:10244:                : /* No clobbers */);                                   \
        -:10245:       result;                                                          \
        -:10246:     })
        -:10247:
        -:10248:#define vqshrn_high_n_s16(a, b, c)                                      \
        -:10249:  __extension__                                                         \
        -:10250:    ({                                                                  \
        -:10251:       int16x8_t b_ = (b);                                              \
        -:10252:       int8x8_t a_ = (a);                                               \
        -:10253:       int8x16_t result = vcombine_s8                                   \
        -:10254:                            (a_, vcreate_s8                             \
        -:10255:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10256:       __asm__ ("sqshrn2 %0.16b, %1.8h, #%2"                            \
        -:10257:                : "+w"(result)                                          \
        -:10258:                : "w"(b_), "i"(c)                                       \
        -:10259:                : /* No clobbers */);                                   \
        -:10260:       result;                                                          \
        -:10261:     })
        -:10262:
        -:10263:#define vqshrn_high_n_s32(a, b, c)                                      \
        -:10264:  __extension__                                                         \
        -:10265:    ({                                                                  \
        -:10266:       int32x4_t b_ = (b);                                              \
        -:10267:       int16x4_t a_ = (a);                                              \
        -:10268:       int16x8_t result = vcombine_s16                                  \
        -:10269:                            (a_, vcreate_s16                            \
        -:10270:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10271:       __asm__ ("sqshrn2 %0.8h, %1.4s, #%2"                             \
        -:10272:                : "+w"(result)                                          \
        -:10273:                : "w"(b_), "i"(c)                                       \
        -:10274:                : /* No clobbers */);                                   \
        -:10275:       result;                                                          \
        -:10276:     })
        -:10277:
        -:10278:#define vqshrn_high_n_s64(a, b, c)                                      \
        -:10279:  __extension__                                                         \
        -:10280:    ({                                                                  \
        -:10281:       int64x2_t b_ = (b);                                              \
        -:10282:       int32x2_t a_ = (a);                                              \
        -:10283:       int32x4_t result = vcombine_s32                                  \
        -:10284:                            (a_, vcreate_s32                            \
        -:10285:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10286:       __asm__ ("sqshrn2 %0.4s, %1.2d, #%2"                             \
        -:10287:                : "+w"(result)                                          \
        -:10288:                : "w"(b_), "i"(c)                                       \
        -:10289:                : /* No clobbers */);                                   \
        -:10290:       result;                                                          \
        -:10291:     })
        -:10292:
        -:10293:#define vqshrn_high_n_u16(a, b, c)                                      \
        -:10294:  __extension__                                                         \
        -:10295:    ({                                                                  \
        -:10296:       uint16x8_t b_ = (b);                                             \
        -:10297:       uint8x8_t a_ = (a);                                              \
        -:10298:       uint8x16_t result = vcombine_u8                                  \
        -:10299:                             (a_, vcreate_u8                            \
        -:10300:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10301:       __asm__ ("uqshrn2 %0.16b, %1.8h, #%2"                            \
        -:10302:                : "+w"(result)                                          \
        -:10303:                : "w"(b_), "i"(c)                                       \
        -:10304:                : /* No clobbers */);                                   \
        -:10305:       result;                                                          \
        -:10306:     })
        -:10307:
        -:10308:#define vqshrn_high_n_u32(a, b, c)                                      \
        -:10309:  __extension__                                                         \
        -:10310:    ({                                                                  \
        -:10311:       uint32x4_t b_ = (b);                                             \
        -:10312:       uint16x4_t a_ = (a);                                             \
        -:10313:       uint16x8_t result = vcombine_u16                                 \
        -:10314:                             (a_, vcreate_u16                           \
        -:10315:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10316:       __asm__ ("uqshrn2 %0.8h, %1.4s, #%2"                             \
        -:10317:                : "+w"(result)                                          \
        -:10318:                : "w"(b_), "i"(c)                                       \
        -:10319:                : /* No clobbers */);                                   \
        -:10320:       result;                                                          \
        -:10321:     })
        -:10322:
        -:10323:#define vqshrn_high_n_u64(a, b, c)                                      \
        -:10324:  __extension__                                                         \
        -:10325:    ({                                                                  \
        -:10326:       uint64x2_t b_ = (b);                                             \
        -:10327:       uint32x2_t a_ = (a);                                             \
        -:10328:       uint32x4_t result = vcombine_u32                                 \
        -:10329:                             (a_, vcreate_u32                           \
        -:10330:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10331:       __asm__ ("uqshrn2 %0.4s, %1.2d, #%2"                             \
        -:10332:                : "+w"(result)                                          \
        -:10333:                : "w"(b_), "i"(c)                                       \
        -:10334:                : /* No clobbers */);                                   \
        -:10335:       result;                                                          \
        -:10336:     })
        -:10337:
        -:10338:#define vqshrun_high_n_s16(a, b, c)                                     \
        -:10339:  __extension__                                                         \
        -:10340:    ({                                                                  \
        -:10341:       int16x8_t b_ = (b);                                              \
        -:10342:       uint8x8_t a_ = (a);                                              \
        -:10343:       uint8x16_t result = vcombine_u8                                  \
        -:10344:                             (a_, vcreate_u8                            \
        -:10345:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10346:       __asm__ ("sqshrun2 %0.16b, %1.8h, #%2"                           \
        -:10347:                : "+w"(result)                                          \
        -:10348:                : "w"(b_), "i"(c)                                       \
        -:10349:                : /* No clobbers */);                                   \
        -:10350:       result;                                                          \
        -:10351:     })
        -:10352:
        -:10353:#define vqshrun_high_n_s32(a, b, c)                                     \
        -:10354:  __extension__                                                         \
        -:10355:    ({                                                                  \
        -:10356:       int32x4_t b_ = (b);                                              \
        -:10357:       uint16x4_t a_ = (a);                                             \
        -:10358:       uint16x8_t result = vcombine_u16                                 \
        -:10359:                             (a_, vcreate_u16                           \
        -:10360:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10361:       __asm__ ("sqshrun2 %0.8h, %1.4s, #%2"                            \
        -:10362:                : "+w"(result)                                          \
        -:10363:                : "w"(b_), "i"(c)                                       \
        -:10364:                : /* No clobbers */);                                   \
        -:10365:       result;                                                          \
        -:10366:     })
        -:10367:
        -:10368:#define vqshrun_high_n_s64(a, b, c)                                     \
        -:10369:  __extension__                                                         \
        -:10370:    ({                                                                  \
        -:10371:       int64x2_t b_ = (b);                                              \
        -:10372:       uint32x2_t a_ = (a);                                             \
        -:10373:       uint32x4_t result = vcombine_u32                                 \
        -:10374:                             (a_, vcreate_u32                           \
        -:10375:                                    (__AARCH64_UINT64_C (0x0)));        \
        -:10376:       __asm__ ("sqshrun2 %0.4s, %1.2d, #%2"                            \
        -:10377:                : "+w"(result)                                          \
        -:10378:                : "w"(b_), "i"(c)                                       \
        -:10379:                : /* No clobbers */);                                   \
        -:10380:       result;                                                          \
        -:10381:     })
        -:10382:
        -:10383:#define vrshrn_high_n_s16(a, b, c)                                      \
        -:10384:  __extension__                                                         \
        -:10385:    ({                                                                  \
        -:10386:       int16x8_t b_ = (b);                                              \
        -:10387:       int8x8_t a_ = (a);                                               \
        -:10388:       int8x16_t result = vcombine_s8                                   \
        -:10389:                            (a_, vcreate_s8                             \
        -:10390:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10391:       __asm__ ("rshrn2 %0.16b,%1.8h,#%2"                               \
        -:10392:                : "+w"(result)                                          \
        -:10393:                : "w"(b_), "i"(c)                                       \
        -:10394:                : /* No clobbers */);                                   \
        -:10395:       result;                                                          \
        -:10396:     })
        -:10397:
        -:10398:#define vrshrn_high_n_s32(a, b, c)                                      \
        -:10399:  __extension__                                                         \
        -:10400:    ({                                                                  \
        -:10401:       int32x4_t b_ = (b);                                              \
        -:10402:       int16x4_t a_ = (a);                                              \
        -:10403:       int16x8_t result = vcombine_s16                                  \
        -:10404:                            (a_, vcreate_s16                            \
        -:10405:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10406:       __asm__ ("rshrn2 %0.8h,%1.4s,#%2"                                \
        -:10407:                : "+w"(result)                                          \
        -:10408:                : "w"(b_), "i"(c)                                       \
        -:10409:                : /* No clobbers */);                                   \
        -:10410:       result;                                                          \
        -:10411:     })
        -:10412:
        -:10413:#define vrshrn_high_n_s64(a, b, c)                                      \
        -:10414:  __extension__                                                         \
        -:10415:    ({                                                                  \
        -:10416:       int64x2_t b_ = (b);                                              \
        -:10417:       int32x2_t a_ = (a);                                              \
        -:10418:       int32x4_t result = vcombine_s32                                  \
        -:10419:                            (a_, vcreate_s32                            \
        -:10420:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10421:       __asm__ ("rshrn2 %0.4s,%1.2d,#%2"                                \
        -:10422:                : "+w"(result)                                          \
        -:10423:                : "w"(b_), "i"(c)                                       \
        -:10424:                : /* No clobbers */);                                   \
        -:10425:       result;                                                          \
        -:10426:     })
        -:10427:
        -:10428:#define vrshrn_high_n_u16(a, b, c)                                      \
        -:10429:  __extension__                                                         \
        -:10430:    ({                                                                  \
        -:10431:       uint16x8_t b_ = (b);                                             \
        -:10432:       uint8x8_t a_ = (a);                                              \
        -:10433:       uint8x16_t result = vcombine_u8                                  \
        -:10434:                            (a_, vcreate_u8                             \
        -:10435:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10436:       __asm__ ("rshrn2 %0.16b,%1.8h,#%2"                               \
        -:10437:                : "+w"(result)                                          \
        -:10438:                : "w"(b_), "i"(c)                                       \
        -:10439:                : /* No clobbers */);                                   \
        -:10440:       result;                                                          \
        -:10441:     })
        -:10442:
        -:10443:#define vrshrn_high_n_u32(a, b, c)                                      \
        -:10444:  __extension__                                                         \
        -:10445:    ({                                                                  \
        -:10446:       uint32x4_t b_ = (b);                                             \
        -:10447:       uint16x4_t a_ = (a);                                             \
        -:10448:       uint16x8_t result = vcombine_u16                                 \
        -:10449:                            (a_, vcreate_u16                            \
        -:10450:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10451:       __asm__ ("rshrn2 %0.8h,%1.4s,#%2"                                \
        -:10452:                : "+w"(result)                                          \
        -:10453:                : "w"(b_), "i"(c)                                       \
        -:10454:                : /* No clobbers */);                                   \
        -:10455:       result;                                                          \
        -:10456:     })
        -:10457:
        -:10458:#define vrshrn_high_n_u64(a, b, c)                                      \
        -:10459:  __extension__                                                         \
        -:10460:    ({                                                                  \
        -:10461:       uint64x2_t b_ = (b);                                             \
        -:10462:       uint32x2_t a_ = (a);                                             \
        -:10463:       uint32x4_t result = vcombine_u32                                 \
        -:10464:                            (a_, vcreate_u32                            \
        -:10465:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10466:       __asm__ ("rshrn2 %0.4s,%1.2d,#%2"                                \
        -:10467:                : "+w"(result)                                          \
        -:10468:                : "w"(b_), "i"(c)                                       \
        -:10469:                : /* No clobbers */);                                   \
        -:10470:       result;                                                          \
        -:10471:     })
        -:10472:
        -:10473:#define vrshrn_n_s16(a, b)                                              \
        -:10474:  __extension__                                                         \
        -:10475:    ({                                                                  \
        -:10476:       int16x8_t a_ = (a);                                              \
        -:10477:       int8x8_t result;                                                 \
        -:10478:       __asm__ ("rshrn %0.8b,%1.8h,%2"                                  \
        -:10479:                : "=w"(result)                                          \
        -:10480:                : "w"(a_), "i"(b)                                       \
        -:10481:                : /* No clobbers */);                                   \
        -:10482:       result;                                                          \
        -:10483:     })
        -:10484:
        -:10485:#define vrshrn_n_s32(a, b)                                              \
        -:10486:  __extension__                                                         \
        -:10487:    ({                                                                  \
        -:10488:       int32x4_t a_ = (a);                                              \
        -:10489:       int16x4_t result;                                                \
        -:10490:       __asm__ ("rshrn %0.4h,%1.4s,%2"                                  \
        -:10491:                : "=w"(result)                                          \
        -:10492:                : "w"(a_), "i"(b)                                       \
        -:10493:                : /* No clobbers */);                                   \
        -:10494:       result;                                                          \
        -:10495:     })
        -:10496:
        -:10497:#define vrshrn_n_s64(a, b)                                              \
        -:10498:  __extension__                                                         \
        -:10499:    ({                                                                  \
        -:10500:       int64x2_t a_ = (a);                                              \
        -:10501:       int32x2_t result;                                                \
        -:10502:       __asm__ ("rshrn %0.2s,%1.2d,%2"                                  \
        -:10503:                : "=w"(result)                                          \
        -:10504:                : "w"(a_), "i"(b)                                       \
        -:10505:                : /* No clobbers */);                                   \
        -:10506:       result;                                                          \
        -:10507:     })
        -:10508:
        -:10509:#define vrshrn_n_u16(a, b)                                              \
        -:10510:  __extension__                                                         \
        -:10511:    ({                                                                  \
        -:10512:       uint16x8_t a_ = (a);                                             \
        -:10513:       uint8x8_t result;                                                \
        -:10514:       __asm__ ("rshrn %0.8b,%1.8h,%2"                                  \
        -:10515:                : "=w"(result)                                          \
        -:10516:                : "w"(a_), "i"(b)                                       \
        -:10517:                : /* No clobbers */);                                   \
        -:10518:       result;                                                          \
        -:10519:     })
        -:10520:
        -:10521:#define vrshrn_n_u32(a, b)                                              \
        -:10522:  __extension__                                                         \
        -:10523:    ({                                                                  \
        -:10524:       uint32x4_t a_ = (a);                                             \
        -:10525:       uint16x4_t result;                                               \
        -:10526:       __asm__ ("rshrn %0.4h,%1.4s,%2"                                  \
        -:10527:                : "=w"(result)                                          \
        -:10528:                : "w"(a_), "i"(b)                                       \
        -:10529:                : /* No clobbers */);                                   \
        -:10530:       result;                                                          \
        -:10531:     })
        -:10532:
        -:10533:#define vrshrn_n_u64(a, b)                                              \
        -:10534:  __extension__                                                         \
        -:10535:    ({                                                                  \
        -:10536:       uint64x2_t a_ = (a);                                             \
        -:10537:       uint32x2_t result;                                               \
        -:10538:       __asm__ ("rshrn %0.2s,%1.2d,%2"                                  \
        -:10539:                : "=w"(result)                                          \
        -:10540:                : "w"(a_), "i"(b)                                       \
        -:10541:                : /* No clobbers */);                                   \
        -:10542:       result;                                                          \
        -:10543:     })
        -:10544:
        -:10545:__extension__ extern __inline uint32x2_t
        -:10546:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10547:vrsqrte_u32 (uint32x2_t a)
        -:10548:{
        -:10549:  uint32x2_t result;
        -:10550:  __asm__ ("ursqrte %0.2s,%1.2s"
        -:10551:           : "=w"(result)
        -:10552:           : "w"(a)
        -:10553:           : /* No clobbers */);
        -:10554:  return result;
        -:10555:}
        -:10556:
        -:10557:__extension__ extern __inline uint32x4_t
        -:10558:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10559:vrsqrteq_u32 (uint32x4_t a)
        -:10560:{
        -:10561:  uint32x4_t result;
        -:10562:  __asm__ ("ursqrte %0.4s,%1.4s"
        -:10563:           : "=w"(result)
        -:10564:           : "w"(a)
        -:10565:           : /* No clobbers */);
        -:10566:  return result;
        -:10567:}
        -:10568:
        -:10569:#define vshrn_high_n_s16(a, b, c)                                       \
        -:10570:  __extension__                                                         \
        -:10571:    ({                                                                  \
        -:10572:       int16x8_t b_ = (b);                                              \
        -:10573:       int8x8_t a_ = (a);                                               \
        -:10574:       int8x16_t result = vcombine_s8                                   \
        -:10575:                            (a_, vcreate_s8                             \
        -:10576:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10577:       __asm__ ("shrn2 %0.16b,%1.8h,#%2"                                \
        -:10578:                : "+w"(result)                                          \
        -:10579:                : "w"(b_), "i"(c)                                       \
        -:10580:                : /* No clobbers */);                                   \
        -:10581:       result;                                                          \
        -:10582:     })
        -:10583:
        -:10584:#define vshrn_high_n_s32(a, b, c)                                       \
        -:10585:  __extension__                                                         \
        -:10586:    ({                                                                  \
        -:10587:       int32x4_t b_ = (b);                                              \
        -:10588:       int16x4_t a_ = (a);                                              \
        -:10589:       int16x8_t result = vcombine_s16                                  \
        -:10590:                            (a_, vcreate_s16                            \
        -:10591:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10592:       __asm__ ("shrn2 %0.8h,%1.4s,#%2"                                 \
        -:10593:                : "+w"(result)                                          \
        -:10594:                : "w"(b_), "i"(c)                                       \
        -:10595:                : /* No clobbers */);                                   \
        -:10596:       result;                                                          \
        -:10597:     })
        -:10598:
        -:10599:#define vshrn_high_n_s64(a, b, c)                                       \
        -:10600:  __extension__                                                         \
        -:10601:    ({                                                                  \
        -:10602:       int64x2_t b_ = (b);                                              \
        -:10603:       int32x2_t a_ = (a);                                              \
        -:10604:       int32x4_t result = vcombine_s32                                  \
        -:10605:                            (a_, vcreate_s32                            \
        -:10606:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10607:       __asm__ ("shrn2 %0.4s,%1.2d,#%2"                                 \
        -:10608:                : "+w"(result)                                          \
        -:10609:                : "w"(b_), "i"(c)                                       \
        -:10610:                : /* No clobbers */);                                   \
        -:10611:       result;                                                          \
        -:10612:     })
        -:10613:
        -:10614:#define vshrn_high_n_u16(a, b, c)                                       \
        -:10615:  __extension__                                                         \
        -:10616:    ({                                                                  \
        -:10617:       uint16x8_t b_ = (b);                                             \
        -:10618:       uint8x8_t a_ = (a);                                              \
        -:10619:       uint8x16_t result = vcombine_u8                                  \
        -:10620:                            (a_, vcreate_u8                             \
        -:10621:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10622:       __asm__ ("shrn2 %0.16b,%1.8h,#%2"                                \
        -:10623:                : "+w"(result)                                          \
        -:10624:                : "w"(b_), "i"(c)                                       \
        -:10625:                : /* No clobbers */);                                   \
        -:10626:       result;                                                          \
        -:10627:     })
        -:10628:
        -:10629:#define vshrn_high_n_u32(a, b, c)                                       \
        -:10630:  __extension__                                                         \
        -:10631:    ({                                                                  \
        -:10632:       uint32x4_t b_ = (b);                                             \
        -:10633:       uint16x4_t a_ = (a);                                             \
        -:10634:       uint16x8_t result = vcombine_u16                                 \
        -:10635:                            (a_, vcreate_u16                            \
        -:10636:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10637:       __asm__ ("shrn2 %0.8h,%1.4s,#%2"                                 \
        -:10638:                : "+w"(result)                                          \
        -:10639:                : "w"(b_), "i"(c)                                       \
        -:10640:                : /* No clobbers */);                                   \
        -:10641:       result;                                                          \
        -:10642:     })
        -:10643:
        -:10644:#define vshrn_high_n_u64(a, b, c)                                       \
        -:10645:  __extension__                                                         \
        -:10646:    ({                                                                  \
        -:10647:       uint64x2_t b_ = (b);                                             \
        -:10648:       uint32x2_t a_ = (a);                                             \
        -:10649:       uint32x4_t result = vcombine_u32                                 \
        -:10650:                            (a_, vcreate_u32                            \
        -:10651:                                   (__AARCH64_UINT64_C (0x0)));         \
        -:10652:       __asm__ ("shrn2 %0.4s,%1.2d,#%2"                                 \
        -:10653:                : "+w"(result)                                          \
        -:10654:                : "w"(b_), "i"(c)                                       \
        -:10655:                : /* No clobbers */);                                   \
        -:10656:       result;                                                          \
        -:10657:     })
        -:10658:
        -:10659:#define vshrn_n_s16(a, b)                                               \
        -:10660:  __extension__                                                         \
        -:10661:    ({                                                                  \
        -:10662:       int16x8_t a_ = (a);                                              \
        -:10663:       int8x8_t result;                                                 \
        -:10664:       __asm__ ("shrn %0.8b,%1.8h,%2"                                   \
        -:10665:                : "=w"(result)                                          \
        -:10666:                : "w"(a_), "i"(b)                                       \
        -:10667:                : /* No clobbers */);                                   \
        -:10668:       result;                                                          \
        -:10669:     })
        -:10670:
        -:10671:#define vshrn_n_s32(a, b)                                               \
        -:10672:  __extension__                                                         \
        -:10673:    ({                                                                  \
        -:10674:       int32x4_t a_ = (a);                                              \
        -:10675:       int16x4_t result;                                                \
        -:10676:       __asm__ ("shrn %0.4h,%1.4s,%2"                                   \
        -:10677:                : "=w"(result)                                          \
        -:10678:                : "w"(a_), "i"(b)                                       \
        -:10679:                : /* No clobbers */);                                   \
        -:10680:       result;                                                          \
        -:10681:     })
        -:10682:
        -:10683:#define vshrn_n_s64(a, b)                                               \
        -:10684:  __extension__                                                         \
        -:10685:    ({                                                                  \
        -:10686:       int64x2_t a_ = (a);                                              \
        -:10687:       int32x2_t result;                                                \
        -:10688:       __asm__ ("shrn %0.2s,%1.2d,%2"                                   \
        -:10689:                : "=w"(result)                                          \
        -:10690:                : "w"(a_), "i"(b)                                       \
        -:10691:                : /* No clobbers */);                                   \
        -:10692:       result;                                                          \
        -:10693:     })
        -:10694:
        -:10695:#define vshrn_n_u16(a, b)                                               \
        -:10696:  __extension__                                                         \
        -:10697:    ({                                                                  \
        -:10698:       uint16x8_t a_ = (a);                                             \
        -:10699:       uint8x8_t result;                                                \
        -:10700:       __asm__ ("shrn %0.8b,%1.8h,%2"                                   \
        -:10701:                : "=w"(result)                                          \
        -:10702:                : "w"(a_), "i"(b)                                       \
        -:10703:                : /* No clobbers */);                                   \
        -:10704:       result;                                                          \
        -:10705:     })
        -:10706:
        -:10707:#define vshrn_n_u32(a, b)                                               \
        -:10708:  __extension__                                                         \
        -:10709:    ({                                                                  \
        -:10710:       uint32x4_t a_ = (a);                                             \
        -:10711:       uint16x4_t result;                                               \
        -:10712:       __asm__ ("shrn %0.4h,%1.4s,%2"                                   \
        -:10713:                : "=w"(result)                                          \
        -:10714:                : "w"(a_), "i"(b)                                       \
        -:10715:                : /* No clobbers */);                                   \
        -:10716:       result;                                                          \
        -:10717:     })
        -:10718:
        -:10719:#define vshrn_n_u64(a, b)                                               \
        -:10720:  __extension__                                                         \
        -:10721:    ({                                                                  \
        -:10722:       uint64x2_t a_ = (a);                                             \
        -:10723:       uint32x2_t result;                                               \
        -:10724:       __asm__ ("shrn %0.2s,%1.2d,%2"                                   \
        -:10725:                : "=w"(result)                                          \
        -:10726:                : "w"(a_), "i"(b)                                       \
        -:10727:                : /* No clobbers */);                                   \
        -:10728:       result;                                                          \
        -:10729:     })
        -:10730:
        -:10731:#define vsli_n_p8(a, b, c)                                              \
        -:10732:  __extension__                                                         \
        -:10733:    ({                                                                  \
        -:10734:       poly8x8_t b_ = (b);                                              \
        -:10735:       poly8x8_t a_ = (a);                                              \
        -:10736:       poly8x8_t result;                                                \
        -:10737:       __asm__ ("sli %0.8b,%2.8b,%3"                                    \
        -:10738:                : "=w"(result)                                          \
        -:10739:                : "0"(a_), "w"(b_), "i"(c)                              \
        -:10740:                : /* No clobbers */);                                   \
        -:10741:       result;                                                          \
        -:10742:     })
        -:10743:
        -:10744:#define vsli_n_p16(a, b, c)                                             \
        -:10745:  __extension__                                                         \
        -:10746:    ({                                                                  \
        -:10747:       poly16x4_t b_ = (b);                                             \
        -:10748:       poly16x4_t a_ = (a);                                             \
        -:10749:       poly16x4_t result;                                               \
        -:10750:       __asm__ ("sli %0.4h,%2.4h,%3"                                    \
        -:10751:                : "=w"(result)                                          \
        -:10752:                : "0"(a_), "w"(b_), "i"(c)                              \
        -:10753:                : /* No clobbers */);                                   \
        -:10754:       result;                                                          \
        -:10755:     })
        -:10756:
        -:10757:#define vsliq_n_p8(a, b, c)                                             \
        -:10758:  __extension__                                                         \
        -:10759:    ({                                                                  \
        -:10760:       poly8x16_t b_ = (b);                                             \
        -:10761:       poly8x16_t a_ = (a);                                             \
        -:10762:       poly8x16_t result;                                               \
        -:10763:       __asm__ ("sli %0.16b,%2.16b,%3"                                  \
        -:10764:                : "=w"(result)                                          \
        -:10765:                : "0"(a_), "w"(b_), "i"(c)                              \
        -:10766:                : /* No clobbers */);                                   \
        -:10767:       result;                                                          \
        -:10768:     })
        -:10769:
        -:10770:#define vsliq_n_p16(a, b, c)                                            \
        -:10771:  __extension__                                                         \
        -:10772:    ({                                                                  \
        -:10773:       poly16x8_t b_ = (b);                                             \
        -:10774:       poly16x8_t a_ = (a);                                             \
        -:10775:       poly16x8_t result;                                               \
        -:10776:       __asm__ ("sli %0.8h,%2.8h,%3"                                    \
        -:10777:                : "=w"(result)                                          \
        -:10778:                : "0"(a_), "w"(b_), "i"(c)                              \
        -:10779:                : /* No clobbers */);                                   \
        -:10780:       result;                                                          \
        -:10781:     })
        -:10782:
        -:10783:#define vsri_n_p8(a, b, c)                                              \
        -:10784:  __extension__                                                         \
        -:10785:    ({                                                                  \
        -:10786:       poly8x8_t b_ = (b);                                              \
        -:10787:       poly8x8_t a_ = (a);                                              \
        -:10788:       poly8x8_t result;                                                \
        -:10789:       __asm__ ("sri %0.8b,%2.8b,%3"                                    \
        -:10790:                : "=w"(result)                                          \
        -:10791:                : "0"(a_), "w"(b_), "i"(c)                              \
        -:10792:                : /* No clobbers */);                                   \
        -:10793:       result;                                                          \
        -:10794:     })
        -:10795:
        -:10796:#define vsri_n_p16(a, b, c)                                             \
        -:10797:  __extension__                                                         \
        -:10798:    ({                                                                  \
        -:10799:       poly16x4_t b_ = (b);                                             \
        -:10800:       poly16x4_t a_ = (a);                                             \
        -:10801:       poly16x4_t result;                                               \
        -:10802:       __asm__ ("sri %0.4h,%2.4h,%3"                                    \
        -:10803:                : "=w"(result)                                          \
        -:10804:                : "0"(a_), "w"(b_), "i"(c)                              \
        -:10805:                : /* No clobbers */);                                   \
        -:10806:       result;                                                          \
        -:10807:     })
        -:10808:
        -:10809:#define vsri_n_p64(a, b, c)						\
        -:10810:  __extension__								\
        -:10811:    ({									\
        -:10812:       poly64x1_t b_ = (b);						\
        -:10813:       poly64x1_t a_ = (a);						\
        -:10814:       poly64x1_t result;						\
        -:10815:       __asm__ ("sri %d0,%d2,%3"					\
        -:10816:		: "=w"(result)						\
        -:10817:		: "0"(a_), "w"(b_), "i"(c)				\
        -:10818:		: /* No clobbers.  */);					\
        -:10819:       result;								\
        -:10820:     })
        -:10821:
        -:10822:#define vsriq_n_p8(a, b, c)                                             \
        -:10823:  __extension__                                                         \
        -:10824:    ({                                                                  \
        -:10825:       poly8x16_t b_ = (b);                                             \
        -:10826:       poly8x16_t a_ = (a);                                             \
        -:10827:       poly8x16_t result;                                               \
        -:10828:       __asm__ ("sri %0.16b,%2.16b,%3"                                  \
        -:10829:                : "=w"(result)                                          \
        -:10830:                : "0"(a_), "w"(b_), "i"(c)                              \
        -:10831:                : /* No clobbers */);                                   \
        -:10832:       result;                                                          \
        -:10833:     })
        -:10834:
        -:10835:#define vsriq_n_p16(a, b, c)                                            \
        -:10836:  __extension__                                                         \
        -:10837:    ({                                                                  \
        -:10838:       poly16x8_t b_ = (b);                                             \
        -:10839:       poly16x8_t a_ = (a);                                             \
        -:10840:       poly16x8_t result;                                               \
        -:10841:       __asm__ ("sri %0.8h,%2.8h,%3"                                    \
        -:10842:                : "=w"(result)                                          \
        -:10843:                : "0"(a_), "w"(b_), "i"(c)                              \
        -:10844:                : /* No clobbers */);                                   \
        -:10845:       result;                                                          \
        -:10846:     })
        -:10847:
        -:10848:#define vsriq_n_p64(a, b, c)						\
        -:10849:  __extension__								\
        -:10850:    ({									\
        -:10851:       poly64x2_t b_ = (b);						\
        -:10852:       poly64x2_t a_ = (a);						\
        -:10853:       poly64x2_t result;						\
        -:10854:       __asm__ ("sri %0.2d,%2.2d,%3"					\
        -:10855:		: "=w"(result)						\
        -:10856:		: "0"(a_), "w"(b_), "i"(c)				\
        -:10857:		: /* No clobbers.  */);					\
        -:10858:       result;								\
        -:10859:     })
        -:10860:
        -:10861:__extension__ extern __inline uint8x8_t
        -:10862:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10863:vtst_p8 (poly8x8_t a, poly8x8_t b)
        -:10864:{
        -:10865:  return (uint8x8_t) ((((uint8x8_t) a) & ((uint8x8_t) b))
        -:10866:		       != 0);
        -:10867:}
        -:10868:
        -:10869:__extension__ extern __inline uint16x4_t
        -:10870:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10871:vtst_p16 (poly16x4_t a, poly16x4_t b)
        -:10872:{
        -:10873:  return (uint16x4_t) ((((uint16x4_t) a) & ((uint16x4_t) b))
        -:10874:		       != 0);
        -:10875:}
        -:10876:
        -:10877:__extension__ extern __inline uint64x1_t
        -:10878:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10879:vtst_p64 (poly64x1_t a, poly64x1_t b)
        -:10880:{
        -:10881:  return (uint64x1_t) ((a & b) != __AARCH64_INT64_C (0));
        -:10882:}
        -:10883:
        -:10884:__extension__ extern __inline uint8x16_t
        -:10885:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10886:vtstq_p8 (poly8x16_t a, poly8x16_t b)
        -:10887:{
        -:10888:  return (uint8x16_t) ((((uint8x16_t) a) & ((uint8x16_t) b))
        -:10889:		       != 0);
        -:10890:}
        -:10891:
        -:10892:__extension__ extern __inline uint16x8_t
        -:10893:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10894:vtstq_p16 (poly16x8_t a, poly16x8_t b)
        -:10895:{
        -:10896:  return (uint16x8_t) ((((uint16x8_t) a) & ((uint16x8_t) b))
        -:10897:		       != 0);
        -:10898:}
        -:10899:
        -:10900:__extension__ extern __inline uint64x2_t
        -:10901:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:10902:vtstq_p64 (poly64x2_t a, poly64x2_t b)
        -:10903:{
        -:10904:  return (uint64x2_t) ((((uint64x2_t) a) & ((uint64x2_t) b))
        -:10905:		       != __AARCH64_INT64_C (0));
        -:10906:}
        -:10907:
        -:10908:/* End of temporary inline asm implementations.  */
        -:10909:
        -:10910:/* Start of temporary inline asm for vldn, vstn and friends.  */
        -:10911:
        -:10912:/* Create struct element types for duplicating loads.
        -:10913:
        -:10914:   Create 2 element structures of:
        -:10915:
        -:10916:   +------+----+----+----+----+
        -:10917:   |      | 8  | 16 | 32 | 64 |
        -:10918:   +------+----+----+----+----+
        -:10919:   |int   | Y  | Y  | N  | N  |
        -:10920:   +------+----+----+----+----+
        -:10921:   |uint  | Y  | Y  | N  | N  |
        -:10922:   +------+----+----+----+----+
        -:10923:   |float | -  | Y  | N  | N  |
        -:10924:   +------+----+----+----+----+
        -:10925:   |poly  | Y  | Y  | -  | -  |
        -:10926:   +------+----+----+----+----+
        -:10927:
        -:10928:   Create 3 element structures of:
        -:10929:
        -:10930:   +------+----+----+----+----+
        -:10931:   |      | 8  | 16 | 32 | 64 |
        -:10932:   +------+----+----+----+----+
        -:10933:   |int   | Y  | Y  | Y  | Y  |
        -:10934:   +------+----+----+----+----+
        -:10935:   |uint  | Y  | Y  | Y  | Y  |
        -:10936:   +------+----+----+----+----+
        -:10937:   |float | -  | Y  | Y  | Y  |
        -:10938:   +------+----+----+----+----+
        -:10939:   |poly  | Y  | Y  | -  | -  |
        -:10940:   +------+----+----+----+----+
        -:10941:
        -:10942:   Create 4 element structures of:
        -:10943:
        -:10944:   +------+----+----+----+----+
        -:10945:   |      | 8  | 16 | 32 | 64 |
        -:10946:   +------+----+----+----+----+
        -:10947:   |int   | Y  | N  | N  | Y  |
        -:10948:   +------+----+----+----+----+
        -:10949:   |uint  | Y  | N  | N  | Y  |
        -:10950:   +------+----+----+----+----+
        -:10951:   |float | -  | N  | N  | Y  |
        -:10952:   +------+----+----+----+----+
        -:10953:   |poly  | Y  | N  | -  | -  |
        -:10954:   +------+----+----+----+----+
        -:10955:
        -:10956:  This is required for casting memory reference.  */
        -:10957:#define __STRUCTN(t, sz, nelem)			\
        -:10958:  typedef struct t ## sz ## x ## nelem ## _t {	\
        -:10959:    t ## sz ## _t val[nelem];			\
        -:10960:  }  t ## sz ## x ## nelem ## _t;
        -:10961:
        -:10962:/* 2-element structs.  */
        -:10963:__STRUCTN (int, 8, 2)
        -:10964:__STRUCTN (int, 16, 2)
        -:10965:__STRUCTN (uint, 8, 2)
        -:10966:__STRUCTN (uint, 16, 2)
        -:10967:__STRUCTN (float, 16, 2)
        -:10968:__STRUCTN (poly, 8, 2)
        -:10969:__STRUCTN (poly, 16, 2)
        -:10970:/* 3-element structs.  */
        -:10971:__STRUCTN (int, 8, 3)
        -:10972:__STRUCTN (int, 16, 3)
        -:10973:__STRUCTN (int, 32, 3)
        -:10974:__STRUCTN (int, 64, 3)
        -:10975:__STRUCTN (uint, 8, 3)
        -:10976:__STRUCTN (uint, 16, 3)
        -:10977:__STRUCTN (uint, 32, 3)
        -:10978:__STRUCTN (uint, 64, 3)
        -:10979:__STRUCTN (float, 16, 3)
        -:10980:__STRUCTN (float, 32, 3)
        -:10981:__STRUCTN (float, 64, 3)
        -:10982:__STRUCTN (poly, 8, 3)
        -:10983:__STRUCTN (poly, 16, 3)
        -:10984:/* 4-element structs.  */
        -:10985:__STRUCTN (int, 8, 4)
        -:10986:__STRUCTN (int, 64, 4)
        -:10987:__STRUCTN (uint, 8, 4)
        -:10988:__STRUCTN (uint, 64, 4)
        -:10989:__STRUCTN (poly, 8, 4)
        -:10990:__STRUCTN (float, 64, 4)
        -:10991:#undef __STRUCTN
        -:10992:
        -:10993:
        -:10994:#define __ST2_LANE_FUNC(intype, largetype, ptrtype, mode,		     \
        -:10995:			qmode, ptr_mode, funcsuffix, signedtype)	     \
        -:10996:__extension__ extern __inline void					     \
        -:10997:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__)) \
        -:10998:vst2_lane_ ## funcsuffix (ptrtype *__ptr,				     \
        -:10999:			  intype __b, const int __c)			     \
        -:11000:{									     \
        -:11001:  __builtin_aarch64_simd_oi __o;					     \
        -:11002:  largetype __temp;							     \
        -:11003:  __temp.val[0]								     \
        -:11004:    = vcombine_##funcsuffix (__b.val[0],				     \
        -:11005:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11006:  __temp.val[1]								     \
        -:11007:    = vcombine_##funcsuffix (__b.val[1],				     \
        -:11008:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11009:  __o = __builtin_aarch64_set_qregoi##qmode (__o,			     \
        -:11010:					     (signedtype) __temp.val[0], 0); \
        -:11011:  __o = __builtin_aarch64_set_qregoi##qmode (__o,			     \
        -:11012:					     (signedtype) __temp.val[1], 1); \
        -:11013:  __builtin_aarch64_st2_lane##mode ((__builtin_aarch64_simd_ ## ptr_mode *)  \
        -:11014:				     __ptr, __o, __c);			     \
        -:11015:}
        -:11016:
        -:11017:__ST2_LANE_FUNC (float16x4x2_t, float16x8x2_t, float16_t, v4hf, v8hf, hf, f16,
        -:11018:		 float16x8_t)
        -:11019:__ST2_LANE_FUNC (float32x2x2_t, float32x4x2_t, float32_t, v2sf, v4sf, sf, f32,
        -:11020:		 float32x4_t)
        -:11021:__ST2_LANE_FUNC (float64x1x2_t, float64x2x2_t, float64_t, df, v2df, df, f64,
        -:11022:		 float64x2_t)
        -:11023:__ST2_LANE_FUNC (poly8x8x2_t, poly8x16x2_t, poly8_t, v8qi, v16qi, qi, p8,
        -:11024:		 int8x16_t)
        -:11025:__ST2_LANE_FUNC (poly16x4x2_t, poly16x8x2_t, poly16_t, v4hi, v8hi, hi, p16,
        -:11026:		 int16x8_t)
        -:11027:__ST2_LANE_FUNC (poly64x1x2_t, poly64x2x2_t, poly64_t, di, v2di_ssps, di, p64,
        -:11028:		 poly64x2_t)
        -:11029:__ST2_LANE_FUNC (int8x8x2_t, int8x16x2_t, int8_t, v8qi, v16qi, qi, s8,
        -:11030:		 int8x16_t)
        -:11031:__ST2_LANE_FUNC (int16x4x2_t, int16x8x2_t, int16_t, v4hi, v8hi, hi, s16,
        -:11032:		 int16x8_t)
        -:11033:__ST2_LANE_FUNC (int32x2x2_t, int32x4x2_t, int32_t, v2si, v4si, si, s32,
        -:11034:		 int32x4_t)
        -:11035:__ST2_LANE_FUNC (int64x1x2_t, int64x2x2_t, int64_t, di, v2di, di, s64,
        -:11036:		 int64x2_t)
        -:11037:__ST2_LANE_FUNC (uint8x8x2_t, uint8x16x2_t, uint8_t, v8qi, v16qi, qi, u8,
        -:11038:		 int8x16_t)
        -:11039:__ST2_LANE_FUNC (uint16x4x2_t, uint16x8x2_t, uint16_t, v4hi, v8hi, hi, u16,
        -:11040:		 int16x8_t)
        -:11041:__ST2_LANE_FUNC (uint32x2x2_t, uint32x4x2_t, uint32_t, v2si, v4si, si, u32,
        -:11042:		 int32x4_t)
        -:11043:__ST2_LANE_FUNC (uint64x1x2_t, uint64x2x2_t, uint64_t, di, v2di, di, u64,
        -:11044:		 int64x2_t)
        -:11045:
        -:11046:#undef __ST2_LANE_FUNC
        -:11047:#define __ST2_LANE_FUNC(intype, ptrtype, mode, ptr_mode, funcsuffix)	    \
        -:11048:__extension__ extern __inline void					    \
        -:11049:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__)) \
        -:11050:vst2q_lane_ ## funcsuffix (ptrtype *__ptr,				    \
        -:11051:			   intype __b, const int __c)			    \
        -:11052:{									    \
        -:11053:  union { intype __i;							    \
        -:11054:	  __builtin_aarch64_simd_oi __o; } __temp = { __b };		    \
        -:11055:  __builtin_aarch64_st2_lane##mode ((__builtin_aarch64_simd_ ## ptr_mode *) \
        -:11056:				    __ptr, __temp.__o, __c);		    \
        -:11057:}
        -:11058:
        -:11059:__ST2_LANE_FUNC (float16x8x2_t, float16_t, v8hf, hf, f16)
        -:11060:__ST2_LANE_FUNC (float32x4x2_t, float32_t, v4sf, sf, f32)
        -:11061:__ST2_LANE_FUNC (float64x2x2_t, float64_t, v2df, df, f64)
        -:11062:__ST2_LANE_FUNC (poly8x16x2_t, poly8_t, v16qi, qi, p8)
        -:11063:__ST2_LANE_FUNC (poly16x8x2_t, poly16_t, v8hi, hi, p16)
        -:11064:__ST2_LANE_FUNC (poly64x2x2_t, poly64_t, v2di, di, p64)
        -:11065:__ST2_LANE_FUNC (int8x16x2_t, int8_t, v16qi, qi, s8)
        -:11066:__ST2_LANE_FUNC (int16x8x2_t, int16_t, v8hi, hi, s16)
        -:11067:__ST2_LANE_FUNC (int32x4x2_t, int32_t, v4si, si, s32)
        -:11068:__ST2_LANE_FUNC (int64x2x2_t, int64_t, v2di, di, s64)
        -:11069:__ST2_LANE_FUNC (uint8x16x2_t, uint8_t, v16qi, qi, u8)
        -:11070:__ST2_LANE_FUNC (uint16x8x2_t, uint16_t, v8hi, hi, u16)
        -:11071:__ST2_LANE_FUNC (uint32x4x2_t, uint32_t, v4si, si, u32)
        -:11072:__ST2_LANE_FUNC (uint64x2x2_t, uint64_t, v2di, di, u64)
        -:11073:
        -:11074:#define __ST3_LANE_FUNC(intype, largetype, ptrtype, mode,		     \
        -:11075:			qmode, ptr_mode, funcsuffix, signedtype)	     \
        -:11076:__extension__ extern __inline void					     \
        -:11077:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__)) \
        -:11078:vst3_lane_ ## funcsuffix (ptrtype *__ptr,				     \
        -:11079:			  intype __b, const int __c)			     \
        -:11080:{									     \
        -:11081:  __builtin_aarch64_simd_ci __o;					     \
        -:11082:  largetype __temp;							     \
        -:11083:  __temp.val[0]								     \
        -:11084:    = vcombine_##funcsuffix (__b.val[0],				     \
        -:11085:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11086:  __temp.val[1]								     \
        -:11087:    = vcombine_##funcsuffix (__b.val[1],				     \
        -:11088:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11089:  __temp.val[2]								     \
        -:11090:    = vcombine_##funcsuffix (__b.val[2],				     \
        -:11091:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11092:  __o = __builtin_aarch64_set_qregci##qmode (__o,			     \
        -:11093:					     (signedtype) __temp.val[0], 0); \
        -:11094:  __o = __builtin_aarch64_set_qregci##qmode (__o,			     \
        -:11095:					     (signedtype) __temp.val[1], 1); \
        -:11096:  __o = __builtin_aarch64_set_qregci##qmode (__o,			     \
        -:11097:					     (signedtype) __temp.val[2], 2); \
        -:11098:  __builtin_aarch64_st3_lane##mode ((__builtin_aarch64_simd_ ## ptr_mode *)  \
        -:11099:				     __ptr, __o, __c);			     \
        -:11100:}
        -:11101:
        -:11102:__ST3_LANE_FUNC (float16x4x3_t, float16x8x3_t, float16_t, v4hf, v8hf, hf, f16,
        -:11103:		 float16x8_t)
        -:11104:__ST3_LANE_FUNC (float32x2x3_t, float32x4x3_t, float32_t, v2sf, v4sf, sf, f32,
        -:11105:		 float32x4_t)
        -:11106:__ST3_LANE_FUNC (float64x1x3_t, float64x2x3_t, float64_t, df, v2df, df, f64,
        -:11107:		 float64x2_t)
        -:11108:__ST3_LANE_FUNC (poly8x8x3_t, poly8x16x3_t, poly8_t, v8qi, v16qi, qi, p8,
        -:11109:		 int8x16_t)
        -:11110:__ST3_LANE_FUNC (poly16x4x3_t, poly16x8x3_t, poly16_t, v4hi, v8hi, hi, p16,
        -:11111:		 int16x8_t)
        -:11112:__ST3_LANE_FUNC (poly64x1x3_t, poly64x2x3_t, poly64_t, di, v2di_ssps, di, p64,
        -:11113:		 poly64x2_t)
        -:11114:__ST3_LANE_FUNC (int8x8x3_t, int8x16x3_t, int8_t, v8qi, v16qi, qi, s8,
        -:11115:		 int8x16_t)
        -:11116:__ST3_LANE_FUNC (int16x4x3_t, int16x8x3_t, int16_t, v4hi, v8hi, hi, s16,
        -:11117:		 int16x8_t)
        -:11118:__ST3_LANE_FUNC (int32x2x3_t, int32x4x3_t, int32_t, v2si, v4si, si, s32,
        -:11119:		 int32x4_t)
        -:11120:__ST3_LANE_FUNC (int64x1x3_t, int64x2x3_t, int64_t, di, v2di, di, s64,
        -:11121:		 int64x2_t)
        -:11122:__ST3_LANE_FUNC (uint8x8x3_t, uint8x16x3_t, uint8_t, v8qi, v16qi, qi, u8,
        -:11123:		 int8x16_t)
        -:11124:__ST3_LANE_FUNC (uint16x4x3_t, uint16x8x3_t, uint16_t, v4hi, v8hi, hi, u16,
        -:11125:		 int16x8_t)
        -:11126:__ST3_LANE_FUNC (uint32x2x3_t, uint32x4x3_t, uint32_t, v2si, v4si, si, u32,
        -:11127:		 int32x4_t)
        -:11128:__ST3_LANE_FUNC (uint64x1x3_t, uint64x2x3_t, uint64_t, di, v2di, di, u64,
        -:11129:		 int64x2_t)
        -:11130:
        -:11131:#undef __ST3_LANE_FUNC
        -:11132:#define __ST3_LANE_FUNC(intype, ptrtype, mode, ptr_mode, funcsuffix)	    \
        -:11133:__extension__ extern __inline void					    \
        -:11134:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__)) \
        -:11135:vst3q_lane_ ## funcsuffix (ptrtype *__ptr,				    \
        -:11136:			   intype __b, const int __c)			    \
        -:11137:{									    \
        -:11138:  union { intype __i;							    \
        -:11139:	  __builtin_aarch64_simd_ci __o; } __temp = { __b };		    \
        -:11140:  __builtin_aarch64_st3_lane##mode ((__builtin_aarch64_simd_ ## ptr_mode *) \
        -:11141:				    __ptr, __temp.__o, __c);		    \
        -:11142:}
        -:11143:
        -:11144:__ST3_LANE_FUNC (float16x8x3_t, float16_t, v8hf, hf, f16)
        -:11145:__ST3_LANE_FUNC (float32x4x3_t, float32_t, v4sf, sf, f32)
        -:11146:__ST3_LANE_FUNC (float64x2x3_t, float64_t, v2df, df, f64)
        -:11147:__ST3_LANE_FUNC (poly8x16x3_t, poly8_t, v16qi, qi, p8)
        -:11148:__ST3_LANE_FUNC (poly16x8x3_t, poly16_t, v8hi, hi, p16)
        -:11149:__ST3_LANE_FUNC (poly64x2x3_t, poly64_t, v2di, di, p64)
        -:11150:__ST3_LANE_FUNC (int8x16x3_t, int8_t, v16qi, qi, s8)
        -:11151:__ST3_LANE_FUNC (int16x8x3_t, int16_t, v8hi, hi, s16)
        -:11152:__ST3_LANE_FUNC (int32x4x3_t, int32_t, v4si, si, s32)
        -:11153:__ST3_LANE_FUNC (int64x2x3_t, int64_t, v2di, di, s64)
        -:11154:__ST3_LANE_FUNC (uint8x16x3_t, uint8_t, v16qi, qi, u8)
        -:11155:__ST3_LANE_FUNC (uint16x8x3_t, uint16_t, v8hi, hi, u16)
        -:11156:__ST3_LANE_FUNC (uint32x4x3_t, uint32_t, v4si, si, u32)
        -:11157:__ST3_LANE_FUNC (uint64x2x3_t, uint64_t, v2di, di, u64)
        -:11158:
        -:11159:#define __ST4_LANE_FUNC(intype, largetype, ptrtype, mode,		     \
        -:11160:			qmode, ptr_mode, funcsuffix, signedtype)	     \
        -:11161:__extension__ extern __inline void					     \
        -:11162:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__)) \
        -:11163:vst4_lane_ ## funcsuffix (ptrtype *__ptr,				     \
        -:11164:			  intype __b, const int __c)			     \
        -:11165:{									     \
        -:11166:  __builtin_aarch64_simd_xi __o;					     \
        -:11167:  largetype __temp;							     \
        -:11168:  __temp.val[0]								     \
        -:11169:    = vcombine_##funcsuffix (__b.val[0],				     \
        -:11170:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11171:  __temp.val[1]								     \
        -:11172:    = vcombine_##funcsuffix (__b.val[1],				     \
        -:11173:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11174:  __temp.val[2]								     \
        -:11175:    = vcombine_##funcsuffix (__b.val[2],				     \
        -:11176:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11177:  __temp.val[3]								     \
        -:11178:    = vcombine_##funcsuffix (__b.val[3],				     \
        -:11179:			     vcreate_##funcsuffix (__AARCH64_UINT64_C (0))); \
        -:11180:  __o = __builtin_aarch64_set_qregxi##qmode (__o,			     \
        -:11181:					     (signedtype) __temp.val[0], 0); \
        -:11182:  __o = __builtin_aarch64_set_qregxi##qmode (__o,			     \
        -:11183:					     (signedtype) __temp.val[1], 1); \
        -:11184:  __o = __builtin_aarch64_set_qregxi##qmode (__o,			     \
        -:11185:					     (signedtype) __temp.val[2], 2); \
        -:11186:  __o = __builtin_aarch64_set_qregxi##qmode (__o,			     \
        -:11187:					     (signedtype) __temp.val[3], 3); \
        -:11188:  __builtin_aarch64_st4_lane##mode ((__builtin_aarch64_simd_ ## ptr_mode *)  \
        -:11189:				     __ptr, __o, __c);			     \
        -:11190:}
        -:11191:
        -:11192:__ST4_LANE_FUNC (float16x4x4_t, float16x8x4_t, float16_t, v4hf, v8hf, hf, f16,
        -:11193:		 float16x8_t)
        -:11194:__ST4_LANE_FUNC (float32x2x4_t, float32x4x4_t, float32_t, v2sf, v4sf, sf, f32,
        -:11195:		 float32x4_t)
        -:11196:__ST4_LANE_FUNC (float64x1x4_t, float64x2x4_t, float64_t, df, v2df, df, f64,
        -:11197:		 float64x2_t)
        -:11198:__ST4_LANE_FUNC (poly8x8x4_t, poly8x16x4_t, poly8_t, v8qi, v16qi, qi, p8,
        -:11199:		 int8x16_t)
        -:11200:__ST4_LANE_FUNC (poly16x4x4_t, poly16x8x4_t, poly16_t, v4hi, v8hi, hi, p16,
        -:11201:		 int16x8_t)
        -:11202:__ST4_LANE_FUNC (poly64x1x4_t, poly64x2x4_t, poly64_t, di, v2di_ssps, di, p64,
        -:11203:		 poly64x2_t)
        -:11204:__ST4_LANE_FUNC (int8x8x4_t, int8x16x4_t, int8_t, v8qi, v16qi, qi, s8,
        -:11205:		 int8x16_t)
        -:11206:__ST4_LANE_FUNC (int16x4x4_t, int16x8x4_t, int16_t, v4hi, v8hi, hi, s16,
        -:11207:		 int16x8_t)
        -:11208:__ST4_LANE_FUNC (int32x2x4_t, int32x4x4_t, int32_t, v2si, v4si, si, s32,
        -:11209:		 int32x4_t)
        -:11210:__ST4_LANE_FUNC (int64x1x4_t, int64x2x4_t, int64_t, di, v2di, di, s64,
        -:11211:		 int64x2_t)
        -:11212:__ST4_LANE_FUNC (uint8x8x4_t, uint8x16x4_t, uint8_t, v8qi, v16qi, qi, u8,
        -:11213:		 int8x16_t)
        -:11214:__ST4_LANE_FUNC (uint16x4x4_t, uint16x8x4_t, uint16_t, v4hi, v8hi, hi, u16,
        -:11215:		 int16x8_t)
        -:11216:__ST4_LANE_FUNC (uint32x2x4_t, uint32x4x4_t, uint32_t, v2si, v4si, si, u32,
        -:11217:		 int32x4_t)
        -:11218:__ST4_LANE_FUNC (uint64x1x4_t, uint64x2x4_t, uint64_t, di, v2di, di, u64,
        -:11219:		 int64x2_t)
        -:11220:
        -:11221:#undef __ST4_LANE_FUNC
        -:11222:#define __ST4_LANE_FUNC(intype, ptrtype, mode, ptr_mode, funcsuffix)	    \
        -:11223:__extension__ extern __inline void					    \
        -:11224:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__)) \
        -:11225:vst4q_lane_ ## funcsuffix (ptrtype *__ptr,				    \
        -:11226:			   intype __b, const int __c)			    \
        -:11227:{									    \
        -:11228:  union { intype __i;							    \
        -:11229:	  __builtin_aarch64_simd_xi __o; } __temp = { __b };		    \
        -:11230:  __builtin_aarch64_st4_lane##mode ((__builtin_aarch64_simd_ ## ptr_mode *) \
        -:11231:				    __ptr, __temp.__o, __c);		    \
        -:11232:}
        -:11233:
        -:11234:__ST4_LANE_FUNC (float16x8x4_t, float16_t, v8hf, hf, f16)
        -:11235:__ST4_LANE_FUNC (float32x4x4_t, float32_t, v4sf, sf, f32)
        -:11236:__ST4_LANE_FUNC (float64x2x4_t, float64_t, v2df, df, f64)
        -:11237:__ST4_LANE_FUNC (poly8x16x4_t, poly8_t, v16qi, qi, p8)
        -:11238:__ST4_LANE_FUNC (poly16x8x4_t, poly16_t, v8hi, hi, p16)
        -:11239:__ST4_LANE_FUNC (poly64x2x4_t, poly64_t, v2di, di, p64)
        -:11240:__ST4_LANE_FUNC (int8x16x4_t, int8_t, v16qi, qi, s8)
        -:11241:__ST4_LANE_FUNC (int16x8x4_t, int16_t, v8hi, hi, s16)
        -:11242:__ST4_LANE_FUNC (int32x4x4_t, int32_t, v4si, si, s32)
        -:11243:__ST4_LANE_FUNC (int64x2x4_t, int64_t, v2di, di, s64)
        -:11244:__ST4_LANE_FUNC (uint8x16x4_t, uint8_t, v16qi, qi, u8)
        -:11245:__ST4_LANE_FUNC (uint16x8x4_t, uint16_t, v8hi, hi, u16)
        -:11246:__ST4_LANE_FUNC (uint32x4x4_t, uint32_t, v4si, si, u32)
        -:11247:__ST4_LANE_FUNC (uint64x2x4_t, uint64_t, v2di, di, u64)
        -:11248:
        -:11249:__extension__ extern __inline int64_t
        -:11250:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11251:vaddlv_s32 (int32x2_t a)
        -:11252:{
        -:11253:  int64_t result;
        -:11254:  __asm__ ("saddlp %0.1d, %1.2s" : "=w"(result) : "w"(a) : );
        -:11255:  return result;
        -:11256:}
        -:11257:
        -:11258:__extension__ extern __inline uint64_t
        -:11259:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11260:vaddlv_u32 (uint32x2_t a)
        -:11261:{
        -:11262:  uint64_t result;
        -:11263:  __asm__ ("uaddlp %0.1d, %1.2s" : "=w"(result) : "w"(a) : );
        -:11264:  return result;
        -:11265:}
        -:11266:
        -:11267:__extension__ extern __inline int16x4_t
        -:11268:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11269:vqdmulh_laneq_s16 (int16x4_t __a, int16x8_t __b, const int __c)
        -:11270:{
        -:11271:  return __builtin_aarch64_sqdmulh_laneqv4hi (__a, __b, __c);
        -:11272:}
        -:11273:
        -:11274:__extension__ extern __inline int32x2_t
        -:11275:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11276:vqdmulh_laneq_s32 (int32x2_t __a, int32x4_t __b, const int __c)
        -:11277:{
        -:11278:  return __builtin_aarch64_sqdmulh_laneqv2si (__a, __b, __c);
        -:11279:}
        -:11280:
        -:11281:__extension__ extern __inline int16x8_t
        -:11282:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11283:vqdmulhq_laneq_s16 (int16x8_t __a, int16x8_t __b, const int __c)
        -:11284:{
        -:11285:  return __builtin_aarch64_sqdmulh_laneqv8hi (__a, __b, __c);
        -:11286:}
        -:11287:
        -:11288:__extension__ extern __inline int32x4_t
        -:11289:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11290:vqdmulhq_laneq_s32 (int32x4_t __a, int32x4_t __b, const int __c)
        -:11291:{
        -:11292:  return __builtin_aarch64_sqdmulh_laneqv4si (__a, __b, __c);
        -:11293:}
        -:11294:
        -:11295:__extension__ extern __inline int16x4_t
        -:11296:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11297:vqrdmulh_laneq_s16 (int16x4_t __a, int16x8_t __b, const int __c)
        -:11298:{
        -:11299:  return  __builtin_aarch64_sqrdmulh_laneqv4hi (__a, __b, __c);
        -:11300:}
        -:11301:
        -:11302:__extension__ extern __inline int32x2_t
        -:11303:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11304:vqrdmulh_laneq_s32 (int32x2_t __a, int32x4_t __b, const int __c)
        -:11305:{
        -:11306:  return __builtin_aarch64_sqrdmulh_laneqv2si (__a, __b, __c);
        -:11307:}
        -:11308:
        -:11309:__extension__ extern __inline int16x8_t
        -:11310:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11311:vqrdmulhq_laneq_s16 (int16x8_t __a, int16x8_t __b, const int __c)
        -:11312:{
        -:11313:  return __builtin_aarch64_sqrdmulh_laneqv8hi (__a, __b, __c);
        -:11314:}
        -:11315:
        -:11316:__extension__ extern __inline int32x4_t
        -:11317:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11318:vqrdmulhq_laneq_s32 (int32x4_t __a, int32x4_t __b, const int __c)
        -:11319:{
        -:11320:  return __builtin_aarch64_sqrdmulh_laneqv4si (__a, __b, __c);
        -:11321:}
        -:11322:
        -:11323:/* Table intrinsics.  */
        -:11324:
        -:11325:__extension__ extern __inline poly8x8_t
        -:11326:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11327:vqtbl1_p8 (poly8x16_t a, uint8x8_t b)
        -:11328:{
        -:11329:  poly8x8_t result;
        -:11330:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11331:           : "=w"(result)
        -:11332:           : "w"(a), "w"(b)
        -:11333:           : /* No clobbers */);
        -:11334:  return result;
        -:11335:}
        -:11336:
        -:11337:__extension__ extern __inline int8x8_t
        -:11338:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11339:vqtbl1_s8 (int8x16_t a, uint8x8_t b)
        -:11340:{
        -:11341:  int8x8_t result;
        -:11342:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11343:           : "=w"(result)
        -:11344:           : "w"(a), "w"(b)
        -:11345:           : /* No clobbers */);
        -:11346:  return result;
        -:11347:}
        -:11348:
        -:11349:__extension__ extern __inline uint8x8_t
        -:11350:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11351:vqtbl1_u8 (uint8x16_t a, uint8x8_t b)
        -:11352:{
        -:11353:  uint8x8_t result;
        -:11354:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11355:           : "=w"(result)
        -:11356:           : "w"(a), "w"(b)
        -:11357:           : /* No clobbers */);
        -:11358:  return result;
        -:11359:}
        -:11360:
        -:11361:__extension__ extern __inline poly8x16_t
        -:11362:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11363:vqtbl1q_p8 (poly8x16_t a, uint8x16_t b)
        -:11364:{
        -:11365:  poly8x16_t result;
        -:11366:  __asm__ ("tbl %0.16b, {%1.16b}, %2.16b"
        -:11367:           : "=w"(result)
        -:11368:           : "w"(a), "w"(b)
        -:11369:           : /* No clobbers */);
        -:11370:  return result;
        -:11371:}
        -:11372:
        -:11373:__extension__ extern __inline int8x16_t
        -:11374:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11375:vqtbl1q_s8 (int8x16_t a, uint8x16_t b)
        -:11376:{
        -:11377:  int8x16_t result;
        -:11378:  __asm__ ("tbl %0.16b, {%1.16b}, %2.16b"
        -:11379:           : "=w"(result)
        -:11380:           : "w"(a), "w"(b)
        -:11381:           : /* No clobbers */);
        -:11382:  return result;
        -:11383:}
        -:11384:
        -:11385:__extension__ extern __inline uint8x16_t
        -:11386:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11387:vqtbl1q_u8 (uint8x16_t a, uint8x16_t b)
        -:11388:{
        -:11389:  uint8x16_t result;
        -:11390:  __asm__ ("tbl %0.16b, {%1.16b}, %2.16b"
        -:11391:           : "=w"(result)
        -:11392:           : "w"(a), "w"(b)
        -:11393:           : /* No clobbers */);
        -:11394:  return result;
        -:11395:}
        -:11396:
        -:11397:__extension__ extern __inline int8x8_t
        -:11398:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11399:vqtbx1_s8 (int8x8_t r, int8x16_t tab, uint8x8_t idx)
        -:11400:{
        -:11401:  int8x8_t result = r;
        -:11402:  __asm__ ("tbx %0.8b,{%1.16b},%2.8b"
        -:11403:           : "+w"(result)
        -:11404:           : "w"(tab), "w"(idx)
        -:11405:           : /* No clobbers */);
        -:11406:  return result;
        -:11407:}
        -:11408:
        -:11409:__extension__ extern __inline uint8x8_t
        -:11410:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11411:vqtbx1_u8 (uint8x8_t r, uint8x16_t tab, uint8x8_t idx)
        -:11412:{
        -:11413:  uint8x8_t result = r;
        -:11414:  __asm__ ("tbx %0.8b,{%1.16b},%2.8b"
        -:11415:           : "+w"(result)
        -:11416:           : "w"(tab), "w"(idx)
        -:11417:           : /* No clobbers */);
        -:11418:  return result;
        -:11419:}
        -:11420:
        -:11421:__extension__ extern __inline poly8x8_t
        -:11422:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11423:vqtbx1_p8 (poly8x8_t r, poly8x16_t tab, uint8x8_t idx)
        -:11424:{
        -:11425:  poly8x8_t result = r;
        -:11426:  __asm__ ("tbx %0.8b,{%1.16b},%2.8b"
        -:11427:           : "+w"(result)
        -:11428:           : "w"(tab), "w"(idx)
        -:11429:           : /* No clobbers */);
        -:11430:  return result;
        -:11431:}
        -:11432:
        -:11433:__extension__ extern __inline int8x16_t
        -:11434:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11435:vqtbx1q_s8 (int8x16_t r, int8x16_t tab, uint8x16_t idx)
        -:11436:{
        -:11437:  int8x16_t result = r;
        -:11438:  __asm__ ("tbx %0.16b,{%1.16b},%2.16b"
        -:11439:           : "+w"(result)
        -:11440:           : "w"(tab), "w"(idx)
        -:11441:           : /* No clobbers */);
        -:11442:  return result;
        -:11443:}
        -:11444:
        -:11445:__extension__ extern __inline uint8x16_t
        -:11446:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11447:vqtbx1q_u8 (uint8x16_t r, uint8x16_t tab, uint8x16_t idx)
        -:11448:{
        -:11449:  uint8x16_t result = r;
        -:11450:  __asm__ ("tbx %0.16b,{%1.16b},%2.16b"
        -:11451:           : "+w"(result)
        -:11452:           : "w"(tab), "w"(idx)
        -:11453:           : /* No clobbers */);
        -:11454:  return result;
        -:11455:}
        -:11456:
        -:11457:__extension__ extern __inline poly8x16_t
        -:11458:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11459:vqtbx1q_p8 (poly8x16_t r, poly8x16_t tab, uint8x16_t idx)
        -:11460:{
        -:11461:  poly8x16_t result = r;
        -:11462:  __asm__ ("tbx %0.16b,{%1.16b},%2.16b"
        -:11463:           : "+w"(result)
        -:11464:           : "w"(tab), "w"(idx)
        -:11465:           : /* No clobbers */);
        -:11466:  return result;
        -:11467:}
        -:11468:
        -:11469:/* V7 legacy table intrinsics.  */
        -:11470:
        -:11471:__extension__ extern __inline int8x8_t
        -:11472:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11473:vtbl1_s8 (int8x8_t tab, int8x8_t idx)
        -:11474:{
        -:11475:  int8x8_t result;
        -:11476:  int8x16_t temp = vcombine_s8 (tab, vcreate_s8 (__AARCH64_UINT64_C (0x0)));
        -:11477:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11478:           : "=w"(result)
        -:11479:           : "w"(temp), "w"(idx)
        -:11480:           : /* No clobbers */);
        -:11481:  return result;
        -:11482:}
        -:11483:
        -:11484:__extension__ extern __inline uint8x8_t
        -:11485:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11486:vtbl1_u8 (uint8x8_t tab, uint8x8_t idx)
        -:11487:{
        -:11488:  uint8x8_t result;
        -:11489:  uint8x16_t temp = vcombine_u8 (tab, vcreate_u8 (__AARCH64_UINT64_C (0x0)));
        -:11490:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11491:           : "=w"(result)
        -:11492:           : "w"(temp), "w"(idx)
        -:11493:           : /* No clobbers */);
        -:11494:  return result;
        -:11495:}
        -:11496:
        -:11497:__extension__ extern __inline poly8x8_t
        -:11498:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11499:vtbl1_p8 (poly8x8_t tab, uint8x8_t idx)
        -:11500:{
        -:11501:  poly8x8_t result;
        -:11502:  poly8x16_t temp = vcombine_p8 (tab, vcreate_p8 (__AARCH64_UINT64_C (0x0)));
        -:11503:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11504:           : "=w"(result)
        -:11505:           : "w"(temp), "w"(idx)
        -:11506:           : /* No clobbers */);
        -:11507:  return result;
        -:11508:}
        -:11509:
        -:11510:__extension__ extern __inline int8x8_t
        -:11511:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11512:vtbl2_s8 (int8x8x2_t tab, int8x8_t idx)
        -:11513:{
        -:11514:  int8x8_t result;
        -:11515:  int8x16_t temp = vcombine_s8 (tab.val[0], tab.val[1]);
        -:11516:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11517:           : "=w"(result)
        -:11518:           : "w"(temp), "w"(idx)
        -:11519:           : /* No clobbers */);
        -:11520:  return result;
        -:11521:}
        -:11522:
        -:11523:__extension__ extern __inline uint8x8_t
        -:11524:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11525:vtbl2_u8 (uint8x8x2_t tab, uint8x8_t idx)
        -:11526:{
        -:11527:  uint8x8_t result;
        -:11528:  uint8x16_t temp = vcombine_u8 (tab.val[0], tab.val[1]);
        -:11529:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11530:           : "=w"(result)
        -:11531:           : "w"(temp), "w"(idx)
        -:11532:           : /* No clobbers */);
        -:11533:  return result;
        -:11534:}
        -:11535:
        -:11536:__extension__ extern __inline poly8x8_t
        -:11537:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11538:vtbl2_p8 (poly8x8x2_t tab, uint8x8_t idx)
        -:11539:{
        -:11540:  poly8x8_t result;
        -:11541:  poly8x16_t temp = vcombine_p8 (tab.val[0], tab.val[1]);
        -:11542:  __asm__ ("tbl %0.8b, {%1.16b}, %2.8b"
        -:11543:           : "=w"(result)
        -:11544:           : "w"(temp), "w"(idx)
        -:11545:           : /* No clobbers */);
        -:11546:  return result;
        -:11547:}
        -:11548:
        -:11549:__extension__ extern __inline int8x8_t
        -:11550:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11551:vtbl3_s8 (int8x8x3_t tab, int8x8_t idx)
        -:11552:{
        -:11553:  int8x8_t result;
        -:11554:  int8x16x2_t temp;
        -:11555:  __builtin_aarch64_simd_oi __o;
        -:11556:  temp.val[0] = vcombine_s8 (tab.val[0], tab.val[1]);
        -:11557:  temp.val[1] = vcombine_s8 (tab.val[2], vcreate_s8 (__AARCH64_UINT64_C (0x0)));
        -:11558:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11559:					   (int8x16_t) temp.val[0], 0);
        -:11560:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11561:					   (int8x16_t) temp.val[1], 1);
        -:11562:  result = __builtin_aarch64_tbl3v8qi (__o, idx);
        -:11563:  return result;
        -:11564:}
        -:11565:
        -:11566:__extension__ extern __inline uint8x8_t
        -:11567:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11568:vtbl3_u8 (uint8x8x3_t tab, uint8x8_t idx)
        -:11569:{
        -:11570:  uint8x8_t result;
        -:11571:  uint8x16x2_t temp;
        -:11572:  __builtin_aarch64_simd_oi __o;
        -:11573:  temp.val[0] = vcombine_u8 (tab.val[0], tab.val[1]);
        -:11574:  temp.val[1] = vcombine_u8 (tab.val[2], vcreate_u8 (__AARCH64_UINT64_C (0x0)));
        -:11575:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11576:					   (int8x16_t) temp.val[0], 0);
        -:11577:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11578:					   (int8x16_t) temp.val[1], 1);
        -:11579:  result = (uint8x8_t)__builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);
        -:11580:  return result;
        -:11581:}
        -:11582:
        -:11583:__extension__ extern __inline poly8x8_t
        -:11584:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11585:vtbl3_p8 (poly8x8x3_t tab, uint8x8_t idx)
        -:11586:{
        -:11587:  poly8x8_t result;
        -:11588:  poly8x16x2_t temp;
        -:11589:  __builtin_aarch64_simd_oi __o;
        -:11590:  temp.val[0] = vcombine_p8 (tab.val[0], tab.val[1]);
        -:11591:  temp.val[1] = vcombine_p8 (tab.val[2], vcreate_p8 (__AARCH64_UINT64_C (0x0)));
        -:11592:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11593:					   (int8x16_t) temp.val[0], 0);
        -:11594:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11595:					   (int8x16_t) temp.val[1], 1);
        -:11596:  result = (poly8x8_t)__builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);
        -:11597:  return result;
        -:11598:}
        -:11599:
        -:11600:__extension__ extern __inline int8x8_t
        -:11601:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11602:vtbl4_s8 (int8x8x4_t tab, int8x8_t idx)
        -:11603:{
        -:11604:  int8x8_t result;
        -:11605:  int8x16x2_t temp;
        -:11606:  __builtin_aarch64_simd_oi __o;
        -:11607:  temp.val[0] = vcombine_s8 (tab.val[0], tab.val[1]);
        -:11608:  temp.val[1] = vcombine_s8 (tab.val[2], tab.val[3]);
        -:11609:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11610:					   (int8x16_t) temp.val[0], 0);
        -:11611:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11612:					   (int8x16_t) temp.val[1], 1);
        -:11613:  result = __builtin_aarch64_tbl3v8qi (__o, idx);
        -:11614:  return result;
        -:11615:}
        -:11616:
        -:11617:__extension__ extern __inline uint8x8_t
        -:11618:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11619:vtbl4_u8 (uint8x8x4_t tab, uint8x8_t idx)
        -:11620:{
        -:11621:  uint8x8_t result;
        -:11622:  uint8x16x2_t temp;
        -:11623:  __builtin_aarch64_simd_oi __o;
        -:11624:  temp.val[0] = vcombine_u8 (tab.val[0], tab.val[1]);
        -:11625:  temp.val[1] = vcombine_u8 (tab.val[2], tab.val[3]);
        -:11626:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11627:					   (int8x16_t) temp.val[0], 0);
        -:11628:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11629:					   (int8x16_t) temp.val[1], 1);
        -:11630:  result = (uint8x8_t)__builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);
        -:11631:  return result;
        -:11632:}
        -:11633:
        -:11634:__extension__ extern __inline poly8x8_t
        -:11635:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11636:vtbl4_p8 (poly8x8x4_t tab, uint8x8_t idx)
        -:11637:{
        -:11638:  poly8x8_t result;
        -:11639:  poly8x16x2_t temp;
        -:11640:  __builtin_aarch64_simd_oi __o;
        -:11641:  temp.val[0] = vcombine_p8 (tab.val[0], tab.val[1]);
        -:11642:  temp.val[1] = vcombine_p8 (tab.val[2], tab.val[3]);
        -:11643:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11644:					   (int8x16_t) temp.val[0], 0);
        -:11645:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:11646:					   (int8x16_t) temp.val[1], 1);
        -:11647:  result = (poly8x8_t)__builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);
        -:11648:  return result;
        -:11649:}
        -:11650:
        -:11651:__extension__ extern __inline int8x8_t
        -:11652:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11653:vtbx2_s8 (int8x8_t r, int8x8x2_t tab, int8x8_t idx)
        -:11654:{
        -:11655:  int8x8_t result = r;
        -:11656:  int8x16_t temp = vcombine_s8 (tab.val[0], tab.val[1]);
        -:11657:  __asm__ ("tbx %0.8b, {%1.16b}, %2.8b"
        -:11658:           : "+w"(result)
        -:11659:           : "w"(temp), "w"(idx)
        -:11660:           : /* No clobbers */);
        -:11661:  return result;
        -:11662:}
        -:11663:
        -:11664:__extension__ extern __inline uint8x8_t
        -:11665:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11666:vtbx2_u8 (uint8x8_t r, uint8x8x2_t tab, uint8x8_t idx)
        -:11667:{
        -:11668:  uint8x8_t result = r;
        -:11669:  uint8x16_t temp = vcombine_u8 (tab.val[0], tab.val[1]);
        -:11670:  __asm__ ("tbx %0.8b, {%1.16b}, %2.8b"
        -:11671:           : "+w"(result)
        -:11672:           : "w"(temp), "w"(idx)
        -:11673:           : /* No clobbers */);
        -:11674:  return result;
        -:11675:}
        -:11676:
        -:11677:__extension__ extern __inline poly8x8_t
        -:11678:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11679:vtbx2_p8 (poly8x8_t r, poly8x8x2_t tab, uint8x8_t idx)
        -:11680:{
        -:11681:  poly8x8_t result = r;
        -:11682:  poly8x16_t temp = vcombine_p8 (tab.val[0], tab.val[1]);
        -:11683:  __asm__ ("tbx %0.8b, {%1.16b}, %2.8b"
        -:11684:           : "+w"(result)
        -:11685:           : "w"(temp), "w"(idx)
        -:11686:           : /* No clobbers */);
        -:11687:  return result;
        -:11688:}
        -:11689:
        -:11690:/* End of temporary inline asm.  */
        -:11691:
        -:11692:/* Start of optimal implementations in approved order.  */
        -:11693:
        -:11694:/* vabd.  */
        -:11695:
        -:11696:__extension__ extern __inline float32_t
        -:11697:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11698:vabds_f32 (float32_t __a, float32_t __b)
        -:11699:{
        -:11700:  return __builtin_aarch64_fabdsf (__a, __b);
        -:11701:}
        -:11702:
        -:11703:__extension__ extern __inline float64_t
        -:11704:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11705:vabdd_f64 (float64_t __a, float64_t __b)
        -:11706:{
        -:11707:  return __builtin_aarch64_fabddf (__a, __b);
        -:11708:}
        -:11709:
        -:11710:__extension__ extern __inline float32x2_t
        -:11711:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11712:vabd_f32 (float32x2_t __a, float32x2_t __b)
        -:11713:{
        -:11714:  return __builtin_aarch64_fabdv2sf (__a, __b);
        -:11715:}
        -:11716:
        -:11717:__extension__ extern __inline float64x1_t
        -:11718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11719:vabd_f64 (float64x1_t __a, float64x1_t __b)
        -:11720:{
        -:11721:  return (float64x1_t) {vabdd_f64 (vget_lane_f64 (__a, 0),
        -:11722:				   vget_lane_f64 (__b, 0))};
        -:11723:}
        -:11724:
        -:11725:__extension__ extern __inline float32x4_t
        -:11726:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11727:vabdq_f32 (float32x4_t __a, float32x4_t __b)
        -:11728:{
        -:11729:  return __builtin_aarch64_fabdv4sf (__a, __b);
        -:11730:}
        -:11731:
        -:11732:__extension__ extern __inline float64x2_t
        -:11733:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11734:vabdq_f64 (float64x2_t __a, float64x2_t __b)
        -:11735:{
        -:11736:  return __builtin_aarch64_fabdv2df (__a, __b);
        -:11737:}
        -:11738:
        -:11739:/* vabs  */
        -:11740:
        -:11741:__extension__ extern __inline float32x2_t
        -:11742:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11743:vabs_f32 (float32x2_t __a)
        -:11744:{
        -:11745:  return __builtin_aarch64_absv2sf (__a);
        -:11746:}
        -:11747:
        -:11748:__extension__ extern __inline float64x1_t
        -:11749:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11750:vabs_f64 (float64x1_t __a)
        -:11751:{
        -:11752:  return (float64x1_t) {__builtin_fabs (__a[0])};
        -:11753:}
        -:11754:
        -:11755:__extension__ extern __inline int8x8_t
        -:11756:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11757:vabs_s8 (int8x8_t __a)
        -:11758:{
        -:11759:  return __builtin_aarch64_absv8qi (__a);
        -:11760:}
        -:11761:
        -:11762:__extension__ extern __inline int16x4_t
        -:11763:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11764:vabs_s16 (int16x4_t __a)
        -:11765:{
        -:11766:  return __builtin_aarch64_absv4hi (__a);
        -:11767:}
        -:11768:
        -:11769:__extension__ extern __inline int32x2_t
        -:11770:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11771:vabs_s32 (int32x2_t __a)
        -:11772:{
        -:11773:  return __builtin_aarch64_absv2si (__a);
        -:11774:}
        -:11775:
        -:11776:__extension__ extern __inline int64x1_t
        -:11777:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11778:vabs_s64 (int64x1_t __a)
        -:11779:{
        -:11780:  return (int64x1_t) {__builtin_aarch64_absdi (__a[0])};
        -:11781:}
        -:11782:
        -:11783:__extension__ extern __inline float32x4_t
        -:11784:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11785:vabsq_f32 (float32x4_t __a)
        -:11786:{
        -:11787:  return __builtin_aarch64_absv4sf (__a);
        -:11788:}
        -:11789:
        -:11790:__extension__ extern __inline float64x2_t
        -:11791:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11792:vabsq_f64 (float64x2_t __a)
        -:11793:{
        -:11794:  return __builtin_aarch64_absv2df (__a);
        -:11795:}
        -:11796:
        -:11797:__extension__ extern __inline int8x16_t
        -:11798:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11799:vabsq_s8 (int8x16_t __a)
        -:11800:{
        -:11801:  return __builtin_aarch64_absv16qi (__a);
        -:11802:}
        -:11803:
        -:11804:__extension__ extern __inline int16x8_t
        -:11805:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11806:vabsq_s16 (int16x8_t __a)
        -:11807:{
        -:11808:  return __builtin_aarch64_absv8hi (__a);
        -:11809:}
        -:11810:
        -:11811:__extension__ extern __inline int32x4_t
        -:11812:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11813:vabsq_s32 (int32x4_t __a)
        -:11814:{
        -:11815:  return __builtin_aarch64_absv4si (__a);
        -:11816:}
        -:11817:
        -:11818:__extension__ extern __inline int64x2_t
        -:11819:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11820:vabsq_s64 (int64x2_t __a)
        -:11821:{
        -:11822:  return __builtin_aarch64_absv2di (__a);
        -:11823:}
        -:11824:
        -:11825:/* vadd */
        -:11826:
        -:11827:__extension__ extern __inline int64_t
        -:11828:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11829:vaddd_s64 (int64_t __a, int64_t __b)
        -:11830:{
        -:11831:  return __a + __b;
        -:11832:}
        -:11833:
        -:11834:__extension__ extern __inline uint64_t
        -:11835:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11836:vaddd_u64 (uint64_t __a, uint64_t __b)
        -:11837:{
        -:11838:  return __a + __b;
        -:11839:}
        -:11840:
        -:11841:/* vaddv */
        -:11842:
        -:11843:__extension__ extern __inline int8_t
        -:11844:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11845:vaddv_s8 (int8x8_t __a)
        -:11846:{
        -:11847:  return __builtin_aarch64_reduc_plus_scal_v8qi (__a);
        -:11848:}
        -:11849:
        -:11850:__extension__ extern __inline int16_t
        -:11851:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11852:vaddv_s16 (int16x4_t __a)
        -:11853:{
391888008:11854:  return __builtin_aarch64_reduc_plus_scal_v4hi (__a);
        -:11855:}
        -:11856:
        -:11857:__extension__ extern __inline int32_t
        -:11858:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11859:vaddv_s32 (int32x2_t __a)
        -:11860:{
        -:11861:  return __builtin_aarch64_reduc_plus_scal_v2si (__a);
        -:11862:}
        -:11863:
        -:11864:__extension__ extern __inline uint8_t
        -:11865:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11866:vaddv_u8 (uint8x8_t __a)
        -:11867:{
        -:11868:  return (uint8_t) __builtin_aarch64_reduc_plus_scal_v8qi ((int8x8_t) __a);
        -:11869:}
        -:11870:
        -:11871:__extension__ extern __inline uint16_t
        -:11872:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11873:vaddv_u16 (uint16x4_t __a)
        -:11874:{
        -:11875:  return (uint16_t) __builtin_aarch64_reduc_plus_scal_v4hi ((int16x4_t) __a);
        -:11876:}
        -:11877:
        -:11878:__extension__ extern __inline uint32_t
        -:11879:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11880:vaddv_u32 (uint32x2_t __a)
        -:11881:{
        -:11882:  return (int32_t) __builtin_aarch64_reduc_plus_scal_v2si ((int32x2_t) __a);
        -:11883:}
        -:11884:
        -:11885:__extension__ extern __inline int8_t
        -:11886:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11887:vaddvq_s8 (int8x16_t __a)
        -:11888:{
        -:11889:  return __builtin_aarch64_reduc_plus_scal_v16qi (__a);
        -:11890:}
        -:11891:
        -:11892:__extension__ extern __inline int16_t
        -:11893:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11894:vaddvq_s16 (int16x8_t __a)
        -:11895:{
391888008:11896:  return __builtin_aarch64_reduc_plus_scal_v8hi (__a);
        -:11897:}
        -:11898:
        -:11899:__extension__ extern __inline int32_t
        -:11900:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11901:vaddvq_s32 (int32x4_t __a)
        -:11902:{
        -:11903:  return __builtin_aarch64_reduc_plus_scal_v4si (__a);
        -:11904:}
        -:11905:
        -:11906:__extension__ extern __inline int64_t
        -:11907:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11908:vaddvq_s64 (int64x2_t __a)
        -:11909:{
        -:11910:  return __builtin_aarch64_reduc_plus_scal_v2di (__a);
        -:11911:}
        -:11912:
        -:11913:__extension__ extern __inline uint8_t
        -:11914:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11915:vaddvq_u8 (uint8x16_t __a)
        -:11916:{
        -:11917:  return (uint8_t) __builtin_aarch64_reduc_plus_scal_v16qi ((int8x16_t) __a);
        -:11918:}
        -:11919:
        -:11920:__extension__ extern __inline uint16_t
        -:11921:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11922:vaddvq_u16 (uint16x8_t __a)
        -:11923:{
        -:11924:  return (uint16_t) __builtin_aarch64_reduc_plus_scal_v8hi ((int16x8_t) __a);
        -:11925:}
        -:11926:
        -:11927:__extension__ extern __inline uint32_t
        -:11928:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11929:vaddvq_u32 (uint32x4_t __a)
        -:11930:{
        -:11931:  return (uint32_t) __builtin_aarch64_reduc_plus_scal_v4si ((int32x4_t) __a);
        -:11932:}
        -:11933:
        -:11934:__extension__ extern __inline uint64_t
        -:11935:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11936:vaddvq_u64 (uint64x2_t __a)
        -:11937:{
        -:11938:  return (uint64_t) __builtin_aarch64_reduc_plus_scal_v2di ((int64x2_t) __a);
        -:11939:}
        -:11940:
        -:11941:__extension__ extern __inline float32_t
        -:11942:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11943:vaddv_f32 (float32x2_t __a)
        -:11944:{
        -:11945:  return __builtin_aarch64_reduc_plus_scal_v2sf (__a);
        -:11946:}
        -:11947:
        -:11948:__extension__ extern __inline float32_t
        -:11949:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11950:vaddvq_f32 (float32x4_t __a)
        -:11951:{
        -:11952:  return __builtin_aarch64_reduc_plus_scal_v4sf (__a);
        -:11953:}
        -:11954:
        -:11955:__extension__ extern __inline float64_t
        -:11956:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11957:vaddvq_f64 (float64x2_t __a)
        -:11958:{
        -:11959:  return __builtin_aarch64_reduc_plus_scal_v2df (__a);
        -:11960:}
        -:11961:
        -:11962:/* vbsl  */
        -:11963:
        -:11964:__extension__ extern __inline float16x4_t
        -:11965:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11966:vbsl_f16 (uint16x4_t __a, float16x4_t __b, float16x4_t __c)
        -:11967:{
        -:11968:  return __builtin_aarch64_simd_bslv4hf_suss (__a, __b, __c);
        -:11969:}
        -:11970:
        -:11971:__extension__ extern __inline float32x2_t
        -:11972:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11973:vbsl_f32 (uint32x2_t __a, float32x2_t __b, float32x2_t __c)
        -:11974:{
        -:11975:  return __builtin_aarch64_simd_bslv2sf_suss (__a, __b, __c);
        -:11976:}
        -:11977:
        -:11978:__extension__ extern __inline float64x1_t
        -:11979:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11980:vbsl_f64 (uint64x1_t __a, float64x1_t __b, float64x1_t __c)
        -:11981:{
        -:11982:  return (float64x1_t)
        -:11983:    { __builtin_aarch64_simd_bsldf_suss (__a[0], __b[0], __c[0]) };
        -:11984:}
        -:11985:
        -:11986:__extension__ extern __inline poly8x8_t
        -:11987:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11988:vbsl_p8 (uint8x8_t __a, poly8x8_t __b, poly8x8_t __c)
        -:11989:{
        -:11990:  return __builtin_aarch64_simd_bslv8qi_pupp (__a, __b, __c);
        -:11991:}
        -:11992:
        -:11993:__extension__ extern __inline poly16x4_t
        -:11994:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:11995:vbsl_p16 (uint16x4_t __a, poly16x4_t __b, poly16x4_t __c)
        -:11996:{
        -:11997:  return __builtin_aarch64_simd_bslv4hi_pupp (__a, __b, __c);
        -:11998:}
        -:11999:__extension__ extern __inline poly64x1_t
        -:12000:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12001:vbsl_p64 (uint64x1_t __a, poly64x1_t __b, poly64x1_t __c)
        -:12002:{
        -:12003:  return (poly64x1_t)
        -:12004:      {__builtin_aarch64_simd_bsldi_pupp (__a[0], __b[0], __c[0])};
        -:12005:}
        -:12006:
        -:12007:__extension__ extern __inline int8x8_t
        -:12008:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12009:vbsl_s8 (uint8x8_t __a, int8x8_t __b, int8x8_t __c)
        -:12010:{
        -:12011:  return __builtin_aarch64_simd_bslv8qi_suss (__a, __b, __c);
        -:12012:}
        -:12013:
        -:12014:__extension__ extern __inline int16x4_t
        -:12015:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12016:vbsl_s16 (uint16x4_t __a, int16x4_t __b, int16x4_t __c)
        -:12017:{
        -:12018:  return __builtin_aarch64_simd_bslv4hi_suss (__a, __b, __c);
        -:12019:}
        -:12020:
        -:12021:__extension__ extern __inline int32x2_t
        -:12022:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12023:vbsl_s32 (uint32x2_t __a, int32x2_t __b, int32x2_t __c)
        -:12024:{
        -:12025:  return __builtin_aarch64_simd_bslv2si_suss (__a, __b, __c);
        -:12026:}
        -:12027:
        -:12028:__extension__ extern __inline int64x1_t
        -:12029:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12030:vbsl_s64 (uint64x1_t __a, int64x1_t __b, int64x1_t __c)
        -:12031:{
        -:12032:  return (int64x1_t)
        -:12033:      {__builtin_aarch64_simd_bsldi_suss (__a[0], __b[0], __c[0])};
        -:12034:}
        -:12035:
        -:12036:__extension__ extern __inline uint8x8_t
        -:12037:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12038:vbsl_u8 (uint8x8_t __a, uint8x8_t __b, uint8x8_t __c)
        -:12039:{
        -:12040:  return __builtin_aarch64_simd_bslv8qi_uuuu (__a, __b, __c);
        -:12041:}
        -:12042:
        -:12043:__extension__ extern __inline uint16x4_t
        -:12044:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12045:vbsl_u16 (uint16x4_t __a, uint16x4_t __b, uint16x4_t __c)
        -:12046:{
        -:12047:  return __builtin_aarch64_simd_bslv4hi_uuuu (__a, __b, __c);
        -:12048:}
        -:12049:
        -:12050:__extension__ extern __inline uint32x2_t
        -:12051:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12052:vbsl_u32 (uint32x2_t __a, uint32x2_t __b, uint32x2_t __c)
        -:12053:{
        -:12054:  return __builtin_aarch64_simd_bslv2si_uuuu (__a, __b, __c);
        -:12055:}
        -:12056:
        -:12057:__extension__ extern __inline uint64x1_t
        -:12058:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12059:vbsl_u64 (uint64x1_t __a, uint64x1_t __b, uint64x1_t __c)
        -:12060:{
        -:12061:  return (uint64x1_t)
        -:12062:      {__builtin_aarch64_simd_bsldi_uuuu (__a[0], __b[0], __c[0])};
        -:12063:}
        -:12064:
        -:12065:__extension__ extern __inline float16x8_t
        -:12066:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12067:vbslq_f16 (uint16x8_t __a, float16x8_t __b, float16x8_t __c)
        -:12068:{
        -:12069:  return __builtin_aarch64_simd_bslv8hf_suss (__a, __b, __c);
        -:12070:}
        -:12071:
        -:12072:__extension__ extern __inline float32x4_t
        -:12073:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12074:vbslq_f32 (uint32x4_t __a, float32x4_t __b, float32x4_t __c)
        -:12075:{
        -:12076:  return __builtin_aarch64_simd_bslv4sf_suss (__a, __b, __c);
        -:12077:}
        -:12078:
        -:12079:__extension__ extern __inline float64x2_t
        -:12080:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12081:vbslq_f64 (uint64x2_t __a, float64x2_t __b, float64x2_t __c)
        -:12082:{
        -:12083:  return __builtin_aarch64_simd_bslv2df_suss (__a, __b, __c);
        -:12084:}
        -:12085:
        -:12086:__extension__ extern __inline poly8x16_t
        -:12087:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12088:vbslq_p8 (uint8x16_t __a, poly8x16_t __b, poly8x16_t __c)
        -:12089:{
        -:12090:  return __builtin_aarch64_simd_bslv16qi_pupp (__a, __b, __c);
        -:12091:}
        -:12092:
        -:12093:__extension__ extern __inline poly16x8_t
        -:12094:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12095:vbslq_p16 (uint16x8_t __a, poly16x8_t __b, poly16x8_t __c)
        -:12096:{
        -:12097:  return __builtin_aarch64_simd_bslv8hi_pupp (__a, __b, __c);
        -:12098:}
        -:12099:
        -:12100:__extension__ extern __inline int8x16_t
        -:12101:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12102:vbslq_s8 (uint8x16_t __a, int8x16_t __b, int8x16_t __c)
        -:12103:{
        -:12104:  return __builtin_aarch64_simd_bslv16qi_suss (__a, __b, __c);
        -:12105:}
        -:12106:
        -:12107:__extension__ extern __inline int16x8_t
        -:12108:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12109:vbslq_s16 (uint16x8_t __a, int16x8_t __b, int16x8_t __c)
        -:12110:{
        -:12111:  return __builtin_aarch64_simd_bslv8hi_suss (__a, __b, __c);
        -:12112:}
        -:12113:
        -:12114:__extension__ extern __inline poly64x2_t
        -:12115:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12116:vbslq_p64 (uint64x2_t __a, poly64x2_t __b, poly64x2_t __c)
        -:12117:{
        -:12118:  return __builtin_aarch64_simd_bslv2di_pupp (__a, __b, __c);
        -:12119:}
        -:12120:
        -:12121:__extension__ extern __inline int32x4_t
        -:12122:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12123:vbslq_s32 (uint32x4_t __a, int32x4_t __b, int32x4_t __c)
        -:12124:{
        -:12125:  return __builtin_aarch64_simd_bslv4si_suss (__a, __b, __c);
        -:12126:}
        -:12127:
        -:12128:__extension__ extern __inline int64x2_t
        -:12129:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12130:vbslq_s64 (uint64x2_t __a, int64x2_t __b, int64x2_t __c)
        -:12131:{
        -:12132:  return __builtin_aarch64_simd_bslv2di_suss (__a, __b, __c);
        -:12133:}
        -:12134:
        -:12135:__extension__ extern __inline uint8x16_t
        -:12136:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12137:vbslq_u8 (uint8x16_t __a, uint8x16_t __b, uint8x16_t __c)
        -:12138:{
        -:12139:  return __builtin_aarch64_simd_bslv16qi_uuuu (__a, __b, __c);
        -:12140:}
        -:12141:
        -:12142:__extension__ extern __inline uint16x8_t
        -:12143:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12144:vbslq_u16 (uint16x8_t __a, uint16x8_t __b, uint16x8_t __c)
        -:12145:{
        -:12146:  return __builtin_aarch64_simd_bslv8hi_uuuu (__a, __b, __c);
        -:12147:}
        -:12148:
        -:12149:__extension__ extern __inline uint32x4_t
        -:12150:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12151:vbslq_u32 (uint32x4_t __a, uint32x4_t __b, uint32x4_t __c)
        -:12152:{
        -:12153:  return __builtin_aarch64_simd_bslv4si_uuuu (__a, __b, __c);
        -:12154:}
        -:12155:
        -:12156:__extension__ extern __inline uint64x2_t
        -:12157:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12158:vbslq_u64 (uint64x2_t __a, uint64x2_t __b, uint64x2_t __c)
        -:12159:{
        -:12160:  return __builtin_aarch64_simd_bslv2di_uuuu (__a, __b, __c);
        -:12161:}
        -:12162:
        -:12163:/* ARMv8.1-A instrinsics.  */
        -:12164:#pragma GCC push_options
        -:12165:#pragma GCC target ("+nothing+rdma")
        -:12166:
        -:12167:__extension__ extern __inline int16x4_t
        -:12168:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12169:vqrdmlah_s16 (int16x4_t __a, int16x4_t __b, int16x4_t __c)
        -:12170:{
        -:12171:  return __builtin_aarch64_sqrdmlahv4hi (__a, __b, __c);
        -:12172:}
        -:12173:
        -:12174:__extension__ extern __inline int32x2_t
        -:12175:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12176:vqrdmlah_s32 (int32x2_t __a, int32x2_t __b, int32x2_t __c)
        -:12177:{
        -:12178:  return __builtin_aarch64_sqrdmlahv2si (__a, __b, __c);
        -:12179:}
        -:12180:
        -:12181:__extension__ extern __inline int16x8_t
        -:12182:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12183:vqrdmlahq_s16 (int16x8_t __a, int16x8_t __b, int16x8_t __c)
        -:12184:{
        -:12185:  return __builtin_aarch64_sqrdmlahv8hi (__a, __b, __c);
        -:12186:}
        -:12187:
        -:12188:__extension__ extern __inline int32x4_t
        -:12189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12190:vqrdmlahq_s32 (int32x4_t __a, int32x4_t __b, int32x4_t __c)
        -:12191:{
        -:12192:  return __builtin_aarch64_sqrdmlahv4si (__a, __b, __c);
        -:12193:}
        -:12194:
        -:12195:__extension__ extern __inline int16x4_t
        -:12196:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12197:vqrdmlsh_s16 (int16x4_t __a, int16x4_t __b, int16x4_t __c)
        -:12198:{
        -:12199:  return __builtin_aarch64_sqrdmlshv4hi (__a, __b, __c);
        -:12200:}
        -:12201:
        -:12202:__extension__ extern __inline int32x2_t
        -:12203:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12204:vqrdmlsh_s32 (int32x2_t __a, int32x2_t __b, int32x2_t __c)
        -:12205:{
        -:12206:  return __builtin_aarch64_sqrdmlshv2si (__a, __b, __c);
        -:12207:}
        -:12208:
        -:12209:__extension__ extern __inline int16x8_t
        -:12210:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12211:vqrdmlshq_s16 (int16x8_t __a, int16x8_t __b, int16x8_t __c)
        -:12212:{
        -:12213:  return __builtin_aarch64_sqrdmlshv8hi (__a, __b, __c);
        -:12214:}
        -:12215:
        -:12216:__extension__ extern __inline int32x4_t
        -:12217:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12218:vqrdmlshq_s32 (int32x4_t __a, int32x4_t __b, int32x4_t __c)
        -:12219:{
        -:12220:  return __builtin_aarch64_sqrdmlshv4si (__a, __b, __c);
        -:12221:}
        -:12222:
        -:12223:__extension__ extern __inline int16x4_t
        -:12224:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12225:vqrdmlah_laneq_s16 (int16x4_t __a, int16x4_t __b, int16x8_t __c, const int __d)
        -:12226:{
        -:12227:  return  __builtin_aarch64_sqrdmlah_laneqv4hi (__a, __b, __c, __d);
        -:12228:}
        -:12229:
        -:12230:__extension__ extern __inline int32x2_t
        -:12231:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12232:vqrdmlah_laneq_s32 (int32x2_t __a, int32x2_t __b, int32x4_t __c, const int __d)
        -:12233:{
        -:12234:  return __builtin_aarch64_sqrdmlah_laneqv2si (__a, __b, __c, __d);
        -:12235:}
        -:12236:
        -:12237:__extension__ extern __inline int16x8_t
        -:12238:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12239:vqrdmlahq_laneq_s16 (int16x8_t __a, int16x8_t __b, int16x8_t __c, const int __d)
        -:12240:{
        -:12241:  return __builtin_aarch64_sqrdmlah_laneqv8hi (__a, __b, __c, __d);
        -:12242:}
        -:12243:
        -:12244:__extension__ extern __inline int32x4_t
        -:12245:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12246:vqrdmlahq_laneq_s32 (int32x4_t __a, int32x4_t __b, int32x4_t __c, const int __d)
        -:12247:{
        -:12248:  return __builtin_aarch64_sqrdmlah_laneqv4si (__a, __b, __c, __d);
        -:12249:}
        -:12250:
        -:12251:__extension__ extern __inline int16x4_t
        -:12252:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12253:vqrdmlsh_laneq_s16 (int16x4_t __a, int16x4_t __b, int16x8_t __c, const int __d)
        -:12254:{
        -:12255:  return  __builtin_aarch64_sqrdmlsh_laneqv4hi (__a, __b, __c, __d);
        -:12256:}
        -:12257:
        -:12258:__extension__ extern __inline int32x2_t
        -:12259:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12260:vqrdmlsh_laneq_s32 (int32x2_t __a, int32x2_t __b, int32x4_t __c, const int __d)
        -:12261:{
        -:12262:  return __builtin_aarch64_sqrdmlsh_laneqv2si (__a, __b, __c, __d);
        -:12263:}
        -:12264:
        -:12265:__extension__ extern __inline int16x8_t
        -:12266:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12267:vqrdmlshq_laneq_s16 (int16x8_t __a, int16x8_t __b, int16x8_t __c, const int __d)
        -:12268:{
        -:12269:  return __builtin_aarch64_sqrdmlsh_laneqv8hi (__a, __b, __c, __d);
        -:12270:}
        -:12271:
        -:12272:__extension__ extern __inline int32x4_t
        -:12273:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12274:vqrdmlshq_laneq_s32 (int32x4_t __a, int32x4_t __b, int32x4_t __c, const int __d)
        -:12275:{
        -:12276:  return __builtin_aarch64_sqrdmlsh_laneqv4si (__a, __b, __c, __d);
        -:12277:}
        -:12278:
        -:12279:__extension__ extern __inline int16x4_t
        -:12280:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12281:vqrdmlah_lane_s16 (int16x4_t __a, int16x4_t __b, int16x4_t __c, const int __d)
        -:12282:{
        -:12283:  return  __builtin_aarch64_sqrdmlah_lanev4hi (__a, __b, __c, __d);
        -:12284:}
        -:12285:
        -:12286:__extension__ extern __inline int32x2_t
        -:12287:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12288:vqrdmlah_lane_s32 (int32x2_t __a, int32x2_t __b, int32x2_t __c, const int __d)
        -:12289:{
        -:12290:  return __builtin_aarch64_sqrdmlah_lanev2si (__a, __b, __c, __d);
        -:12291:}
        -:12292:
        -:12293:__extension__ extern __inline int16x8_t
        -:12294:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12295:vqrdmlahq_lane_s16 (int16x8_t __a, int16x8_t __b, int16x4_t __c, const int __d)
        -:12296:{
        -:12297:  return __builtin_aarch64_sqrdmlah_lanev8hi (__a, __b, __c, __d);
        -:12298:}
        -:12299:
        -:12300:__extension__ extern __inline int32x4_t
        -:12301:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12302:vqrdmlahq_lane_s32 (int32x4_t __a, int32x4_t __b, int32x2_t __c, const int __d)
        -:12303:{
        -:12304:  return __builtin_aarch64_sqrdmlah_lanev4si (__a, __b, __c, __d);
        -:12305:}
        -:12306:
        -:12307:__extension__ extern __inline int16_t
        -:12308:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12309:vqrdmlahh_s16 (int16_t __a, int16_t __b, int16_t __c)
        -:12310:{
        -:12311:  return (int16_t) __builtin_aarch64_sqrdmlahhi (__a, __b, __c);
        -:12312:}
        -:12313:
        -:12314:__extension__ extern __inline int16_t
        -:12315:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12316:vqrdmlahh_lane_s16 (int16_t __a, int16_t __b, int16x4_t __c, const int __d)
        -:12317:{
        -:12318:  return __builtin_aarch64_sqrdmlah_lanehi (__a, __b, __c, __d);
        -:12319:}
        -:12320:
        -:12321:__extension__ extern __inline int16_t
        -:12322:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12323:vqrdmlahh_laneq_s16 (int16_t __a, int16_t __b, int16x8_t __c, const int __d)
        -:12324:{
        -:12325:  return __builtin_aarch64_sqrdmlah_laneqhi (__a, __b, __c, __d);
        -:12326:}
        -:12327:
        -:12328:__extension__ extern __inline int32_t
        -:12329:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12330:vqrdmlahs_s32 (int32_t __a, int32_t __b, int32_t __c)
        -:12331:{
        -:12332:  return (int32_t) __builtin_aarch64_sqrdmlahsi (__a, __b, __c);
        -:12333:}
        -:12334:
        -:12335:__extension__ extern __inline int32_t
        -:12336:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12337:vqrdmlahs_lane_s32 (int32_t __a, int32_t __b, int32x2_t __c, const int __d)
        -:12338:{
        -:12339:  return __builtin_aarch64_sqrdmlah_lanesi (__a, __b, __c, __d);
        -:12340:}
        -:12341:
        -:12342:__extension__ extern __inline int32_t
        -:12343:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12344:vqrdmlahs_laneq_s32 (int32_t __a, int32_t __b, int32x4_t __c, const int __d)
        -:12345:{
        -:12346:  return __builtin_aarch64_sqrdmlah_laneqsi (__a, __b, __c, __d);
        -:12347:}
        -:12348:
        -:12349:__extension__ extern __inline int16x4_t
        -:12350:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12351:vqrdmlsh_lane_s16 (int16x4_t __a, int16x4_t __b, int16x4_t __c, const int __d)
        -:12352:{
        -:12353:  return  __builtin_aarch64_sqrdmlsh_lanev4hi (__a, __b, __c, __d);
        -:12354:}
        -:12355:
        -:12356:__extension__ extern __inline int32x2_t
        -:12357:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12358:vqrdmlsh_lane_s32 (int32x2_t __a, int32x2_t __b, int32x2_t __c, const int __d)
        -:12359:{
        -:12360:  return __builtin_aarch64_sqrdmlsh_lanev2si (__a, __b, __c, __d);
        -:12361:}
        -:12362:
        -:12363:__extension__ extern __inline int16x8_t
        -:12364:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12365:vqrdmlshq_lane_s16 (int16x8_t __a, int16x8_t __b, int16x4_t __c, const int __d)
        -:12366:{
        -:12367:  return __builtin_aarch64_sqrdmlsh_lanev8hi (__a, __b, __c, __d);
        -:12368:}
        -:12369:
        -:12370:__extension__ extern __inline int32x4_t
        -:12371:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12372:vqrdmlshq_lane_s32 (int32x4_t __a, int32x4_t __b, int32x2_t __c, const int __d)
        -:12373:{
        -:12374:  return __builtin_aarch64_sqrdmlsh_lanev4si (__a, __b, __c, __d);
        -:12375:}
        -:12376:
        -:12377:__extension__ extern __inline int16_t
        -:12378:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12379:vqrdmlshh_s16 (int16_t __a, int16_t __b, int16_t __c)
        -:12380:{
        -:12381:  return (int16_t) __builtin_aarch64_sqrdmlshhi (__a, __b, __c);
        -:12382:}
        -:12383:
        -:12384:__extension__ extern __inline int16_t
        -:12385:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12386:vqrdmlshh_lane_s16 (int16_t __a, int16_t __b, int16x4_t __c, const int __d)
        -:12387:{
        -:12388:  return __builtin_aarch64_sqrdmlsh_lanehi (__a, __b, __c, __d);
        -:12389:}
        -:12390:
        -:12391:__extension__ extern __inline int16_t
        -:12392:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12393:vqrdmlshh_laneq_s16 (int16_t __a, int16_t __b, int16x8_t __c, const int __d)
        -:12394:{
        -:12395:  return __builtin_aarch64_sqrdmlsh_laneqhi (__a, __b, __c, __d);
        -:12396:}
        -:12397:
        -:12398:__extension__ extern __inline int32_t
        -:12399:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12400:vqrdmlshs_s32 (int32_t __a, int32_t __b, int32_t __c)
        -:12401:{
        -:12402:  return (int32_t) __builtin_aarch64_sqrdmlshsi (__a, __b, __c);
        -:12403:}
        -:12404:
        -:12405:__extension__ extern __inline int32_t
        -:12406:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12407:vqrdmlshs_lane_s32 (int32_t __a, int32_t __b, int32x2_t __c, const int __d)
        -:12408:{
        -:12409:  return __builtin_aarch64_sqrdmlsh_lanesi (__a, __b, __c, __d);
        -:12410:}
        -:12411:
        -:12412:__extension__ extern __inline int32_t
        -:12413:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12414:vqrdmlshs_laneq_s32 (int32_t __a, int32_t __b, int32x4_t __c, const int __d)
        -:12415:{
        -:12416:  return __builtin_aarch64_sqrdmlsh_laneqsi (__a, __b, __c, __d);
        -:12417:}
        -:12418:#pragma GCC pop_options
        -:12419:
        -:12420:#pragma GCC push_options
        -:12421:#pragma GCC target ("+nothing+crypto")
        -:12422:/* vaes  */
        -:12423:
        -:12424:__extension__ extern __inline uint8x16_t
        -:12425:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12426:vaeseq_u8 (uint8x16_t data, uint8x16_t key)
        -:12427:{
        -:12428:  return __builtin_aarch64_crypto_aesev16qi_uuu (data, key);
        -:12429:}
        -:12430:
        -:12431:__extension__ extern __inline uint8x16_t
        -:12432:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12433:vaesdq_u8 (uint8x16_t data, uint8x16_t key)
        -:12434:{
        -:12435:  return __builtin_aarch64_crypto_aesdv16qi_uuu (data, key);
        -:12436:}
        -:12437:
        -:12438:__extension__ extern __inline uint8x16_t
        -:12439:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12440:vaesmcq_u8 (uint8x16_t data)
        -:12441:{
        -:12442:  return __builtin_aarch64_crypto_aesmcv16qi_uu (data);
        -:12443:}
        -:12444:
        -:12445:__extension__ extern __inline uint8x16_t
        -:12446:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12447:vaesimcq_u8 (uint8x16_t data)
        -:12448:{
        -:12449:  return __builtin_aarch64_crypto_aesimcv16qi_uu (data);
        -:12450:}
        -:12451:#pragma GCC pop_options
        -:12452:
        -:12453:/* vcage  */
        -:12454:
        -:12455:__extension__ extern __inline uint64x1_t
        -:12456:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12457:vcage_f64 (float64x1_t __a, float64x1_t __b)
        -:12458:{
        -:12459:  return vabs_f64 (__a) >= vabs_f64 (__b);
        -:12460:}
        -:12461:
        -:12462:__extension__ extern __inline uint32_t
        -:12463:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12464:vcages_f32 (float32_t __a, float32_t __b)
        -:12465:{
        -:12466:  return __builtin_fabsf (__a) >= __builtin_fabsf (__b) ? -1 : 0;
        -:12467:}
        -:12468:
        -:12469:__extension__ extern __inline uint32x2_t
        -:12470:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12471:vcage_f32 (float32x2_t __a, float32x2_t __b)
        -:12472:{
        -:12473:  return vabs_f32 (__a) >= vabs_f32 (__b);
        -:12474:}
        -:12475:
        -:12476:__extension__ extern __inline uint32x4_t
        -:12477:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12478:vcageq_f32 (float32x4_t __a, float32x4_t __b)
        -:12479:{
        -:12480:  return vabsq_f32 (__a) >= vabsq_f32 (__b);
        -:12481:}
        -:12482:
        -:12483:__extension__ extern __inline uint64_t
        -:12484:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12485:vcaged_f64 (float64_t __a, float64_t __b)
        -:12486:{
        -:12487:  return __builtin_fabs (__a) >= __builtin_fabs (__b) ? -1 : 0;
        -:12488:}
        -:12489:
        -:12490:__extension__ extern __inline uint64x2_t
        -:12491:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12492:vcageq_f64 (float64x2_t __a, float64x2_t __b)
        -:12493:{
        -:12494:  return vabsq_f64 (__a) >= vabsq_f64 (__b);
        -:12495:}
        -:12496:
        -:12497:/* vcagt  */
        -:12498:
        -:12499:__extension__ extern __inline uint32_t
        -:12500:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12501:vcagts_f32 (float32_t __a, float32_t __b)
        -:12502:{
        -:12503:  return __builtin_fabsf (__a) > __builtin_fabsf (__b) ? -1 : 0;
        -:12504:}
        -:12505:
        -:12506:__extension__ extern __inline uint32x2_t
        -:12507:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12508:vcagt_f32 (float32x2_t __a, float32x2_t __b)
        -:12509:{
        -:12510:  return vabs_f32 (__a) > vabs_f32 (__b);
        -:12511:}
        -:12512:
        -:12513:__extension__ extern __inline uint64x1_t
        -:12514:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12515:vcagt_f64 (float64x1_t __a, float64x1_t __b)
        -:12516:{
        -:12517:  return vabs_f64 (__a) > vabs_f64 (__b);
        -:12518:}
        -:12519:
        -:12520:__extension__ extern __inline uint32x4_t
        -:12521:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12522:vcagtq_f32 (float32x4_t __a, float32x4_t __b)
        -:12523:{
        -:12524:  return vabsq_f32 (__a) > vabsq_f32 (__b);
        -:12525:}
        -:12526:
        -:12527:__extension__ extern __inline uint64_t
        -:12528:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12529:vcagtd_f64 (float64_t __a, float64_t __b)
        -:12530:{
        -:12531:  return __builtin_fabs (__a) > __builtin_fabs (__b) ? -1 : 0;
        -:12532:}
        -:12533:
        -:12534:__extension__ extern __inline uint64x2_t
        -:12535:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12536:vcagtq_f64 (float64x2_t __a, float64x2_t __b)
        -:12537:{
        -:12538:  return vabsq_f64 (__a) > vabsq_f64 (__b);
        -:12539:}
        -:12540:
        -:12541:/* vcale  */
        -:12542:
        -:12543:__extension__ extern __inline uint32x2_t
        -:12544:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12545:vcale_f32 (float32x2_t __a, float32x2_t __b)
        -:12546:{
        -:12547:  return vabs_f32 (__a) <= vabs_f32 (__b);
        -:12548:}
        -:12549:
        -:12550:__extension__ extern __inline uint64x1_t
        -:12551:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12552:vcale_f64 (float64x1_t __a, float64x1_t __b)
        -:12553:{
        -:12554:  return vabs_f64 (__a) <= vabs_f64 (__b);
        -:12555:}
        -:12556:
        -:12557:__extension__ extern __inline uint64_t
        -:12558:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12559:vcaled_f64 (float64_t __a, float64_t __b)
        -:12560:{
        -:12561:  return __builtin_fabs (__a) <= __builtin_fabs (__b) ? -1 : 0;
        -:12562:}
        -:12563:
        -:12564:__extension__ extern __inline uint32_t
        -:12565:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12566:vcales_f32 (float32_t __a, float32_t __b)
        -:12567:{
        -:12568:  return __builtin_fabsf (__a) <= __builtin_fabsf (__b) ? -1 : 0;
        -:12569:}
        -:12570:
        -:12571:__extension__ extern __inline uint32x4_t
        -:12572:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12573:vcaleq_f32 (float32x4_t __a, float32x4_t __b)
        -:12574:{
        -:12575:  return vabsq_f32 (__a) <= vabsq_f32 (__b);
        -:12576:}
        -:12577:
        -:12578:__extension__ extern __inline uint64x2_t
        -:12579:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12580:vcaleq_f64 (float64x2_t __a, float64x2_t __b)
        -:12581:{
        -:12582:  return vabsq_f64 (__a) <= vabsq_f64 (__b);
        -:12583:}
        -:12584:
        -:12585:/* vcalt  */
        -:12586:
        -:12587:__extension__ extern __inline uint32x2_t
        -:12588:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12589:vcalt_f32 (float32x2_t __a, float32x2_t __b)
        -:12590:{
        -:12591:  return vabs_f32 (__a) < vabs_f32 (__b);
        -:12592:}
        -:12593:
        -:12594:__extension__ extern __inline uint64x1_t
        -:12595:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12596:vcalt_f64 (float64x1_t __a, float64x1_t __b)
        -:12597:{
        -:12598:  return vabs_f64 (__a) < vabs_f64 (__b);
        -:12599:}
        -:12600:
        -:12601:__extension__ extern __inline uint64_t
        -:12602:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12603:vcaltd_f64 (float64_t __a, float64_t __b)
        -:12604:{
        -:12605:  return __builtin_fabs (__a) < __builtin_fabs (__b) ? -1 : 0;
        -:12606:}
        -:12607:
        -:12608:__extension__ extern __inline uint32x4_t
        -:12609:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12610:vcaltq_f32 (float32x4_t __a, float32x4_t __b)
        -:12611:{
        -:12612:  return vabsq_f32 (__a) < vabsq_f32 (__b);
        -:12613:}
        -:12614:
        -:12615:__extension__ extern __inline uint64x2_t
        -:12616:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12617:vcaltq_f64 (float64x2_t __a, float64x2_t __b)
        -:12618:{
        -:12619:  return vabsq_f64 (__a) < vabsq_f64 (__b);
        -:12620:}
        -:12621:
        -:12622:__extension__ extern __inline uint32_t
        -:12623:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12624:vcalts_f32 (float32_t __a, float32_t __b)
        -:12625:{
        -:12626:  return __builtin_fabsf (__a) < __builtin_fabsf (__b) ? -1 : 0;
        -:12627:}
        -:12628:
        -:12629:/* vceq - vector.  */
        -:12630:
        -:12631:__extension__ extern __inline uint32x2_t
        -:12632:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12633:vceq_f32 (float32x2_t __a, float32x2_t __b)
        -:12634:{
        -:12635:  return (uint32x2_t) (__a == __b);
        -:12636:}
        -:12637:
        -:12638:__extension__ extern __inline uint64x1_t
        -:12639:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12640:vceq_f64 (float64x1_t __a, float64x1_t __b)
        -:12641:{
        -:12642:  return (uint64x1_t) (__a == __b);
        -:12643:}
        -:12644:
        -:12645:__extension__ extern __inline uint8x8_t
        -:12646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12647:vceq_p8 (poly8x8_t __a, poly8x8_t __b)
        -:12648:{
        -:12649:  return (uint8x8_t) (__a == __b);
        -:12650:}
        -:12651:
        -:12652:__extension__ extern __inline uint64x1_t
        -:12653:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12654:vceq_p64 (poly64x1_t __a, poly64x1_t __b)
        -:12655:{
        -:12656:  return (uint64x1_t) (__a == __b);
        -:12657:}
        -:12658:
        -:12659:__extension__ extern __inline uint8x8_t
        -:12660:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12661:vceq_s8 (int8x8_t __a, int8x8_t __b)
        -:12662:{
        -:12663:  return (uint8x8_t) (__a == __b);
        -:12664:}
        -:12665:
        -:12666:__extension__ extern __inline uint16x4_t
        -:12667:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12668:vceq_s16 (int16x4_t __a, int16x4_t __b)
        -:12669:{
        -:12670:  return (uint16x4_t) (__a == __b);
        -:12671:}
        -:12672:
        -:12673:__extension__ extern __inline uint32x2_t
        -:12674:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12675:vceq_s32 (int32x2_t __a, int32x2_t __b)
        -:12676:{
        -:12677:  return (uint32x2_t) (__a == __b);
        -:12678:}
        -:12679:
        -:12680:__extension__ extern __inline uint64x1_t
        -:12681:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12682:vceq_s64 (int64x1_t __a, int64x1_t __b)
        -:12683:{
        -:12684:  return (uint64x1_t) (__a == __b);
        -:12685:}
        -:12686:
        -:12687:__extension__ extern __inline uint8x8_t
        -:12688:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12689:vceq_u8 (uint8x8_t __a, uint8x8_t __b)
        -:12690:{
        -:12691:  return (__a == __b);
        -:12692:}
        -:12693:
        -:12694:__extension__ extern __inline uint16x4_t
        -:12695:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12696:vceq_u16 (uint16x4_t __a, uint16x4_t __b)
        -:12697:{
        -:12698:  return (__a == __b);
        -:12699:}
        -:12700:
        -:12701:__extension__ extern __inline uint32x2_t
        -:12702:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12703:vceq_u32 (uint32x2_t __a, uint32x2_t __b)
        -:12704:{
        -:12705:  return (__a == __b);
        -:12706:}
        -:12707:
        -:12708:__extension__ extern __inline uint64x1_t
        -:12709:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12710:vceq_u64 (uint64x1_t __a, uint64x1_t __b)
        -:12711:{
        -:12712:  return (__a == __b);
        -:12713:}
        -:12714:
        -:12715:__extension__ extern __inline uint32x4_t
        -:12716:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12717:vceqq_f32 (float32x4_t __a, float32x4_t __b)
        -:12718:{
        -:12719:  return (uint32x4_t) (__a == __b);
        -:12720:}
        -:12721:
        -:12722:__extension__ extern __inline uint64x2_t
        -:12723:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12724:vceqq_f64 (float64x2_t __a, float64x2_t __b)
        -:12725:{
        -:12726:  return (uint64x2_t) (__a == __b);
        -:12727:}
        -:12728:
        -:12729:__extension__ extern __inline uint8x16_t
        -:12730:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12731:vceqq_p8 (poly8x16_t __a, poly8x16_t __b)
        -:12732:{
        -:12733:  return (uint8x16_t) (__a == __b);
        -:12734:}
        -:12735:
        -:12736:__extension__ extern __inline uint8x16_t
        -:12737:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12738:vceqq_s8 (int8x16_t __a, int8x16_t __b)
        -:12739:{
        -:12740:  return (uint8x16_t) (__a == __b);
        -:12741:}
        -:12742:
        -:12743:__extension__ extern __inline uint16x8_t
        -:12744:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12745:vceqq_s16 (int16x8_t __a, int16x8_t __b)
        -:12746:{
        -:12747:  return (uint16x8_t) (__a == __b);
        -:12748:}
        -:12749:
        -:12750:__extension__ extern __inline uint32x4_t
        -:12751:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12752:vceqq_s32 (int32x4_t __a, int32x4_t __b)
        -:12753:{
        -:12754:  return (uint32x4_t) (__a == __b);
        -:12755:}
        -:12756:
        -:12757:__extension__ extern __inline uint64x2_t
        -:12758:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12759:vceqq_s64 (int64x2_t __a, int64x2_t __b)
        -:12760:{
        -:12761:  return (uint64x2_t) (__a == __b);
        -:12762:}
        -:12763:
        -:12764:__extension__ extern __inline uint8x16_t
        -:12765:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12766:vceqq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:12767:{
        -:12768:  return (__a == __b);
        -:12769:}
        -:12770:
        -:12771:__extension__ extern __inline uint16x8_t
        -:12772:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12773:vceqq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:12774:{
        -:12775:  return (__a == __b);
        -:12776:}
        -:12777:
        -:12778:__extension__ extern __inline uint32x4_t
        -:12779:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12780:vceqq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:12781:{
        -:12782:  return (__a == __b);
        -:12783:}
        -:12784:
        -:12785:__extension__ extern __inline uint64x2_t
        -:12786:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12787:vceqq_u64 (uint64x2_t __a, uint64x2_t __b)
        -:12788:{
        -:12789:  return (__a == __b);
        -:12790:}
        -:12791:
        -:12792:/* vceq - scalar.  */
        -:12793:
        -:12794:__extension__ extern __inline uint32_t
        -:12795:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12796:vceqs_f32 (float32_t __a, float32_t __b)
        -:12797:{
        -:12798:  return __a == __b ? -1 : 0;
        -:12799:}
        -:12800:
        -:12801:__extension__ extern __inline uint64_t
        -:12802:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12803:vceqd_s64 (int64_t __a, int64_t __b)
        -:12804:{
        -:12805:  return __a == __b ? -1ll : 0ll;
        -:12806:}
        -:12807:
        -:12808:__extension__ extern __inline uint64_t
        -:12809:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12810:vceqd_u64 (uint64_t __a, uint64_t __b)
        -:12811:{
        -:12812:  return __a == __b ? -1ll : 0ll;
        -:12813:}
        -:12814:
        -:12815:__extension__ extern __inline uint64_t
        -:12816:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12817:vceqd_f64 (float64_t __a, float64_t __b)
        -:12818:{
        -:12819:  return __a == __b ? -1ll : 0ll;
        -:12820:}
        -:12821:
        -:12822:/* vceqz - vector.  */
        -:12823:
        -:12824:__extension__ extern __inline uint32x2_t
        -:12825:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12826:vceqz_f32 (float32x2_t __a)
        -:12827:{
        -:12828:  return (uint32x2_t) (__a == 0.0f);
        -:12829:}
        -:12830:
        -:12831:__extension__ extern __inline uint64x1_t
        -:12832:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12833:vceqz_f64 (float64x1_t __a)
        -:12834:{
        -:12835:  return (uint64x1_t) (__a == (float64x1_t) {0.0});
        -:12836:}
        -:12837:
        -:12838:__extension__ extern __inline uint8x8_t
        -:12839:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12840:vceqz_p8 (poly8x8_t __a)
        -:12841:{
        -:12842:  return (uint8x8_t) (__a == 0);
        -:12843:}
        -:12844:
        -:12845:__extension__ extern __inline uint8x8_t
        -:12846:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12847:vceqz_s8 (int8x8_t __a)
        -:12848:{
        -:12849:  return (uint8x8_t) (__a == 0);
        -:12850:}
        -:12851:
        -:12852:__extension__ extern __inline uint16x4_t
        -:12853:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12854:vceqz_s16 (int16x4_t __a)
        -:12855:{
        -:12856:  return (uint16x4_t) (__a == 0);
        -:12857:}
        -:12858:
        -:12859:__extension__ extern __inline uint32x2_t
        -:12860:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12861:vceqz_s32 (int32x2_t __a)
        -:12862:{
        -:12863:  return (uint32x2_t) (__a == 0);
        -:12864:}
        -:12865:
        -:12866:__extension__ extern __inline uint64x1_t
        -:12867:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12868:vceqz_s64 (int64x1_t __a)
        -:12869:{
        -:12870:  return (uint64x1_t) (__a == __AARCH64_INT64_C (0));
        -:12871:}
        -:12872:
        -:12873:__extension__ extern __inline uint8x8_t
        -:12874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12875:vceqz_u8 (uint8x8_t __a)
        -:12876:{
        -:12877:  return (__a == 0);
        -:12878:}
        -:12879:
        -:12880:__extension__ extern __inline uint16x4_t
        -:12881:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12882:vceqz_u16 (uint16x4_t __a)
        -:12883:{
        -:12884:  return (__a == 0);
        -:12885:}
        -:12886:
        -:12887:__extension__ extern __inline uint32x2_t
        -:12888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12889:vceqz_u32 (uint32x2_t __a)
        -:12890:{
        -:12891:  return (__a == 0);
        -:12892:}
        -:12893:
        -:12894:__extension__ extern __inline uint64x1_t
        -:12895:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12896:vceqz_u64 (uint64x1_t __a)
        -:12897:{
        -:12898:  return (__a == __AARCH64_UINT64_C (0));
        -:12899:}
        -:12900:
        -:12901:__extension__ extern __inline uint32x4_t
        -:12902:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12903:vceqzq_f32 (float32x4_t __a)
        -:12904:{
        -:12905:  return (uint32x4_t) (__a == 0.0f);
        -:12906:}
        -:12907:
        -:12908:__extension__ extern __inline uint64x2_t
        -:12909:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12910:vceqzq_f64 (float64x2_t __a)
        -:12911:{
        -:12912:  return (uint64x2_t) (__a == 0.0f);
        -:12913:}
        -:12914:
        -:12915:__extension__ extern __inline uint8x16_t
        -:12916:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12917:vceqzq_p8 (poly8x16_t __a)
        -:12918:{
        -:12919:  return (uint8x16_t) (__a == 0);
        -:12920:}
        -:12921:
        -:12922:__extension__ extern __inline uint8x16_t
        -:12923:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12924:vceqzq_s8 (int8x16_t __a)
        -:12925:{
        -:12926:  return (uint8x16_t) (__a == 0);
        -:12927:}
        -:12928:
        -:12929:__extension__ extern __inline uint16x8_t
        -:12930:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12931:vceqzq_s16 (int16x8_t __a)
        -:12932:{
        -:12933:  return (uint16x8_t) (__a == 0);
        -:12934:}
        -:12935:
        -:12936:__extension__ extern __inline uint32x4_t
        -:12937:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12938:vceqzq_s32 (int32x4_t __a)
        -:12939:{
        -:12940:  return (uint32x4_t) (__a == 0);
        -:12941:}
        -:12942:
        -:12943:__extension__ extern __inline uint64x2_t
        -:12944:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12945:vceqzq_s64 (int64x2_t __a)
        -:12946:{
        -:12947:  return (uint64x2_t) (__a == __AARCH64_INT64_C (0));
        -:12948:}
        -:12949:
        -:12950:__extension__ extern __inline uint8x16_t
        -:12951:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12952:vceqzq_u8 (uint8x16_t __a)
        -:12953:{
        -:12954:  return (__a == 0);
        -:12955:}
        -:12956:
        -:12957:__extension__ extern __inline uint16x8_t
        -:12958:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12959:vceqzq_u16 (uint16x8_t __a)
        -:12960:{
        -:12961:  return (__a == 0);
        -:12962:}
        -:12963:
        -:12964:__extension__ extern __inline uint32x4_t
        -:12965:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12966:vceqzq_u32 (uint32x4_t __a)
        -:12967:{
        -:12968:  return (__a == 0);
        -:12969:}
        -:12970:
        -:12971:__extension__ extern __inline uint64x2_t
        -:12972:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12973:vceqzq_u64 (uint64x2_t __a)
        -:12974:{
        -:12975:  return (__a == __AARCH64_UINT64_C (0));
        -:12976:}
        -:12977:
        -:12978:/* vceqz - scalar.  */
        -:12979:
        -:12980:__extension__ extern __inline uint32_t
        -:12981:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12982:vceqzs_f32 (float32_t __a)
        -:12983:{
        -:12984:  return __a == 0.0f ? -1 : 0;
        -:12985:}
        -:12986:
        -:12987:__extension__ extern __inline uint64_t
        -:12988:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12989:vceqzd_s64 (int64_t __a)
        -:12990:{
        -:12991:  return __a == 0 ? -1ll : 0ll;
        -:12992:}
        -:12993:
        -:12994:__extension__ extern __inline uint64_t
        -:12995:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:12996:vceqzd_u64 (uint64_t __a)
        -:12997:{
        -:12998:  return __a == 0 ? -1ll : 0ll;
        -:12999:}
        -:13000:
        -:13001:__extension__ extern __inline uint64_t
        -:13002:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13003:vceqzd_f64 (float64_t __a)
        -:13004:{
        -:13005:  return __a == 0.0 ? -1ll : 0ll;
        -:13006:}
        -:13007:
        -:13008:/* vcge - vector.  */
        -:13009:
        -:13010:__extension__ extern __inline uint32x2_t
        -:13011:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13012:vcge_f32 (float32x2_t __a, float32x2_t __b)
        -:13013:{
        -:13014:  return (uint32x2_t) (__a >= __b);
        -:13015:}
        -:13016:
        -:13017:__extension__ extern __inline uint64x1_t
        -:13018:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13019:vcge_f64 (float64x1_t __a, float64x1_t __b)
        -:13020:{
        -:13021:  return (uint64x1_t) (__a >= __b);
        -:13022:}
        -:13023:
        -:13024:__extension__ extern __inline uint8x8_t
        -:13025:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13026:vcge_s8 (int8x8_t __a, int8x8_t __b)
        -:13027:{
        -:13028:  return (uint8x8_t) (__a >= __b);
        -:13029:}
        -:13030:
        -:13031:__extension__ extern __inline uint16x4_t
        -:13032:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13033:vcge_s16 (int16x4_t __a, int16x4_t __b)
        -:13034:{
        -:13035:  return (uint16x4_t) (__a >= __b);
        -:13036:}
        -:13037:
        -:13038:__extension__ extern __inline uint32x2_t
        -:13039:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13040:vcge_s32 (int32x2_t __a, int32x2_t __b)
        -:13041:{
        -:13042:  return (uint32x2_t) (__a >= __b);
        -:13043:}
        -:13044:
        -:13045:__extension__ extern __inline uint64x1_t
        -:13046:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13047:vcge_s64 (int64x1_t __a, int64x1_t __b)
        -:13048:{
        -:13049:  return (uint64x1_t) (__a >= __b);
        -:13050:}
        -:13051:
        -:13052:__extension__ extern __inline uint8x8_t
        -:13053:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13054:vcge_u8 (uint8x8_t __a, uint8x8_t __b)
        -:13055:{
        -:13056:  return (__a >= __b);
        -:13057:}
        -:13058:
        -:13059:__extension__ extern __inline uint16x4_t
        -:13060:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13061:vcge_u16 (uint16x4_t __a, uint16x4_t __b)
        -:13062:{
        -:13063:  return (__a >= __b);
        -:13064:}
        -:13065:
        -:13066:__extension__ extern __inline uint32x2_t
        -:13067:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13068:vcge_u32 (uint32x2_t __a, uint32x2_t __b)
        -:13069:{
        -:13070:  return (__a >= __b);
        -:13071:}
        -:13072:
        -:13073:__extension__ extern __inline uint64x1_t
        -:13074:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13075:vcge_u64 (uint64x1_t __a, uint64x1_t __b)
        -:13076:{
        -:13077:  return (__a >= __b);
        -:13078:}
        -:13079:
        -:13080:__extension__ extern __inline uint32x4_t
        -:13081:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13082:vcgeq_f32 (float32x4_t __a, float32x4_t __b)
        -:13083:{
        -:13084:  return (uint32x4_t) (__a >= __b);
        -:13085:}
        -:13086:
        -:13087:__extension__ extern __inline uint64x2_t
        -:13088:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13089:vcgeq_f64 (float64x2_t __a, float64x2_t __b)
        -:13090:{
        -:13091:  return (uint64x2_t) (__a >= __b);
        -:13092:}
        -:13093:
        -:13094:__extension__ extern __inline uint8x16_t
        -:13095:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13096:vcgeq_s8 (int8x16_t __a, int8x16_t __b)
        -:13097:{
        -:13098:  return (uint8x16_t) (__a >= __b);
        -:13099:}
        -:13100:
        -:13101:__extension__ extern __inline uint16x8_t
        -:13102:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13103:vcgeq_s16 (int16x8_t __a, int16x8_t __b)
        -:13104:{
        -:13105:  return (uint16x8_t) (__a >= __b);
        -:13106:}
        -:13107:
        -:13108:__extension__ extern __inline uint32x4_t
        -:13109:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13110:vcgeq_s32 (int32x4_t __a, int32x4_t __b)
        -:13111:{
        -:13112:  return (uint32x4_t) (__a >= __b);
        -:13113:}
        -:13114:
        -:13115:__extension__ extern __inline uint64x2_t
        -:13116:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13117:vcgeq_s64 (int64x2_t __a, int64x2_t __b)
        -:13118:{
        -:13119:  return (uint64x2_t) (__a >= __b);
        -:13120:}
        -:13121:
        -:13122:__extension__ extern __inline uint8x16_t
        -:13123:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13124:vcgeq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:13125:{
        -:13126:  return (__a >= __b);
        -:13127:}
        -:13128:
        -:13129:__extension__ extern __inline uint16x8_t
        -:13130:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13131:vcgeq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:13132:{
        -:13133:  return (__a >= __b);
        -:13134:}
        -:13135:
        -:13136:__extension__ extern __inline uint32x4_t
        -:13137:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13138:vcgeq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:13139:{
        -:13140:  return (__a >= __b);
        -:13141:}
        -:13142:
        -:13143:__extension__ extern __inline uint64x2_t
        -:13144:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13145:vcgeq_u64 (uint64x2_t __a, uint64x2_t __b)
        -:13146:{
        -:13147:  return (__a >= __b);
        -:13148:}
        -:13149:
        -:13150:/* vcge - scalar.  */
        -:13151:
        -:13152:__extension__ extern __inline uint32_t
        -:13153:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13154:vcges_f32 (float32_t __a, float32_t __b)
        -:13155:{
        -:13156:  return __a >= __b ? -1 : 0;
        -:13157:}
        -:13158:
        -:13159:__extension__ extern __inline uint64_t
        -:13160:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13161:vcged_s64 (int64_t __a, int64_t __b)
        -:13162:{
        -:13163:  return __a >= __b ? -1ll : 0ll;
        -:13164:}
        -:13165:
        -:13166:__extension__ extern __inline uint64_t
        -:13167:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13168:vcged_u64 (uint64_t __a, uint64_t __b)
        -:13169:{
        -:13170:  return __a >= __b ? -1ll : 0ll;
        -:13171:}
        -:13172:
        -:13173:__extension__ extern __inline uint64_t
        -:13174:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13175:vcged_f64 (float64_t __a, float64_t __b)
        -:13176:{
        -:13177:  return __a >= __b ? -1ll : 0ll;
        -:13178:}
        -:13179:
        -:13180:/* vcgez - vector.  */
        -:13181:
        -:13182:__extension__ extern __inline uint32x2_t
        -:13183:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13184:vcgez_f32 (float32x2_t __a)
        -:13185:{
        -:13186:  return (uint32x2_t) (__a >= 0.0f);
        -:13187:}
        -:13188:
        -:13189:__extension__ extern __inline uint64x1_t
        -:13190:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13191:vcgez_f64 (float64x1_t __a)
        -:13192:{
        -:13193:  return (uint64x1_t) (__a[0] >= (float64x1_t) {0.0});
        -:13194:}
        -:13195:
        -:13196:__extension__ extern __inline uint8x8_t
        -:13197:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13198:vcgez_s8 (int8x8_t __a)
        -:13199:{
        -:13200:  return (uint8x8_t) (__a >= 0);
        -:13201:}
        -:13202:
        -:13203:__extension__ extern __inline uint16x4_t
        -:13204:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13205:vcgez_s16 (int16x4_t __a)
        -:13206:{
        -:13207:  return (uint16x4_t) (__a >= 0);
        -:13208:}
        -:13209:
        -:13210:__extension__ extern __inline uint32x2_t
        -:13211:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13212:vcgez_s32 (int32x2_t __a)
        -:13213:{
        -:13214:  return (uint32x2_t) (__a >= 0);
        -:13215:}
        -:13216:
        -:13217:__extension__ extern __inline uint64x1_t
        -:13218:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13219:vcgez_s64 (int64x1_t __a)
        -:13220:{
        -:13221:  return (uint64x1_t) (__a >= __AARCH64_INT64_C (0));
        -:13222:}
        -:13223:
        -:13224:__extension__ extern __inline uint32x4_t
        -:13225:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13226:vcgezq_f32 (float32x4_t __a)
        -:13227:{
        -:13228:  return (uint32x4_t) (__a >= 0.0f);
        -:13229:}
        -:13230:
        -:13231:__extension__ extern __inline uint64x2_t
        -:13232:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13233:vcgezq_f64 (float64x2_t __a)
        -:13234:{
        -:13235:  return (uint64x2_t) (__a >= 0.0);
        -:13236:}
        -:13237:
        -:13238:__extension__ extern __inline uint8x16_t
        -:13239:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13240:vcgezq_s8 (int8x16_t __a)
        -:13241:{
        -:13242:  return (uint8x16_t) (__a >= 0);
        -:13243:}
        -:13244:
        -:13245:__extension__ extern __inline uint16x8_t
        -:13246:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13247:vcgezq_s16 (int16x8_t __a)
        -:13248:{
        -:13249:  return (uint16x8_t) (__a >= 0);
        -:13250:}
        -:13251:
        -:13252:__extension__ extern __inline uint32x4_t
        -:13253:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13254:vcgezq_s32 (int32x4_t __a)
        -:13255:{
        -:13256:  return (uint32x4_t) (__a >= 0);
        -:13257:}
        -:13258:
        -:13259:__extension__ extern __inline uint64x2_t
        -:13260:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13261:vcgezq_s64 (int64x2_t __a)
        -:13262:{
        -:13263:  return (uint64x2_t) (__a >= __AARCH64_INT64_C (0));
        -:13264:}
        -:13265:
        -:13266:/* vcgez - scalar.  */
        -:13267:
        -:13268:__extension__ extern __inline uint32_t
        -:13269:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13270:vcgezs_f32 (float32_t __a)
        -:13271:{
        -:13272:  return __a >= 0.0f ? -1 : 0;
        -:13273:}
        -:13274:
        -:13275:__extension__ extern __inline uint64_t
        -:13276:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13277:vcgezd_s64 (int64_t __a)
        -:13278:{
        -:13279:  return __a >= 0 ? -1ll : 0ll;
        -:13280:}
        -:13281:
        -:13282:__extension__ extern __inline uint64_t
        -:13283:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13284:vcgezd_f64 (float64_t __a)
        -:13285:{
        -:13286:  return __a >= 0.0 ? -1ll : 0ll;
        -:13287:}
        -:13288:
        -:13289:/* vcgt - vector.  */
        -:13290:
        -:13291:__extension__ extern __inline uint32x2_t
        -:13292:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13293:vcgt_f32 (float32x2_t __a, float32x2_t __b)
        -:13294:{
        -:13295:  return (uint32x2_t) (__a > __b);
        -:13296:}
        -:13297:
        -:13298:__extension__ extern __inline uint64x1_t
        -:13299:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13300:vcgt_f64 (float64x1_t __a, float64x1_t __b)
        -:13301:{
        -:13302:  return (uint64x1_t) (__a > __b);
        -:13303:}
        -:13304:
        -:13305:__extension__ extern __inline uint8x8_t
        -:13306:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13307:vcgt_s8 (int8x8_t __a, int8x8_t __b)
        -:13308:{
        -:13309:  return (uint8x8_t) (__a > __b);
        -:13310:}
        -:13311:
        -:13312:__extension__ extern __inline uint16x4_t
        -:13313:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13314:vcgt_s16 (int16x4_t __a, int16x4_t __b)
        -:13315:{
        -:13316:  return (uint16x4_t) (__a > __b);
        -:13317:}
        -:13318:
        -:13319:__extension__ extern __inline uint32x2_t
        -:13320:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13321:vcgt_s32 (int32x2_t __a, int32x2_t __b)
        -:13322:{
        -:13323:  return (uint32x2_t) (__a > __b);
        -:13324:}
        -:13325:
        -:13326:__extension__ extern __inline uint64x1_t
        -:13327:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13328:vcgt_s64 (int64x1_t __a, int64x1_t __b)
        -:13329:{
        -:13330:  return (uint64x1_t) (__a > __b);
        -:13331:}
        -:13332:
        -:13333:__extension__ extern __inline uint8x8_t
        -:13334:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13335:vcgt_u8 (uint8x8_t __a, uint8x8_t __b)
        -:13336:{
        -:13337:  return (__a > __b);
        -:13338:}
        -:13339:
        -:13340:__extension__ extern __inline uint16x4_t
        -:13341:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13342:vcgt_u16 (uint16x4_t __a, uint16x4_t __b)
        -:13343:{
        -:13344:  return (__a > __b);
        -:13345:}
        -:13346:
        -:13347:__extension__ extern __inline uint32x2_t
        -:13348:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13349:vcgt_u32 (uint32x2_t __a, uint32x2_t __b)
        -:13350:{
        -:13351:  return (__a > __b);
        -:13352:}
        -:13353:
        -:13354:__extension__ extern __inline uint64x1_t
        -:13355:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13356:vcgt_u64 (uint64x1_t __a, uint64x1_t __b)
        -:13357:{
        -:13358:  return (__a > __b);
        -:13359:}
        -:13360:
        -:13361:__extension__ extern __inline uint32x4_t
        -:13362:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13363:vcgtq_f32 (float32x4_t __a, float32x4_t __b)
        -:13364:{
        -:13365:  return (uint32x4_t) (__a > __b);
        -:13366:}
        -:13367:
        -:13368:__extension__ extern __inline uint64x2_t
        -:13369:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13370:vcgtq_f64 (float64x2_t __a, float64x2_t __b)
        -:13371:{
        -:13372:  return (uint64x2_t) (__a > __b);
        -:13373:}
        -:13374:
        -:13375:__extension__ extern __inline uint8x16_t
        -:13376:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13377:vcgtq_s8 (int8x16_t __a, int8x16_t __b)
        -:13378:{
        -:13379:  return (uint8x16_t) (__a > __b);
        -:13380:}
        -:13381:
        -:13382:__extension__ extern __inline uint16x8_t
        -:13383:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13384:vcgtq_s16 (int16x8_t __a, int16x8_t __b)
        -:13385:{
        -:13386:  return (uint16x8_t) (__a > __b);
        -:13387:}
        -:13388:
        -:13389:__extension__ extern __inline uint32x4_t
        -:13390:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13391:vcgtq_s32 (int32x4_t __a, int32x4_t __b)
        -:13392:{
        -:13393:  return (uint32x4_t) (__a > __b);
        -:13394:}
        -:13395:
        -:13396:__extension__ extern __inline uint64x2_t
        -:13397:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13398:vcgtq_s64 (int64x2_t __a, int64x2_t __b)
        -:13399:{
        -:13400:  return (uint64x2_t) (__a > __b);
        -:13401:}
        -:13402:
        -:13403:__extension__ extern __inline uint8x16_t
        -:13404:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13405:vcgtq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:13406:{
        -:13407:  return (__a > __b);
        -:13408:}
        -:13409:
        -:13410:__extension__ extern __inline uint16x8_t
        -:13411:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13412:vcgtq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:13413:{
        -:13414:  return (__a > __b);
        -:13415:}
        -:13416:
        -:13417:__extension__ extern __inline uint32x4_t
        -:13418:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13419:vcgtq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:13420:{
        -:13421:  return (__a > __b);
        -:13422:}
        -:13423:
        -:13424:__extension__ extern __inline uint64x2_t
        -:13425:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13426:vcgtq_u64 (uint64x2_t __a, uint64x2_t __b)
        -:13427:{
        -:13428:  return (__a > __b);
        -:13429:}
        -:13430:
        -:13431:/* vcgt - scalar.  */
        -:13432:
        -:13433:__extension__ extern __inline uint32_t
        -:13434:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13435:vcgts_f32 (float32_t __a, float32_t __b)
        -:13436:{
        -:13437:  return __a > __b ? -1 : 0;
        -:13438:}
        -:13439:
        -:13440:__extension__ extern __inline uint64_t
        -:13441:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13442:vcgtd_s64 (int64_t __a, int64_t __b)
        -:13443:{
        -:13444:  return __a > __b ? -1ll : 0ll;
        -:13445:}
        -:13446:
        -:13447:__extension__ extern __inline uint64_t
        -:13448:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13449:vcgtd_u64 (uint64_t __a, uint64_t __b)
        -:13450:{
        -:13451:  return __a > __b ? -1ll : 0ll;
        -:13452:}
        -:13453:
        -:13454:__extension__ extern __inline uint64_t
        -:13455:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13456:vcgtd_f64 (float64_t __a, float64_t __b)
        -:13457:{
        -:13458:  return __a > __b ? -1ll : 0ll;
        -:13459:}
        -:13460:
        -:13461:/* vcgtz - vector.  */
        -:13462:
        -:13463:__extension__ extern __inline uint32x2_t
        -:13464:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13465:vcgtz_f32 (float32x2_t __a)
        -:13466:{
        -:13467:  return (uint32x2_t) (__a > 0.0f);
        -:13468:}
        -:13469:
        -:13470:__extension__ extern __inline uint64x1_t
        -:13471:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13472:vcgtz_f64 (float64x1_t __a)
        -:13473:{
        -:13474:  return (uint64x1_t) (__a > (float64x1_t) {0.0});
        -:13475:}
        -:13476:
        -:13477:__extension__ extern __inline uint8x8_t
        -:13478:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13479:vcgtz_s8 (int8x8_t __a)
        -:13480:{
        -:13481:  return (uint8x8_t) (__a > 0);
        -:13482:}
        -:13483:
        -:13484:__extension__ extern __inline uint16x4_t
        -:13485:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13486:vcgtz_s16 (int16x4_t __a)
        -:13487:{
        -:13488:  return (uint16x4_t) (__a > 0);
        -:13489:}
        -:13490:
        -:13491:__extension__ extern __inline uint32x2_t
        -:13492:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13493:vcgtz_s32 (int32x2_t __a)
        -:13494:{
        -:13495:  return (uint32x2_t) (__a > 0);
        -:13496:}
        -:13497:
        -:13498:__extension__ extern __inline uint64x1_t
        -:13499:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13500:vcgtz_s64 (int64x1_t __a)
        -:13501:{
        -:13502:  return (uint64x1_t) (__a > __AARCH64_INT64_C (0));
        -:13503:}
        -:13504:
        -:13505:__extension__ extern __inline uint32x4_t
        -:13506:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13507:vcgtzq_f32 (float32x4_t __a)
        -:13508:{
        -:13509:  return (uint32x4_t) (__a > 0.0f);
        -:13510:}
        -:13511:
        -:13512:__extension__ extern __inline uint64x2_t
        -:13513:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13514:vcgtzq_f64 (float64x2_t __a)
        -:13515:{
        -:13516:    return (uint64x2_t) (__a > 0.0);
        -:13517:}
        -:13518:
        -:13519:__extension__ extern __inline uint8x16_t
        -:13520:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13521:vcgtzq_s8 (int8x16_t __a)
        -:13522:{
        -:13523:  return (uint8x16_t) (__a > 0);
        -:13524:}
        -:13525:
        -:13526:__extension__ extern __inline uint16x8_t
        -:13527:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13528:vcgtzq_s16 (int16x8_t __a)
        -:13529:{
        -:13530:  return (uint16x8_t) (__a > 0);
        -:13531:}
        -:13532:
        -:13533:__extension__ extern __inline uint32x4_t
        -:13534:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13535:vcgtzq_s32 (int32x4_t __a)
        -:13536:{
        -:13537:  return (uint32x4_t) (__a > 0);
        -:13538:}
        -:13539:
        -:13540:__extension__ extern __inline uint64x2_t
        -:13541:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13542:vcgtzq_s64 (int64x2_t __a)
        -:13543:{
        -:13544:  return (uint64x2_t) (__a > __AARCH64_INT64_C (0));
        -:13545:}
        -:13546:
        -:13547:/* vcgtz - scalar.  */
        -:13548:
        -:13549:__extension__ extern __inline uint32_t
        -:13550:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13551:vcgtzs_f32 (float32_t __a)
        -:13552:{
        -:13553:  return __a > 0.0f ? -1 : 0;
        -:13554:}
        -:13555:
        -:13556:__extension__ extern __inline uint64_t
        -:13557:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13558:vcgtzd_s64 (int64_t __a)
        -:13559:{
        -:13560:  return __a > 0 ? -1ll : 0ll;
        -:13561:}
        -:13562:
        -:13563:__extension__ extern __inline uint64_t
        -:13564:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13565:vcgtzd_f64 (float64_t __a)
        -:13566:{
        -:13567:  return __a > 0.0 ? -1ll : 0ll;
        -:13568:}
        -:13569:
        -:13570:/* vcle - vector.  */
        -:13571:
        -:13572:__extension__ extern __inline uint32x2_t
        -:13573:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13574:vcle_f32 (float32x2_t __a, float32x2_t __b)
        -:13575:{
        -:13576:  return (uint32x2_t) (__a <= __b);
        -:13577:}
        -:13578:
        -:13579:__extension__ extern __inline uint64x1_t
        -:13580:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13581:vcle_f64 (float64x1_t __a, float64x1_t __b)
        -:13582:{
        -:13583:  return (uint64x1_t) (__a <= __b);
        -:13584:}
        -:13585:
        -:13586:__extension__ extern __inline uint8x8_t
        -:13587:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13588:vcle_s8 (int8x8_t __a, int8x8_t __b)
        -:13589:{
        -:13590:  return (uint8x8_t) (__a <= __b);
        -:13591:}
        -:13592:
        -:13593:__extension__ extern __inline uint16x4_t
        -:13594:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13595:vcle_s16 (int16x4_t __a, int16x4_t __b)
        -:13596:{
        -:13597:  return (uint16x4_t) (__a <= __b);
        -:13598:}
        -:13599:
        -:13600:__extension__ extern __inline uint32x2_t
        -:13601:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13602:vcle_s32 (int32x2_t __a, int32x2_t __b)
        -:13603:{
        -:13604:  return (uint32x2_t) (__a <= __b);
        -:13605:}
        -:13606:
        -:13607:__extension__ extern __inline uint64x1_t
        -:13608:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13609:vcle_s64 (int64x1_t __a, int64x1_t __b)
        -:13610:{
        -:13611:  return (uint64x1_t) (__a <= __b);
        -:13612:}
        -:13613:
        -:13614:__extension__ extern __inline uint8x8_t
        -:13615:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13616:vcle_u8 (uint8x8_t __a, uint8x8_t __b)
        -:13617:{
        -:13618:  return (__a <= __b);
        -:13619:}
        -:13620:
        -:13621:__extension__ extern __inline uint16x4_t
        -:13622:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13623:vcle_u16 (uint16x4_t __a, uint16x4_t __b)
        -:13624:{
        -:13625:  return (__a <= __b);
        -:13626:}
        -:13627:
        -:13628:__extension__ extern __inline uint32x2_t
        -:13629:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13630:vcle_u32 (uint32x2_t __a, uint32x2_t __b)
        -:13631:{
        -:13632:  return (__a <= __b);
        -:13633:}
        -:13634:
        -:13635:__extension__ extern __inline uint64x1_t
        -:13636:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13637:vcle_u64 (uint64x1_t __a, uint64x1_t __b)
        -:13638:{
        -:13639:  return (__a <= __b);
        -:13640:}
        -:13641:
        -:13642:__extension__ extern __inline uint32x4_t
        -:13643:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13644:vcleq_f32 (float32x4_t __a, float32x4_t __b)
        -:13645:{
        -:13646:  return (uint32x4_t) (__a <= __b);
        -:13647:}
        -:13648:
        -:13649:__extension__ extern __inline uint64x2_t
        -:13650:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13651:vcleq_f64 (float64x2_t __a, float64x2_t __b)
        -:13652:{
        -:13653:  return (uint64x2_t) (__a <= __b);
        -:13654:}
        -:13655:
        -:13656:__extension__ extern __inline uint8x16_t
        -:13657:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13658:vcleq_s8 (int8x16_t __a, int8x16_t __b)
        -:13659:{
        -:13660:  return (uint8x16_t) (__a <= __b);
        -:13661:}
        -:13662:
        -:13663:__extension__ extern __inline uint16x8_t
        -:13664:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13665:vcleq_s16 (int16x8_t __a, int16x8_t __b)
        -:13666:{
        -:13667:  return (uint16x8_t) (__a <= __b);
        -:13668:}
        -:13669:
        -:13670:__extension__ extern __inline uint32x4_t
        -:13671:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13672:vcleq_s32 (int32x4_t __a, int32x4_t __b)
        -:13673:{
        -:13674:  return (uint32x4_t) (__a <= __b);
        -:13675:}
        -:13676:
        -:13677:__extension__ extern __inline uint64x2_t
        -:13678:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13679:vcleq_s64 (int64x2_t __a, int64x2_t __b)
        -:13680:{
        -:13681:  return (uint64x2_t) (__a <= __b);
        -:13682:}
        -:13683:
        -:13684:__extension__ extern __inline uint8x16_t
        -:13685:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13686:vcleq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:13687:{
        -:13688:  return (__a <= __b);
        -:13689:}
        -:13690:
        -:13691:__extension__ extern __inline uint16x8_t
        -:13692:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13693:vcleq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:13694:{
        -:13695:  return (__a <= __b);
        -:13696:}
        -:13697:
        -:13698:__extension__ extern __inline uint32x4_t
        -:13699:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13700:vcleq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:13701:{
        -:13702:  return (__a <= __b);
        -:13703:}
        -:13704:
        -:13705:__extension__ extern __inline uint64x2_t
        -:13706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13707:vcleq_u64 (uint64x2_t __a, uint64x2_t __b)
        -:13708:{
        -:13709:  return (__a <= __b);
        -:13710:}
        -:13711:
        -:13712:/* vcle - scalar.  */
        -:13713:
        -:13714:__extension__ extern __inline uint32_t
        -:13715:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13716:vcles_f32 (float32_t __a, float32_t __b)
        -:13717:{
        -:13718:  return __a <= __b ? -1 : 0;
        -:13719:}
        -:13720:
        -:13721:__extension__ extern __inline uint64_t
        -:13722:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13723:vcled_s64 (int64_t __a, int64_t __b)
        -:13724:{
        -:13725:  return __a <= __b ? -1ll : 0ll;
        -:13726:}
        -:13727:
        -:13728:__extension__ extern __inline uint64_t
        -:13729:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13730:vcled_u64 (uint64_t __a, uint64_t __b)
        -:13731:{
        -:13732:  return __a <= __b ? -1ll : 0ll;
        -:13733:}
        -:13734:
        -:13735:__extension__ extern __inline uint64_t
        -:13736:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13737:vcled_f64 (float64_t __a, float64_t __b)
        -:13738:{
        -:13739:  return __a <= __b ? -1ll : 0ll;
        -:13740:}
        -:13741:
        -:13742:/* vclez - vector.  */
        -:13743:
        -:13744:__extension__ extern __inline uint32x2_t
        -:13745:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13746:vclez_f32 (float32x2_t __a)
        -:13747:{
        -:13748:  return (uint32x2_t) (__a <= 0.0f);
        -:13749:}
        -:13750:
        -:13751:__extension__ extern __inline uint64x1_t
        -:13752:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13753:vclez_f64 (float64x1_t __a)
        -:13754:{
        -:13755:  return (uint64x1_t) (__a <= (float64x1_t) {0.0});
        -:13756:}
        -:13757:
        -:13758:__extension__ extern __inline uint8x8_t
        -:13759:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13760:vclez_s8 (int8x8_t __a)
        -:13761:{
        -:13762:  return (uint8x8_t) (__a <= 0);
        -:13763:}
        -:13764:
        -:13765:__extension__ extern __inline uint16x4_t
        -:13766:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13767:vclez_s16 (int16x4_t __a)
        -:13768:{
        -:13769:  return (uint16x4_t) (__a <= 0);
        -:13770:}
        -:13771:
        -:13772:__extension__ extern __inline uint32x2_t
        -:13773:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13774:vclez_s32 (int32x2_t __a)
        -:13775:{
        -:13776:  return (uint32x2_t) (__a <= 0);
        -:13777:}
        -:13778:
        -:13779:__extension__ extern __inline uint64x1_t
        -:13780:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13781:vclez_s64 (int64x1_t __a)
        -:13782:{
        -:13783:  return (uint64x1_t) (__a <= __AARCH64_INT64_C (0));
        -:13784:}
        -:13785:
        -:13786:__extension__ extern __inline uint32x4_t
        -:13787:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13788:vclezq_f32 (float32x4_t __a)
        -:13789:{
        -:13790:  return (uint32x4_t) (__a <= 0.0f);
        -:13791:}
        -:13792:
        -:13793:__extension__ extern __inline uint64x2_t
        -:13794:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13795:vclezq_f64 (float64x2_t __a)
        -:13796:{
        -:13797:  return (uint64x2_t) (__a <= 0.0);
        -:13798:}
        -:13799:
        -:13800:__extension__ extern __inline uint8x16_t
        -:13801:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13802:vclezq_s8 (int8x16_t __a)
        -:13803:{
        -:13804:  return (uint8x16_t) (__a <= 0);
        -:13805:}
        -:13806:
        -:13807:__extension__ extern __inline uint16x8_t
        -:13808:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13809:vclezq_s16 (int16x8_t __a)
        -:13810:{
        -:13811:  return (uint16x8_t) (__a <= 0);
        -:13812:}
        -:13813:
        -:13814:__extension__ extern __inline uint32x4_t
        -:13815:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13816:vclezq_s32 (int32x4_t __a)
        -:13817:{
        -:13818:  return (uint32x4_t) (__a <= 0);
        -:13819:}
        -:13820:
        -:13821:__extension__ extern __inline uint64x2_t
        -:13822:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13823:vclezq_s64 (int64x2_t __a)
        -:13824:{
        -:13825:  return (uint64x2_t) (__a <= __AARCH64_INT64_C (0));
        -:13826:}
        -:13827:
        -:13828:/* vclez - scalar.  */
        -:13829:
        -:13830:__extension__ extern __inline uint32_t
        -:13831:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13832:vclezs_f32 (float32_t __a)
        -:13833:{
        -:13834:  return __a <= 0.0f ? -1 : 0;
        -:13835:}
        -:13836:
        -:13837:__extension__ extern __inline uint64_t
        -:13838:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13839:vclezd_s64 (int64_t __a)
        -:13840:{
        -:13841:  return __a <= 0 ? -1ll : 0ll;
        -:13842:}
        -:13843:
        -:13844:__extension__ extern __inline uint64_t
        -:13845:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13846:vclezd_f64 (float64_t __a)
        -:13847:{
        -:13848:  return __a <= 0.0 ? -1ll : 0ll;
        -:13849:}
        -:13850:
        -:13851:/* vclt - vector.  */
        -:13852:
        -:13853:__extension__ extern __inline uint32x2_t
        -:13854:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13855:vclt_f32 (float32x2_t __a, float32x2_t __b)
        -:13856:{
        -:13857:  return (uint32x2_t) (__a < __b);
        -:13858:}
        -:13859:
        -:13860:__extension__ extern __inline uint64x1_t
        -:13861:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13862:vclt_f64 (float64x1_t __a, float64x1_t __b)
        -:13863:{
        -:13864:  return (uint64x1_t) (__a < __b);
        -:13865:}
        -:13866:
        -:13867:__extension__ extern __inline uint8x8_t
        -:13868:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13869:vclt_s8 (int8x8_t __a, int8x8_t __b)
        -:13870:{
        -:13871:  return (uint8x8_t) (__a < __b);
        -:13872:}
        -:13873:
        -:13874:__extension__ extern __inline uint16x4_t
        -:13875:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13876:vclt_s16 (int16x4_t __a, int16x4_t __b)
        -:13877:{
        -:13878:  return (uint16x4_t) (__a < __b);
        -:13879:}
        -:13880:
        -:13881:__extension__ extern __inline uint32x2_t
        -:13882:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13883:vclt_s32 (int32x2_t __a, int32x2_t __b)
        -:13884:{
        -:13885:  return (uint32x2_t) (__a < __b);
        -:13886:}
        -:13887:
        -:13888:__extension__ extern __inline uint64x1_t
        -:13889:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13890:vclt_s64 (int64x1_t __a, int64x1_t __b)
        -:13891:{
        -:13892:  return (uint64x1_t) (__a < __b);
        -:13893:}
        -:13894:
        -:13895:__extension__ extern __inline uint8x8_t
        -:13896:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13897:vclt_u8 (uint8x8_t __a, uint8x8_t __b)
        -:13898:{
        -:13899:  return (__a < __b);
        -:13900:}
        -:13901:
        -:13902:__extension__ extern __inline uint16x4_t
        -:13903:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13904:vclt_u16 (uint16x4_t __a, uint16x4_t __b)
        -:13905:{
        -:13906:  return (__a < __b);
        -:13907:}
        -:13908:
        -:13909:__extension__ extern __inline uint32x2_t
        -:13910:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13911:vclt_u32 (uint32x2_t __a, uint32x2_t __b)
        -:13912:{
        -:13913:  return (__a < __b);
        -:13914:}
        -:13915:
        -:13916:__extension__ extern __inline uint64x1_t
        -:13917:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13918:vclt_u64 (uint64x1_t __a, uint64x1_t __b)
        -:13919:{
        -:13920:  return (__a < __b);
        -:13921:}
        -:13922:
        -:13923:__extension__ extern __inline uint32x4_t
        -:13924:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13925:vcltq_f32 (float32x4_t __a, float32x4_t __b)
        -:13926:{
        -:13927:  return (uint32x4_t) (__a < __b);
        -:13928:}
        -:13929:
        -:13930:__extension__ extern __inline uint64x2_t
        -:13931:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13932:vcltq_f64 (float64x2_t __a, float64x2_t __b)
        -:13933:{
        -:13934:  return (uint64x2_t) (__a < __b);
        -:13935:}
        -:13936:
        -:13937:__extension__ extern __inline uint8x16_t
        -:13938:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13939:vcltq_s8 (int8x16_t __a, int8x16_t __b)
        -:13940:{
        -:13941:  return (uint8x16_t) (__a < __b);
        -:13942:}
        -:13943:
        -:13944:__extension__ extern __inline uint16x8_t
        -:13945:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13946:vcltq_s16 (int16x8_t __a, int16x8_t __b)
        -:13947:{
        -:13948:  return (uint16x8_t) (__a < __b);
        -:13949:}
        -:13950:
        -:13951:__extension__ extern __inline uint32x4_t
        -:13952:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13953:vcltq_s32 (int32x4_t __a, int32x4_t __b)
        -:13954:{
        -:13955:  return (uint32x4_t) (__a < __b);
        -:13956:}
        -:13957:
        -:13958:__extension__ extern __inline uint64x2_t
        -:13959:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13960:vcltq_s64 (int64x2_t __a, int64x2_t __b)
        -:13961:{
        -:13962:  return (uint64x2_t) (__a < __b);
        -:13963:}
        -:13964:
        -:13965:__extension__ extern __inline uint8x16_t
        -:13966:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13967:vcltq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:13968:{
        -:13969:  return (__a < __b);
        -:13970:}
        -:13971:
        -:13972:__extension__ extern __inline uint16x8_t
        -:13973:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13974:vcltq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:13975:{
        -:13976:  return (__a < __b);
        -:13977:}
        -:13978:
        -:13979:__extension__ extern __inline uint32x4_t
        -:13980:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13981:vcltq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:13982:{
        -:13983:  return (__a < __b);
        -:13984:}
        -:13985:
        -:13986:__extension__ extern __inline uint64x2_t
        -:13987:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13988:vcltq_u64 (uint64x2_t __a, uint64x2_t __b)
        -:13989:{
        -:13990:  return (__a < __b);
        -:13991:}
        -:13992:
        -:13993:/* vclt - scalar.  */
        -:13994:
        -:13995:__extension__ extern __inline uint32_t
        -:13996:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:13997:vclts_f32 (float32_t __a, float32_t __b)
        -:13998:{
        -:13999:  return __a < __b ? -1 : 0;
        -:14000:}
        -:14001:
        -:14002:__extension__ extern __inline uint64_t
        -:14003:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14004:vcltd_s64 (int64_t __a, int64_t __b)
        -:14005:{
        -:14006:  return __a < __b ? -1ll : 0ll;
        -:14007:}
        -:14008:
        -:14009:__extension__ extern __inline uint64_t
        -:14010:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14011:vcltd_u64 (uint64_t __a, uint64_t __b)
        -:14012:{
        -:14013:  return __a < __b ? -1ll : 0ll;
        -:14014:}
        -:14015:
        -:14016:__extension__ extern __inline uint64_t
        -:14017:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14018:vcltd_f64 (float64_t __a, float64_t __b)
        -:14019:{
        -:14020:  return __a < __b ? -1ll : 0ll;
        -:14021:}
        -:14022:
        -:14023:/* vcltz - vector.  */
        -:14024:
        -:14025:__extension__ extern __inline uint32x2_t
        -:14026:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14027:vcltz_f32 (float32x2_t __a)
        -:14028:{
        -:14029:  return (uint32x2_t) (__a < 0.0f);
        -:14030:}
        -:14031:
        -:14032:__extension__ extern __inline uint64x1_t
        -:14033:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14034:vcltz_f64 (float64x1_t __a)
        -:14035:{
        -:14036:  return (uint64x1_t) (__a < (float64x1_t) {0.0});
        -:14037:}
        -:14038:
        -:14039:__extension__ extern __inline uint8x8_t
        -:14040:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14041:vcltz_s8 (int8x8_t __a)
        -:14042:{
        -:14043:  return (uint8x8_t) (__a < 0);
        -:14044:}
        -:14045:
        -:14046:__extension__ extern __inline uint16x4_t
        -:14047:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14048:vcltz_s16 (int16x4_t __a)
        -:14049:{
        -:14050:  return (uint16x4_t) (__a < 0);
        -:14051:}
        -:14052:
        -:14053:__extension__ extern __inline uint32x2_t
        -:14054:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14055:vcltz_s32 (int32x2_t __a)
        -:14056:{
        -:14057:  return (uint32x2_t) (__a < 0);
        -:14058:}
        -:14059:
        -:14060:__extension__ extern __inline uint64x1_t
        -:14061:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14062:vcltz_s64 (int64x1_t __a)
        -:14063:{
        -:14064:  return (uint64x1_t) (__a < __AARCH64_INT64_C (0));
        -:14065:}
        -:14066:
        -:14067:__extension__ extern __inline uint32x4_t
        -:14068:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14069:vcltzq_f32 (float32x4_t __a)
        -:14070:{
        -:14071:  return (uint32x4_t) (__a < 0.0f);
        -:14072:}
        -:14073:
        -:14074:__extension__ extern __inline uint64x2_t
        -:14075:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14076:vcltzq_f64 (float64x2_t __a)
        -:14077:{
        -:14078:  return (uint64x2_t) (__a < 0.0);
        -:14079:}
        -:14080:
        -:14081:__extension__ extern __inline uint8x16_t
        -:14082:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14083:vcltzq_s8 (int8x16_t __a)
        -:14084:{
        -:14085:  return (uint8x16_t) (__a < 0);
        -:14086:}
        -:14087:
        -:14088:__extension__ extern __inline uint16x8_t
        -:14089:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14090:vcltzq_s16 (int16x8_t __a)
        -:14091:{
        -:14092:  return (uint16x8_t) (__a < 0);
        -:14093:}
        -:14094:
        -:14095:__extension__ extern __inline uint32x4_t
        -:14096:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14097:vcltzq_s32 (int32x4_t __a)
        -:14098:{
        -:14099:  return (uint32x4_t) (__a < 0);
        -:14100:}
        -:14101:
        -:14102:__extension__ extern __inline uint64x2_t
        -:14103:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14104:vcltzq_s64 (int64x2_t __a)
        -:14105:{
        -:14106:  return (uint64x2_t) (__a < __AARCH64_INT64_C (0));
        -:14107:}
        -:14108:
        -:14109:/* vcltz - scalar.  */
        -:14110:
        -:14111:__extension__ extern __inline uint32_t
        -:14112:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14113:vcltzs_f32 (float32_t __a)
        -:14114:{
        -:14115:  return __a < 0.0f ? -1 : 0;
        -:14116:}
        -:14117:
        -:14118:__extension__ extern __inline uint64_t
        -:14119:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14120:vcltzd_s64 (int64_t __a)
        -:14121:{
        -:14122:  return __a < 0 ? -1ll : 0ll;
        -:14123:}
        -:14124:
        -:14125:__extension__ extern __inline uint64_t
        -:14126:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14127:vcltzd_f64 (float64_t __a)
        -:14128:{
        -:14129:  return __a < 0.0 ? -1ll : 0ll;
        -:14130:}
        -:14131:
        -:14132:/* vcls.  */
        -:14133:
        -:14134:__extension__ extern __inline int8x8_t
        -:14135:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14136:vcls_s8 (int8x8_t __a)
        -:14137:{
        -:14138:  return __builtin_aarch64_clrsbv8qi (__a);
        -:14139:}
        -:14140:
        -:14141:__extension__ extern __inline int16x4_t
        -:14142:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14143:vcls_s16 (int16x4_t __a)
        -:14144:{
        -:14145:  return __builtin_aarch64_clrsbv4hi (__a);
        -:14146:}
        -:14147:
        -:14148:__extension__ extern __inline int32x2_t
        -:14149:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14150:vcls_s32 (int32x2_t __a)
        -:14151:{
        -:14152:  return __builtin_aarch64_clrsbv2si (__a);
        -:14153:}
        -:14154:
        -:14155:__extension__ extern __inline int8x16_t
        -:14156:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14157:vclsq_s8 (int8x16_t __a)
        -:14158:{
        -:14159:  return __builtin_aarch64_clrsbv16qi (__a);
        -:14160:}
        -:14161:
        -:14162:__extension__ extern __inline int16x8_t
        -:14163:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14164:vclsq_s16 (int16x8_t __a)
        -:14165:{
        -:14166:  return __builtin_aarch64_clrsbv8hi (__a);
        -:14167:}
        -:14168:
        -:14169:__extension__ extern __inline int32x4_t
        -:14170:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14171:vclsq_s32 (int32x4_t __a)
        -:14172:{
        -:14173:  return __builtin_aarch64_clrsbv4si (__a);
        -:14174:}
        -:14175:
        -:14176:/* vclz.  */
        -:14177:
        -:14178:__extension__ extern __inline int8x8_t
        -:14179:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14180:vclz_s8 (int8x8_t __a)
        -:14181:{
        -:14182:  return __builtin_aarch64_clzv8qi (__a);
        -:14183:}
        -:14184:
        -:14185:__extension__ extern __inline int16x4_t
        -:14186:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14187:vclz_s16 (int16x4_t __a)
        -:14188:{
        -:14189:  return __builtin_aarch64_clzv4hi (__a);
        -:14190:}
        -:14191:
        -:14192:__extension__ extern __inline int32x2_t
        -:14193:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14194:vclz_s32 (int32x2_t __a)
        -:14195:{
        -:14196:  return __builtin_aarch64_clzv2si (__a);
        -:14197:}
        -:14198:
        -:14199:__extension__ extern __inline uint8x8_t
        -:14200:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14201:vclz_u8 (uint8x8_t __a)
        -:14202:{
        -:14203:  return (uint8x8_t)__builtin_aarch64_clzv8qi ((int8x8_t)__a);
        -:14204:}
        -:14205:
        -:14206:__extension__ extern __inline uint16x4_t
        -:14207:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14208:vclz_u16 (uint16x4_t __a)
        -:14209:{
        -:14210:  return (uint16x4_t)__builtin_aarch64_clzv4hi ((int16x4_t)__a);
        -:14211:}
        -:14212:
        -:14213:__extension__ extern __inline uint32x2_t
        -:14214:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14215:vclz_u32 (uint32x2_t __a)
        -:14216:{
        -:14217:  return (uint32x2_t)__builtin_aarch64_clzv2si ((int32x2_t)__a);
        -:14218:}
        -:14219:
        -:14220:__extension__ extern __inline int8x16_t
        -:14221:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14222:vclzq_s8 (int8x16_t __a)
        -:14223:{
        -:14224:  return __builtin_aarch64_clzv16qi (__a);
        -:14225:}
        -:14226:
        -:14227:__extension__ extern __inline int16x8_t
        -:14228:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14229:vclzq_s16 (int16x8_t __a)
        -:14230:{
        -:14231:  return __builtin_aarch64_clzv8hi (__a);
        -:14232:}
        -:14233:
        -:14234:__extension__ extern __inline int32x4_t
        -:14235:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14236:vclzq_s32 (int32x4_t __a)
        -:14237:{
        -:14238:  return __builtin_aarch64_clzv4si (__a);
        -:14239:}
        -:14240:
        -:14241:__extension__ extern __inline uint8x16_t
        -:14242:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14243:vclzq_u8 (uint8x16_t __a)
        -:14244:{
        -:14245:  return (uint8x16_t)__builtin_aarch64_clzv16qi ((int8x16_t)__a);
        -:14246:}
        -:14247:
        -:14248:__extension__ extern __inline uint16x8_t
        -:14249:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14250:vclzq_u16 (uint16x8_t __a)
        -:14251:{
        -:14252:  return (uint16x8_t)__builtin_aarch64_clzv8hi ((int16x8_t)__a);
        -:14253:}
        -:14254:
        -:14255:__extension__ extern __inline uint32x4_t
        -:14256:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14257:vclzq_u32 (uint32x4_t __a)
        -:14258:{
        -:14259:  return (uint32x4_t)__builtin_aarch64_clzv4si ((int32x4_t)__a);
        -:14260:}
        -:14261:
        -:14262:/* vcnt.  */
        -:14263:
        -:14264:__extension__ extern __inline poly8x8_t
        -:14265:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14266:vcnt_p8 (poly8x8_t __a)
        -:14267:{
        -:14268:  return (poly8x8_t) __builtin_aarch64_popcountv8qi ((int8x8_t) __a);
        -:14269:}
        -:14270:
        -:14271:__extension__ extern __inline int8x8_t
        -:14272:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14273:vcnt_s8 (int8x8_t __a)
        -:14274:{
        -:14275:  return __builtin_aarch64_popcountv8qi (__a);
        -:14276:}
        -:14277:
        -:14278:__extension__ extern __inline uint8x8_t
        -:14279:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14280:vcnt_u8 (uint8x8_t __a)
        -:14281:{
        -:14282:  return (uint8x8_t) __builtin_aarch64_popcountv8qi ((int8x8_t) __a);
        -:14283:}
        -:14284:
        -:14285:__extension__ extern __inline poly8x16_t
        -:14286:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14287:vcntq_p8 (poly8x16_t __a)
        -:14288:{
        -:14289:  return (poly8x16_t) __builtin_aarch64_popcountv16qi ((int8x16_t) __a);
        -:14290:}
        -:14291:
        -:14292:__extension__ extern __inline int8x16_t
        -:14293:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14294:vcntq_s8 (int8x16_t __a)
        -:14295:{
        -:14296:  return __builtin_aarch64_popcountv16qi (__a);
        -:14297:}
        -:14298:
        -:14299:__extension__ extern __inline uint8x16_t
        -:14300:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14301:vcntq_u8 (uint8x16_t __a)
        -:14302:{
        -:14303:  return (uint8x16_t) __builtin_aarch64_popcountv16qi ((int8x16_t) __a);
        -:14304:}
        -:14305:
        -:14306:/* vcopy_lane.  */
        -:14307:
        -:14308:__extension__ extern __inline float32x2_t
        -:14309:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14310:vcopy_lane_f32 (float32x2_t __a, const int __lane1,
        -:14311:		float32x2_t __b, const int __lane2)
        -:14312:{
        -:14313:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14314:				  __a, __lane1);
        -:14315:}
        -:14316:
        -:14317:__extension__ extern __inline float64x1_t
        -:14318:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14319:vcopy_lane_f64 (float64x1_t __a, const int __lane1,
        -:14320:		float64x1_t __b, const int __lane2)
        -:14321:{
        -:14322:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14323:				  __a, __lane1);
        -:14324:}
        -:14325:
        -:14326:__extension__ extern __inline poly8x8_t
        -:14327:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14328:vcopy_lane_p8 (poly8x8_t __a, const int __lane1,
        -:14329:	       poly8x8_t __b, const int __lane2)
        -:14330:{
        -:14331:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14332:				 __a, __lane1);
        -:14333:}
        -:14334:
        -:14335:__extension__ extern __inline poly16x4_t
        -:14336:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14337:vcopy_lane_p16 (poly16x4_t __a, const int __lane1,
        -:14338:		poly16x4_t __b, const int __lane2)
        -:14339:{
        -:14340:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14341:				  __a, __lane1);
        -:14342:}
        -:14343:
        -:14344:__extension__ extern __inline poly64x1_t
        -:14345:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14346:vcopy_lane_p64 (poly64x1_t __a, const int __lane1,
        -:14347:		poly64x1_t __b, const int __lane2)
        -:14348:{
        -:14349:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14350:				  __a, __lane1);
        -:14351:}
        -:14352:
        -:14353:__extension__ extern __inline int8x8_t
        -:14354:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14355:vcopy_lane_s8 (int8x8_t __a, const int __lane1,
        -:14356:	       int8x8_t __b, const int __lane2)
        -:14357:{
        -:14358:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14359:				 __a, __lane1);
        -:14360:}
        -:14361:
        -:14362:__extension__ extern __inline int16x4_t
        -:14363:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14364:vcopy_lane_s16 (int16x4_t __a, const int __lane1,
        -:14365:		int16x4_t __b, const int __lane2)
        -:14366:{
        -:14367:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14368:				  __a, __lane1);
        -:14369:}
        -:14370:
        -:14371:__extension__ extern __inline int32x2_t
        -:14372:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14373:vcopy_lane_s32 (int32x2_t __a, const int __lane1,
        -:14374:		int32x2_t __b, const int __lane2)
        -:14375:{
        -:14376:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14377:				  __a, __lane1);
        -:14378:}
        -:14379:
        -:14380:__extension__ extern __inline int64x1_t
        -:14381:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14382:vcopy_lane_s64 (int64x1_t __a, const int __lane1,
        -:14383:		int64x1_t __b, const int __lane2)
        -:14384:{
        -:14385:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14386:				  __a, __lane1);
        -:14387:}
        -:14388:
        -:14389:__extension__ extern __inline uint8x8_t
        -:14390:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14391:vcopy_lane_u8 (uint8x8_t __a, const int __lane1,
        -:14392:	       uint8x8_t __b, const int __lane2)
        -:14393:{
        -:14394:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14395:				 __a, __lane1);
        -:14396:}
        -:14397:
        -:14398:__extension__ extern __inline uint16x4_t
        -:14399:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14400:vcopy_lane_u16 (uint16x4_t __a, const int __lane1,
        -:14401:		uint16x4_t __b, const int __lane2)
        -:14402:{
        -:14403:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14404:				  __a, __lane1);
        -:14405:}
        -:14406:
        -:14407:__extension__ extern __inline uint32x2_t
        -:14408:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14409:vcopy_lane_u32 (uint32x2_t __a, const int __lane1,
        -:14410:		uint32x2_t __b, const int __lane2)
        -:14411:{
        -:14412:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14413:				  __a, __lane1);
        -:14414:}
        -:14415:
        -:14416:__extension__ extern __inline uint64x1_t
        -:14417:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14418:vcopy_lane_u64 (uint64x1_t __a, const int __lane1,
        -:14419:		uint64x1_t __b, const int __lane2)
        -:14420:{
        -:14421:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14422:				  __a, __lane1);
        -:14423:}
        -:14424:
        -:14425:/* vcopy_laneq.  */
        -:14426:
        -:14427:__extension__ extern __inline float32x2_t
        -:14428:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14429:vcopy_laneq_f32 (float32x2_t __a, const int __lane1,
        -:14430:		 float32x4_t __b, const int __lane2)
        -:14431:{
        -:14432:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14433:				  __a, __lane1);
        -:14434:}
        -:14435:
        -:14436:__extension__ extern __inline float64x1_t
        -:14437:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14438:vcopy_laneq_f64 (float64x1_t __a, const int __lane1,
        -:14439:		 float64x2_t __b, const int __lane2)
        -:14440:{
        -:14441:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14442:				  __a, __lane1);
        -:14443:}
        -:14444:
        -:14445:__extension__ extern __inline poly8x8_t
        -:14446:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14447:vcopy_laneq_p8 (poly8x8_t __a, const int __lane1,
        -:14448:		poly8x16_t __b, const int __lane2)
        -:14449:{
        -:14450:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14451:				 __a, __lane1);
        -:14452:}
        -:14453:
        -:14454:__extension__ extern __inline poly16x4_t
        -:14455:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14456:vcopy_laneq_p16 (poly16x4_t __a, const int __lane1,
        -:14457:		 poly16x8_t __b, const int __lane2)
        -:14458:{
        -:14459:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14460:				  __a, __lane1);
        -:14461:}
        -:14462:
        -:14463:__extension__ extern __inline poly64x1_t
        -:14464:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14465:vcopy_laneq_p64 (poly64x1_t __a, const int __lane1,
        -:14466:		 poly64x2_t __b, const int __lane2)
        -:14467:{
        -:14468:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14469:				  __a, __lane1);
        -:14470:}
        -:14471:
        -:14472:__extension__ extern __inline int8x8_t
        -:14473:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14474:vcopy_laneq_s8 (int8x8_t __a, const int __lane1,
        -:14475:		int8x16_t __b, const int __lane2)
        -:14476:{
        -:14477:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14478:				 __a, __lane1);
        -:14479:}
        -:14480:
        -:14481:__extension__ extern __inline int16x4_t
        -:14482:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14483:vcopy_laneq_s16 (int16x4_t __a, const int __lane1,
        -:14484:		 int16x8_t __b, const int __lane2)
        -:14485:{
        -:14486:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14487:				  __a, __lane1);
        -:14488:}
        -:14489:
        -:14490:__extension__ extern __inline int32x2_t
        -:14491:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14492:vcopy_laneq_s32 (int32x2_t __a, const int __lane1,
        -:14493:		 int32x4_t __b, const int __lane2)
        -:14494:{
        -:14495:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14496:				  __a, __lane1);
        -:14497:}
        -:14498:
        -:14499:__extension__ extern __inline int64x1_t
        -:14500:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14501:vcopy_laneq_s64 (int64x1_t __a, const int __lane1,
        -:14502:		 int64x2_t __b, const int __lane2)
        -:14503:{
        -:14504:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14505:				  __a, __lane1);
        -:14506:}
        -:14507:
        -:14508:__extension__ extern __inline uint8x8_t
        -:14509:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14510:vcopy_laneq_u8 (uint8x8_t __a, const int __lane1,
        -:14511:		uint8x16_t __b, const int __lane2)
        -:14512:{
        -:14513:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14514:				 __a, __lane1);
        -:14515:}
        -:14516:
        -:14517:__extension__ extern __inline uint16x4_t
        -:14518:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14519:vcopy_laneq_u16 (uint16x4_t __a, const int __lane1,
        -:14520:		 uint16x8_t __b, const int __lane2)
        -:14521:{
        -:14522:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14523:				  __a, __lane1);
        -:14524:}
        -:14525:
        -:14526:__extension__ extern __inline uint32x2_t
        -:14527:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14528:vcopy_laneq_u32 (uint32x2_t __a, const int __lane1,
        -:14529:		 uint32x4_t __b, const int __lane2)
        -:14530:{
        -:14531:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14532:				  __a, __lane1);
        -:14533:}
        -:14534:
        -:14535:__extension__ extern __inline uint64x1_t
        -:14536:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14537:vcopy_laneq_u64 (uint64x1_t __a, const int __lane1,
        -:14538:		 uint64x2_t __b, const int __lane2)
        -:14539:{
        -:14540:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14541:				  __a, __lane1);
        -:14542:}
        -:14543:
        -:14544:/* vcopyq_lane.  */
        -:14545:
        -:14546:__extension__ extern __inline float32x4_t
        -:14547:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14548:vcopyq_lane_f32 (float32x4_t __a, const int __lane1,
        -:14549:		 float32x2_t __b, const int __lane2)
        -:14550:{
        -:14551:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14552:				   __a, __lane1);
        -:14553:}
        -:14554:
        -:14555:__extension__ extern __inline float64x2_t
        -:14556:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14557:vcopyq_lane_f64 (float64x2_t __a, const int __lane1,
        -:14558:		 float64x1_t __b, const int __lane2)
        -:14559:{
        -:14560:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14561:				   __a, __lane1);
        -:14562:}
        -:14563:
        -:14564:__extension__ extern __inline poly8x16_t
        -:14565:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14566:vcopyq_lane_p8 (poly8x16_t __a, const int __lane1,
        -:14567:		poly8x8_t __b, const int __lane2)
        -:14568:{
        -:14569:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14570:				  __a, __lane1);
        -:14571:}
        -:14572:
        -:14573:__extension__ extern __inline poly16x8_t
        -:14574:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14575:vcopyq_lane_p16 (poly16x8_t __a, const int __lane1,
        -:14576:		 poly16x4_t __b, const int __lane2)
        -:14577:{
        -:14578:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14579:				   __a, __lane1);
        -:14580:}
        -:14581:
        -:14582:__extension__ extern __inline poly64x2_t
        -:14583:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14584:vcopyq_lane_p64 (poly64x2_t __a, const int __lane1,
        -:14585:		 poly64x1_t __b, const int __lane2)
        -:14586:{
        -:14587:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14588:				   __a, __lane1);
        -:14589:}
        -:14590:
        -:14591:__extension__ extern __inline int8x16_t
        -:14592:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14593:vcopyq_lane_s8 (int8x16_t __a, const int __lane1,
        -:14594:		int8x8_t __b, const int __lane2)
        -:14595:{
        -:14596:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14597:				  __a, __lane1);
        -:14598:}
        -:14599:
        -:14600:__extension__ extern __inline int16x8_t
        -:14601:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14602:vcopyq_lane_s16 (int16x8_t __a, const int __lane1,
        -:14603:		 int16x4_t __b, const int __lane2)
        -:14604:{
        -:14605:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14606:				   __a, __lane1);
        -:14607:}
        -:14608:
        -:14609:__extension__ extern __inline int32x4_t
        -:14610:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14611:vcopyq_lane_s32 (int32x4_t __a, const int __lane1,
        -:14612:		 int32x2_t __b, const int __lane2)
        -:14613:{
        -:14614:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14615:				   __a, __lane1);
        -:14616:}
        -:14617:
        -:14618:__extension__ extern __inline int64x2_t
        -:14619:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14620:vcopyq_lane_s64 (int64x2_t __a, const int __lane1,
        -:14621:		 int64x1_t __b, const int __lane2)
        -:14622:{
        -:14623:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14624:				   __a, __lane1);
        -:14625:}
        -:14626:
        -:14627:__extension__ extern __inline uint8x16_t
        -:14628:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14629:vcopyq_lane_u8 (uint8x16_t __a, const int __lane1,
        -:14630:		uint8x8_t __b, const int __lane2)
        -:14631:{
        -:14632:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14633:				  __a, __lane1);
        -:14634:}
        -:14635:
        -:14636:__extension__ extern __inline uint16x8_t
        -:14637:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14638:vcopyq_lane_u16 (uint16x8_t __a, const int __lane1,
        -:14639:		 uint16x4_t __b, const int __lane2)
        -:14640:{
        -:14641:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14642:				   __a, __lane1);
        -:14643:}
        -:14644:
        -:14645:__extension__ extern __inline uint32x4_t
        -:14646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14647:vcopyq_lane_u32 (uint32x4_t __a, const int __lane1,
        -:14648:		 uint32x2_t __b, const int __lane2)
        -:14649:{
        -:14650:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14651:				   __a, __lane1);
        -:14652:}
        -:14653:
        -:14654:__extension__ extern __inline uint64x2_t
        -:14655:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14656:vcopyq_lane_u64 (uint64x2_t __a, const int __lane1,
        -:14657:		 uint64x1_t __b, const int __lane2)
        -:14658:{
        -:14659:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14660:				   __a, __lane1);
        -:14661:}
        -:14662:
        -:14663:/* vcopyq_laneq.  */
        -:14664:
        -:14665:__extension__ extern __inline float32x4_t
        -:14666:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14667:vcopyq_laneq_f32 (float32x4_t __a, const int __lane1,
        -:14668:		  float32x4_t __b, const int __lane2)
        -:14669:{
        -:14670:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14671:				   __a, __lane1);
        -:14672:}
        -:14673:
        -:14674:__extension__ extern __inline float64x2_t
        -:14675:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14676:vcopyq_laneq_f64 (float64x2_t __a, const int __lane1,
        -:14677:		  float64x2_t __b, const int __lane2)
        -:14678:{
        -:14679:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14680:				   __a, __lane1);
        -:14681:}
        -:14682:
        -:14683:__extension__ extern __inline poly8x16_t
        -:14684:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14685:vcopyq_laneq_p8 (poly8x16_t __a, const int __lane1,
        -:14686:		 poly8x16_t __b, const int __lane2)
        -:14687:{
        -:14688:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14689:				  __a, __lane1);
        -:14690:}
        -:14691:
        -:14692:__extension__ extern __inline poly16x8_t
        -:14693:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14694:vcopyq_laneq_p16 (poly16x8_t __a, const int __lane1,
        -:14695:		  poly16x8_t __b, const int __lane2)
        -:14696:{
        -:14697:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14698:				   __a, __lane1);
        -:14699:}
        -:14700:
        -:14701:__extension__ extern __inline poly64x2_t
        -:14702:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14703:vcopyq_laneq_p64 (poly64x2_t __a, const int __lane1,
        -:14704:		  poly64x2_t __b, const int __lane2)
        -:14705:{
        -:14706:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14707:				   __a, __lane1);
        -:14708:}
        -:14709:
        -:14710:__extension__ extern __inline int8x16_t
        -:14711:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14712:vcopyq_laneq_s8 (int8x16_t __a, const int __lane1,
        -:14713:		 int8x16_t __b, const int __lane2)
        -:14714:{
        -:14715:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14716:				  __a, __lane1);
        -:14717:}
        -:14718:
        -:14719:__extension__ extern __inline int16x8_t
        -:14720:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14721:vcopyq_laneq_s16 (int16x8_t __a, const int __lane1,
        -:14722:		  int16x8_t __b, const int __lane2)
        -:14723:{
        -:14724:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14725:				   __a, __lane1);
        -:14726:}
        -:14727:
        -:14728:__extension__ extern __inline int32x4_t
        -:14729:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14730:vcopyq_laneq_s32 (int32x4_t __a, const int __lane1,
        -:14731:		  int32x4_t __b, const int __lane2)
        -:14732:{
        -:14733:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14734:				   __a, __lane1);
        -:14735:}
        -:14736:
        -:14737:__extension__ extern __inline int64x2_t
        -:14738:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14739:vcopyq_laneq_s64 (int64x2_t __a, const int __lane1,
        -:14740:		  int64x2_t __b, const int __lane2)
        -:14741:{
        -:14742:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14743:				   __a, __lane1);
        -:14744:}
        -:14745:
        -:14746:__extension__ extern __inline uint8x16_t
        -:14747:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14748:vcopyq_laneq_u8 (uint8x16_t __a, const int __lane1,
        -:14749:		 uint8x16_t __b, const int __lane2)
        -:14750:{
        -:14751:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14752:				  __a, __lane1);
        -:14753:}
        -:14754:
        -:14755:__extension__ extern __inline uint16x8_t
        -:14756:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14757:vcopyq_laneq_u16 (uint16x8_t __a, const int __lane1,
        -:14758:		  uint16x8_t __b, const int __lane2)
        -:14759:{
        -:14760:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14761:				   __a, __lane1);
        -:14762:}
        -:14763:
        -:14764:__extension__ extern __inline uint32x4_t
        -:14765:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14766:vcopyq_laneq_u32 (uint32x4_t __a, const int __lane1,
        -:14767:		  uint32x4_t __b, const int __lane2)
        -:14768:{
        -:14769:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14770:				   __a, __lane1);
        -:14771:}
        -:14772:
        -:14773:__extension__ extern __inline uint64x2_t
        -:14774:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14775:vcopyq_laneq_u64 (uint64x2_t __a, const int __lane1,
        -:14776:		  uint64x2_t __b, const int __lane2)
        -:14777:{
        -:14778:  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),
        -:14779:				   __a, __lane1);
        -:14780:}
        -:14781:
        -:14782:/* vcvt (double -> float).  */
        -:14783:
        -:14784:__extension__ extern __inline float16x4_t
        -:14785:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14786:vcvt_f16_f32 (float32x4_t __a)
        -:14787:{
        -:14788:  return __builtin_aarch64_float_truncate_lo_v4hf (__a);
        -:14789:}
        -:14790:
        -:14791:__extension__ extern __inline float16x8_t
        -:14792:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14793:vcvt_high_f16_f32 (float16x4_t __a, float32x4_t __b)
        -:14794:{
        -:14795:  return __builtin_aarch64_float_truncate_hi_v8hf (__a, __b);
        -:14796:}
        -:14797:
        -:14798:__extension__ extern __inline float32x2_t
        -:14799:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14800:vcvt_f32_f64 (float64x2_t __a)
        -:14801:{
        -:14802:  return __builtin_aarch64_float_truncate_lo_v2sf (__a);
        -:14803:}
        -:14804:
        -:14805:__extension__ extern __inline float32x4_t
        -:14806:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14807:vcvt_high_f32_f64 (float32x2_t __a, float64x2_t __b)
        -:14808:{
        -:14809:  return __builtin_aarch64_float_truncate_hi_v4sf (__a, __b);
        -:14810:}
        -:14811:
        -:14812:/* vcvt (float -> double).  */
        -:14813:
        -:14814:__extension__ extern __inline float32x4_t
        -:14815:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14816:vcvt_f32_f16 (float16x4_t __a)
        -:14817:{
        -:14818:  return __builtin_aarch64_float_extend_lo_v4sf (__a);
        -:14819:}
        -:14820:
        -:14821:__extension__ extern __inline float64x2_t
        -:14822:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14823:vcvt_f64_f32 (float32x2_t __a)
        -:14824:{
        -:14825:
        -:14826:  return __builtin_aarch64_float_extend_lo_v2df (__a);
        -:14827:}
        -:14828:
        -:14829:__extension__ extern __inline float32x4_t
        -:14830:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14831:vcvt_high_f32_f16 (float16x8_t __a)
        -:14832:{
        -:14833:  return __builtin_aarch64_vec_unpacks_hi_v8hf (__a);
        -:14834:}
        -:14835:
        -:14836:__extension__ extern __inline float64x2_t
        -:14837:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14838:vcvt_high_f64_f32 (float32x4_t __a)
        -:14839:{
        -:14840:  return __builtin_aarch64_vec_unpacks_hi_v4sf (__a);
        -:14841:}
        -:14842:
        -:14843:/* vcvt (<u>fixed-point -> float).  */
        -:14844:
        -:14845:__extension__ extern __inline float64_t
        -:14846:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14847:vcvtd_n_f64_s64 (int64_t __a, const int __b)
        -:14848:{
        -:14849:  return __builtin_aarch64_scvtfdi (__a, __b);
        -:14850:}
        -:14851:
        -:14852:__extension__ extern __inline float64_t
        -:14853:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14854:vcvtd_n_f64_u64 (uint64_t __a, const int __b)
        -:14855:{
        -:14856:  return __builtin_aarch64_ucvtfdi_sus (__a, __b);
        -:14857:}
        -:14858:
        -:14859:__extension__ extern __inline float32_t
        -:14860:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14861:vcvts_n_f32_s32 (int32_t __a, const int __b)
        -:14862:{
        -:14863:  return __builtin_aarch64_scvtfsi (__a, __b);
        -:14864:}
        -:14865:
        -:14866:__extension__ extern __inline float32_t
        -:14867:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14868:vcvts_n_f32_u32 (uint32_t __a, const int __b)
        -:14869:{
        -:14870:  return __builtin_aarch64_ucvtfsi_sus (__a, __b);
        -:14871:}
        -:14872:
        -:14873:__extension__ extern __inline float32x2_t
        -:14874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14875:vcvt_n_f32_s32 (int32x2_t __a, const int __b)
        -:14876:{
        -:14877:  return __builtin_aarch64_scvtfv2si (__a, __b);
        -:14878:}
        -:14879:
        -:14880:__extension__ extern __inline float32x2_t
        -:14881:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14882:vcvt_n_f32_u32 (uint32x2_t __a, const int __b)
        -:14883:{
        -:14884:  return __builtin_aarch64_ucvtfv2si_sus (__a, __b);
        -:14885:}
        -:14886:
        -:14887:__extension__ extern __inline float64x1_t
        -:14888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14889:vcvt_n_f64_s64 (int64x1_t __a, const int __b)
        -:14890:{
        -:14891:  return (float64x1_t)
        -:14892:    { __builtin_aarch64_scvtfdi (vget_lane_s64 (__a, 0), __b) };
        -:14893:}
        -:14894:
        -:14895:__extension__ extern __inline float64x1_t
        -:14896:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14897:vcvt_n_f64_u64 (uint64x1_t __a, const int __b)
        -:14898:{
        -:14899:  return (float64x1_t)
        -:14900:    { __builtin_aarch64_ucvtfdi_sus (vget_lane_u64 (__a, 0), __b) };
        -:14901:}
        -:14902:
        -:14903:__extension__ extern __inline float32x4_t
        -:14904:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14905:vcvtq_n_f32_s32 (int32x4_t __a, const int __b)
        -:14906:{
        -:14907:  return __builtin_aarch64_scvtfv4si (__a, __b);
        -:14908:}
        -:14909:
        -:14910:__extension__ extern __inline float32x4_t
        -:14911:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14912:vcvtq_n_f32_u32 (uint32x4_t __a, const int __b)
        -:14913:{
        -:14914:  return __builtin_aarch64_ucvtfv4si_sus (__a, __b);
        -:14915:}
        -:14916:
        -:14917:__extension__ extern __inline float64x2_t
        -:14918:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14919:vcvtq_n_f64_s64 (int64x2_t __a, const int __b)
        -:14920:{
        -:14921:  return __builtin_aarch64_scvtfv2di (__a, __b);
        -:14922:}
        -:14923:
        -:14924:__extension__ extern __inline float64x2_t
        -:14925:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14926:vcvtq_n_f64_u64 (uint64x2_t __a, const int __b)
        -:14927:{
        -:14928:  return __builtin_aarch64_ucvtfv2di_sus (__a, __b);
        -:14929:}
        -:14930:
        -:14931:/* vcvt (float -> <u>fixed-point).  */
        -:14932:
        -:14933:__extension__ extern __inline int64_t
        -:14934:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14935:vcvtd_n_s64_f64 (float64_t __a, const int __b)
        -:14936:{
        -:14937:  return __builtin_aarch64_fcvtzsdf (__a, __b);
        -:14938:}
        -:14939:
        -:14940:__extension__ extern __inline uint64_t
        -:14941:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14942:vcvtd_n_u64_f64 (float64_t __a, const int __b)
        -:14943:{
        -:14944:  return __builtin_aarch64_fcvtzudf_uss (__a, __b);
        -:14945:}
        -:14946:
        -:14947:__extension__ extern __inline int32_t
        -:14948:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14949:vcvts_n_s32_f32 (float32_t __a, const int __b)
        -:14950:{
        -:14951:  return __builtin_aarch64_fcvtzssf (__a, __b);
        -:14952:}
        -:14953:
        -:14954:__extension__ extern __inline uint32_t
        -:14955:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14956:vcvts_n_u32_f32 (float32_t __a, const int __b)
        -:14957:{
        -:14958:  return __builtin_aarch64_fcvtzusf_uss (__a, __b);
        -:14959:}
        -:14960:
        -:14961:__extension__ extern __inline int32x2_t
        -:14962:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14963:vcvt_n_s32_f32 (float32x2_t __a, const int __b)
        -:14964:{
        -:14965:  return __builtin_aarch64_fcvtzsv2sf (__a, __b);
        -:14966:}
        -:14967:
        -:14968:__extension__ extern __inline uint32x2_t
        -:14969:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14970:vcvt_n_u32_f32 (float32x2_t __a, const int __b)
        -:14971:{
        -:14972:  return __builtin_aarch64_fcvtzuv2sf_uss (__a, __b);
        -:14973:}
        -:14974:
        -:14975:__extension__ extern __inline int64x1_t
        -:14976:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14977:vcvt_n_s64_f64 (float64x1_t __a, const int __b)
        -:14978:{
        -:14979:  return (int64x1_t)
        -:14980:    { __builtin_aarch64_fcvtzsdf (vget_lane_f64 (__a, 0), __b) };
        -:14981:}
        -:14982:
        -:14983:__extension__ extern __inline uint64x1_t
        -:14984:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14985:vcvt_n_u64_f64 (float64x1_t __a, const int __b)
        -:14986:{
        -:14987:  return (uint64x1_t)
        -:14988:    { __builtin_aarch64_fcvtzudf_uss (vget_lane_f64 (__a, 0), __b) };
        -:14989:}
        -:14990:
        -:14991:__extension__ extern __inline int32x4_t
        -:14992:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:14993:vcvtq_n_s32_f32 (float32x4_t __a, const int __b)
        -:14994:{
        -:14995:  return __builtin_aarch64_fcvtzsv4sf (__a, __b);
        -:14996:}
        -:14997:
        -:14998:__extension__ extern __inline uint32x4_t
        -:14999:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15000:vcvtq_n_u32_f32 (float32x4_t __a, const int __b)
        -:15001:{
        -:15002:  return __builtin_aarch64_fcvtzuv4sf_uss (__a, __b);
        -:15003:}
        -:15004:
        -:15005:__extension__ extern __inline int64x2_t
        -:15006:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15007:vcvtq_n_s64_f64 (float64x2_t __a, const int __b)
        -:15008:{
        -:15009:  return __builtin_aarch64_fcvtzsv2df (__a, __b);
        -:15010:}
        -:15011:
        -:15012:__extension__ extern __inline uint64x2_t
        -:15013:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15014:vcvtq_n_u64_f64 (float64x2_t __a, const int __b)
        -:15015:{
        -:15016:  return __builtin_aarch64_fcvtzuv2df_uss (__a, __b);
        -:15017:}
        -:15018:
        -:15019:/* vcvt  (<u>int -> float)  */
        -:15020:
        -:15021:__extension__ extern __inline float64_t
        -:15022:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15023:vcvtd_f64_s64 (int64_t __a)
        -:15024:{
        -:15025:  return (float64_t) __a;
        -:15026:}
        -:15027:
        -:15028:__extension__ extern __inline float64_t
        -:15029:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15030:vcvtd_f64_u64 (uint64_t __a)
        -:15031:{
        -:15032:  return (float64_t) __a;
        -:15033:}
        -:15034:
        -:15035:__extension__ extern __inline float32_t
        -:15036:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15037:vcvts_f32_s32 (int32_t __a)
        -:15038:{
        -:15039:  return (float32_t) __a;
        -:15040:}
        -:15041:
        -:15042:__extension__ extern __inline float32_t
        -:15043:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15044:vcvts_f32_u32 (uint32_t __a)
        -:15045:{
        -:15046:  return (float32_t) __a;
        -:15047:}
        -:15048:
        -:15049:__extension__ extern __inline float32x2_t
        -:15050:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15051:vcvt_f32_s32 (int32x2_t __a)
        -:15052:{
        -:15053:  return __builtin_aarch64_floatv2siv2sf (__a);
        -:15054:}
        -:15055:
        -:15056:__extension__ extern __inline float32x2_t
        -:15057:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15058:vcvt_f32_u32 (uint32x2_t __a)
        -:15059:{
        -:15060:  return __builtin_aarch64_floatunsv2siv2sf ((int32x2_t) __a);
        -:15061:}
        -:15062:
        -:15063:__extension__ extern __inline float64x1_t
        -:15064:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15065:vcvt_f64_s64 (int64x1_t __a)
        -:15066:{
        -:15067:  return (float64x1_t) { vget_lane_s64 (__a, 0) };
        -:15068:}
        -:15069:
        -:15070:__extension__ extern __inline float64x1_t
        -:15071:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15072:vcvt_f64_u64 (uint64x1_t __a)
        -:15073:{
        -:15074:  return (float64x1_t) { vget_lane_u64 (__a, 0) };
        -:15075:}
        -:15076:
        -:15077:__extension__ extern __inline float32x4_t
        -:15078:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15079:vcvtq_f32_s32 (int32x4_t __a)
        -:15080:{
        -:15081:  return __builtin_aarch64_floatv4siv4sf (__a);
        -:15082:}
        -:15083:
        -:15084:__extension__ extern __inline float32x4_t
        -:15085:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15086:vcvtq_f32_u32 (uint32x4_t __a)
        -:15087:{
        -:15088:  return __builtin_aarch64_floatunsv4siv4sf ((int32x4_t) __a);
        -:15089:}
        -:15090:
        -:15091:__extension__ extern __inline float64x2_t
        -:15092:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15093:vcvtq_f64_s64 (int64x2_t __a)
        -:15094:{
        -:15095:  return __builtin_aarch64_floatv2div2df (__a);
        -:15096:}
        -:15097:
        -:15098:__extension__ extern __inline float64x2_t
        -:15099:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15100:vcvtq_f64_u64 (uint64x2_t __a)
        -:15101:{
        -:15102:  return __builtin_aarch64_floatunsv2div2df ((int64x2_t) __a);
        -:15103:}
        -:15104:
        -:15105:/* vcvt (float -> <u>int)  */
        -:15106:
        -:15107:__extension__ extern __inline int64_t
        -:15108:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15109:vcvtd_s64_f64 (float64_t __a)
        -:15110:{
        -:15111:  return (int64_t) __a;
        -:15112:}
        -:15113:
        -:15114:__extension__ extern __inline uint64_t
        -:15115:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15116:vcvtd_u64_f64 (float64_t __a)
        -:15117:{
        -:15118:  return (uint64_t) __a;
        -:15119:}
        -:15120:
        -:15121:__extension__ extern __inline int32_t
        -:15122:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15123:vcvts_s32_f32 (float32_t __a)
        -:15124:{
        -:15125:  return (int32_t) __a;
        -:15126:}
        -:15127:
        -:15128:__extension__ extern __inline uint32_t
        -:15129:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15130:vcvts_u32_f32 (float32_t __a)
        -:15131:{
        -:15132:  return (uint32_t) __a;
        -:15133:}
        -:15134:
        -:15135:__extension__ extern __inline int32x2_t
        -:15136:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15137:vcvt_s32_f32 (float32x2_t __a)
        -:15138:{
        -:15139:  return __builtin_aarch64_lbtruncv2sfv2si (__a);
        -:15140:}
        -:15141:
        -:15142:__extension__ extern __inline uint32x2_t
        -:15143:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15144:vcvt_u32_f32 (float32x2_t __a)
        -:15145:{
        -:15146:  return __builtin_aarch64_lbtruncuv2sfv2si_us (__a);
        -:15147:}
        -:15148:
        -:15149:__extension__ extern __inline int32x4_t
        -:15150:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15151:vcvtq_s32_f32 (float32x4_t __a)
        -:15152:{
        -:15153:  return __builtin_aarch64_lbtruncv4sfv4si (__a);
        -:15154:}
        -:15155:
        -:15156:__extension__ extern __inline uint32x4_t
        -:15157:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15158:vcvtq_u32_f32 (float32x4_t __a)
        -:15159:{
        -:15160:  return __builtin_aarch64_lbtruncuv4sfv4si_us (__a);
        -:15161:}
        -:15162:
        -:15163:__extension__ extern __inline int64x1_t
        -:15164:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15165:vcvt_s64_f64 (float64x1_t __a)
        -:15166:{
        -:15167:  return (int64x1_t) {vcvtd_s64_f64 (__a[0])};
        -:15168:}
        -:15169:
        -:15170:__extension__ extern __inline uint64x1_t
        -:15171:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15172:vcvt_u64_f64 (float64x1_t __a)
        -:15173:{
        -:15174:  return (uint64x1_t) {vcvtd_u64_f64 (__a[0])};
        -:15175:}
        -:15176:
        -:15177:__extension__ extern __inline int64x2_t
        -:15178:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15179:vcvtq_s64_f64 (float64x2_t __a)
        -:15180:{
        -:15181:  return __builtin_aarch64_lbtruncv2dfv2di (__a);
        -:15182:}
        -:15183:
        -:15184:__extension__ extern __inline uint64x2_t
        -:15185:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15186:vcvtq_u64_f64 (float64x2_t __a)
        -:15187:{
        -:15188:  return __builtin_aarch64_lbtruncuv2dfv2di_us (__a);
        -:15189:}
        -:15190:
        -:15191:/* vcvta  */
        -:15192:
        -:15193:__extension__ extern __inline int64_t
        -:15194:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15195:vcvtad_s64_f64 (float64_t __a)
        -:15196:{
        -:15197:  return __builtin_aarch64_lrounddfdi (__a);
        -:15198:}
        -:15199:
        -:15200:__extension__ extern __inline uint64_t
        -:15201:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15202:vcvtad_u64_f64 (float64_t __a)
        -:15203:{
        -:15204:  return __builtin_aarch64_lroundudfdi_us (__a);
        -:15205:}
        -:15206:
        -:15207:__extension__ extern __inline int32_t
        -:15208:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15209:vcvtas_s32_f32 (float32_t __a)
        -:15210:{
        -:15211:  return __builtin_aarch64_lroundsfsi (__a);
        -:15212:}
        -:15213:
        -:15214:__extension__ extern __inline uint32_t
        -:15215:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15216:vcvtas_u32_f32 (float32_t __a)
        -:15217:{
        -:15218:  return __builtin_aarch64_lroundusfsi_us (__a);
        -:15219:}
        -:15220:
        -:15221:__extension__ extern __inline int32x2_t
        -:15222:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15223:vcvta_s32_f32 (float32x2_t __a)
        -:15224:{
        -:15225:  return __builtin_aarch64_lroundv2sfv2si (__a);
        -:15226:}
        -:15227:
        -:15228:__extension__ extern __inline uint32x2_t
        -:15229:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15230:vcvta_u32_f32 (float32x2_t __a)
        -:15231:{
        -:15232:  return __builtin_aarch64_lrounduv2sfv2si_us (__a);
        -:15233:}
        -:15234:
        -:15235:__extension__ extern __inline int32x4_t
        -:15236:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15237:vcvtaq_s32_f32 (float32x4_t __a)
        -:15238:{
        -:15239:  return __builtin_aarch64_lroundv4sfv4si (__a);
        -:15240:}
        -:15241:
        -:15242:__extension__ extern __inline uint32x4_t
        -:15243:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15244:vcvtaq_u32_f32 (float32x4_t __a)
        -:15245:{
        -:15246:  return __builtin_aarch64_lrounduv4sfv4si_us (__a);
        -:15247:}
        -:15248:
        -:15249:__extension__ extern __inline int64x1_t
        -:15250:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15251:vcvta_s64_f64 (float64x1_t __a)
        -:15252:{
        -:15253:  return (int64x1_t) {vcvtad_s64_f64 (__a[0])};
        -:15254:}
        -:15255:
        -:15256:__extension__ extern __inline uint64x1_t
        -:15257:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15258:vcvta_u64_f64 (float64x1_t __a)
        -:15259:{
        -:15260:  return (uint64x1_t) {vcvtad_u64_f64 (__a[0])};
        -:15261:}
        -:15262:
        -:15263:__extension__ extern __inline int64x2_t
        -:15264:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15265:vcvtaq_s64_f64 (float64x2_t __a)
        -:15266:{
        -:15267:  return __builtin_aarch64_lroundv2dfv2di (__a);
        -:15268:}
        -:15269:
        -:15270:__extension__ extern __inline uint64x2_t
        -:15271:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15272:vcvtaq_u64_f64 (float64x2_t __a)
        -:15273:{
        -:15274:  return __builtin_aarch64_lrounduv2dfv2di_us (__a);
        -:15275:}
        -:15276:
        -:15277:/* vcvtm  */
        -:15278:
        -:15279:__extension__ extern __inline int64_t
        -:15280:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15281:vcvtmd_s64_f64 (float64_t __a)
        -:15282:{
        -:15283:  return __builtin_llfloor (__a);
        -:15284:}
        -:15285:
        -:15286:__extension__ extern __inline uint64_t
        -:15287:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15288:vcvtmd_u64_f64 (float64_t __a)
        -:15289:{
        -:15290:  return __builtin_aarch64_lfloorudfdi_us (__a);
        -:15291:}
        -:15292:
        -:15293:__extension__ extern __inline int32_t
        -:15294:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15295:vcvtms_s32_f32 (float32_t __a)
        -:15296:{
        -:15297:  return __builtin_ifloorf (__a);
        -:15298:}
        -:15299:
        -:15300:__extension__ extern __inline uint32_t
        -:15301:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15302:vcvtms_u32_f32 (float32_t __a)
        -:15303:{
        -:15304:  return __builtin_aarch64_lfloorusfsi_us (__a);
        -:15305:}
        -:15306:
        -:15307:__extension__ extern __inline int32x2_t
        -:15308:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15309:vcvtm_s32_f32 (float32x2_t __a)
        -:15310:{
        -:15311:  return __builtin_aarch64_lfloorv2sfv2si (__a);
        -:15312:}
        -:15313:
        -:15314:__extension__ extern __inline uint32x2_t
        -:15315:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15316:vcvtm_u32_f32 (float32x2_t __a)
        -:15317:{
        -:15318:  return __builtin_aarch64_lflooruv2sfv2si_us (__a);
        -:15319:}
        -:15320:
        -:15321:__extension__ extern __inline int32x4_t
        -:15322:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15323:vcvtmq_s32_f32 (float32x4_t __a)
        -:15324:{
        -:15325:  return __builtin_aarch64_lfloorv4sfv4si (__a);
        -:15326:}
        -:15327:
        -:15328:__extension__ extern __inline uint32x4_t
        -:15329:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15330:vcvtmq_u32_f32 (float32x4_t __a)
        -:15331:{
        -:15332:  return __builtin_aarch64_lflooruv4sfv4si_us (__a);
        -:15333:}
        -:15334:
        -:15335:__extension__ extern __inline int64x1_t
        -:15336:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15337:vcvtm_s64_f64 (float64x1_t __a)
        -:15338:{
        -:15339:  return (int64x1_t) {vcvtmd_s64_f64 (__a[0])};
        -:15340:}
        -:15341:
        -:15342:__extension__ extern __inline uint64x1_t
        -:15343:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15344:vcvtm_u64_f64 (float64x1_t __a)
        -:15345:{
        -:15346:  return (uint64x1_t) {vcvtmd_u64_f64 (__a[0])};
        -:15347:}
        -:15348:
        -:15349:__extension__ extern __inline int64x2_t
        -:15350:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15351:vcvtmq_s64_f64 (float64x2_t __a)
        -:15352:{
        -:15353:  return __builtin_aarch64_lfloorv2dfv2di (__a);
        -:15354:}
        -:15355:
        -:15356:__extension__ extern __inline uint64x2_t
        -:15357:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15358:vcvtmq_u64_f64 (float64x2_t __a)
        -:15359:{
        -:15360:  return __builtin_aarch64_lflooruv2dfv2di_us (__a);
        -:15361:}
        -:15362:
        -:15363:/* vcvtn  */
        -:15364:
        -:15365:__extension__ extern __inline int64_t
        -:15366:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15367:vcvtnd_s64_f64 (float64_t __a)
        -:15368:{
        -:15369:  return __builtin_aarch64_lfrintndfdi (__a);
        -:15370:}
        -:15371:
        -:15372:__extension__ extern __inline uint64_t
        -:15373:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15374:vcvtnd_u64_f64 (float64_t __a)
        -:15375:{
        -:15376:  return __builtin_aarch64_lfrintnudfdi_us (__a);
        -:15377:}
        -:15378:
        -:15379:__extension__ extern __inline int32_t
        -:15380:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15381:vcvtns_s32_f32 (float32_t __a)
        -:15382:{
        -:15383:  return __builtin_aarch64_lfrintnsfsi (__a);
        -:15384:}
        -:15385:
        -:15386:__extension__ extern __inline uint32_t
        -:15387:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15388:vcvtns_u32_f32 (float32_t __a)
        -:15389:{
        -:15390:  return __builtin_aarch64_lfrintnusfsi_us (__a);
        -:15391:}
        -:15392:
        -:15393:__extension__ extern __inline int32x2_t
        -:15394:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15395:vcvtn_s32_f32 (float32x2_t __a)
        -:15396:{
        -:15397:  return __builtin_aarch64_lfrintnv2sfv2si (__a);
        -:15398:}
        -:15399:
        -:15400:__extension__ extern __inline uint32x2_t
        -:15401:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15402:vcvtn_u32_f32 (float32x2_t __a)
        -:15403:{
        -:15404:  return __builtin_aarch64_lfrintnuv2sfv2si_us (__a);
        -:15405:}
        -:15406:
        -:15407:__extension__ extern __inline int32x4_t
        -:15408:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15409:vcvtnq_s32_f32 (float32x4_t __a)
        -:15410:{
        -:15411:  return __builtin_aarch64_lfrintnv4sfv4si (__a);
        -:15412:}
        -:15413:
        -:15414:__extension__ extern __inline uint32x4_t
        -:15415:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15416:vcvtnq_u32_f32 (float32x4_t __a)
        -:15417:{
        -:15418:  return __builtin_aarch64_lfrintnuv4sfv4si_us (__a);
        -:15419:}
        -:15420:
        -:15421:__extension__ extern __inline int64x1_t
        -:15422:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15423:vcvtn_s64_f64 (float64x1_t __a)
        -:15424:{
        -:15425:  return (int64x1_t) {vcvtnd_s64_f64 (__a[0])};
        -:15426:}
        -:15427:
        -:15428:__extension__ extern __inline uint64x1_t
        -:15429:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15430:vcvtn_u64_f64 (float64x1_t __a)
        -:15431:{
        -:15432:  return (uint64x1_t) {vcvtnd_u64_f64 (__a[0])};
        -:15433:}
        -:15434:
        -:15435:__extension__ extern __inline int64x2_t
        -:15436:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15437:vcvtnq_s64_f64 (float64x2_t __a)
        -:15438:{
        -:15439:  return __builtin_aarch64_lfrintnv2dfv2di (__a);
        -:15440:}
        -:15441:
        -:15442:__extension__ extern __inline uint64x2_t
        -:15443:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15444:vcvtnq_u64_f64 (float64x2_t __a)
        -:15445:{
        -:15446:  return __builtin_aarch64_lfrintnuv2dfv2di_us (__a);
        -:15447:}
        -:15448:
        -:15449:/* vcvtp  */
        -:15450:
        -:15451:__extension__ extern __inline int64_t
        -:15452:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15453:vcvtpd_s64_f64 (float64_t __a)
        -:15454:{
        -:15455:  return __builtin_llceil (__a);
        -:15456:}
        -:15457:
        -:15458:__extension__ extern __inline uint64_t
        -:15459:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15460:vcvtpd_u64_f64 (float64_t __a)
        -:15461:{
        -:15462:  return __builtin_aarch64_lceiludfdi_us (__a);
        -:15463:}
        -:15464:
        -:15465:__extension__ extern __inline int32_t
        -:15466:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15467:vcvtps_s32_f32 (float32_t __a)
        -:15468:{
        -:15469:  return __builtin_iceilf (__a);
        -:15470:}
        -:15471:
        -:15472:__extension__ extern __inline uint32_t
        -:15473:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15474:vcvtps_u32_f32 (float32_t __a)
        -:15475:{
        -:15476:  return __builtin_aarch64_lceilusfsi_us (__a);
        -:15477:}
        -:15478:
        -:15479:__extension__ extern __inline int32x2_t
        -:15480:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15481:vcvtp_s32_f32 (float32x2_t __a)
        -:15482:{
        -:15483:  return __builtin_aarch64_lceilv2sfv2si (__a);
        -:15484:}
        -:15485:
        -:15486:__extension__ extern __inline uint32x2_t
        -:15487:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15488:vcvtp_u32_f32 (float32x2_t __a)
        -:15489:{
        -:15490:  return __builtin_aarch64_lceiluv2sfv2si_us (__a);
        -:15491:}
        -:15492:
        -:15493:__extension__ extern __inline int32x4_t
        -:15494:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15495:vcvtpq_s32_f32 (float32x4_t __a)
        -:15496:{
        -:15497:  return __builtin_aarch64_lceilv4sfv4si (__a);
        -:15498:}
        -:15499:
        -:15500:__extension__ extern __inline uint32x4_t
        -:15501:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15502:vcvtpq_u32_f32 (float32x4_t __a)
        -:15503:{
        -:15504:  return __builtin_aarch64_lceiluv4sfv4si_us (__a);
        -:15505:}
        -:15506:
        -:15507:__extension__ extern __inline int64x1_t
        -:15508:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15509:vcvtp_s64_f64 (float64x1_t __a)
        -:15510:{
        -:15511:  return (int64x1_t) {vcvtpd_s64_f64 (__a[0])};
        -:15512:}
        -:15513:
        -:15514:__extension__ extern __inline uint64x1_t
        -:15515:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15516:vcvtp_u64_f64 (float64x1_t __a)
        -:15517:{
        -:15518:  return (uint64x1_t) {vcvtpd_u64_f64 (__a[0])};
        -:15519:}
        -:15520:
        -:15521:__extension__ extern __inline int64x2_t
        -:15522:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15523:vcvtpq_s64_f64 (float64x2_t __a)
        -:15524:{
        -:15525:  return __builtin_aarch64_lceilv2dfv2di (__a);
        -:15526:}
        -:15527:
        -:15528:__extension__ extern __inline uint64x2_t
        -:15529:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15530:vcvtpq_u64_f64 (float64x2_t __a)
        -:15531:{
        -:15532:  return __builtin_aarch64_lceiluv2dfv2di_us (__a);
        -:15533:}
        -:15534:
        -:15535:/* vdup_n  */
        -:15536:
        -:15537:__extension__ extern __inline float16x4_t
        -:15538:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15539:vdup_n_f16 (float16_t __a)
        -:15540:{
        -:15541:  return (float16x4_t) {__a, __a, __a, __a};
        -:15542:}
        -:15543:
        -:15544:__extension__ extern __inline float32x2_t
        -:15545:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15546:vdup_n_f32 (float32_t __a)
        -:15547:{
        -:15548:  return (float32x2_t) {__a, __a};
        -:15549:}
        -:15550:
        -:15551:__extension__ extern __inline float64x1_t
        -:15552:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15553:vdup_n_f64 (float64_t __a)
        -:15554:{
        -:15555:  return (float64x1_t) {__a};
        -:15556:}
        -:15557:
        -:15558:__extension__ extern __inline poly8x8_t
        -:15559:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15560:vdup_n_p8 (poly8_t __a)
        -:15561:{
        -:15562:  return (poly8x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};
        -:15563:}
        -:15564:
        -:15565:__extension__ extern __inline poly16x4_t
        -:15566:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15567:vdup_n_p16 (poly16_t __a)
        -:15568:{
        -:15569:  return (poly16x4_t) {__a, __a, __a, __a};
        -:15570:}
        -:15571:
        -:15572:__extension__ extern __inline poly64x1_t
        -:15573:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15574:vdup_n_p64 (poly64_t __a)
        -:15575:{
        -:15576:  return (poly64x1_t) {__a};
        -:15577:}
        -:15578:
        -:15579:__extension__ extern __inline int8x8_t
        -:15580:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15581:vdup_n_s8 (int8_t __a)
        -:15582:{
        -:15583:  return (int8x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};
        -:15584:}
        -:15585:
        -:15586:__extension__ extern __inline int16x4_t
        -:15587:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15588:vdup_n_s16 (int16_t __a)
        -:15589:{
        -:15590:  return (int16x4_t) {__a, __a, __a, __a};
        -:15591:}
        -:15592:
        -:15593:__extension__ extern __inline int32x2_t
        -:15594:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15595:vdup_n_s32 (int32_t __a)
        -:15596:{
        -:15597:  return (int32x2_t) {__a, __a};
        -:15598:}
        -:15599:
        -:15600:__extension__ extern __inline int64x1_t
        -:15601:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15602:vdup_n_s64 (int64_t __a)
        -:15603:{
        -:15604:  return (int64x1_t) {__a};
        -:15605:}
        -:15606:
        -:15607:__extension__ extern __inline uint8x8_t
        -:15608:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15609:vdup_n_u8 (uint8_t __a)
        -:15610:{
        -:15611:  return (uint8x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};
        -:15612:}
        -:15613:
        -:15614:__extension__ extern __inline uint16x4_t
        -:15615:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15616:vdup_n_u16 (uint16_t __a)
        -:15617:{
        -:15618:  return (uint16x4_t) {__a, __a, __a, __a};
        -:15619:}
        -:15620:
        -:15621:__extension__ extern __inline uint32x2_t
        -:15622:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15623:vdup_n_u32 (uint32_t __a)
        -:15624:{
        -:15625:  return (uint32x2_t) {__a, __a};
        -:15626:}
        -:15627:
        -:15628:__extension__ extern __inline uint64x1_t
        -:15629:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15630:vdup_n_u64 (uint64_t __a)
        -:15631:{
        -:15632:  return (uint64x1_t) {__a};
        -:15633:}
        -:15634:
        -:15635:/* vdupq_n  */
        -:15636:
        -:15637:__extension__ extern __inline float16x8_t
        -:15638:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15639:vdupq_n_f16 (float16_t __a)
        -:15640:{
        -:15641:  return (float16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};
        -:15642:}
        -:15643:
        -:15644:__extension__ extern __inline float32x4_t
        -:15645:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15646:vdupq_n_f32 (float32_t __a)
        -:15647:{
        -:15648:  return (float32x4_t) {__a, __a, __a, __a};
        -:15649:}
        -:15650:
        -:15651:__extension__ extern __inline float64x2_t
        -:15652:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15653:vdupq_n_f64 (float64_t __a)
        -:15654:{
        -:15655:  return (float64x2_t) {__a, __a};
        -:15656:}
        -:15657:
        -:15658:__extension__ extern __inline poly8x16_t
        -:15659:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15660:vdupq_n_p8 (uint32_t __a)
        -:15661:{
        -:15662:  return (poly8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,
        -:15663:		       __a, __a, __a, __a, __a, __a, __a, __a};
        -:15664:}
        -:15665:
        -:15666:__extension__ extern __inline poly16x8_t
        -:15667:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15668:vdupq_n_p16 (uint32_t __a)
        -:15669:{
        -:15670:  return (poly16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};
        -:15671:}
        -:15672:
        -:15673:__extension__ extern __inline poly64x2_t
        -:15674:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15675:vdupq_n_p64 (uint64_t __a)
        -:15676:{
        -:15677:  return (poly64x2_t) {__a, __a};
        -:15678:}
        -:15679:
        -:15680:__extension__ extern __inline int8x16_t
        -:15681:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15682:vdupq_n_s8 (int32_t __a)
        -:15683:{
        -:15684:  return (int8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,
        -:15685:		      __a, __a, __a, __a, __a, __a, __a, __a};
        -:15686:}
        -:15687:
        -:15688:__extension__ extern __inline int16x8_t
        -:15689:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15690:vdupq_n_s16 (int32_t __a)
        -:15691:{
        -:15692:  return (int16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};
        -:15693:}
        -:15694:
        -:15695:__extension__ extern __inline int32x4_t
        -:15696:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15697:vdupq_n_s32 (int32_t __a)
        -:15698:{
        -:15699:  return (int32x4_t) {__a, __a, __a, __a};
        -:15700:}
        -:15701:
        -:15702:__extension__ extern __inline int64x2_t
        -:15703:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15704:vdupq_n_s64 (int64_t __a)
        -:15705:{
        -:15706:  return (int64x2_t) {__a, __a};
        -:15707:}
        -:15708:
        -:15709:__extension__ extern __inline uint8x16_t
        -:15710:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15711:vdupq_n_u8 (uint32_t __a)
        -:15712:{
        -:15713:  return (uint8x16_t) {__a, __a, __a, __a, __a, __a, __a, __a,
        -:15714:		       __a, __a, __a, __a, __a, __a, __a, __a};
        -:15715:}
        -:15716:
        -:15717:__extension__ extern __inline uint16x8_t
        -:15718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15719:vdupq_n_u16 (uint32_t __a)
        -:15720:{
        -:15721:  return (uint16x8_t) {__a, __a, __a, __a, __a, __a, __a, __a};
        -:15722:}
        -:15723:
        -:15724:__extension__ extern __inline uint32x4_t
        -:15725:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15726:vdupq_n_u32 (uint32_t __a)
        -:15727:{
        -:15728:  return (uint32x4_t) {__a, __a, __a, __a};
        -:15729:}
        -:15730:
        -:15731:__extension__ extern __inline uint64x2_t
        -:15732:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15733:vdupq_n_u64 (uint64_t __a)
        -:15734:{
        -:15735:  return (uint64x2_t) {__a, __a};
        -:15736:}
        -:15737:
        -:15738:/* vdup_lane  */
        -:15739:
        -:15740:__extension__ extern __inline float16x4_t
        -:15741:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15742:vdup_lane_f16 (float16x4_t __a, const int __b)
        -:15743:{
        -:15744:  return __aarch64_vdup_lane_f16 (__a, __b);
        -:15745:}
        -:15746:
        -:15747:__extension__ extern __inline float32x2_t
        -:15748:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15749:vdup_lane_f32 (float32x2_t __a, const int __b)
        -:15750:{
        -:15751:  return __aarch64_vdup_lane_f32 (__a, __b);
        -:15752:}
        -:15753:
        -:15754:__extension__ extern __inline float64x1_t
        -:15755:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15756:vdup_lane_f64 (float64x1_t __a, const int __b)
        -:15757:{
        -:15758:  return __aarch64_vdup_lane_f64 (__a, __b);
        -:15759:}
        -:15760:
        -:15761:__extension__ extern __inline poly8x8_t
        -:15762:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15763:vdup_lane_p8 (poly8x8_t __a, const int __b)
        -:15764:{
        -:15765:  return __aarch64_vdup_lane_p8 (__a, __b);
        -:15766:}
        -:15767:
        -:15768:__extension__ extern __inline poly16x4_t
        -:15769:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15770:vdup_lane_p16 (poly16x4_t __a, const int __b)
        -:15771:{
        -:15772:  return __aarch64_vdup_lane_p16 (__a, __b);
        -:15773:}
        -:15774:
        -:15775:__extension__ extern __inline poly64x1_t
        -:15776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15777:vdup_lane_p64 (poly64x1_t __a, const int __b)
        -:15778:{
        -:15779:  return __aarch64_vdup_lane_p64 (__a, __b);
        -:15780:}
        -:15781:
        -:15782:__extension__ extern __inline int8x8_t
        -:15783:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15784:vdup_lane_s8 (int8x8_t __a, const int __b)
        -:15785:{
        -:15786:  return __aarch64_vdup_lane_s8 (__a, __b);
        -:15787:}
        -:15788:
        -:15789:__extension__ extern __inline int16x4_t
        -:15790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15791:vdup_lane_s16 (int16x4_t __a, const int __b)
        -:15792:{
        -:15793:  return __aarch64_vdup_lane_s16 (__a, __b);
        -:15794:}
        -:15795:
        -:15796:__extension__ extern __inline int32x2_t
        -:15797:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15798:vdup_lane_s32 (int32x2_t __a, const int __b)
        -:15799:{
        -:15800:  return __aarch64_vdup_lane_s32 (__a, __b);
        -:15801:}
        -:15802:
        -:15803:__extension__ extern __inline int64x1_t
        -:15804:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15805:vdup_lane_s64 (int64x1_t __a, const int __b)
        -:15806:{
        -:15807:  return __aarch64_vdup_lane_s64 (__a, __b);
        -:15808:}
        -:15809:
        -:15810:__extension__ extern __inline uint8x8_t
        -:15811:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15812:vdup_lane_u8 (uint8x8_t __a, const int __b)
        -:15813:{
        -:15814:  return __aarch64_vdup_lane_u8 (__a, __b);
        -:15815:}
        -:15816:
        -:15817:__extension__ extern __inline uint16x4_t
        -:15818:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15819:vdup_lane_u16 (uint16x4_t __a, const int __b)
        -:15820:{
        -:15821:  return __aarch64_vdup_lane_u16 (__a, __b);
        -:15822:}
        -:15823:
        -:15824:__extension__ extern __inline uint32x2_t
        -:15825:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15826:vdup_lane_u32 (uint32x2_t __a, const int __b)
        -:15827:{
        -:15828:  return __aarch64_vdup_lane_u32 (__a, __b);
        -:15829:}
        -:15830:
        -:15831:__extension__ extern __inline uint64x1_t
        -:15832:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15833:vdup_lane_u64 (uint64x1_t __a, const int __b)
        -:15834:{
        -:15835:  return __aarch64_vdup_lane_u64 (__a, __b);
        -:15836:}
        -:15837:
        -:15838:/* vdup_laneq  */
        -:15839:
        -:15840:__extension__ extern __inline float16x4_t
        -:15841:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15842:vdup_laneq_f16 (float16x8_t __a, const int __b)
        -:15843:{
        -:15844:  return __aarch64_vdup_laneq_f16 (__a, __b);
        -:15845:}
        -:15846:
        -:15847:__extension__ extern __inline float32x2_t
        -:15848:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15849:vdup_laneq_f32 (float32x4_t __a, const int __b)
        -:15850:{
        -:15851:  return __aarch64_vdup_laneq_f32 (__a, __b);
        -:15852:}
        -:15853:
        -:15854:__extension__ extern __inline float64x1_t
        -:15855:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15856:vdup_laneq_f64 (float64x2_t __a, const int __b)
        -:15857:{
        -:15858:  return __aarch64_vdup_laneq_f64 (__a, __b);
        -:15859:}
        -:15860:
        -:15861:__extension__ extern __inline poly8x8_t
        -:15862:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15863:vdup_laneq_p8 (poly8x16_t __a, const int __b)
        -:15864:{
        -:15865:  return __aarch64_vdup_laneq_p8 (__a, __b);
        -:15866:}
        -:15867:
        -:15868:__extension__ extern __inline poly16x4_t
        -:15869:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15870:vdup_laneq_p16 (poly16x8_t __a, const int __b)
        -:15871:{
        -:15872:  return __aarch64_vdup_laneq_p16 (__a, __b);
        -:15873:}
        -:15874:
        -:15875:__extension__ extern __inline poly64x1_t
        -:15876:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15877:vdup_laneq_p64 (poly64x2_t __a, const int __b)
        -:15878:{
        -:15879:  return __aarch64_vdup_laneq_p64 (__a, __b);
        -:15880:}
        -:15881:
        -:15882:__extension__ extern __inline int8x8_t
        -:15883:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15884:vdup_laneq_s8 (int8x16_t __a, const int __b)
        -:15885:{
        -:15886:  return __aarch64_vdup_laneq_s8 (__a, __b);
        -:15887:}
        -:15888:
        -:15889:__extension__ extern __inline int16x4_t
        -:15890:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15891:vdup_laneq_s16 (int16x8_t __a, const int __b)
        -:15892:{
        -:15893:  return __aarch64_vdup_laneq_s16 (__a, __b);
        -:15894:}
        -:15895:
        -:15896:__extension__ extern __inline int32x2_t
        -:15897:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15898:vdup_laneq_s32 (int32x4_t __a, const int __b)
        -:15899:{
        -:15900:  return __aarch64_vdup_laneq_s32 (__a, __b);
        -:15901:}
        -:15902:
        -:15903:__extension__ extern __inline int64x1_t
        -:15904:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15905:vdup_laneq_s64 (int64x2_t __a, const int __b)
        -:15906:{
        -:15907:  return __aarch64_vdup_laneq_s64 (__a, __b);
        -:15908:}
        -:15909:
        -:15910:__extension__ extern __inline uint8x8_t
        -:15911:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15912:vdup_laneq_u8 (uint8x16_t __a, const int __b)
        -:15913:{
        -:15914:  return __aarch64_vdup_laneq_u8 (__a, __b);
        -:15915:}
        -:15916:
        -:15917:__extension__ extern __inline uint16x4_t
        -:15918:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15919:vdup_laneq_u16 (uint16x8_t __a, const int __b)
        -:15920:{
        -:15921:  return __aarch64_vdup_laneq_u16 (__a, __b);
        -:15922:}
        -:15923:
        -:15924:__extension__ extern __inline uint32x2_t
        -:15925:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15926:vdup_laneq_u32 (uint32x4_t __a, const int __b)
        -:15927:{
        -:15928:  return __aarch64_vdup_laneq_u32 (__a, __b);
        -:15929:}
        -:15930:
        -:15931:__extension__ extern __inline uint64x1_t
        -:15932:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15933:vdup_laneq_u64 (uint64x2_t __a, const int __b)
        -:15934:{
        -:15935:  return __aarch64_vdup_laneq_u64 (__a, __b);
        -:15936:}
        -:15937:
        -:15938:/* vdupq_lane  */
        -:15939:
        -:15940:__extension__ extern __inline float16x8_t
        -:15941:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15942:vdupq_lane_f16 (float16x4_t __a, const int __b)
        -:15943:{
        -:15944:  return __aarch64_vdupq_lane_f16 (__a, __b);
        -:15945:}
        -:15946:
        -:15947:__extension__ extern __inline float32x4_t
        -:15948:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15949:vdupq_lane_f32 (float32x2_t __a, const int __b)
        -:15950:{
        -:15951:  return __aarch64_vdupq_lane_f32 (__a, __b);
        -:15952:}
        -:15953:
        -:15954:__extension__ extern __inline float64x2_t
        -:15955:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15956:vdupq_lane_f64 (float64x1_t __a, const int __b)
        -:15957:{
        -:15958:  return __aarch64_vdupq_lane_f64 (__a, __b);
        -:15959:}
        -:15960:
        -:15961:__extension__ extern __inline poly8x16_t
        -:15962:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15963:vdupq_lane_p8 (poly8x8_t __a, const int __b)
        -:15964:{
        -:15965:  return __aarch64_vdupq_lane_p8 (__a, __b);
        -:15966:}
        -:15967:
        -:15968:__extension__ extern __inline poly16x8_t
        -:15969:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15970:vdupq_lane_p16 (poly16x4_t __a, const int __b)
        -:15971:{
        -:15972:  return __aarch64_vdupq_lane_p16 (__a, __b);
        -:15973:}
        -:15974:
        -:15975:__extension__ extern __inline poly64x2_t
        -:15976:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15977:vdupq_lane_p64 (poly64x1_t __a, const int __b)
        -:15978:{
        -:15979:  return __aarch64_vdupq_lane_p64 (__a, __b);
        -:15980:}
        -:15981:
        -:15982:__extension__ extern __inline int8x16_t
        -:15983:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15984:vdupq_lane_s8 (int8x8_t __a, const int __b)
        -:15985:{
        -:15986:  return __aarch64_vdupq_lane_s8 (__a, __b);
        -:15987:}
        -:15988:
        -:15989:__extension__ extern __inline int16x8_t
        -:15990:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15991:vdupq_lane_s16 (int16x4_t __a, const int __b)
        -:15992:{
        -:15993:  return __aarch64_vdupq_lane_s16 (__a, __b);
        -:15994:}
        -:15995:
        -:15996:__extension__ extern __inline int32x4_t
        -:15997:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:15998:vdupq_lane_s32 (int32x2_t __a, const int __b)
        -:15999:{
        -:16000:  return __aarch64_vdupq_lane_s32 (__a, __b);
        -:16001:}
        -:16002:
        -:16003:__extension__ extern __inline int64x2_t
        -:16004:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16005:vdupq_lane_s64 (int64x1_t __a, const int __b)
        -:16006:{
        -:16007:  return __aarch64_vdupq_lane_s64 (__a, __b);
        -:16008:}
        -:16009:
        -:16010:__extension__ extern __inline uint8x16_t
        -:16011:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16012:vdupq_lane_u8 (uint8x8_t __a, const int __b)
        -:16013:{
        -:16014:  return __aarch64_vdupq_lane_u8 (__a, __b);
        -:16015:}
        -:16016:
        -:16017:__extension__ extern __inline uint16x8_t
        -:16018:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16019:vdupq_lane_u16 (uint16x4_t __a, const int __b)
        -:16020:{
        -:16021:  return __aarch64_vdupq_lane_u16 (__a, __b);
        -:16022:}
        -:16023:
        -:16024:__extension__ extern __inline uint32x4_t
        -:16025:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16026:vdupq_lane_u32 (uint32x2_t __a, const int __b)
        -:16027:{
        -:16028:  return __aarch64_vdupq_lane_u32 (__a, __b);
        -:16029:}
        -:16030:
        -:16031:__extension__ extern __inline uint64x2_t
        -:16032:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16033:vdupq_lane_u64 (uint64x1_t __a, const int __b)
        -:16034:{
        -:16035:  return __aarch64_vdupq_lane_u64 (__a, __b);
        -:16036:}
        -:16037:
        -:16038:/* vdupq_laneq  */
        -:16039:
        -:16040:__extension__ extern __inline float16x8_t
        -:16041:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16042:vdupq_laneq_f16 (float16x8_t __a, const int __b)
        -:16043:{
        -:16044:  return __aarch64_vdupq_laneq_f16 (__a, __b);
        -:16045:}
        -:16046:
        -:16047:__extension__ extern __inline float32x4_t
        -:16048:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16049:vdupq_laneq_f32 (float32x4_t __a, const int __b)
        -:16050:{
        -:16051:  return __aarch64_vdupq_laneq_f32 (__a, __b);
        -:16052:}
        -:16053:
        -:16054:__extension__ extern __inline float64x2_t
        -:16055:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16056:vdupq_laneq_f64 (float64x2_t __a, const int __b)
        -:16057:{
        -:16058:  return __aarch64_vdupq_laneq_f64 (__a, __b);
        -:16059:}
        -:16060:
        -:16061:__extension__ extern __inline poly8x16_t
        -:16062:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16063:vdupq_laneq_p8 (poly8x16_t __a, const int __b)
        -:16064:{
        -:16065:  return __aarch64_vdupq_laneq_p8 (__a, __b);
        -:16066:}
        -:16067:
        -:16068:__extension__ extern __inline poly16x8_t
        -:16069:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16070:vdupq_laneq_p16 (poly16x8_t __a, const int __b)
        -:16071:{
        -:16072:  return __aarch64_vdupq_laneq_p16 (__a, __b);
        -:16073:}
        -:16074:
        -:16075:__extension__ extern __inline poly64x2_t
        -:16076:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16077:vdupq_laneq_p64 (poly64x2_t __a, const int __b)
        -:16078:{
        -:16079:  return __aarch64_vdupq_laneq_p64 (__a, __b);
        -:16080:}
        -:16081:
        -:16082:__extension__ extern __inline int8x16_t
        -:16083:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16084:vdupq_laneq_s8 (int8x16_t __a, const int __b)
        -:16085:{
        -:16086:  return __aarch64_vdupq_laneq_s8 (__a, __b);
        -:16087:}
        -:16088:
        -:16089:__extension__ extern __inline int16x8_t
        -:16090:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16091:vdupq_laneq_s16 (int16x8_t __a, const int __b)
        -:16092:{
        -:16093:  return __aarch64_vdupq_laneq_s16 (__a, __b);
        -:16094:}
        -:16095:
        -:16096:__extension__ extern __inline int32x4_t
        -:16097:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16098:vdupq_laneq_s32 (int32x4_t __a, const int __b)
        -:16099:{
        -:16100:  return __aarch64_vdupq_laneq_s32 (__a, __b);
        -:16101:}
        -:16102:
        -:16103:__extension__ extern __inline int64x2_t
        -:16104:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16105:vdupq_laneq_s64 (int64x2_t __a, const int __b)
        -:16106:{
        -:16107:  return __aarch64_vdupq_laneq_s64 (__a, __b);
        -:16108:}
        -:16109:
        -:16110:__extension__ extern __inline uint8x16_t
        -:16111:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16112:vdupq_laneq_u8 (uint8x16_t __a, const int __b)
        -:16113:{
        -:16114:  return __aarch64_vdupq_laneq_u8 (__a, __b);
        -:16115:}
        -:16116:
        -:16117:__extension__ extern __inline uint16x8_t
        -:16118:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16119:vdupq_laneq_u16 (uint16x8_t __a, const int __b)
        -:16120:{
        -:16121:  return __aarch64_vdupq_laneq_u16 (__a, __b);
        -:16122:}
        -:16123:
        -:16124:__extension__ extern __inline uint32x4_t
        -:16125:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16126:vdupq_laneq_u32 (uint32x4_t __a, const int __b)
        -:16127:{
        -:16128:  return __aarch64_vdupq_laneq_u32 (__a, __b);
        -:16129:}
        -:16130:
        -:16131:__extension__ extern __inline uint64x2_t
        -:16132:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16133:vdupq_laneq_u64 (uint64x2_t __a, const int __b)
        -:16134:{
        -:16135:  return __aarch64_vdupq_laneq_u64 (__a, __b);
        -:16136:}
        -:16137:
        -:16138:/* vdupb_lane  */
        -:16139:__extension__ extern __inline poly8_t
        -:16140:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16141:vdupb_lane_p8 (poly8x8_t __a, const int __b)
        -:16142:{
        -:16143:  return __aarch64_vget_lane_any (__a, __b);
        -:16144:}
        -:16145:
        -:16146:__extension__ extern __inline int8_t
        -:16147:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16148:vdupb_lane_s8 (int8x8_t __a, const int __b)
        -:16149:{
        -:16150:  return __aarch64_vget_lane_any (__a, __b);
        -:16151:}
        -:16152:
        -:16153:__extension__ extern __inline uint8_t
        -:16154:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16155:vdupb_lane_u8 (uint8x8_t __a, const int __b)
        -:16156:{
        -:16157:  return __aarch64_vget_lane_any (__a, __b);
        -:16158:}
        -:16159:
        -:16160:/* vduph_lane  */
        -:16161:
        -:16162:__extension__ extern __inline float16_t
        -:16163:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16164:vduph_lane_f16 (float16x4_t __a, const int __b)
        -:16165:{
        -:16166:  return __aarch64_vget_lane_any (__a, __b);
        -:16167:}
        -:16168:
        -:16169:__extension__ extern __inline poly16_t
        -:16170:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16171:vduph_lane_p16 (poly16x4_t __a, const int __b)
        -:16172:{
        -:16173:  return __aarch64_vget_lane_any (__a, __b);
        -:16174:}
        -:16175:
        -:16176:__extension__ extern __inline int16_t
        -:16177:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16178:vduph_lane_s16 (int16x4_t __a, const int __b)
        -:16179:{
        -:16180:  return __aarch64_vget_lane_any (__a, __b);
        -:16181:}
        -:16182:
        -:16183:__extension__ extern __inline uint16_t
        -:16184:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16185:vduph_lane_u16 (uint16x4_t __a, const int __b)
        -:16186:{
        -:16187:  return __aarch64_vget_lane_any (__a, __b);
        -:16188:}
        -:16189:
        -:16190:/* vdups_lane  */
        -:16191:
        -:16192:__extension__ extern __inline float32_t
        -:16193:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16194:vdups_lane_f32 (float32x2_t __a, const int __b)
        -:16195:{
        -:16196:  return __aarch64_vget_lane_any (__a, __b);
        -:16197:}
        -:16198:
        -:16199:__extension__ extern __inline int32_t
        -:16200:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16201:vdups_lane_s32 (int32x2_t __a, const int __b)
        -:16202:{
        -:16203:  return __aarch64_vget_lane_any (__a, __b);
        -:16204:}
        -:16205:
        -:16206:__extension__ extern __inline uint32_t
        -:16207:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16208:vdups_lane_u32 (uint32x2_t __a, const int __b)
        -:16209:{
        -:16210:  return __aarch64_vget_lane_any (__a, __b);
        -:16211:}
        -:16212:
        -:16213:/* vdupd_lane  */
        -:16214:__extension__ extern __inline float64_t
        -:16215:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16216:vdupd_lane_f64 (float64x1_t __a, const int __b)
        -:16217:{
        -:16218:  __AARCH64_LANE_CHECK (__a, __b);
        -:16219:  return __a[0];
        -:16220:}
        -:16221:
        -:16222:__extension__ extern __inline int64_t
        -:16223:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16224:vdupd_lane_s64 (int64x1_t __a, const int __b)
        -:16225:{
        -:16226:  __AARCH64_LANE_CHECK (__a, __b);
        -:16227:  return __a[0];
        -:16228:}
        -:16229:
        -:16230:__extension__ extern __inline uint64_t
        -:16231:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16232:vdupd_lane_u64 (uint64x1_t __a, const int __b)
        -:16233:{
        -:16234:  __AARCH64_LANE_CHECK (__a, __b);
        -:16235:  return __a[0];
        -:16236:}
        -:16237:
        -:16238:/* vdupb_laneq  */
        -:16239:__extension__ extern __inline poly8_t
        -:16240:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16241:vdupb_laneq_p8 (poly8x16_t __a, const int __b)
        -:16242:{
        -:16243:  return __aarch64_vget_lane_any (__a, __b);
        -:16244:}
        -:16245:
        -:16246:__extension__ extern __inline int8_t
        -:16247:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16248:vdupb_laneq_s8 (int8x16_t __a, const int __b)
        -:16249:{
        -:16250:  return __aarch64_vget_lane_any (__a, __b);
        -:16251:}
        -:16252:
        -:16253:__extension__ extern __inline uint8_t
        -:16254:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16255:vdupb_laneq_u8 (uint8x16_t __a, const int __b)
        -:16256:{
        -:16257:  return __aarch64_vget_lane_any (__a, __b);
        -:16258:}
        -:16259:
        -:16260:/* vduph_laneq  */
        -:16261:
        -:16262:__extension__ extern __inline float16_t
        -:16263:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16264:vduph_laneq_f16 (float16x8_t __a, const int __b)
        -:16265:{
        -:16266:  return __aarch64_vget_lane_any (__a, __b);
        -:16267:}
        -:16268:
        -:16269:__extension__ extern __inline poly16_t
        -:16270:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16271:vduph_laneq_p16 (poly16x8_t __a, const int __b)
        -:16272:{
        -:16273:  return __aarch64_vget_lane_any (__a, __b);
        -:16274:}
        -:16275:
        -:16276:__extension__ extern __inline int16_t
        -:16277:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16278:vduph_laneq_s16 (int16x8_t __a, const int __b)
        -:16279:{
        -:16280:  return __aarch64_vget_lane_any (__a, __b);
        -:16281:}
        -:16282:
        -:16283:__extension__ extern __inline uint16_t
        -:16284:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16285:vduph_laneq_u16 (uint16x8_t __a, const int __b)
        -:16286:{
        -:16287:  return __aarch64_vget_lane_any (__a, __b);
        -:16288:}
        -:16289:
        -:16290:/* vdups_laneq  */
        -:16291:
        -:16292:__extension__ extern __inline float32_t
        -:16293:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16294:vdups_laneq_f32 (float32x4_t __a, const int __b)
        -:16295:{
        -:16296:  return __aarch64_vget_lane_any (__a, __b);
        -:16297:}
        -:16298:
        -:16299:__extension__ extern __inline int32_t
        -:16300:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16301:vdups_laneq_s32 (int32x4_t __a, const int __b)
        -:16302:{
        -:16303:  return __aarch64_vget_lane_any (__a, __b);
        -:16304:}
        -:16305:
        -:16306:__extension__ extern __inline uint32_t
        -:16307:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16308:vdups_laneq_u32 (uint32x4_t __a, const int __b)
        -:16309:{
        -:16310:  return __aarch64_vget_lane_any (__a, __b);
        -:16311:}
        -:16312:
        -:16313:/* vdupd_laneq  */
        -:16314:__extension__ extern __inline float64_t
        -:16315:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16316:vdupd_laneq_f64 (float64x2_t __a, const int __b)
        -:16317:{
        -:16318:  return __aarch64_vget_lane_any (__a, __b);
        -:16319:}
        -:16320:
        -:16321:__extension__ extern __inline int64_t
        -:16322:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16323:vdupd_laneq_s64 (int64x2_t __a, const int __b)
        -:16324:{
        -:16325:  return __aarch64_vget_lane_any (__a, __b);
        -:16326:}
        -:16327:
        -:16328:__extension__ extern __inline uint64_t
        -:16329:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16330:vdupd_laneq_u64 (uint64x2_t __a, const int __b)
        -:16331:{
        -:16332:  return __aarch64_vget_lane_any (__a, __b);
        -:16333:}
        -:16334:
        -:16335:/* vext  */
        -:16336:
        -:16337:__extension__ extern __inline float16x4_t
        -:16338:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16339:vext_f16 (float16x4_t __a, float16x4_t __b, __const int __c)
        -:16340:{
        -:16341:  __AARCH64_LANE_CHECK (__a, __c);
        -:16342:#ifdef __AARCH64EB__
        -:16343:  return __builtin_shuffle (__b, __a,
        -:16344:			    (uint16x4_t) {4 - __c, 5 - __c, 6 - __c, 7 - __c});
        -:16345:#else
        -:16346:  return __builtin_shuffle (__a, __b,
        -:16347:			    (uint16x4_t) {__c, __c + 1, __c + 2, __c + 3});
        -:16348:#endif
        -:16349:}
        -:16350:
        -:16351:__extension__ extern __inline float32x2_t
        -:16352:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16353:vext_f32 (float32x2_t __a, float32x2_t __b, __const int __c)
        -:16354:{
        -:16355:  __AARCH64_LANE_CHECK (__a, __c);
        -:16356:#ifdef __AARCH64EB__
        -:16357:  return __builtin_shuffle (__b, __a, (uint32x2_t) {2-__c, 3-__c});
        -:16358:#else
        -:16359:  return __builtin_shuffle (__a, __b, (uint32x2_t) {__c, __c+1});
        -:16360:#endif
        -:16361:}
        -:16362:
        -:16363:__extension__ extern __inline float64x1_t
        -:16364:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16365:vext_f64 (float64x1_t __a, float64x1_t __b, __const int __c)
        -:16366:{
        -:16367:  __AARCH64_LANE_CHECK (__a, __c);
        -:16368:  /* The only possible index to the assembler instruction returns element 0.  */
        -:16369:  return __a;
        -:16370:}
        -:16371:__extension__ extern __inline poly8x8_t
        -:16372:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16373:vext_p8 (poly8x8_t __a, poly8x8_t __b, __const int __c)
        -:16374:{
        -:16375:  __AARCH64_LANE_CHECK (__a, __c);
        -:16376:#ifdef __AARCH64EB__
        -:16377:  return __builtin_shuffle (__b, __a, (uint8x8_t)
        -:16378:      {8-__c, 9-__c, 10-__c, 11-__c, 12-__c, 13-__c, 14-__c, 15-__c});
        -:16379:#else
        -:16380:  return __builtin_shuffle (__a, __b,
        -:16381:      (uint8x8_t) {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7});
        -:16382:#endif
        -:16383:}
        -:16384:
        -:16385:__extension__ extern __inline poly16x4_t
        -:16386:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16387:vext_p16 (poly16x4_t __a, poly16x4_t __b, __const int __c)
        -:16388:{
        -:16389:  __AARCH64_LANE_CHECK (__a, __c);
        -:16390:#ifdef __AARCH64EB__
        -:16391:  return __builtin_shuffle (__b, __a,
        -:16392:      (uint16x4_t) {4-__c, 5-__c, 6-__c, 7-__c});
        -:16393:#else
        -:16394:  return __builtin_shuffle (__a, __b, (uint16x4_t) {__c, __c+1, __c+2, __c+3});
        -:16395:#endif
        -:16396:}
        -:16397:
        -:16398:__extension__ extern __inline poly64x1_t
        -:16399:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16400:vext_p64 (poly64x1_t __a, poly64x1_t __b, __const int __c)
        -:16401:{
        -:16402:  __AARCH64_LANE_CHECK (__a, __c);
        -:16403:  /* The only possible index to the assembler instruction returns element 0.  */
        -:16404:  return __a;
        -:16405:}
        -:16406:
        -:16407:__extension__ extern __inline int8x8_t
        -:16408:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16409:vext_s8 (int8x8_t __a, int8x8_t __b, __const int __c)
        -:16410:{
        -:16411:  __AARCH64_LANE_CHECK (__a, __c);
        -:16412:#ifdef __AARCH64EB__
        -:16413:  return __builtin_shuffle (__b, __a, (uint8x8_t)
        -:16414:      {8-__c, 9-__c, 10-__c, 11-__c, 12-__c, 13-__c, 14-__c, 15-__c});
        -:16415:#else
        -:16416:  return __builtin_shuffle (__a, __b,
        -:16417:      (uint8x8_t) {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7});
        -:16418:#endif
        -:16419:}
        -:16420:
        -:16421:__extension__ extern __inline int16x4_t
        -:16422:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16423:vext_s16 (int16x4_t __a, int16x4_t __b, __const int __c)
        -:16424:{
        -:16425:  __AARCH64_LANE_CHECK (__a, __c);
        -:16426:#ifdef __AARCH64EB__
        -:16427:  return __builtin_shuffle (__b, __a,
        -:16428:      (uint16x4_t) {4-__c, 5-__c, 6-__c, 7-__c});
        -:16429:#else
        -:16430:  return __builtin_shuffle (__a, __b, (uint16x4_t) {__c, __c+1, __c+2, __c+3});
        -:16431:#endif
        -:16432:}
        -:16433:
        -:16434:__extension__ extern __inline int32x2_t
        -:16435:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16436:vext_s32 (int32x2_t __a, int32x2_t __b, __const int __c)
        -:16437:{
        -:16438:  __AARCH64_LANE_CHECK (__a, __c);
        -:16439:#ifdef __AARCH64EB__
        -:16440:  return __builtin_shuffle (__b, __a, (uint32x2_t) {2-__c, 3-__c});
        -:16441:#else
        -:16442:  return __builtin_shuffle (__a, __b, (uint32x2_t) {__c, __c+1});
        -:16443:#endif
        -:16444:}
        -:16445:
        -:16446:__extension__ extern __inline int64x1_t
        -:16447:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16448:vext_s64 (int64x1_t __a, int64x1_t __b, __const int __c)
        -:16449:{
        -:16450:  __AARCH64_LANE_CHECK (__a, __c);
        -:16451:  /* The only possible index to the assembler instruction returns element 0.  */
        -:16452:  return __a;
        -:16453:}
        -:16454:
        -:16455:__extension__ extern __inline uint8x8_t
        -:16456:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16457:vext_u8 (uint8x8_t __a, uint8x8_t __b, __const int __c)
        -:16458:{
        -:16459:  __AARCH64_LANE_CHECK (__a, __c);
        -:16460:#ifdef __AARCH64EB__
        -:16461:  return __builtin_shuffle (__b, __a, (uint8x8_t)
        -:16462:      {8-__c, 9-__c, 10-__c, 11-__c, 12-__c, 13-__c, 14-__c, 15-__c});
        -:16463:#else
        -:16464:  return __builtin_shuffle (__a, __b,
        -:16465:      (uint8x8_t) {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7});
        -:16466:#endif
        -:16467:}
        -:16468:
        -:16469:__extension__ extern __inline uint16x4_t
        -:16470:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16471:vext_u16 (uint16x4_t __a, uint16x4_t __b, __const int __c)
        -:16472:{
        -:16473:  __AARCH64_LANE_CHECK (__a, __c);
        -:16474:#ifdef __AARCH64EB__
        -:16475:  return __builtin_shuffle (__b, __a,
        -:16476:      (uint16x4_t) {4-__c, 5-__c, 6-__c, 7-__c});
        -:16477:#else
        -:16478:  return __builtin_shuffle (__a, __b, (uint16x4_t) {__c, __c+1, __c+2, __c+3});
        -:16479:#endif
        -:16480:}
        -:16481:
        -:16482:__extension__ extern __inline uint32x2_t
        -:16483:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16484:vext_u32 (uint32x2_t __a, uint32x2_t __b, __const int __c)
        -:16485:{
        -:16486:  __AARCH64_LANE_CHECK (__a, __c);
        -:16487:#ifdef __AARCH64EB__
        -:16488:  return __builtin_shuffle (__b, __a, (uint32x2_t) {2-__c, 3-__c});
        -:16489:#else
        -:16490:  return __builtin_shuffle (__a, __b, (uint32x2_t) {__c, __c+1});
        -:16491:#endif
        -:16492:}
        -:16493:
        -:16494:__extension__ extern __inline uint64x1_t
        -:16495:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16496:vext_u64 (uint64x1_t __a, uint64x1_t __b, __const int __c)
        -:16497:{
        -:16498:  __AARCH64_LANE_CHECK (__a, __c);
        -:16499:  /* The only possible index to the assembler instruction returns element 0.  */
        -:16500:  return __a;
        -:16501:}
        -:16502:
        -:16503:__extension__ extern __inline float16x8_t
        -:16504:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16505:vextq_f16 (float16x8_t __a, float16x8_t __b, __const int __c)
        -:16506:{
        -:16507:  __AARCH64_LANE_CHECK (__a, __c);
        -:16508:#ifdef __AARCH64EB__
        -:16509:  return __builtin_shuffle (__b, __a,
        -:16510:			    (uint16x8_t) {8 - __c, 9 - __c, 10 - __c, 11 - __c,
        -:16511:					  12 - __c, 13 - __c, 14 - __c,
        -:16512:					  15 - __c});
        -:16513:#else
        -:16514:  return __builtin_shuffle (__a, __b,
        -:16515:			    (uint16x8_t) {__c, __c + 1, __c + 2, __c + 3,
        -:16516:					  __c + 4, __c + 5, __c + 6, __c + 7});
        -:16517:#endif
        -:16518:}
        -:16519:
        -:16520:__extension__ extern __inline float32x4_t
        -:16521:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16522:vextq_f32 (float32x4_t __a, float32x4_t __b, __const int __c)
        -:16523:{
        -:16524:  __AARCH64_LANE_CHECK (__a, __c);
        -:16525:#ifdef __AARCH64EB__
        -:16526:  return __builtin_shuffle (__b, __a,
        -:16527:      (uint32x4_t) {4-__c, 5-__c, 6-__c, 7-__c});
        -:16528:#else
        -:16529:  return __builtin_shuffle (__a, __b, (uint32x4_t) {__c, __c+1, __c+2, __c+3});
        -:16530:#endif
        -:16531:}
        -:16532:
        -:16533:__extension__ extern __inline float64x2_t
        -:16534:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16535:vextq_f64 (float64x2_t __a, float64x2_t __b, __const int __c)
        -:16536:{
        -:16537:  __AARCH64_LANE_CHECK (__a, __c);
        -:16538:#ifdef __AARCH64EB__
        -:16539:  return __builtin_shuffle (__b, __a, (uint64x2_t) {2-__c, 3-__c});
        -:16540:#else
        -:16541:  return __builtin_shuffle (__a, __b, (uint64x2_t) {__c, __c+1});
        -:16542:#endif
        -:16543:}
        -:16544:
        -:16545:__extension__ extern __inline poly8x16_t
        -:16546:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16547:vextq_p8 (poly8x16_t __a, poly8x16_t __b, __const int __c)
        -:16548:{
        -:16549:  __AARCH64_LANE_CHECK (__a, __c);
        -:16550:#ifdef __AARCH64EB__
        -:16551:  return __builtin_shuffle (__b, __a, (uint8x16_t)
        -:16552:      {16-__c, 17-__c, 18-__c, 19-__c, 20-__c, 21-__c, 22-__c, 23-__c,
        -:16553:       24-__c, 25-__c, 26-__c, 27-__c, 28-__c, 29-__c, 30-__c, 31-__c});
        -:16554:#else
        -:16555:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:16556:      {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7,
        -:16557:       __c+8, __c+9, __c+10, __c+11, __c+12, __c+13, __c+14, __c+15});
        -:16558:#endif
        -:16559:}
        -:16560:
        -:16561:__extension__ extern __inline poly16x8_t
        -:16562:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16563:vextq_p16 (poly16x8_t __a, poly16x8_t __b, __const int __c)
        -:16564:{
        -:16565:  __AARCH64_LANE_CHECK (__a, __c);
        -:16566:#ifdef __AARCH64EB__
        -:16567:  return __builtin_shuffle (__b, __a, (uint16x8_t)
        -:16568:      {8-__c, 9-__c, 10-__c, 11-__c, 12-__c, 13-__c, 14-__c, 15-__c});
        -:16569:#else
        -:16570:  return __builtin_shuffle (__a, __b,
        -:16571:      (uint16x8_t) {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7});
        -:16572:#endif
        -:16573:}
        -:16574:
        -:16575:__extension__ extern __inline poly64x2_t
        -:16576:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16577:vextq_p64 (poly64x2_t __a, poly64x2_t __b, __const int __c)
        -:16578:{
        -:16579:  __AARCH64_LANE_CHECK (__a, __c);
        -:16580:#ifdef __AARCH64EB__
        -:16581:  return __builtin_shuffle (__b, __a, (uint64x2_t) {2-__c, 3-__c});
        -:16582:#else
        -:16583:  return __builtin_shuffle (__a, __b, (uint64x2_t) {__c, __c+1});
        -:16584:#endif
        -:16585:}
        -:16586:
        -:16587:__extension__ extern __inline int8x16_t
        -:16588:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16589:vextq_s8 (int8x16_t __a, int8x16_t __b, __const int __c)
        -:16590:{
        -:16591:  __AARCH64_LANE_CHECK (__a, __c);
        -:16592:#ifdef __AARCH64EB__
        -:16593:  return __builtin_shuffle (__b, __a, (uint8x16_t)
        -:16594:      {16-__c, 17-__c, 18-__c, 19-__c, 20-__c, 21-__c, 22-__c, 23-__c,
        -:16595:       24-__c, 25-__c, 26-__c, 27-__c, 28-__c, 29-__c, 30-__c, 31-__c});
        -:16596:#else
        -:16597:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:16598:      {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7,
        -:16599:       __c+8, __c+9, __c+10, __c+11, __c+12, __c+13, __c+14, __c+15});
        -:16600:#endif
        -:16601:}
        -:16602:
        -:16603:__extension__ extern __inline int16x8_t
        -:16604:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16605:vextq_s16 (int16x8_t __a, int16x8_t __b, __const int __c)
        -:16606:{
        -:16607:  __AARCH64_LANE_CHECK (__a, __c);
        -:16608:#ifdef __AARCH64EB__
        -:16609:  return __builtin_shuffle (__b, __a, (uint16x8_t)
        -:16610:      {8-__c, 9-__c, 10-__c, 11-__c, 12-__c, 13-__c, 14-__c, 15-__c});
        -:16611:#else
        -:16612:  return __builtin_shuffle (__a, __b,
        -:16613:      (uint16x8_t) {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7});
        -:16614:#endif
        -:16615:}
        -:16616:
        -:16617:__extension__ extern __inline int32x4_t
        -:16618:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16619:vextq_s32 (int32x4_t __a, int32x4_t __b, __const int __c)
        -:16620:{
        -:16621:  __AARCH64_LANE_CHECK (__a, __c);
        -:16622:#ifdef __AARCH64EB__
        -:16623:  return __builtin_shuffle (__b, __a,
        -:16624:      (uint32x4_t) {4-__c, 5-__c, 6-__c, 7-__c});
        -:16625:#else
        -:16626:  return __builtin_shuffle (__a, __b, (uint32x4_t) {__c, __c+1, __c+2, __c+3});
        -:16627:#endif
        -:16628:}
        -:16629:
        -:16630:__extension__ extern __inline int64x2_t
        -:16631:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16632:vextq_s64 (int64x2_t __a, int64x2_t __b, __const int __c)
        -:16633:{
        -:16634:  __AARCH64_LANE_CHECK (__a, __c);
        -:16635:#ifdef __AARCH64EB__
        -:16636:  return __builtin_shuffle (__b, __a, (uint64x2_t) {2-__c, 3-__c});
        -:16637:#else
        -:16638:  return __builtin_shuffle (__a, __b, (uint64x2_t) {__c, __c+1});
        -:16639:#endif
        -:16640:}
        -:16641:
        -:16642:__extension__ extern __inline uint8x16_t
        -:16643:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16644:vextq_u8 (uint8x16_t __a, uint8x16_t __b, __const int __c)
        -:16645:{
        -:16646:  __AARCH64_LANE_CHECK (__a, __c);
        -:16647:#ifdef __AARCH64EB__
        -:16648:  return __builtin_shuffle (__b, __a, (uint8x16_t)
        -:16649:      {16-__c, 17-__c, 18-__c, 19-__c, 20-__c, 21-__c, 22-__c, 23-__c,
        -:16650:       24-__c, 25-__c, 26-__c, 27-__c, 28-__c, 29-__c, 30-__c, 31-__c});
        -:16651:#else
        -:16652:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:16653:      {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7,
        -:16654:       __c+8, __c+9, __c+10, __c+11, __c+12, __c+13, __c+14, __c+15});
        -:16655:#endif
        -:16656:}
        -:16657:
        -:16658:__extension__ extern __inline uint16x8_t
        -:16659:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16660:vextq_u16 (uint16x8_t __a, uint16x8_t __b, __const int __c)
        -:16661:{
        -:16662:  __AARCH64_LANE_CHECK (__a, __c);
        -:16663:#ifdef __AARCH64EB__
        -:16664:  return __builtin_shuffle (__b, __a, (uint16x8_t)
        -:16665:      {8-__c, 9-__c, 10-__c, 11-__c, 12-__c, 13-__c, 14-__c, 15-__c});
        -:16666:#else
        -:16667:  return __builtin_shuffle (__a, __b,
        -:16668:      (uint16x8_t) {__c, __c+1, __c+2, __c+3, __c+4, __c+5, __c+6, __c+7});
        -:16669:#endif
        -:16670:}
        -:16671:
        -:16672:__extension__ extern __inline uint32x4_t
        -:16673:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16674:vextq_u32 (uint32x4_t __a, uint32x4_t __b, __const int __c)
        -:16675:{
        -:16676:  __AARCH64_LANE_CHECK (__a, __c);
        -:16677:#ifdef __AARCH64EB__
        -:16678:  return __builtin_shuffle (__b, __a,
        -:16679:      (uint32x4_t) {4-__c, 5-__c, 6-__c, 7-__c});
        -:16680:#else
        -:16681:  return __builtin_shuffle (__a, __b, (uint32x4_t) {__c, __c+1, __c+2, __c+3});
        -:16682:#endif
        -:16683:}
        -:16684:
        -:16685:__extension__ extern __inline uint64x2_t
        -:16686:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16687:vextq_u64 (uint64x2_t __a, uint64x2_t __b, __const int __c)
        -:16688:{
        -:16689:  __AARCH64_LANE_CHECK (__a, __c);
        -:16690:#ifdef __AARCH64EB__
        -:16691:  return __builtin_shuffle (__b, __a, (uint64x2_t) {2-__c, 3-__c});
        -:16692:#else
        -:16693:  return __builtin_shuffle (__a, __b, (uint64x2_t) {__c, __c+1});
        -:16694:#endif
        -:16695:}
        -:16696:
        -:16697:/* vfma  */
        -:16698:
        -:16699:__extension__ extern __inline float64x1_t
        -:16700:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16701:vfma_f64 (float64x1_t __a, float64x1_t __b, float64x1_t __c)
        -:16702:{
        -:16703:  return (float64x1_t) {__builtin_fma (__b[0], __c[0], __a[0])};
        -:16704:}
        -:16705:
        -:16706:__extension__ extern __inline float32x2_t
        -:16707:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16708:vfma_f32 (float32x2_t __a, float32x2_t __b, float32x2_t __c)
        -:16709:{
        -:16710:  return __builtin_aarch64_fmav2sf (__b, __c, __a);
        -:16711:}
        -:16712:
        -:16713:__extension__ extern __inline float32x4_t
        -:16714:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16715:vfmaq_f32 (float32x4_t __a, float32x4_t __b, float32x4_t __c)
        -:16716:{
        -:16717:  return __builtin_aarch64_fmav4sf (__b, __c, __a);
        -:16718:}
        -:16719:
        -:16720:__extension__ extern __inline float64x2_t
        -:16721:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16722:vfmaq_f64 (float64x2_t __a, float64x2_t __b, float64x2_t __c)
        -:16723:{
        -:16724:  return __builtin_aarch64_fmav2df (__b, __c, __a);
        -:16725:}
        -:16726:
        -:16727:__extension__ extern __inline float32x2_t
        -:16728:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16729:vfma_n_f32 (float32x2_t __a, float32x2_t __b, float32_t __c)
        -:16730:{
        -:16731:  return __builtin_aarch64_fmav2sf (__b, vdup_n_f32 (__c), __a);
        -:16732:}
        -:16733:
        -:16734:__extension__ extern __inline float64x1_t
        -:16735:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16736:vfma_n_f64 (float64x1_t __a, float64x1_t __b, float64_t __c)
        -:16737:{
        -:16738:  return (float64x1_t) {__b[0] * __c + __a[0]};
        -:16739:}
        -:16740:
        -:16741:__extension__ extern __inline float32x4_t
        -:16742:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16743:vfmaq_n_f32 (float32x4_t __a, float32x4_t __b, float32_t __c)
        -:16744:{
        -:16745:  return __builtin_aarch64_fmav4sf (__b, vdupq_n_f32 (__c), __a);
        -:16746:}
        -:16747:
        -:16748:__extension__ extern __inline float64x2_t
        -:16749:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16750:vfmaq_n_f64 (float64x2_t __a, float64x2_t __b, float64_t __c)
        -:16751:{
        -:16752:  return __builtin_aarch64_fmav2df (__b, vdupq_n_f64 (__c), __a);
        -:16753:}
        -:16754:
        -:16755:/* vfma_lane  */
        -:16756:
        -:16757:__extension__ extern __inline float32x2_t
        -:16758:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16759:vfma_lane_f32 (float32x2_t __a, float32x2_t __b,
        -:16760:	       float32x2_t __c, const int __lane)
        -:16761:{
        -:16762:  return __builtin_aarch64_fmav2sf (__b,
        -:16763:				    __aarch64_vdup_lane_f32 (__c, __lane),
        -:16764:				    __a);
        -:16765:}
        -:16766:
        -:16767:__extension__ extern __inline float64x1_t
        -:16768:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16769:vfma_lane_f64 (float64x1_t __a, float64x1_t __b,
        -:16770:	       float64x1_t __c, const int __lane)
        -:16771:{
        -:16772:  return (float64x1_t) {__builtin_fma (__b[0], __c[0], __a[0])};
        -:16773:}
        -:16774:
        -:16775:__extension__ extern __inline float64_t
        -:16776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16777:vfmad_lane_f64 (float64_t __a, float64_t __b,
        -:16778:	        float64x1_t __c, const int __lane)
        -:16779:{
        -:16780:  return __builtin_fma (__b, __c[0], __a);
        -:16781:}
        -:16782:
        -:16783:__extension__ extern __inline float32_t
        -:16784:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16785:vfmas_lane_f32 (float32_t __a, float32_t __b,
        -:16786:	        float32x2_t __c, const int __lane)
        -:16787:{
        -:16788:  return __builtin_fmaf (__b, __aarch64_vget_lane_any (__c, __lane), __a);
        -:16789:}
        -:16790:
        -:16791:/* vfma_laneq  */
        -:16792:
        -:16793:__extension__ extern __inline float32x2_t
        -:16794:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16795:vfma_laneq_f32 (float32x2_t __a, float32x2_t __b,
        -:16796:	        float32x4_t __c, const int __lane)
        -:16797:{
        -:16798:  return __builtin_aarch64_fmav2sf (__b,
        -:16799:				    __aarch64_vdup_laneq_f32 (__c, __lane),
        -:16800:				    __a);
        -:16801:}
        -:16802:
        -:16803:__extension__ extern __inline float64x1_t
        -:16804:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16805:vfma_laneq_f64 (float64x1_t __a, float64x1_t __b,
        -:16806:	        float64x2_t __c, const int __lane)
        -:16807:{
        -:16808:  float64_t __c0 = __aarch64_vget_lane_any (__c, __lane);
        -:16809:  return (float64x1_t) {__builtin_fma (__b[0], __c0, __a[0])};
        -:16810:}
        -:16811:
        -:16812:__extension__ extern __inline float64_t
        -:16813:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16814:vfmad_laneq_f64 (float64_t __a, float64_t __b,
        -:16815:	         float64x2_t __c, const int __lane)
        -:16816:{
        -:16817:  return __builtin_fma (__b, __aarch64_vget_lane_any (__c, __lane), __a);
        -:16818:}
        -:16819:
        -:16820:__extension__ extern __inline float32_t
        -:16821:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16822:vfmas_laneq_f32 (float32_t __a, float32_t __b,
        -:16823:		 float32x4_t __c, const int __lane)
        -:16824:{
        -:16825:  return __builtin_fmaf (__b, __aarch64_vget_lane_any (__c, __lane), __a);
        -:16826:}
        -:16827:
        -:16828:/* vfmaq_lane  */
        -:16829:
        -:16830:__extension__ extern __inline float32x4_t
        -:16831:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16832:vfmaq_lane_f32 (float32x4_t __a, float32x4_t __b,
        -:16833:	        float32x2_t __c, const int __lane)
        -:16834:{
        -:16835:  return __builtin_aarch64_fmav4sf (__b,
        -:16836:				    __aarch64_vdupq_lane_f32 (__c, __lane),
        -:16837:				    __a);
        -:16838:}
        -:16839:
        -:16840:__extension__ extern __inline float64x2_t
        -:16841:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16842:vfmaq_lane_f64 (float64x2_t __a, float64x2_t __b,
        -:16843:	        float64x1_t __c, const int __lane)
        -:16844:{
        -:16845:  return __builtin_aarch64_fmav2df (__b, vdupq_n_f64 (__c[0]), __a);
        -:16846:}
        -:16847:
        -:16848:/* vfmaq_laneq  */
        -:16849:
        -:16850:__extension__ extern __inline float32x4_t
        -:16851:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16852:vfmaq_laneq_f32 (float32x4_t __a, float32x4_t __b,
        -:16853:	         float32x4_t __c, const int __lane)
        -:16854:{
        -:16855:  return __builtin_aarch64_fmav4sf (__b,
        -:16856:				    __aarch64_vdupq_laneq_f32 (__c, __lane),
        -:16857:				    __a);
        -:16858:}
        -:16859:
        -:16860:__extension__ extern __inline float64x2_t
        -:16861:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16862:vfmaq_laneq_f64 (float64x2_t __a, float64x2_t __b,
        -:16863:	         float64x2_t __c, const int __lane)
        -:16864:{
        -:16865:  return __builtin_aarch64_fmav2df (__b,
        -:16866:				    __aarch64_vdupq_laneq_f64 (__c, __lane),
        -:16867:				    __a);
        -:16868:}
        -:16869:
        -:16870:/* vfms  */
        -:16871:
        -:16872:__extension__ extern __inline float64x1_t
        -:16873:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16874:vfms_f64 (float64x1_t __a, float64x1_t __b, float64x1_t __c)
        -:16875:{
        -:16876:  return (float64x1_t) {__builtin_fma (-__b[0], __c[0], __a[0])};
        -:16877:}
        -:16878:
        -:16879:__extension__ extern __inline float32x2_t
        -:16880:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16881:vfms_f32 (float32x2_t __a, float32x2_t __b, float32x2_t __c)
        -:16882:{
        -:16883:  return __builtin_aarch64_fmav2sf (-__b, __c, __a);
        -:16884:}
        -:16885:
        -:16886:__extension__ extern __inline float32x4_t
        -:16887:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16888:vfmsq_f32 (float32x4_t __a, float32x4_t __b, float32x4_t __c)
        -:16889:{
        -:16890:  return __builtin_aarch64_fmav4sf (-__b, __c, __a);
        -:16891:}
        -:16892:
        -:16893:__extension__ extern __inline float64x2_t
        -:16894:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16895:vfmsq_f64 (float64x2_t __a, float64x2_t __b, float64x2_t __c)
        -:16896:{
        -:16897:  return __builtin_aarch64_fmav2df (-__b, __c, __a);
        -:16898:}
        -:16899:
        -:16900:__extension__ extern __inline float32x2_t
        -:16901:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16902:vfms_n_f32 (float32x2_t __a, float32x2_t __b, float32_t __c)
        -:16903:{
        -:16904:  return __builtin_aarch64_fmav2sf (-__b, vdup_n_f32 (__c), __a);
        -:16905:}
        -:16906:
        -:16907:__extension__ extern __inline float64x1_t
        -:16908:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16909:vfms_n_f64 (float64x1_t __a, float64x1_t __b, float64_t __c)
        -:16910:{
        -:16911:  return (float64x1_t) {-__b[0] * __c + __a[0]};
        -:16912:}
        -:16913:
        -:16914:__extension__ extern __inline float32x4_t
        -:16915:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16916:vfmsq_n_f32 (float32x4_t __a, float32x4_t __b, float32_t __c)
        -:16917:{
        -:16918:  return __builtin_aarch64_fmav4sf (-__b, vdupq_n_f32 (__c), __a);
        -:16919:}
        -:16920:
        -:16921:__extension__ extern __inline float64x2_t
        -:16922:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16923:vfmsq_n_f64 (float64x2_t __a, float64x2_t __b, float64_t __c)
        -:16924:{
        -:16925:  return __builtin_aarch64_fmav2df (-__b, vdupq_n_f64 (__c), __a);
        -:16926:}
        -:16927:
        -:16928:/* vfms_lane  */
        -:16929:
        -:16930:__extension__ extern __inline float32x2_t
        -:16931:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16932:vfms_lane_f32 (float32x2_t __a, float32x2_t __b,
        -:16933:	       float32x2_t __c, const int __lane)
        -:16934:{
        -:16935:  return __builtin_aarch64_fmav2sf (-__b,
        -:16936:				    __aarch64_vdup_lane_f32 (__c, __lane),
        -:16937:				    __a);
        -:16938:}
        -:16939:
        -:16940:__extension__ extern __inline float64x1_t
        -:16941:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16942:vfms_lane_f64 (float64x1_t __a, float64x1_t __b,
        -:16943:	       float64x1_t __c, const int __lane)
        -:16944:{
        -:16945:  return (float64x1_t) {__builtin_fma (-__b[0], __c[0], __a[0])};
        -:16946:}
        -:16947:
        -:16948:__extension__ extern __inline float64_t
        -:16949:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16950:vfmsd_lane_f64 (float64_t __a, float64_t __b,
        -:16951:	        float64x1_t __c, const int __lane)
        -:16952:{
        -:16953:  return __builtin_fma (-__b, __c[0], __a);
        -:16954:}
        -:16955:
        -:16956:__extension__ extern __inline float32_t
        -:16957:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16958:vfmss_lane_f32 (float32_t __a, float32_t __b,
        -:16959:	        float32x2_t __c, const int __lane)
        -:16960:{
        -:16961:  return __builtin_fmaf (-__b, __aarch64_vget_lane_any (__c, __lane), __a);
        -:16962:}
        -:16963:
        -:16964:/* vfms_laneq  */
        -:16965:
        -:16966:__extension__ extern __inline float32x2_t
        -:16967:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16968:vfms_laneq_f32 (float32x2_t __a, float32x2_t __b,
        -:16969:	        float32x4_t __c, const int __lane)
        -:16970:{
        -:16971:  return __builtin_aarch64_fmav2sf (-__b,
        -:16972:				    __aarch64_vdup_laneq_f32 (__c, __lane),
        -:16973:				    __a);
        -:16974:}
        -:16975:
        -:16976:__extension__ extern __inline float64x1_t
        -:16977:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16978:vfms_laneq_f64 (float64x1_t __a, float64x1_t __b,
        -:16979:	        float64x2_t __c, const int __lane)
        -:16980:{
        -:16981:  float64_t __c0 = __aarch64_vget_lane_any (__c, __lane);
        -:16982:  return (float64x1_t) {__builtin_fma (-__b[0], __c0, __a[0])};
        -:16983:}
        -:16984:
        -:16985:__extension__ extern __inline float64_t
        -:16986:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16987:vfmsd_laneq_f64 (float64_t __a, float64_t __b,
        -:16988:	         float64x2_t __c, const int __lane)
        -:16989:{
        -:16990:  return __builtin_fma (-__b, __aarch64_vget_lane_any (__c, __lane), __a);
        -:16991:}
        -:16992:
        -:16993:__extension__ extern __inline float32_t
        -:16994:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:16995:vfmss_laneq_f32 (float32_t __a, float32_t __b,
        -:16996:		 float32x4_t __c, const int __lane)
        -:16997:{
        -:16998:  return __builtin_fmaf (-__b, __aarch64_vget_lane_any (__c, __lane), __a);
        -:16999:}
        -:17000:
        -:17001:/* vfmsq_lane  */
        -:17002:
        -:17003:__extension__ extern __inline float32x4_t
        -:17004:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17005:vfmsq_lane_f32 (float32x4_t __a, float32x4_t __b,
        -:17006:	        float32x2_t __c, const int __lane)
        -:17007:{
        -:17008:  return __builtin_aarch64_fmav4sf (-__b,
        -:17009:				    __aarch64_vdupq_lane_f32 (__c, __lane),
        -:17010:				    __a);
        -:17011:}
        -:17012:
        -:17013:__extension__ extern __inline float64x2_t
        -:17014:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17015:vfmsq_lane_f64 (float64x2_t __a, float64x2_t __b,
        -:17016:	        float64x1_t __c, const int __lane)
        -:17017:{
        -:17018:  return __builtin_aarch64_fmav2df (-__b, vdupq_n_f64 (__c[0]), __a);
        -:17019:}
        -:17020:
        -:17021:/* vfmsq_laneq  */
        -:17022:
        -:17023:__extension__ extern __inline float32x4_t
        -:17024:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17025:vfmsq_laneq_f32 (float32x4_t __a, float32x4_t __b,
        -:17026:	         float32x4_t __c, const int __lane)
        -:17027:{
        -:17028:  return __builtin_aarch64_fmav4sf (-__b,
        -:17029:				    __aarch64_vdupq_laneq_f32 (__c, __lane),
        -:17030:				    __a);
        -:17031:}
        -:17032:
        -:17033:__extension__ extern __inline float64x2_t
        -:17034:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17035:vfmsq_laneq_f64 (float64x2_t __a, float64x2_t __b,
        -:17036:	         float64x2_t __c, const int __lane)
        -:17037:{
        -:17038:  return __builtin_aarch64_fmav2df (-__b,
        -:17039:				    __aarch64_vdupq_laneq_f64 (__c, __lane),
        -:17040:				    __a);
        -:17041:}
        -:17042:
        -:17043:/* vld1 */
        -:17044:
        -:17045:__extension__ extern __inline float16x4_t
        -:17046:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17047:vld1_f16 (const float16_t *__a)
        -:17048:{
        -:17049:  return __builtin_aarch64_ld1v4hf (__a);
        -:17050:}
        -:17051:
        -:17052:__extension__ extern __inline float32x2_t
        -:17053:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17054:vld1_f32 (const float32_t *a)
        -:17055:{
        -:17056:  return __builtin_aarch64_ld1v2sf ((const __builtin_aarch64_simd_sf *) a);
        -:17057:}
        -:17058:
        -:17059:__extension__ extern __inline float64x1_t
        -:17060:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17061:vld1_f64 (const float64_t *a)
        -:17062:{
        -:17063:  return (float64x1_t) {*a};
        -:17064:}
        -:17065:
        -:17066:__extension__ extern __inline poly8x8_t
        -:17067:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17068:vld1_p8 (const poly8_t *a)
        -:17069:{
        -:17070:  return (poly8x8_t)
        -:17071:    __builtin_aarch64_ld1v8qi ((const __builtin_aarch64_simd_qi *) a);
        -:17072:}
        -:17073:
        -:17074:__extension__ extern __inline poly16x4_t
        -:17075:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17076:vld1_p16 (const poly16_t *a)
        -:17077:{
        -:17078:  return (poly16x4_t)
        -:17079:    __builtin_aarch64_ld1v4hi ((const __builtin_aarch64_simd_hi *) a);
        -:17080:}
        -:17081:
        -:17082:__extension__ extern __inline poly64x1_t
        -:17083:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17084:vld1_p64 (const poly64_t *a)
        -:17085:{
        -:17086:  return (poly64x1_t) {*a};
        -:17087:}
        -:17088:
        -:17089:__extension__ extern __inline int8x8_t
        -:17090:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17091:vld1_s8 (const int8_t *a)
        -:17092:{
        -:17093:  return __builtin_aarch64_ld1v8qi ((const __builtin_aarch64_simd_qi *) a);
        -:17094:}
        -:17095:
        -:17096:__extension__ extern __inline int16x4_t
        -:17097:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17098:vld1_s16 (const int16_t *a)
        -:17099:{
        -:17100:  return __builtin_aarch64_ld1v4hi ((const __builtin_aarch64_simd_hi *) a);
        -:17101:}
        -:17102:
        -:17103:__extension__ extern __inline int32x2_t
        -:17104:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17105:vld1_s32 (const int32_t *a)
        -:17106:{
        -:17107:  return __builtin_aarch64_ld1v2si ((const __builtin_aarch64_simd_si *) a);
        -:17108:}
        -:17109:
        -:17110:__extension__ extern __inline int64x1_t
        -:17111:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17112:vld1_s64 (const int64_t *a)
        -:17113:{
        -:17114:  return (int64x1_t) {*a};
        -:17115:}
        -:17116:
        -:17117:__extension__ extern __inline uint8x8_t
        -:17118:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17119:vld1_u8 (const uint8_t *a)
        -:17120:{
        -:17121:  return (uint8x8_t)
587832012:17122:    __builtin_aarch64_ld1v8qi ((const __builtin_aarch64_simd_qi *) a);
        -:17123:}
        -:17124:
        -:17125:__extension__ extern __inline uint16x4_t
        -:17126:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17127:vld1_u16 (const uint16_t *a)
        -:17128:{
        -:17129:  return (uint16x4_t)
        -:17130:    __builtin_aarch64_ld1v4hi ((const __builtin_aarch64_simd_hi *) a);
        -:17131:}
        -:17132:
        -:17133:__extension__ extern __inline uint32x2_t
        -:17134:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17135:vld1_u32 (const uint32_t *a)
        -:17136:{
        -:17137:  return (uint32x2_t)
        -:17138:    __builtin_aarch64_ld1v2si ((const __builtin_aarch64_simd_si *) a);
        -:17139:}
        -:17140:
        -:17141:__extension__ extern __inline uint64x1_t
        -:17142:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17143:vld1_u64 (const uint64_t *a)
        -:17144:{
        -:17145:  return (uint64x1_t) {*a};
        -:17146:}
        -:17147:
        -:17148:/* vld1q */
        -:17149:
        -:17150:__extension__ extern __inline float16x8_t
        -:17151:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17152:vld1q_f16 (const float16_t *__a)
        -:17153:{
        -:17154:  return __builtin_aarch64_ld1v8hf (__a);
        -:17155:}
        -:17156:
        -:17157:__extension__ extern __inline float32x4_t
        -:17158:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17159:vld1q_f32 (const float32_t *a)
        -:17160:{
        -:17161:  return __builtin_aarch64_ld1v4sf ((const __builtin_aarch64_simd_sf *) a);
        -:17162:}
        -:17163:
        -:17164:__extension__ extern __inline float64x2_t
        -:17165:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17166:vld1q_f64 (const float64_t *a)
        -:17167:{
        -:17168:  return __builtin_aarch64_ld1v2df ((const __builtin_aarch64_simd_df *) a);
        -:17169:}
        -:17170:
        -:17171:__extension__ extern __inline poly8x16_t
        -:17172:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17173:vld1q_p8 (const poly8_t *a)
        -:17174:{
        -:17175:  return (poly8x16_t)
        -:17176:    __builtin_aarch64_ld1v16qi ((const __builtin_aarch64_simd_qi *) a);
        -:17177:}
        -:17178:
        -:17179:__extension__ extern __inline poly16x8_t
        -:17180:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17181:vld1q_p16 (const poly16_t *a)
        -:17182:{
        -:17183:  return (poly16x8_t)
        -:17184:    __builtin_aarch64_ld1v8hi ((const __builtin_aarch64_simd_hi *) a);
        -:17185:}
        -:17186:
        -:17187:__extension__ extern __inline poly64x2_t
        -:17188:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17189:vld1q_p64 (const poly64_t *a)
        -:17190:{
        -:17191:  return (poly64x2_t)
        -:17192:    __builtin_aarch64_ld1v2di ((const __builtin_aarch64_simd_di *) a);
        -:17193:}
        -:17194:
        -:17195:__extension__ extern __inline int8x16_t
        -:17196:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17197:vld1q_s8 (const int8_t *a)
        -:17198:{
        -:17199:  return __builtin_aarch64_ld1v16qi ((const __builtin_aarch64_simd_qi *) a);
        -:17200:}
        -:17201:
        -:17202:__extension__ extern __inline int16x8_t
        -:17203:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17204:vld1q_s16 (const int16_t *a)
        -:17205:{
        1:17206:  return __builtin_aarch64_ld1v8hi ((const __builtin_aarch64_simd_hi *) a);
        -:17207:}
        -:17208:
        -:17209:__extension__ extern __inline int32x4_t
        -:17210:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17211:vld1q_s32 (const int32_t *a)
        -:17212:{
        -:17213:  return __builtin_aarch64_ld1v4si ((const __builtin_aarch64_simd_si *) a);
        -:17214:}
        -:17215:
        -:17216:__extension__ extern __inline int64x2_t
        -:17217:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17218:vld1q_s64 (const int64_t *a)
        -:17219:{
        -:17220:  return __builtin_aarch64_ld1v2di ((const __builtin_aarch64_simd_di *) a);
        -:17221:}
        -:17222:
        -:17223:__extension__ extern __inline uint8x16_t
        -:17224:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17225:vld1q_u8 (const uint8_t *a)
        -:17226:{
        -:17227:  return (uint8x16_t)
        -:17228:    __builtin_aarch64_ld1v16qi ((const __builtin_aarch64_simd_qi *) a);
        -:17229:}
        -:17230:
        -:17231:__extension__ extern __inline uint16x8_t
        -:17232:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17233:vld1q_u16 (const uint16_t *a)
        -:17234:{
        -:17235:  return (uint16x8_t)
        -:17236:    __builtin_aarch64_ld1v8hi ((const __builtin_aarch64_simd_hi *) a);
        -:17237:}
        -:17238:
        -:17239:__extension__ extern __inline uint32x4_t
        -:17240:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17241:vld1q_u32 (const uint32_t *a)
        -:17242:{
        -:17243:  return (uint32x4_t)
        -:17244:    __builtin_aarch64_ld1v4si ((const __builtin_aarch64_simd_si *) a);
        -:17245:}
        -:17246:
        -:17247:__extension__ extern __inline uint64x2_t
        -:17248:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17249:vld1q_u64 (const uint64_t *a)
        -:17250:{
        -:17251:  return (uint64x2_t)
        -:17252:    __builtin_aarch64_ld1v2di ((const __builtin_aarch64_simd_di *) a);
        -:17253:}
        -:17254:
        -:17255:/* vld1_dup  */
        -:17256:
        -:17257:__extension__ extern __inline float16x4_t
        -:17258:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17259:vld1_dup_f16 (const float16_t* __a)
        -:17260:{
        -:17261:  return vdup_n_f16 (*__a);
        -:17262:}
        -:17263:
        -:17264:__extension__ extern __inline float32x2_t
        -:17265:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17266:vld1_dup_f32 (const float32_t* __a)
        -:17267:{
        -:17268:  return vdup_n_f32 (*__a);
        -:17269:}
        -:17270:
        -:17271:__extension__ extern __inline float64x1_t
        -:17272:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17273:vld1_dup_f64 (const float64_t* __a)
        -:17274:{
        -:17275:  return vdup_n_f64 (*__a);
        -:17276:}
        -:17277:
        -:17278:__extension__ extern __inline poly8x8_t
        -:17279:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17280:vld1_dup_p8 (const poly8_t* __a)
        -:17281:{
        -:17282:  return vdup_n_p8 (*__a);
        -:17283:}
        -:17284:
        -:17285:__extension__ extern __inline poly16x4_t
        -:17286:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17287:vld1_dup_p16 (const poly16_t* __a)
        -:17288:{
        -:17289:  return vdup_n_p16 (*__a);
        -:17290:}
        -:17291:
        -:17292:__extension__ extern __inline poly64x1_t
        -:17293:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17294:vld1_dup_p64 (const poly64_t* __a)
        -:17295:{
        -:17296:  return vdup_n_p64 (*__a);
        -:17297:}
        -:17298:
        -:17299:__extension__ extern __inline int8x8_t
        -:17300:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17301:vld1_dup_s8 (const int8_t* __a)
        -:17302:{
        -:17303:  return vdup_n_s8 (*__a);
        -:17304:}
        -:17305:
        -:17306:__extension__ extern __inline int16x4_t
        -:17307:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17308:vld1_dup_s16 (const int16_t* __a)
        -:17309:{
        -:17310:  return vdup_n_s16 (*__a);
        -:17311:}
        -:17312:
        -:17313:__extension__ extern __inline int32x2_t
        -:17314:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17315:vld1_dup_s32 (const int32_t* __a)
        -:17316:{
        -:17317:  return vdup_n_s32 (*__a);
        -:17318:}
        -:17319:
        -:17320:__extension__ extern __inline int64x1_t
        -:17321:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17322:vld1_dup_s64 (const int64_t* __a)
        -:17323:{
        -:17324:  return vdup_n_s64 (*__a);
        -:17325:}
        -:17326:
        -:17327:__extension__ extern __inline uint8x8_t
        -:17328:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17329:vld1_dup_u8 (const uint8_t* __a)
        -:17330:{
        -:17331:  return vdup_n_u8 (*__a);
        -:17332:}
        -:17333:
        -:17334:__extension__ extern __inline uint16x4_t
        -:17335:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17336:vld1_dup_u16 (const uint16_t* __a)
        -:17337:{
        -:17338:  return vdup_n_u16 (*__a);
        -:17339:}
        -:17340:
        -:17341:__extension__ extern __inline uint32x2_t
        -:17342:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17343:vld1_dup_u32 (const uint32_t* __a)
        -:17344:{
        -:17345:  return vdup_n_u32 (*__a);
        -:17346:}
        -:17347:
        -:17348:__extension__ extern __inline uint64x1_t
        -:17349:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17350:vld1_dup_u64 (const uint64_t* __a)
        -:17351:{
        -:17352:  return vdup_n_u64 (*__a);
        -:17353:}
        -:17354:
        -:17355:/* vld1q_dup  */
        -:17356:
        -:17357:__extension__ extern __inline float16x8_t
        -:17358:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17359:vld1q_dup_f16 (const float16_t* __a)
        -:17360:{
        -:17361:  return vdupq_n_f16 (*__a);
        -:17362:}
        -:17363:
        -:17364:__extension__ extern __inline float32x4_t
        -:17365:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17366:vld1q_dup_f32 (const float32_t* __a)
        -:17367:{
        -:17368:  return vdupq_n_f32 (*__a);
        -:17369:}
        -:17370:
        -:17371:__extension__ extern __inline float64x2_t
        -:17372:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17373:vld1q_dup_f64 (const float64_t* __a)
        -:17374:{
        -:17375:  return vdupq_n_f64 (*__a);
        -:17376:}
        -:17377:
        -:17378:__extension__ extern __inline poly8x16_t
        -:17379:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17380:vld1q_dup_p8 (const poly8_t* __a)
        -:17381:{
        -:17382:  return vdupq_n_p8 (*__a);
        -:17383:}
        -:17384:
        -:17385:__extension__ extern __inline poly16x8_t
        -:17386:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17387:vld1q_dup_p16 (const poly16_t* __a)
        -:17388:{
        -:17389:  return vdupq_n_p16 (*__a);
        -:17390:}
        -:17391:
        -:17392:__extension__ extern __inline poly64x2_t
        -:17393:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17394:vld1q_dup_p64 (const poly64_t* __a)
        -:17395:{
        -:17396:  return vdupq_n_p64 (*__a);
        -:17397:}
        -:17398:
        -:17399: __extension__ extern __inline int8x16_t
        -:17400:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17401:vld1q_dup_s8 (const int8_t* __a)
        -:17402:{
        -:17403:  return vdupq_n_s8 (*__a);
        -:17404:}
        -:17405:
        -:17406:__extension__ extern __inline int16x8_t
        -:17407:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17408:vld1q_dup_s16 (const int16_t* __a)
        -:17409:{
        -:17410:  return vdupq_n_s16 (*__a);
        -:17411:}
        -:17412:
        -:17413:__extension__ extern __inline int32x4_t
        -:17414:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17415:vld1q_dup_s32 (const int32_t* __a)
        -:17416:{
        -:17417:  return vdupq_n_s32 (*__a);
        -:17418:}
        -:17419:
        -:17420:__extension__ extern __inline int64x2_t
        -:17421:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17422:vld1q_dup_s64 (const int64_t* __a)
        -:17423:{
        -:17424:  return vdupq_n_s64 (*__a);
        -:17425:}
        -:17426:
        -:17427:__extension__ extern __inline uint8x16_t
        -:17428:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17429:vld1q_dup_u8 (const uint8_t* __a)
        -:17430:{
        -:17431:  return vdupq_n_u8 (*__a);
        -:17432:}
        -:17433:
        -:17434:__extension__ extern __inline uint16x8_t
        -:17435:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17436:vld1q_dup_u16 (const uint16_t* __a)
        -:17437:{
        -:17438:  return vdupq_n_u16 (*__a);
        -:17439:}
        -:17440:
        -:17441:__extension__ extern __inline uint32x4_t
        -:17442:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17443:vld1q_dup_u32 (const uint32_t* __a)
        -:17444:{
        -:17445:  return vdupq_n_u32 (*__a);
        -:17446:}
        -:17447:
        -:17448:__extension__ extern __inline uint64x2_t
        -:17449:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17450:vld1q_dup_u64 (const uint64_t* __a)
        -:17451:{
        -:17452:  return vdupq_n_u64 (*__a);
        -:17453:}
        -:17454:
        -:17455:/* vld1_lane  */
        -:17456:
        -:17457:__extension__ extern __inline float16x4_t
        -:17458:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17459:vld1_lane_f16 (const float16_t *__src, float16x4_t __vec, const int __lane)
        -:17460:{
        -:17461:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17462:}
        -:17463:
        -:17464:__extension__ extern __inline float32x2_t
        -:17465:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17466:vld1_lane_f32 (const float32_t *__src, float32x2_t __vec, const int __lane)
        -:17467:{
        -:17468:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17469:}
        -:17470:
        -:17471:__extension__ extern __inline float64x1_t
        -:17472:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17473:vld1_lane_f64 (const float64_t *__src, float64x1_t __vec, const int __lane)
        -:17474:{
        -:17475:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17476:}
        -:17477:
        -:17478:__extension__ extern __inline poly8x8_t
        -:17479:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17480:vld1_lane_p8 (const poly8_t *__src, poly8x8_t __vec, const int __lane)
        -:17481:{
        -:17482:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17483:}
        -:17484:
        -:17485:__extension__ extern __inline poly16x4_t
        -:17486:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17487:vld1_lane_p16 (const poly16_t *__src, poly16x4_t __vec, const int __lane)
        -:17488:{
        -:17489:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17490:}
        -:17491:
        -:17492:__extension__ extern __inline poly64x1_t
        -:17493:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17494:vld1_lane_p64 (const poly64_t *__src, poly64x1_t __vec, const int __lane)
        -:17495:{
        -:17496:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17497:}
        -:17498:
        -:17499:__extension__ extern __inline int8x8_t
        -:17500:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17501:vld1_lane_s8 (const int8_t *__src, int8x8_t __vec, const int __lane)
        -:17502:{
        -:17503:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17504:}
        -:17505:
        -:17506:__extension__ extern __inline int16x4_t
        -:17507:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17508:vld1_lane_s16 (const int16_t *__src, int16x4_t __vec, const int __lane)
        -:17509:{
        -:17510:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17511:}
        -:17512:
        -:17513:__extension__ extern __inline int32x2_t
        -:17514:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17515:vld1_lane_s32 (const int32_t *__src, int32x2_t __vec, const int __lane)
        -:17516:{
        -:17517:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17518:}
        -:17519:
        -:17520:__extension__ extern __inline int64x1_t
        -:17521:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17522:vld1_lane_s64 (const int64_t *__src, int64x1_t __vec, const int __lane)
        -:17523:{
        -:17524:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17525:}
        -:17526:
        -:17527:__extension__ extern __inline uint8x8_t
        -:17528:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17529:vld1_lane_u8 (const uint8_t *__src, uint8x8_t __vec, const int __lane)
        -:17530:{
        -:17531:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17532:}
        -:17533:
        -:17534:__extension__ extern __inline uint16x4_t
        -:17535:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17536:vld1_lane_u16 (const uint16_t *__src, uint16x4_t __vec, const int __lane)
        -:17537:{
        -:17538:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17539:}
        -:17540:
        -:17541:__extension__ extern __inline uint32x2_t
        -:17542:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17543:vld1_lane_u32 (const uint32_t *__src, uint32x2_t __vec, const int __lane)
        -:17544:{
        -:17545:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17546:}
        -:17547:
        -:17548:__extension__ extern __inline uint64x1_t
        -:17549:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17550:vld1_lane_u64 (const uint64_t *__src, uint64x1_t __vec, const int __lane)
        -:17551:{
        -:17552:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17553:}
        -:17554:
        -:17555:/* vld1q_lane  */
        -:17556:
        -:17557:__extension__ extern __inline float16x8_t
        -:17558:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17559:vld1q_lane_f16 (const float16_t *__src, float16x8_t __vec, const int __lane)
        -:17560:{
        -:17561:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17562:}
        -:17563:
        -:17564:__extension__ extern __inline float32x4_t
        -:17565:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17566:vld1q_lane_f32 (const float32_t *__src, float32x4_t __vec, const int __lane)
        -:17567:{
        -:17568:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17569:}
        -:17570:
        -:17571:__extension__ extern __inline float64x2_t
        -:17572:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17573:vld1q_lane_f64 (const float64_t *__src, float64x2_t __vec, const int __lane)
        -:17574:{
        -:17575:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17576:}
        -:17577:
        -:17578:__extension__ extern __inline poly8x16_t
        -:17579:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17580:vld1q_lane_p8 (const poly8_t *__src, poly8x16_t __vec, const int __lane)
        -:17581:{
        -:17582:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17583:}
        -:17584:
        -:17585:__extension__ extern __inline poly16x8_t
        -:17586:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17587:vld1q_lane_p16 (const poly16_t *__src, poly16x8_t __vec, const int __lane)
        -:17588:{
        -:17589:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17590:}
        -:17591:
        -:17592:__extension__ extern __inline poly64x2_t
        -:17593:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17594:vld1q_lane_p64 (const poly64_t *__src, poly64x2_t __vec, const int __lane)
        -:17595:{
        -:17596:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17597:}
        -:17598:
        -:17599:__extension__ extern __inline int8x16_t
        -:17600:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17601:vld1q_lane_s8 (const int8_t *__src, int8x16_t __vec, const int __lane)
        -:17602:{
        -:17603:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17604:}
        -:17605:
        -:17606:__extension__ extern __inline int16x8_t
        -:17607:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17608:vld1q_lane_s16 (const int16_t *__src, int16x8_t __vec, const int __lane)
        -:17609:{
        -:17610:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17611:}
        -:17612:
        -:17613:__extension__ extern __inline int32x4_t
        -:17614:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17615:vld1q_lane_s32 (const int32_t *__src, int32x4_t __vec, const int __lane)
        -:17616:{
        -:17617:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17618:}
        -:17619:
        -:17620:__extension__ extern __inline int64x2_t
        -:17621:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17622:vld1q_lane_s64 (const int64_t *__src, int64x2_t __vec, const int __lane)
        -:17623:{
        -:17624:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17625:}
        -:17626:
        -:17627:__extension__ extern __inline uint8x16_t
        -:17628:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17629:vld1q_lane_u8 (const uint8_t *__src, uint8x16_t __vec, const int __lane)
        -:17630:{
        -:17631:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17632:}
        -:17633:
        -:17634:__extension__ extern __inline uint16x8_t
        -:17635:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17636:vld1q_lane_u16 (const uint16_t *__src, uint16x8_t __vec, const int __lane)
        -:17637:{
        -:17638:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17639:}
        -:17640:
        -:17641:__extension__ extern __inline uint32x4_t
        -:17642:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17643:vld1q_lane_u32 (const uint32_t *__src, uint32x4_t __vec, const int __lane)
        -:17644:{
        -:17645:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17646:}
        -:17647:
        -:17648:__extension__ extern __inline uint64x2_t
        -:17649:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17650:vld1q_lane_u64 (const uint64_t *__src, uint64x2_t __vec, const int __lane)
        -:17651:{
        -:17652:  return __aarch64_vset_lane_any (*__src, __vec, __lane);
        -:17653:}
        -:17654:
        -:17655:/* vldn */
        -:17656:
        -:17657:__extension__ extern __inline int64x1x2_t
        -:17658:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17659:vld2_s64 (const int64_t * __a)
        -:17660:{
        -:17661:  int64x1x2_t ret;
        -:17662:  __builtin_aarch64_simd_oi __o;
        -:17663:  __o = __builtin_aarch64_ld2di ((const __builtin_aarch64_simd_di *) __a);
        -:17664:  ret.val[0] = (int64x1_t) __builtin_aarch64_get_dregoidi (__o, 0);
        -:17665:  ret.val[1] = (int64x1_t) __builtin_aarch64_get_dregoidi (__o, 1);
        -:17666:  return ret;
        -:17667:}
        -:17668:
        -:17669:__extension__ extern __inline uint64x1x2_t
        -:17670:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17671:vld2_u64 (const uint64_t * __a)
        -:17672:{
        -:17673:  uint64x1x2_t ret;
        -:17674:  __builtin_aarch64_simd_oi __o;
        -:17675:  __o = __builtin_aarch64_ld2di ((const __builtin_aarch64_simd_di *) __a);
        -:17676:  ret.val[0] = (uint64x1_t) __builtin_aarch64_get_dregoidi (__o, 0);
        -:17677:  ret.val[1] = (uint64x1_t) __builtin_aarch64_get_dregoidi (__o, 1);
        -:17678:  return ret;
        -:17679:}
        -:17680:
        -:17681:__extension__ extern __inline float64x1x2_t
        -:17682:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17683:vld2_f64 (const float64_t * __a)
        -:17684:{
        -:17685:  float64x1x2_t ret;
        -:17686:  __builtin_aarch64_simd_oi __o;
        -:17687:  __o = __builtin_aarch64_ld2df ((const __builtin_aarch64_simd_df *) __a);
        -:17688:  ret.val[0] = (float64x1_t) {__builtin_aarch64_get_dregoidf (__o, 0)};
        -:17689:  ret.val[1] = (float64x1_t) {__builtin_aarch64_get_dregoidf (__o, 1)};
        -:17690:  return ret;
        -:17691:}
        -:17692:
        -:17693:__extension__ extern __inline int8x8x2_t
        -:17694:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17695:vld2_s8 (const int8_t * __a)
        -:17696:{
        -:17697:  int8x8x2_t ret;
        -:17698:  __builtin_aarch64_simd_oi __o;
        -:17699:  __o = __builtin_aarch64_ld2v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:17700:  ret.val[0] = (int8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 0);
        -:17701:  ret.val[1] = (int8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 1);
        -:17702:  return ret;
        -:17703:}
        -:17704:
        -:17705:__extension__ extern __inline poly8x8x2_t
        -:17706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17707:vld2_p8 (const poly8_t * __a)
        -:17708:{
        -:17709:  poly8x8x2_t ret;
        -:17710:  __builtin_aarch64_simd_oi __o;
        -:17711:  __o = __builtin_aarch64_ld2v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:17712:  ret.val[0] = (poly8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 0);
        -:17713:  ret.val[1] = (poly8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 1);
        -:17714:  return ret;
        -:17715:}
        -:17716:
        -:17717:__extension__ extern __inline poly64x1x2_t
        -:17718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17719:vld2_p64 (const poly64_t * __a)
        -:17720:{
        -:17721:  poly64x1x2_t ret;
        -:17722:  __builtin_aarch64_simd_oi __o;
        -:17723:  __o = __builtin_aarch64_ld2di ((const __builtin_aarch64_simd_di *) __a);
        -:17724:  ret.val[0] = (poly64x1_t) __builtin_aarch64_get_dregoidi_pss (__o, 0);
        -:17725:  ret.val[1] = (poly64x1_t) __builtin_aarch64_get_dregoidi_pss (__o, 1);
        -:17726:  return ret;
        -:17727:}
        -:17728:
        -:17729:__extension__ extern __inline int16x4x2_t
        -:17730:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17731:vld2_s16 (const int16_t * __a)
        -:17732:{
        -:17733:  int16x4x2_t ret;
        -:17734:  __builtin_aarch64_simd_oi __o;
        -:17735:  __o = __builtin_aarch64_ld2v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:17736:  ret.val[0] = (int16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 0);
        -:17737:  ret.val[1] = (int16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 1);
        -:17738:  return ret;
        -:17739:}
        -:17740:
        -:17741:__extension__ extern __inline poly16x4x2_t
        -:17742:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17743:vld2_p16 (const poly16_t * __a)
        -:17744:{
        -:17745:  poly16x4x2_t ret;
        -:17746:  __builtin_aarch64_simd_oi __o;
        -:17747:  __o = __builtin_aarch64_ld2v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:17748:  ret.val[0] = (poly16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 0);
        -:17749:  ret.val[1] = (poly16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 1);
        -:17750:  return ret;
        -:17751:}
        -:17752:
        -:17753:__extension__ extern __inline int32x2x2_t
        -:17754:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17755:vld2_s32 (const int32_t * __a)
        -:17756:{
        -:17757:  int32x2x2_t ret;
        -:17758:  __builtin_aarch64_simd_oi __o;
        -:17759:  __o = __builtin_aarch64_ld2v2si ((const __builtin_aarch64_simd_si *) __a);
        -:17760:  ret.val[0] = (int32x2_t) __builtin_aarch64_get_dregoiv2si (__o, 0);
        -:17761:  ret.val[1] = (int32x2_t) __builtin_aarch64_get_dregoiv2si (__o, 1);
        -:17762:  return ret;
        -:17763:}
        -:17764:
        -:17765:__extension__ extern __inline uint8x8x2_t
        -:17766:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17767:vld2_u8 (const uint8_t * __a)
        -:17768:{
        -:17769:  uint8x8x2_t ret;
        -:17770:  __builtin_aarch64_simd_oi __o;
        -:17771:  __o = __builtin_aarch64_ld2v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:17772:  ret.val[0] = (uint8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 0);
        -:17773:  ret.val[1] = (uint8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 1);
        -:17774:  return ret;
        -:17775:}
        -:17776:
        -:17777:__extension__ extern __inline uint16x4x2_t
        -:17778:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17779:vld2_u16 (const uint16_t * __a)
        -:17780:{
        -:17781:  uint16x4x2_t ret;
        -:17782:  __builtin_aarch64_simd_oi __o;
        -:17783:  __o = __builtin_aarch64_ld2v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:17784:  ret.val[0] = (uint16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 0);
        -:17785:  ret.val[1] = (uint16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 1);
        -:17786:  return ret;
        -:17787:}
        -:17788:
        -:17789:__extension__ extern __inline uint32x2x2_t
        -:17790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17791:vld2_u32 (const uint32_t * __a)
        -:17792:{
        -:17793:  uint32x2x2_t ret;
        -:17794:  __builtin_aarch64_simd_oi __o;
        -:17795:  __o = __builtin_aarch64_ld2v2si ((const __builtin_aarch64_simd_si *) __a);
        -:17796:  ret.val[0] = (uint32x2_t) __builtin_aarch64_get_dregoiv2si (__o, 0);
        -:17797:  ret.val[1] = (uint32x2_t) __builtin_aarch64_get_dregoiv2si (__o, 1);
        -:17798:  return ret;
        -:17799:}
        -:17800:
        -:17801:__extension__ extern __inline float16x4x2_t
        -:17802:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17803:vld2_f16 (const float16_t * __a)
        -:17804:{
        -:17805:  float16x4x2_t ret;
        -:17806:  __builtin_aarch64_simd_oi __o;
        -:17807:  __o = __builtin_aarch64_ld2v4hf (__a);
        -:17808:  ret.val[0] = __builtin_aarch64_get_dregoiv4hf (__o, 0);
        -:17809:  ret.val[1] = __builtin_aarch64_get_dregoiv4hf (__o, 1);
        -:17810:  return ret;
        -:17811:}
        -:17812:
        -:17813:__extension__ extern __inline float32x2x2_t
        -:17814:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17815:vld2_f32 (const float32_t * __a)
        -:17816:{
        -:17817:  float32x2x2_t ret;
        -:17818:  __builtin_aarch64_simd_oi __o;
        -:17819:  __o = __builtin_aarch64_ld2v2sf ((const __builtin_aarch64_simd_sf *) __a);
        -:17820:  ret.val[0] = (float32x2_t) __builtin_aarch64_get_dregoiv2sf (__o, 0);
        -:17821:  ret.val[1] = (float32x2_t) __builtin_aarch64_get_dregoiv2sf (__o, 1);
        -:17822:  return ret;
        -:17823:}
        -:17824:
        -:17825:__extension__ extern __inline int8x16x2_t
        -:17826:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17827:vld2q_s8 (const int8_t * __a)
        -:17828:{
        -:17829:  int8x16x2_t ret;
        -:17830:  __builtin_aarch64_simd_oi __o;
        -:17831:  __o = __builtin_aarch64_ld2v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:17832:  ret.val[0] = (int8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 0);
        -:17833:  ret.val[1] = (int8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 1);
        -:17834:  return ret;
        -:17835:}
        -:17836:
        -:17837:__extension__ extern __inline poly8x16x2_t
        -:17838:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17839:vld2q_p8 (const poly8_t * __a)
        -:17840:{
        -:17841:  poly8x16x2_t ret;
        -:17842:  __builtin_aarch64_simd_oi __o;
        -:17843:  __o = __builtin_aarch64_ld2v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:17844:  ret.val[0] = (poly8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 0);
        -:17845:  ret.val[1] = (poly8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 1);
        -:17846:  return ret;
        -:17847:}
        -:17848:
        -:17849:__extension__ extern __inline int16x8x2_t
        -:17850:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17851:vld2q_s16 (const int16_t * __a)
        -:17852:{
        -:17853:  int16x8x2_t ret;
        -:17854:  __builtin_aarch64_simd_oi __o;
        -:17855:  __o = __builtin_aarch64_ld2v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:17856:  ret.val[0] = (int16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 0);
        -:17857:  ret.val[1] = (int16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 1);
        -:17858:  return ret;
        -:17859:}
        -:17860:
        -:17861:__extension__ extern __inline poly16x8x2_t
        -:17862:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17863:vld2q_p16 (const poly16_t * __a)
        -:17864:{
        -:17865:  poly16x8x2_t ret;
        -:17866:  __builtin_aarch64_simd_oi __o;
        -:17867:  __o = __builtin_aarch64_ld2v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:17868:  ret.val[0] = (poly16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 0);
        -:17869:  ret.val[1] = (poly16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 1);
        -:17870:  return ret;
        -:17871:}
        -:17872:
        -:17873:__extension__ extern __inline poly64x2x2_t
        -:17874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17875:vld2q_p64 (const poly64_t * __a)
        -:17876:{
        -:17877:  poly64x2x2_t ret;
        -:17878:  __builtin_aarch64_simd_oi __o;
        -:17879:  __o = __builtin_aarch64_ld2v2di ((const __builtin_aarch64_simd_di *) __a);
        -:17880:  ret.val[0] = (poly64x2_t) __builtin_aarch64_get_qregoiv2di_pss (__o, 0);
        -:17881:  ret.val[1] = (poly64x2_t) __builtin_aarch64_get_qregoiv2di_pss (__o, 1);
        -:17882:  return ret;
        -:17883:}
        -:17884:
        -:17885:__extension__ extern __inline int32x4x2_t
        -:17886:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17887:vld2q_s32 (const int32_t * __a)
        -:17888:{
        -:17889:  int32x4x2_t ret;
        -:17890:  __builtin_aarch64_simd_oi __o;
        -:17891:  __o = __builtin_aarch64_ld2v4si ((const __builtin_aarch64_simd_si *) __a);
        -:17892:  ret.val[0] = (int32x4_t) __builtin_aarch64_get_qregoiv4si (__o, 0);
        -:17893:  ret.val[1] = (int32x4_t) __builtin_aarch64_get_qregoiv4si (__o, 1);
        -:17894:  return ret;
        -:17895:}
        -:17896:
        -:17897:__extension__ extern __inline int64x2x2_t
        -:17898:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17899:vld2q_s64 (const int64_t * __a)
        -:17900:{
        -:17901:  int64x2x2_t ret;
        -:17902:  __builtin_aarch64_simd_oi __o;
        -:17903:  __o = __builtin_aarch64_ld2v2di ((const __builtin_aarch64_simd_di *) __a);
        -:17904:  ret.val[0] = (int64x2_t) __builtin_aarch64_get_qregoiv2di (__o, 0);
        -:17905:  ret.val[1] = (int64x2_t) __builtin_aarch64_get_qregoiv2di (__o, 1);
        -:17906:  return ret;
        -:17907:}
        -:17908:
        -:17909:__extension__ extern __inline uint8x16x2_t
        -:17910:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17911:vld2q_u8 (const uint8_t * __a)
        -:17912:{
        -:17913:  uint8x16x2_t ret;
        -:17914:  __builtin_aarch64_simd_oi __o;
        -:17915:  __o = __builtin_aarch64_ld2v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:17916:  ret.val[0] = (uint8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 0);
        -:17917:  ret.val[1] = (uint8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 1);
        -:17918:  return ret;
        -:17919:}
        -:17920:
        -:17921:__extension__ extern __inline uint16x8x2_t
        -:17922:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17923:vld2q_u16 (const uint16_t * __a)
        -:17924:{
        -:17925:  uint16x8x2_t ret;
        -:17926:  __builtin_aarch64_simd_oi __o;
        -:17927:  __o = __builtin_aarch64_ld2v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:17928:  ret.val[0] = (uint16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 0);
        -:17929:  ret.val[1] = (uint16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 1);
        -:17930:  return ret;
        -:17931:}
        -:17932:
        -:17933:__extension__ extern __inline uint32x4x2_t
        -:17934:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17935:vld2q_u32 (const uint32_t * __a)
        -:17936:{
        -:17937:  uint32x4x2_t ret;
        -:17938:  __builtin_aarch64_simd_oi __o;
        -:17939:  __o = __builtin_aarch64_ld2v4si ((const __builtin_aarch64_simd_si *) __a);
        -:17940:  ret.val[0] = (uint32x4_t) __builtin_aarch64_get_qregoiv4si (__o, 0);
        -:17941:  ret.val[1] = (uint32x4_t) __builtin_aarch64_get_qregoiv4si (__o, 1);
        -:17942:  return ret;
        -:17943:}
        -:17944:
        -:17945:__extension__ extern __inline uint64x2x2_t
        -:17946:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17947:vld2q_u64 (const uint64_t * __a)
        -:17948:{
        -:17949:  uint64x2x2_t ret;
        -:17950:  __builtin_aarch64_simd_oi __o;
        -:17951:  __o = __builtin_aarch64_ld2v2di ((const __builtin_aarch64_simd_di *) __a);
        -:17952:  ret.val[0] = (uint64x2_t) __builtin_aarch64_get_qregoiv2di (__o, 0);
        -:17953:  ret.val[1] = (uint64x2_t) __builtin_aarch64_get_qregoiv2di (__o, 1);
        -:17954:  return ret;
        -:17955:}
        -:17956:
        -:17957:__extension__ extern __inline float16x8x2_t
        -:17958:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17959:vld2q_f16 (const float16_t * __a)
        -:17960:{
        -:17961:  float16x8x2_t ret;
        -:17962:  __builtin_aarch64_simd_oi __o;
        -:17963:  __o = __builtin_aarch64_ld2v8hf (__a);
        -:17964:  ret.val[0] = __builtin_aarch64_get_qregoiv8hf (__o, 0);
        -:17965:  ret.val[1] = __builtin_aarch64_get_qregoiv8hf (__o, 1);
        -:17966:  return ret;
        -:17967:}
        -:17968:
        -:17969:__extension__ extern __inline float32x4x2_t
        -:17970:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17971:vld2q_f32 (const float32_t * __a)
        -:17972:{
        -:17973:  float32x4x2_t ret;
        -:17974:  __builtin_aarch64_simd_oi __o;
        -:17975:  __o = __builtin_aarch64_ld2v4sf ((const __builtin_aarch64_simd_sf *) __a);
        -:17976:  ret.val[0] = (float32x4_t) __builtin_aarch64_get_qregoiv4sf (__o, 0);
        -:17977:  ret.val[1] = (float32x4_t) __builtin_aarch64_get_qregoiv4sf (__o, 1);
        -:17978:  return ret;
        -:17979:}
        -:17980:
        -:17981:__extension__ extern __inline float64x2x2_t
        -:17982:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17983:vld2q_f64 (const float64_t * __a)
        -:17984:{
        -:17985:  float64x2x2_t ret;
        -:17986:  __builtin_aarch64_simd_oi __o;
        -:17987:  __o = __builtin_aarch64_ld2v2df ((const __builtin_aarch64_simd_df *) __a);
        -:17988:  ret.val[0] = (float64x2_t) __builtin_aarch64_get_qregoiv2df (__o, 0);
        -:17989:  ret.val[1] = (float64x2_t) __builtin_aarch64_get_qregoiv2df (__o, 1);
        -:17990:  return ret;
        -:17991:}
        -:17992:
        -:17993:__extension__ extern __inline int64x1x3_t
        -:17994:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:17995:vld3_s64 (const int64_t * __a)
        -:17996:{
        -:17997:  int64x1x3_t ret;
        -:17998:  __builtin_aarch64_simd_ci __o;
        -:17999:  __o = __builtin_aarch64_ld3di ((const __builtin_aarch64_simd_di *) __a);
        -:18000:  ret.val[0] = (int64x1_t) __builtin_aarch64_get_dregcidi (__o, 0);
        -:18001:  ret.val[1] = (int64x1_t) __builtin_aarch64_get_dregcidi (__o, 1);
        -:18002:  ret.val[2] = (int64x1_t) __builtin_aarch64_get_dregcidi (__o, 2);
        -:18003:  return ret;
        -:18004:}
        -:18005:
        -:18006:__extension__ extern __inline uint64x1x3_t
        -:18007:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18008:vld3_u64 (const uint64_t * __a)
        -:18009:{
        -:18010:  uint64x1x3_t ret;
        -:18011:  __builtin_aarch64_simd_ci __o;
        -:18012:  __o = __builtin_aarch64_ld3di ((const __builtin_aarch64_simd_di *) __a);
        -:18013:  ret.val[0] = (uint64x1_t) __builtin_aarch64_get_dregcidi (__o, 0);
        -:18014:  ret.val[1] = (uint64x1_t) __builtin_aarch64_get_dregcidi (__o, 1);
        -:18015:  ret.val[2] = (uint64x1_t) __builtin_aarch64_get_dregcidi (__o, 2);
        -:18016:  return ret;
        -:18017:}
        -:18018:
        -:18019:__extension__ extern __inline float64x1x3_t
        -:18020:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18021:vld3_f64 (const float64_t * __a)
        -:18022:{
        -:18023:  float64x1x3_t ret;
        -:18024:  __builtin_aarch64_simd_ci __o;
        -:18025:  __o = __builtin_aarch64_ld3df ((const __builtin_aarch64_simd_df *) __a);
        -:18026:  ret.val[0] = (float64x1_t) {__builtin_aarch64_get_dregcidf (__o, 0)};
        -:18027:  ret.val[1] = (float64x1_t) {__builtin_aarch64_get_dregcidf (__o, 1)};
        -:18028:  ret.val[2] = (float64x1_t) {__builtin_aarch64_get_dregcidf (__o, 2)};
        -:18029:  return ret;
        -:18030:}
        -:18031:
        -:18032:__extension__ extern __inline int8x8x3_t
        -:18033:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18034:vld3_s8 (const int8_t * __a)
        -:18035:{
        -:18036:  int8x8x3_t ret;
        -:18037:  __builtin_aarch64_simd_ci __o;
        -:18038:  __o = __builtin_aarch64_ld3v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18039:  ret.val[0] = (int8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 0);
        -:18040:  ret.val[1] = (int8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 1);
        -:18041:  ret.val[2] = (int8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 2);
        -:18042:  return ret;
        -:18043:}
        -:18044:
        -:18045:__extension__ extern __inline poly8x8x3_t
        -:18046:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18047:vld3_p8 (const poly8_t * __a)
        -:18048:{
        -:18049:  poly8x8x3_t ret;
        -:18050:  __builtin_aarch64_simd_ci __o;
        -:18051:  __o = __builtin_aarch64_ld3v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18052:  ret.val[0] = (poly8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 0);
        -:18053:  ret.val[1] = (poly8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 1);
        -:18054:  ret.val[2] = (poly8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 2);
        -:18055:  return ret;
        -:18056:}
        -:18057:
        -:18058:__extension__ extern __inline int16x4x3_t
        -:18059:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18060:vld3_s16 (const int16_t * __a)
        -:18061:{
        -:18062:  int16x4x3_t ret;
        -:18063:  __builtin_aarch64_simd_ci __o;
        -:18064:  __o = __builtin_aarch64_ld3v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18065:  ret.val[0] = (int16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 0);
        -:18066:  ret.val[1] = (int16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 1);
        -:18067:  ret.val[2] = (int16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 2);
        -:18068:  return ret;
        -:18069:}
        -:18070:
        -:18071:__extension__ extern __inline poly16x4x3_t
        -:18072:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18073:vld3_p16 (const poly16_t * __a)
        -:18074:{
        -:18075:  poly16x4x3_t ret;
        -:18076:  __builtin_aarch64_simd_ci __o;
        -:18077:  __o = __builtin_aarch64_ld3v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18078:  ret.val[0] = (poly16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 0);
        -:18079:  ret.val[1] = (poly16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 1);
        -:18080:  ret.val[2] = (poly16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 2);
        -:18081:  return ret;
        -:18082:}
        -:18083:
        -:18084:__extension__ extern __inline int32x2x3_t
        -:18085:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18086:vld3_s32 (const int32_t * __a)
        -:18087:{
        -:18088:  int32x2x3_t ret;
        -:18089:  __builtin_aarch64_simd_ci __o;
        -:18090:  __o = __builtin_aarch64_ld3v2si ((const __builtin_aarch64_simd_si *) __a);
        -:18091:  ret.val[0] = (int32x2_t) __builtin_aarch64_get_dregciv2si (__o, 0);
        -:18092:  ret.val[1] = (int32x2_t) __builtin_aarch64_get_dregciv2si (__o, 1);
        -:18093:  ret.val[2] = (int32x2_t) __builtin_aarch64_get_dregciv2si (__o, 2);
        -:18094:  return ret;
        -:18095:}
        -:18096:
        -:18097:__extension__ extern __inline uint8x8x3_t
        -:18098:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18099:vld3_u8 (const uint8_t * __a)
        -:18100:{
        -:18101:  uint8x8x3_t ret;
        -:18102:  __builtin_aarch64_simd_ci __o;
        -:18103:  __o = __builtin_aarch64_ld3v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18104:  ret.val[0] = (uint8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 0);
        -:18105:  ret.val[1] = (uint8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 1);
        -:18106:  ret.val[2] = (uint8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 2);
        -:18107:  return ret;
        -:18108:}
        -:18109:
        -:18110:__extension__ extern __inline uint16x4x3_t
        -:18111:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18112:vld3_u16 (const uint16_t * __a)
        -:18113:{
        -:18114:  uint16x4x3_t ret;
        -:18115:  __builtin_aarch64_simd_ci __o;
        -:18116:  __o = __builtin_aarch64_ld3v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18117:  ret.val[0] = (uint16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 0);
        -:18118:  ret.val[1] = (uint16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 1);
        -:18119:  ret.val[2] = (uint16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 2);
        -:18120:  return ret;
        -:18121:}
        -:18122:
        -:18123:__extension__ extern __inline uint32x2x3_t
        -:18124:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18125:vld3_u32 (const uint32_t * __a)
        -:18126:{
        -:18127:  uint32x2x3_t ret;
        -:18128:  __builtin_aarch64_simd_ci __o;
        -:18129:  __o = __builtin_aarch64_ld3v2si ((const __builtin_aarch64_simd_si *) __a);
        -:18130:  ret.val[0] = (uint32x2_t) __builtin_aarch64_get_dregciv2si (__o, 0);
        -:18131:  ret.val[1] = (uint32x2_t) __builtin_aarch64_get_dregciv2si (__o, 1);
        -:18132:  ret.val[2] = (uint32x2_t) __builtin_aarch64_get_dregciv2si (__o, 2);
        -:18133:  return ret;
        -:18134:}
        -:18135:
        -:18136:__extension__ extern __inline float16x4x3_t
        -:18137:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18138:vld3_f16 (const float16_t * __a)
        -:18139:{
        -:18140:  float16x4x3_t ret;
        -:18141:  __builtin_aarch64_simd_ci __o;
        -:18142:  __o = __builtin_aarch64_ld3v4hf (__a);
        -:18143:  ret.val[0] = __builtin_aarch64_get_dregciv4hf (__o, 0);
        -:18144:  ret.val[1] = __builtin_aarch64_get_dregciv4hf (__o, 1);
        -:18145:  ret.val[2] = __builtin_aarch64_get_dregciv4hf (__o, 2);
        -:18146:  return ret;
        -:18147:}
        -:18148:
        -:18149:__extension__ extern __inline float32x2x3_t
        -:18150:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18151:vld3_f32 (const float32_t * __a)
        -:18152:{
        -:18153:  float32x2x3_t ret;
        -:18154:  __builtin_aarch64_simd_ci __o;
        -:18155:  __o = __builtin_aarch64_ld3v2sf ((const __builtin_aarch64_simd_sf *) __a);
        -:18156:  ret.val[0] = (float32x2_t) __builtin_aarch64_get_dregciv2sf (__o, 0);
        -:18157:  ret.val[1] = (float32x2_t) __builtin_aarch64_get_dregciv2sf (__o, 1);
        -:18158:  ret.val[2] = (float32x2_t) __builtin_aarch64_get_dregciv2sf (__o, 2);
        -:18159:  return ret;
        -:18160:}
        -:18161:
        -:18162:__extension__ extern __inline poly64x1x3_t
        -:18163:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18164:vld3_p64 (const poly64_t * __a)
        -:18165:{
        -:18166:  poly64x1x3_t ret;
        -:18167:  __builtin_aarch64_simd_ci __o;
        -:18168:  __o = __builtin_aarch64_ld3di ((const __builtin_aarch64_simd_di *) __a);
        -:18169:  ret.val[0] = (poly64x1_t) __builtin_aarch64_get_dregcidi_pss (__o, 0);
        -:18170:  ret.val[1] = (poly64x1_t) __builtin_aarch64_get_dregcidi_pss (__o, 1);
        -:18171:  ret.val[2] = (poly64x1_t) __builtin_aarch64_get_dregcidi_pss (__o, 2);
        -:18172:  return ret;
        -:18173:}
        -:18174:
        -:18175:__extension__ extern __inline int8x16x3_t
        -:18176:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18177:vld3q_s8 (const int8_t * __a)
        -:18178:{
        -:18179:  int8x16x3_t ret;
        -:18180:  __builtin_aarch64_simd_ci __o;
        -:18181:  __o = __builtin_aarch64_ld3v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18182:  ret.val[0] = (int8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 0);
        -:18183:  ret.val[1] = (int8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 1);
        -:18184:  ret.val[2] = (int8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 2);
        -:18185:  return ret;
        -:18186:}
        -:18187:
        -:18188:__extension__ extern __inline poly8x16x3_t
        -:18189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18190:vld3q_p8 (const poly8_t * __a)
        -:18191:{
        -:18192:  poly8x16x3_t ret;
        -:18193:  __builtin_aarch64_simd_ci __o;
        -:18194:  __o = __builtin_aarch64_ld3v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18195:  ret.val[0] = (poly8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 0);
        -:18196:  ret.val[1] = (poly8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 1);
        -:18197:  ret.val[2] = (poly8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 2);
        -:18198:  return ret;
        -:18199:}
        -:18200:
        -:18201:__extension__ extern __inline int16x8x3_t
        -:18202:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18203:vld3q_s16 (const int16_t * __a)
        -:18204:{
        -:18205:  int16x8x3_t ret;
        -:18206:  __builtin_aarch64_simd_ci __o;
        -:18207:  __o = __builtin_aarch64_ld3v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18208:  ret.val[0] = (int16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 0);
        -:18209:  ret.val[1] = (int16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 1);
        -:18210:  ret.val[2] = (int16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 2);
        -:18211:  return ret;
        -:18212:}
        -:18213:
        -:18214:__extension__ extern __inline poly16x8x3_t
        -:18215:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18216:vld3q_p16 (const poly16_t * __a)
        -:18217:{
        -:18218:  poly16x8x3_t ret;
        -:18219:  __builtin_aarch64_simd_ci __o;
        -:18220:  __o = __builtin_aarch64_ld3v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18221:  ret.val[0] = (poly16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 0);
        -:18222:  ret.val[1] = (poly16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 1);
        -:18223:  ret.val[2] = (poly16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 2);
        -:18224:  return ret;
        -:18225:}
        -:18226:
        -:18227:__extension__ extern __inline int32x4x3_t
        -:18228:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18229:vld3q_s32 (const int32_t * __a)
        -:18230:{
        -:18231:  int32x4x3_t ret;
        -:18232:  __builtin_aarch64_simd_ci __o;
        -:18233:  __o = __builtin_aarch64_ld3v4si ((const __builtin_aarch64_simd_si *) __a);
        -:18234:  ret.val[0] = (int32x4_t) __builtin_aarch64_get_qregciv4si (__o, 0);
        -:18235:  ret.val[1] = (int32x4_t) __builtin_aarch64_get_qregciv4si (__o, 1);
        -:18236:  ret.val[2] = (int32x4_t) __builtin_aarch64_get_qregciv4si (__o, 2);
        -:18237:  return ret;
        -:18238:}
        -:18239:
        -:18240:__extension__ extern __inline int64x2x3_t
        -:18241:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18242:vld3q_s64 (const int64_t * __a)
        -:18243:{
        -:18244:  int64x2x3_t ret;
        -:18245:  __builtin_aarch64_simd_ci __o;
        -:18246:  __o = __builtin_aarch64_ld3v2di ((const __builtin_aarch64_simd_di *) __a);
        -:18247:  ret.val[0] = (int64x2_t) __builtin_aarch64_get_qregciv2di (__o, 0);
        -:18248:  ret.val[1] = (int64x2_t) __builtin_aarch64_get_qregciv2di (__o, 1);
        -:18249:  ret.val[2] = (int64x2_t) __builtin_aarch64_get_qregciv2di (__o, 2);
        -:18250:  return ret;
        -:18251:}
        -:18252:
        -:18253:__extension__ extern __inline uint8x16x3_t
        -:18254:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18255:vld3q_u8 (const uint8_t * __a)
        -:18256:{
        -:18257:  uint8x16x3_t ret;
        -:18258:  __builtin_aarch64_simd_ci __o;
        -:18259:  __o = __builtin_aarch64_ld3v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18260:  ret.val[0] = (uint8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 0);
        -:18261:  ret.val[1] = (uint8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 1);
        -:18262:  ret.val[2] = (uint8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 2);
        -:18263:  return ret;
        -:18264:}
        -:18265:
        -:18266:__extension__ extern __inline uint16x8x3_t
        -:18267:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18268:vld3q_u16 (const uint16_t * __a)
        -:18269:{
        -:18270:  uint16x8x3_t ret;
        -:18271:  __builtin_aarch64_simd_ci __o;
        -:18272:  __o = __builtin_aarch64_ld3v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18273:  ret.val[0] = (uint16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 0);
        -:18274:  ret.val[1] = (uint16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 1);
        -:18275:  ret.val[2] = (uint16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 2);
        -:18276:  return ret;
        -:18277:}
        -:18278:
        -:18279:__extension__ extern __inline uint32x4x3_t
        -:18280:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18281:vld3q_u32 (const uint32_t * __a)
        -:18282:{
        -:18283:  uint32x4x3_t ret;
        -:18284:  __builtin_aarch64_simd_ci __o;
        -:18285:  __o = __builtin_aarch64_ld3v4si ((const __builtin_aarch64_simd_si *) __a);
        -:18286:  ret.val[0] = (uint32x4_t) __builtin_aarch64_get_qregciv4si (__o, 0);
        -:18287:  ret.val[1] = (uint32x4_t) __builtin_aarch64_get_qregciv4si (__o, 1);
        -:18288:  ret.val[2] = (uint32x4_t) __builtin_aarch64_get_qregciv4si (__o, 2);
        -:18289:  return ret;
        -:18290:}
        -:18291:
        -:18292:__extension__ extern __inline uint64x2x3_t
        -:18293:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18294:vld3q_u64 (const uint64_t * __a)
        -:18295:{
        -:18296:  uint64x2x3_t ret;
        -:18297:  __builtin_aarch64_simd_ci __o;
        -:18298:  __o = __builtin_aarch64_ld3v2di ((const __builtin_aarch64_simd_di *) __a);
        -:18299:  ret.val[0] = (uint64x2_t) __builtin_aarch64_get_qregciv2di (__o, 0);
        -:18300:  ret.val[1] = (uint64x2_t) __builtin_aarch64_get_qregciv2di (__o, 1);
        -:18301:  ret.val[2] = (uint64x2_t) __builtin_aarch64_get_qregciv2di (__o, 2);
        -:18302:  return ret;
        -:18303:}
        -:18304:
        -:18305:__extension__ extern __inline float16x8x3_t
        -:18306:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18307:vld3q_f16 (const float16_t * __a)
        -:18308:{
        -:18309:  float16x8x3_t ret;
        -:18310:  __builtin_aarch64_simd_ci __o;
        -:18311:  __o = __builtin_aarch64_ld3v8hf (__a);
        -:18312:  ret.val[0] = __builtin_aarch64_get_qregciv8hf (__o, 0);
        -:18313:  ret.val[1] = __builtin_aarch64_get_qregciv8hf (__o, 1);
        -:18314:  ret.val[2] = __builtin_aarch64_get_qregciv8hf (__o, 2);
        -:18315:  return ret;
        -:18316:}
        -:18317:
        -:18318:__extension__ extern __inline float32x4x3_t
        -:18319:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18320:vld3q_f32 (const float32_t * __a)
        -:18321:{
        -:18322:  float32x4x3_t ret;
        -:18323:  __builtin_aarch64_simd_ci __o;
        -:18324:  __o = __builtin_aarch64_ld3v4sf ((const __builtin_aarch64_simd_sf *) __a);
        -:18325:  ret.val[0] = (float32x4_t) __builtin_aarch64_get_qregciv4sf (__o, 0);
        -:18326:  ret.val[1] = (float32x4_t) __builtin_aarch64_get_qregciv4sf (__o, 1);
        -:18327:  ret.val[2] = (float32x4_t) __builtin_aarch64_get_qregciv4sf (__o, 2);
        -:18328:  return ret;
        -:18329:}
        -:18330:
        -:18331:__extension__ extern __inline float64x2x3_t
        -:18332:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18333:vld3q_f64 (const float64_t * __a)
        -:18334:{
        -:18335:  float64x2x3_t ret;
        -:18336:  __builtin_aarch64_simd_ci __o;
        -:18337:  __o = __builtin_aarch64_ld3v2df ((const __builtin_aarch64_simd_df *) __a);
        -:18338:  ret.val[0] = (float64x2_t) __builtin_aarch64_get_qregciv2df (__o, 0);
        -:18339:  ret.val[1] = (float64x2_t) __builtin_aarch64_get_qregciv2df (__o, 1);
        -:18340:  ret.val[2] = (float64x2_t) __builtin_aarch64_get_qregciv2df (__o, 2);
        -:18341:  return ret;
        -:18342:}
        -:18343:
        -:18344:__extension__ extern __inline poly64x2x3_t
        -:18345:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18346:vld3q_p64 (const poly64_t * __a)
        -:18347:{
        -:18348:  poly64x2x3_t ret;
        -:18349:  __builtin_aarch64_simd_ci __o;
        -:18350:  __o = __builtin_aarch64_ld3v2di ((const __builtin_aarch64_simd_di *) __a);
        -:18351:  ret.val[0] = (poly64x2_t) __builtin_aarch64_get_qregciv2di_pss (__o, 0);
        -:18352:  ret.val[1] = (poly64x2_t) __builtin_aarch64_get_qregciv2di_pss (__o, 1);
        -:18353:  ret.val[2] = (poly64x2_t) __builtin_aarch64_get_qregciv2di_pss (__o, 2);
        -:18354:  return ret;
        -:18355:}
        -:18356:
        -:18357:__extension__ extern __inline int64x1x4_t
        -:18358:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18359:vld4_s64 (const int64_t * __a)
        -:18360:{
        -:18361:  int64x1x4_t ret;
        -:18362:  __builtin_aarch64_simd_xi __o;
        -:18363:  __o = __builtin_aarch64_ld4di ((const __builtin_aarch64_simd_di *) __a);
        -:18364:  ret.val[0] = (int64x1_t) __builtin_aarch64_get_dregxidi (__o, 0);
        -:18365:  ret.val[1] = (int64x1_t) __builtin_aarch64_get_dregxidi (__o, 1);
        -:18366:  ret.val[2] = (int64x1_t) __builtin_aarch64_get_dregxidi (__o, 2);
        -:18367:  ret.val[3] = (int64x1_t) __builtin_aarch64_get_dregxidi (__o, 3);
        -:18368:  return ret;
        -:18369:}
        -:18370:
        -:18371:__extension__ extern __inline uint64x1x4_t
        -:18372:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18373:vld4_u64 (const uint64_t * __a)
        -:18374:{
        -:18375:  uint64x1x4_t ret;
        -:18376:  __builtin_aarch64_simd_xi __o;
        -:18377:  __o = __builtin_aarch64_ld4di ((const __builtin_aarch64_simd_di *) __a);
        -:18378:  ret.val[0] = (uint64x1_t) __builtin_aarch64_get_dregxidi (__o, 0);
        -:18379:  ret.val[1] = (uint64x1_t) __builtin_aarch64_get_dregxidi (__o, 1);
        -:18380:  ret.val[2] = (uint64x1_t) __builtin_aarch64_get_dregxidi (__o, 2);
        -:18381:  ret.val[3] = (uint64x1_t) __builtin_aarch64_get_dregxidi (__o, 3);
        -:18382:  return ret;
        -:18383:}
        -:18384:
        -:18385:__extension__ extern __inline float64x1x4_t
        -:18386:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18387:vld4_f64 (const float64_t * __a)
        -:18388:{
        -:18389:  float64x1x4_t ret;
        -:18390:  __builtin_aarch64_simd_xi __o;
        -:18391:  __o = __builtin_aarch64_ld4df ((const __builtin_aarch64_simd_df *) __a);
        -:18392:  ret.val[0] = (float64x1_t) {__builtin_aarch64_get_dregxidf (__o, 0)};
        -:18393:  ret.val[1] = (float64x1_t) {__builtin_aarch64_get_dregxidf (__o, 1)};
        -:18394:  ret.val[2] = (float64x1_t) {__builtin_aarch64_get_dregxidf (__o, 2)};
        -:18395:  ret.val[3] = (float64x1_t) {__builtin_aarch64_get_dregxidf (__o, 3)};
        -:18396:  return ret;
        -:18397:}
        -:18398:
        -:18399:__extension__ extern __inline int8x8x4_t
        -:18400:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18401:vld4_s8 (const int8_t * __a)
        -:18402:{
        -:18403:  int8x8x4_t ret;
        -:18404:  __builtin_aarch64_simd_xi __o;
        -:18405:  __o = __builtin_aarch64_ld4v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18406:  ret.val[0] = (int8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 0);
        -:18407:  ret.val[1] = (int8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 1);
        -:18408:  ret.val[2] = (int8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 2);
        -:18409:  ret.val[3] = (int8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 3);
        -:18410:  return ret;
        -:18411:}
        -:18412:
        -:18413:__extension__ extern __inline poly8x8x4_t
        -:18414:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18415:vld4_p8 (const poly8_t * __a)
        -:18416:{
        -:18417:  poly8x8x4_t ret;
        -:18418:  __builtin_aarch64_simd_xi __o;
        -:18419:  __o = __builtin_aarch64_ld4v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18420:  ret.val[0] = (poly8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 0);
        -:18421:  ret.val[1] = (poly8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 1);
        -:18422:  ret.val[2] = (poly8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 2);
        -:18423:  ret.val[3] = (poly8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 3);
        -:18424:  return ret;
        -:18425:}
        -:18426:
        -:18427:__extension__ extern __inline int16x4x4_t
        -:18428:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18429:vld4_s16 (const int16_t * __a)
        -:18430:{
        -:18431:  int16x4x4_t ret;
        -:18432:  __builtin_aarch64_simd_xi __o;
        -:18433:  __o = __builtin_aarch64_ld4v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18434:  ret.val[0] = (int16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 0);
        -:18435:  ret.val[1] = (int16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 1);
        -:18436:  ret.val[2] = (int16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 2);
        -:18437:  ret.val[3] = (int16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 3);
        -:18438:  return ret;
        -:18439:}
        -:18440:
        -:18441:__extension__ extern __inline poly16x4x4_t
        -:18442:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18443:vld4_p16 (const poly16_t * __a)
        -:18444:{
        -:18445:  poly16x4x4_t ret;
        -:18446:  __builtin_aarch64_simd_xi __o;
        -:18447:  __o = __builtin_aarch64_ld4v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18448:  ret.val[0] = (poly16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 0);
        -:18449:  ret.val[1] = (poly16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 1);
        -:18450:  ret.val[2] = (poly16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 2);
        -:18451:  ret.val[3] = (poly16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 3);
        -:18452:  return ret;
        -:18453:}
        -:18454:
        -:18455:__extension__ extern __inline int32x2x4_t
        -:18456:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18457:vld4_s32 (const int32_t * __a)
        -:18458:{
        -:18459:  int32x2x4_t ret;
        -:18460:  __builtin_aarch64_simd_xi __o;
        -:18461:  __o = __builtin_aarch64_ld4v2si ((const __builtin_aarch64_simd_si *) __a);
        -:18462:  ret.val[0] = (int32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 0);
        -:18463:  ret.val[1] = (int32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 1);
        -:18464:  ret.val[2] = (int32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 2);
        -:18465:  ret.val[3] = (int32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 3);
        -:18466:  return ret;
        -:18467:}
        -:18468:
        -:18469:__extension__ extern __inline uint8x8x4_t
        -:18470:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18471:vld4_u8 (const uint8_t * __a)
        -:18472:{
        -:18473:  uint8x8x4_t ret;
        -:18474:  __builtin_aarch64_simd_xi __o;
        -:18475:  __o = __builtin_aarch64_ld4v8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18476:  ret.val[0] = (uint8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 0);
        -:18477:  ret.val[1] = (uint8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 1);
        -:18478:  ret.val[2] = (uint8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 2);
        -:18479:  ret.val[3] = (uint8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 3);
        -:18480:  return ret;
        -:18481:}
        -:18482:
        -:18483:__extension__ extern __inline uint16x4x4_t
        -:18484:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18485:vld4_u16 (const uint16_t * __a)
        -:18486:{
        -:18487:  uint16x4x4_t ret;
        -:18488:  __builtin_aarch64_simd_xi __o;
        -:18489:  __o = __builtin_aarch64_ld4v4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18490:  ret.val[0] = (uint16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 0);
        -:18491:  ret.val[1] = (uint16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 1);
        -:18492:  ret.val[2] = (uint16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 2);
        -:18493:  ret.val[3] = (uint16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 3);
        -:18494:  return ret;
        -:18495:}
        -:18496:
        -:18497:__extension__ extern __inline uint32x2x4_t
        -:18498:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18499:vld4_u32 (const uint32_t * __a)
        -:18500:{
        -:18501:  uint32x2x4_t ret;
        -:18502:  __builtin_aarch64_simd_xi __o;
        -:18503:  __o = __builtin_aarch64_ld4v2si ((const __builtin_aarch64_simd_si *) __a);
        -:18504:  ret.val[0] = (uint32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 0);
        -:18505:  ret.val[1] = (uint32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 1);
        -:18506:  ret.val[2] = (uint32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 2);
        -:18507:  ret.val[3] = (uint32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 3);
        -:18508:  return ret;
        -:18509:}
        -:18510:
        -:18511:__extension__ extern __inline float16x4x4_t
        -:18512:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18513:vld4_f16 (const float16_t * __a)
        -:18514:{
        -:18515:  float16x4x4_t ret;
        -:18516:  __builtin_aarch64_simd_xi __o;
        -:18517:  __o = __builtin_aarch64_ld4v4hf (__a);
        -:18518:  ret.val[0] = __builtin_aarch64_get_dregxiv4hf (__o, 0);
        -:18519:  ret.val[1] = __builtin_aarch64_get_dregxiv4hf (__o, 1);
        -:18520:  ret.val[2] = __builtin_aarch64_get_dregxiv4hf (__o, 2);
        -:18521:  ret.val[3] = __builtin_aarch64_get_dregxiv4hf (__o, 3);
        -:18522:  return ret;
        -:18523:}
        -:18524:
        -:18525:__extension__ extern __inline float32x2x4_t
        -:18526:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18527:vld4_f32 (const float32_t * __a)
        -:18528:{
        -:18529:  float32x2x4_t ret;
        -:18530:  __builtin_aarch64_simd_xi __o;
        -:18531:  __o = __builtin_aarch64_ld4v2sf ((const __builtin_aarch64_simd_sf *) __a);
        -:18532:  ret.val[0] = (float32x2_t) __builtin_aarch64_get_dregxiv2sf (__o, 0);
        -:18533:  ret.val[1] = (float32x2_t) __builtin_aarch64_get_dregxiv2sf (__o, 1);
        -:18534:  ret.val[2] = (float32x2_t) __builtin_aarch64_get_dregxiv2sf (__o, 2);
        -:18535:  ret.val[3] = (float32x2_t) __builtin_aarch64_get_dregxiv2sf (__o, 3);
        -:18536:  return ret;
        -:18537:}
        -:18538:
        -:18539:__extension__ extern __inline poly64x1x4_t
        -:18540:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18541:vld4_p64 (const poly64_t * __a)
        -:18542:{
        -:18543:  poly64x1x4_t  ret;
        -:18544:  __builtin_aarch64_simd_xi __o;
        -:18545:  __o = __builtin_aarch64_ld4di ((const __builtin_aarch64_simd_di *) __a);
        -:18546:  ret.val[0] = (poly64x1_t) __builtin_aarch64_get_dregxidi_pss (__o, 0);
        -:18547:  ret.val[1] = (poly64x1_t) __builtin_aarch64_get_dregxidi_pss (__o, 1);
        -:18548:  ret.val[2] = (poly64x1_t) __builtin_aarch64_get_dregxidi_pss (__o, 2);
        -:18549:  ret.val[3] = (poly64x1_t) __builtin_aarch64_get_dregxidi_pss (__o, 3);
        -:18550:  return ret;
        -:18551:}
        -:18552:
        -:18553:__extension__ extern __inline int8x16x4_t
        -:18554:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18555:vld4q_s8 (const int8_t * __a)
        -:18556:{
        -:18557:  int8x16x4_t ret;
        -:18558:  __builtin_aarch64_simd_xi __o;
        -:18559:  __o = __builtin_aarch64_ld4v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18560:  ret.val[0] = (int8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 0);
        -:18561:  ret.val[1] = (int8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 1);
        -:18562:  ret.val[2] = (int8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 2);
        -:18563:  ret.val[3] = (int8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 3);
        -:18564:  return ret;
        -:18565:}
        -:18566:
        -:18567:__extension__ extern __inline poly8x16x4_t
        -:18568:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18569:vld4q_p8 (const poly8_t * __a)
        -:18570:{
        -:18571:  poly8x16x4_t ret;
        -:18572:  __builtin_aarch64_simd_xi __o;
        -:18573:  __o = __builtin_aarch64_ld4v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18574:  ret.val[0] = (poly8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 0);
        -:18575:  ret.val[1] = (poly8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 1);
        -:18576:  ret.val[2] = (poly8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 2);
        -:18577:  ret.val[3] = (poly8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 3);
        -:18578:  return ret;
        -:18579:}
        -:18580:
        -:18581:__extension__ extern __inline int16x8x4_t
        -:18582:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18583:vld4q_s16 (const int16_t * __a)
        -:18584:{
        -:18585:  int16x8x4_t ret;
        -:18586:  __builtin_aarch64_simd_xi __o;
        -:18587:  __o = __builtin_aarch64_ld4v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18588:  ret.val[0] = (int16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 0);
        -:18589:  ret.val[1] = (int16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 1);
        -:18590:  ret.val[2] = (int16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 2);
        -:18591:  ret.val[3] = (int16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 3);
        -:18592:  return ret;
        -:18593:}
        -:18594:
        -:18595:__extension__ extern __inline poly16x8x4_t
        -:18596:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18597:vld4q_p16 (const poly16_t * __a)
        -:18598:{
        -:18599:  poly16x8x4_t ret;
        -:18600:  __builtin_aarch64_simd_xi __o;
        -:18601:  __o = __builtin_aarch64_ld4v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18602:  ret.val[0] = (poly16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 0);
        -:18603:  ret.val[1] = (poly16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 1);
        -:18604:  ret.val[2] = (poly16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 2);
        -:18605:  ret.val[3] = (poly16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 3);
        -:18606:  return ret;
        -:18607:}
        -:18608:
        -:18609:__extension__ extern __inline int32x4x4_t
        -:18610:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18611:vld4q_s32 (const int32_t * __a)
        -:18612:{
        -:18613:  int32x4x4_t ret;
        -:18614:  __builtin_aarch64_simd_xi __o;
        -:18615:  __o = __builtin_aarch64_ld4v4si ((const __builtin_aarch64_simd_si *) __a);
        -:18616:  ret.val[0] = (int32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 0);
        -:18617:  ret.val[1] = (int32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 1);
        -:18618:  ret.val[2] = (int32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 2);
        -:18619:  ret.val[3] = (int32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 3);
        -:18620:  return ret;
        -:18621:}
        -:18622:
        -:18623:__extension__ extern __inline int64x2x4_t
        -:18624:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18625:vld4q_s64 (const int64_t * __a)
        -:18626:{
        -:18627:  int64x2x4_t ret;
        -:18628:  __builtin_aarch64_simd_xi __o;
        -:18629:  __o = __builtin_aarch64_ld4v2di ((const __builtin_aarch64_simd_di *) __a);
        -:18630:  ret.val[0] = (int64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 0);
        -:18631:  ret.val[1] = (int64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 1);
        -:18632:  ret.val[2] = (int64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 2);
        -:18633:  ret.val[3] = (int64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 3);
        -:18634:  return ret;
        -:18635:}
        -:18636:
        -:18637:__extension__ extern __inline uint8x16x4_t
        -:18638:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18639:vld4q_u8 (const uint8_t * __a)
        -:18640:{
        -:18641:  uint8x16x4_t ret;
        -:18642:  __builtin_aarch64_simd_xi __o;
        -:18643:  __o = __builtin_aarch64_ld4v16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18644:  ret.val[0] = (uint8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 0);
        -:18645:  ret.val[1] = (uint8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 1);
        -:18646:  ret.val[2] = (uint8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 2);
        -:18647:  ret.val[3] = (uint8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 3);
        -:18648:  return ret;
        -:18649:}
        -:18650:
        -:18651:__extension__ extern __inline uint16x8x4_t
        -:18652:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18653:vld4q_u16 (const uint16_t * __a)
        -:18654:{
        -:18655:  uint16x8x4_t ret;
        -:18656:  __builtin_aarch64_simd_xi __o;
        -:18657:  __o = __builtin_aarch64_ld4v8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18658:  ret.val[0] = (uint16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 0);
        -:18659:  ret.val[1] = (uint16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 1);
        -:18660:  ret.val[2] = (uint16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 2);
        -:18661:  ret.val[3] = (uint16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 3);
        -:18662:  return ret;
        -:18663:}
        -:18664:
        -:18665:__extension__ extern __inline uint32x4x4_t
        -:18666:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18667:vld4q_u32 (const uint32_t * __a)
        -:18668:{
        -:18669:  uint32x4x4_t ret;
        -:18670:  __builtin_aarch64_simd_xi __o;
        -:18671:  __o = __builtin_aarch64_ld4v4si ((const __builtin_aarch64_simd_si *) __a);
        -:18672:  ret.val[0] = (uint32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 0);
        -:18673:  ret.val[1] = (uint32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 1);
        -:18674:  ret.val[2] = (uint32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 2);
        -:18675:  ret.val[3] = (uint32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 3);
        -:18676:  return ret;
        -:18677:}
        -:18678:
        -:18679:__extension__ extern __inline uint64x2x4_t
        -:18680:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18681:vld4q_u64 (const uint64_t * __a)
        -:18682:{
        -:18683:  uint64x2x4_t ret;
        -:18684:  __builtin_aarch64_simd_xi __o;
        -:18685:  __o = __builtin_aarch64_ld4v2di ((const __builtin_aarch64_simd_di *) __a);
        -:18686:  ret.val[0] = (uint64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 0);
        -:18687:  ret.val[1] = (uint64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 1);
        -:18688:  ret.val[2] = (uint64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 2);
        -:18689:  ret.val[3] = (uint64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 3);
        -:18690:  return ret;
        -:18691:}
        -:18692:
        -:18693:__extension__ extern __inline float16x8x4_t
        -:18694:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18695:vld4q_f16 (const float16_t * __a)
        -:18696:{
        -:18697:  float16x8x4_t ret;
        -:18698:  __builtin_aarch64_simd_xi __o;
        -:18699:  __o = __builtin_aarch64_ld4v8hf (__a);
        -:18700:  ret.val[0] = __builtin_aarch64_get_qregxiv8hf (__o, 0);
        -:18701:  ret.val[1] = __builtin_aarch64_get_qregxiv8hf (__o, 1);
        -:18702:  ret.val[2] = __builtin_aarch64_get_qregxiv8hf (__o, 2);
        -:18703:  ret.val[3] = __builtin_aarch64_get_qregxiv8hf (__o, 3);
        -:18704:  return ret;
        -:18705:}
        -:18706:
        -:18707:__extension__ extern __inline float32x4x4_t
        -:18708:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18709:vld4q_f32 (const float32_t * __a)
        -:18710:{
        -:18711:  float32x4x4_t ret;
        -:18712:  __builtin_aarch64_simd_xi __o;
        -:18713:  __o = __builtin_aarch64_ld4v4sf ((const __builtin_aarch64_simd_sf *) __a);
        -:18714:  ret.val[0] = (float32x4_t) __builtin_aarch64_get_qregxiv4sf (__o, 0);
        -:18715:  ret.val[1] = (float32x4_t) __builtin_aarch64_get_qregxiv4sf (__o, 1);
        -:18716:  ret.val[2] = (float32x4_t) __builtin_aarch64_get_qregxiv4sf (__o, 2);
        -:18717:  ret.val[3] = (float32x4_t) __builtin_aarch64_get_qregxiv4sf (__o, 3);
        -:18718:  return ret;
        -:18719:}
        -:18720:
        -:18721:__extension__ extern __inline float64x2x4_t
        -:18722:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18723:vld4q_f64 (const float64_t * __a)
        -:18724:{
        -:18725:  float64x2x4_t ret;
        -:18726:  __builtin_aarch64_simd_xi __o;
        -:18727:  __o = __builtin_aarch64_ld4v2df ((const __builtin_aarch64_simd_df *) __a);
        -:18728:  ret.val[0] = (float64x2_t) __builtin_aarch64_get_qregxiv2df (__o, 0);
        -:18729:  ret.val[1] = (float64x2_t) __builtin_aarch64_get_qregxiv2df (__o, 1);
        -:18730:  ret.val[2] = (float64x2_t) __builtin_aarch64_get_qregxiv2df (__o, 2);
        -:18731:  ret.val[3] = (float64x2_t) __builtin_aarch64_get_qregxiv2df (__o, 3);
        -:18732:  return ret;
        -:18733:}
        -:18734:
        -:18735:__extension__ extern __inline poly64x2x4_t
        -:18736:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18737:vld4q_p64 (const poly64_t * __a)
        -:18738:{
        -:18739:  poly64x2x4_t  ret;
        -:18740:  __builtin_aarch64_simd_xi __o;
        -:18741:  __o = __builtin_aarch64_ld4v2di ((const __builtin_aarch64_simd_di *) __a);
        -:18742:  ret.val[0] = (poly64x2_t) __builtin_aarch64_get_qregxiv2di_pss (__o, 0);
        -:18743:  ret.val[1] = (poly64x2_t) __builtin_aarch64_get_qregxiv2di_pss (__o, 1);
        -:18744:  ret.val[2] = (poly64x2_t) __builtin_aarch64_get_qregxiv2di_pss (__o, 2);
        -:18745:  ret.val[3] = (poly64x2_t) __builtin_aarch64_get_qregxiv2di_pss (__o, 3);
        -:18746:  return ret;
        -:18747:}
        -:18748:
        -:18749:/* vldn_dup */
        -:18750:
        -:18751:__extension__ extern __inline int8x8x2_t
        -:18752:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18753:vld2_dup_s8 (const int8_t * __a)
        -:18754:{
        -:18755:  int8x8x2_t ret;
        -:18756:  __builtin_aarch64_simd_oi __o;
        -:18757:  __o = __builtin_aarch64_ld2rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18758:  ret.val[0] = (int8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 0);
        -:18759:  ret.val[1] = (int8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 1);
        -:18760:  return ret;
        -:18761:}
        -:18762:
        -:18763:__extension__ extern __inline int16x4x2_t
        -:18764:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18765:vld2_dup_s16 (const int16_t * __a)
        -:18766:{
        -:18767:  int16x4x2_t ret;
        -:18768:  __builtin_aarch64_simd_oi __o;
        -:18769:  __o = __builtin_aarch64_ld2rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18770:  ret.val[0] = (int16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 0);
        -:18771:  ret.val[1] = (int16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 1);
        -:18772:  return ret;
        -:18773:}
        -:18774:
        -:18775:__extension__ extern __inline int32x2x2_t
        -:18776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18777:vld2_dup_s32 (const int32_t * __a)
        -:18778:{
        -:18779:  int32x2x2_t ret;
        -:18780:  __builtin_aarch64_simd_oi __o;
        -:18781:  __o = __builtin_aarch64_ld2rv2si ((const __builtin_aarch64_simd_si *) __a);
        -:18782:  ret.val[0] = (int32x2_t) __builtin_aarch64_get_dregoiv2si (__o, 0);
        -:18783:  ret.val[1] = (int32x2_t) __builtin_aarch64_get_dregoiv2si (__o, 1);
        -:18784:  return ret;
        -:18785:}
        -:18786:
        -:18787:__extension__ extern __inline float16x4x2_t
        -:18788:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18789:vld2_dup_f16 (const float16_t * __a)
        -:18790:{
        -:18791:  float16x4x2_t ret;
        -:18792:  __builtin_aarch64_simd_oi __o;
        -:18793:  __o = __builtin_aarch64_ld2rv4hf ((const __builtin_aarch64_simd_hf *) __a);
        -:18794:  ret.val[0] = __builtin_aarch64_get_dregoiv4hf (__o, 0);
        -:18795:  ret.val[1] = (float16x4_t) __builtin_aarch64_get_dregoiv4hf (__o, 1);
        -:18796:  return ret;
        -:18797:}
        -:18798:
        -:18799:__extension__ extern __inline float32x2x2_t
        -:18800:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18801:vld2_dup_f32 (const float32_t * __a)
        -:18802:{
        -:18803:  float32x2x2_t ret;
        -:18804:  __builtin_aarch64_simd_oi __o;
        -:18805:  __o = __builtin_aarch64_ld2rv2sf ((const __builtin_aarch64_simd_sf *) __a);
        -:18806:  ret.val[0] = (float32x2_t) __builtin_aarch64_get_dregoiv2sf (__o, 0);
        -:18807:  ret.val[1] = (float32x2_t) __builtin_aarch64_get_dregoiv2sf (__o, 1);
        -:18808:  return ret;
        -:18809:}
        -:18810:
        -:18811:__extension__ extern __inline float64x1x2_t
        -:18812:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18813:vld2_dup_f64 (const float64_t * __a)
        -:18814:{
        -:18815:  float64x1x2_t ret;
        -:18816:  __builtin_aarch64_simd_oi __o;
        -:18817:  __o = __builtin_aarch64_ld2rdf ((const __builtin_aarch64_simd_df *) __a);
        -:18818:  ret.val[0] = (float64x1_t) {__builtin_aarch64_get_dregoidf (__o, 0)};
        -:18819:  ret.val[1] = (float64x1_t) {__builtin_aarch64_get_dregoidf (__o, 1)};
        -:18820:  return ret;
        -:18821:}
        -:18822:
        -:18823:__extension__ extern __inline uint8x8x2_t
        -:18824:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18825:vld2_dup_u8 (const uint8_t * __a)
        -:18826:{
        -:18827:  uint8x8x2_t ret;
        -:18828:  __builtin_aarch64_simd_oi __o;
        -:18829:  __o = __builtin_aarch64_ld2rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18830:  ret.val[0] = (uint8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 0);
        -:18831:  ret.val[1] = (uint8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 1);
        -:18832:  return ret;
        -:18833:}
        -:18834:
        -:18835:__extension__ extern __inline uint16x4x2_t
        -:18836:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18837:vld2_dup_u16 (const uint16_t * __a)
        -:18838:{
        -:18839:  uint16x4x2_t ret;
        -:18840:  __builtin_aarch64_simd_oi __o;
        -:18841:  __o = __builtin_aarch64_ld2rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18842:  ret.val[0] = (uint16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 0);
        -:18843:  ret.val[1] = (uint16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 1);
        -:18844:  return ret;
        -:18845:}
        -:18846:
        -:18847:__extension__ extern __inline uint32x2x2_t
        -:18848:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18849:vld2_dup_u32 (const uint32_t * __a)
        -:18850:{
        -:18851:  uint32x2x2_t ret;
        -:18852:  __builtin_aarch64_simd_oi __o;
        -:18853:  __o = __builtin_aarch64_ld2rv2si ((const __builtin_aarch64_simd_si *) __a);
        -:18854:  ret.val[0] = (uint32x2_t) __builtin_aarch64_get_dregoiv2si (__o, 0);
        -:18855:  ret.val[1] = (uint32x2_t) __builtin_aarch64_get_dregoiv2si (__o, 1);
        -:18856:  return ret;
        -:18857:}
        -:18858:
        -:18859:__extension__ extern __inline poly8x8x2_t
        -:18860:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18861:vld2_dup_p8 (const poly8_t * __a)
        -:18862:{
        -:18863:  poly8x8x2_t ret;
        -:18864:  __builtin_aarch64_simd_oi __o;
        -:18865:  __o = __builtin_aarch64_ld2rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18866:  ret.val[0] = (poly8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 0);
        -:18867:  ret.val[1] = (poly8x8_t) __builtin_aarch64_get_dregoiv8qi (__o, 1);
        -:18868:  return ret;
        -:18869:}
        -:18870:
        -:18871:__extension__ extern __inline poly16x4x2_t
        -:18872:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18873:vld2_dup_p16 (const poly16_t * __a)
        -:18874:{
        -:18875:  poly16x4x2_t ret;
        -:18876:  __builtin_aarch64_simd_oi __o;
        -:18877:  __o = __builtin_aarch64_ld2rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18878:  ret.val[0] = (poly16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 0);
        -:18879:  ret.val[1] = (poly16x4_t) __builtin_aarch64_get_dregoiv4hi (__o, 1);
        -:18880:  return ret;
        -:18881:}
        -:18882:
        -:18883:__extension__ extern __inline poly64x1x2_t
        -:18884:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18885:vld2_dup_p64 (const poly64_t * __a)
        -:18886:{
        -:18887:  poly64x1x2_t ret;
        -:18888:  __builtin_aarch64_simd_oi __o;
        -:18889:  __o = __builtin_aarch64_ld2rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:18890:  ret.val[0] = (poly64x1_t) __builtin_aarch64_get_dregoidi_pss (__o, 0);
        -:18891:  ret.val[1] = (poly64x1_t) __builtin_aarch64_get_dregoidi_pss (__o, 1);
        -:18892:  return ret;
        -:18893:}
        -:18894:
        -:18895:
        -:18896:__extension__ extern __inline int64x1x2_t
        -:18897:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18898:vld2_dup_s64 (const int64_t * __a)
        -:18899:{
        -:18900:  int64x1x2_t ret;
        -:18901:  __builtin_aarch64_simd_oi __o;
        -:18902:  __o = __builtin_aarch64_ld2rdi ((const __builtin_aarch64_simd_di *) __a);
        -:18903:  ret.val[0] = (int64x1_t) __builtin_aarch64_get_dregoidi (__o, 0);
        -:18904:  ret.val[1] = (int64x1_t) __builtin_aarch64_get_dregoidi (__o, 1);
        -:18905:  return ret;
        -:18906:}
        -:18907:
        -:18908:__extension__ extern __inline uint64x1x2_t
        -:18909:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18910:vld2_dup_u64 (const uint64_t * __a)
        -:18911:{
        -:18912:  uint64x1x2_t ret;
        -:18913:  __builtin_aarch64_simd_oi __o;
        -:18914:  __o = __builtin_aarch64_ld2rdi ((const __builtin_aarch64_simd_di *) __a);
        -:18915:  ret.val[0] = (uint64x1_t) __builtin_aarch64_get_dregoidi (__o, 0);
        -:18916:  ret.val[1] = (uint64x1_t) __builtin_aarch64_get_dregoidi (__o, 1);
        -:18917:  return ret;
        -:18918:}
        -:18919:
        -:18920:__extension__ extern __inline int8x16x2_t
        -:18921:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18922:vld2q_dup_s8 (const int8_t * __a)
        -:18923:{
        -:18924:  int8x16x2_t ret;
        -:18925:  __builtin_aarch64_simd_oi __o;
        -:18926:  __o = __builtin_aarch64_ld2rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18927:  ret.val[0] = (int8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 0);
        -:18928:  ret.val[1] = (int8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 1);
        -:18929:  return ret;
        -:18930:}
        -:18931:
        -:18932:__extension__ extern __inline poly8x16x2_t
        -:18933:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18934:vld2q_dup_p8 (const poly8_t * __a)
        -:18935:{
        -:18936:  poly8x16x2_t ret;
        -:18937:  __builtin_aarch64_simd_oi __o;
        -:18938:  __o = __builtin_aarch64_ld2rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18939:  ret.val[0] = (poly8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 0);
        -:18940:  ret.val[1] = (poly8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 1);
        -:18941:  return ret;
        -:18942:}
        -:18943:
        -:18944:__extension__ extern __inline int16x8x2_t
        -:18945:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18946:vld2q_dup_s16 (const int16_t * __a)
        -:18947:{
        -:18948:  int16x8x2_t ret;
        -:18949:  __builtin_aarch64_simd_oi __o;
        -:18950:  __o = __builtin_aarch64_ld2rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18951:  ret.val[0] = (int16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 0);
        -:18952:  ret.val[1] = (int16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 1);
        -:18953:  return ret;
        -:18954:}
        -:18955:
        -:18956:__extension__ extern __inline poly16x8x2_t
        -:18957:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18958:vld2q_dup_p16 (const poly16_t * __a)
        -:18959:{
        -:18960:  poly16x8x2_t ret;
        -:18961:  __builtin_aarch64_simd_oi __o;
        -:18962:  __o = __builtin_aarch64_ld2rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:18963:  ret.val[0] = (poly16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 0);
        -:18964:  ret.val[1] = (poly16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 1);
        -:18965:  return ret;
        -:18966:}
        -:18967:
        -:18968:__extension__ extern __inline int32x4x2_t
        -:18969:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18970:vld2q_dup_s32 (const int32_t * __a)
        -:18971:{
        -:18972:  int32x4x2_t ret;
        -:18973:  __builtin_aarch64_simd_oi __o;
        -:18974:  __o = __builtin_aarch64_ld2rv4si ((const __builtin_aarch64_simd_si *) __a);
        -:18975:  ret.val[0] = (int32x4_t) __builtin_aarch64_get_qregoiv4si (__o, 0);
        -:18976:  ret.val[1] = (int32x4_t) __builtin_aarch64_get_qregoiv4si (__o, 1);
        -:18977:  return ret;
        -:18978:}
        -:18979:
        -:18980:__extension__ extern __inline int64x2x2_t
        -:18981:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18982:vld2q_dup_s64 (const int64_t * __a)
        -:18983:{
        -:18984:  int64x2x2_t ret;
        -:18985:  __builtin_aarch64_simd_oi __o;
        -:18986:  __o = __builtin_aarch64_ld2rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:18987:  ret.val[0] = (int64x2_t) __builtin_aarch64_get_qregoiv2di (__o, 0);
        -:18988:  ret.val[1] = (int64x2_t) __builtin_aarch64_get_qregoiv2di (__o, 1);
        -:18989:  return ret;
        -:18990:}
        -:18991:
        -:18992:__extension__ extern __inline uint8x16x2_t
        -:18993:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:18994:vld2q_dup_u8 (const uint8_t * __a)
        -:18995:{
        -:18996:  uint8x16x2_t ret;
        -:18997:  __builtin_aarch64_simd_oi __o;
        -:18998:  __o = __builtin_aarch64_ld2rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:18999:  ret.val[0] = (uint8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 0);
        -:19000:  ret.val[1] = (uint8x16_t) __builtin_aarch64_get_qregoiv16qi (__o, 1);
        -:19001:  return ret;
        -:19002:}
        -:19003:
        -:19004:__extension__ extern __inline uint16x8x2_t
        -:19005:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19006:vld2q_dup_u16 (const uint16_t * __a)
        -:19007:{
        -:19008:  uint16x8x2_t ret;
        -:19009:  __builtin_aarch64_simd_oi __o;
        -:19010:  __o = __builtin_aarch64_ld2rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19011:  ret.val[0] = (uint16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 0);
        -:19012:  ret.val[1] = (uint16x8_t) __builtin_aarch64_get_qregoiv8hi (__o, 1);
        -:19013:  return ret;
        -:19014:}
        -:19015:
        -:19016:__extension__ extern __inline uint32x4x2_t
        -:19017:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19018:vld2q_dup_u32 (const uint32_t * __a)
        -:19019:{
        -:19020:  uint32x4x2_t ret;
        -:19021:  __builtin_aarch64_simd_oi __o;
        -:19022:  __o = __builtin_aarch64_ld2rv4si ((const __builtin_aarch64_simd_si *) __a);
        -:19023:  ret.val[0] = (uint32x4_t) __builtin_aarch64_get_qregoiv4si (__o, 0);
        -:19024:  ret.val[1] = (uint32x4_t) __builtin_aarch64_get_qregoiv4si (__o, 1);
        -:19025:  return ret;
        -:19026:}
        -:19027:
        -:19028:__extension__ extern __inline uint64x2x2_t
        -:19029:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19030:vld2q_dup_u64 (const uint64_t * __a)
        -:19031:{
        -:19032:  uint64x2x2_t ret;
        -:19033:  __builtin_aarch64_simd_oi __o;
        -:19034:  __o = __builtin_aarch64_ld2rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19035:  ret.val[0] = (uint64x2_t) __builtin_aarch64_get_qregoiv2di (__o, 0);
        -:19036:  ret.val[1] = (uint64x2_t) __builtin_aarch64_get_qregoiv2di (__o, 1);
        -:19037:  return ret;
        -:19038:}
        -:19039:
        -:19040:__extension__ extern __inline float16x8x2_t
        -:19041:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19042:vld2q_dup_f16 (const float16_t * __a)
        -:19043:{
        -:19044:  float16x8x2_t ret;
        -:19045:  __builtin_aarch64_simd_oi __o;
        -:19046:  __o = __builtin_aarch64_ld2rv8hf ((const __builtin_aarch64_simd_hf *) __a);
        -:19047:  ret.val[0] = (float16x8_t) __builtin_aarch64_get_qregoiv8hf (__o, 0);
        -:19048:  ret.val[1] = __builtin_aarch64_get_qregoiv8hf (__o, 1);
        -:19049:  return ret;
        -:19050:}
        -:19051:
        -:19052:__extension__ extern __inline float32x4x2_t
        -:19053:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19054:vld2q_dup_f32 (const float32_t * __a)
        -:19055:{
        -:19056:  float32x4x2_t ret;
        -:19057:  __builtin_aarch64_simd_oi __o;
        -:19058:  __o = __builtin_aarch64_ld2rv4sf ((const __builtin_aarch64_simd_sf *) __a);
        -:19059:  ret.val[0] = (float32x4_t) __builtin_aarch64_get_qregoiv4sf (__o, 0);
        -:19060:  ret.val[1] = (float32x4_t) __builtin_aarch64_get_qregoiv4sf (__o, 1);
        -:19061:  return ret;
        -:19062:}
        -:19063:
        -:19064:__extension__ extern __inline float64x2x2_t
        -:19065:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19066:vld2q_dup_f64 (const float64_t * __a)
        -:19067:{
        -:19068:  float64x2x2_t ret;
        -:19069:  __builtin_aarch64_simd_oi __o;
        -:19070:  __o = __builtin_aarch64_ld2rv2df ((const __builtin_aarch64_simd_df *) __a);
        -:19071:  ret.val[0] = (float64x2_t) __builtin_aarch64_get_qregoiv2df (__o, 0);
        -:19072:  ret.val[1] = (float64x2_t) __builtin_aarch64_get_qregoiv2df (__o, 1);
        -:19073:  return ret;
        -:19074:}
        -:19075:
        -:19076:__extension__ extern __inline poly64x2x2_t
        -:19077:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19078:vld2q_dup_p64 (const poly64_t * __a)
        -:19079:{
        -:19080:  poly64x2x2_t ret;
        -:19081:  __builtin_aarch64_simd_oi __o;
        -:19082:  __o = __builtin_aarch64_ld2rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19083:  ret.val[0] = (poly64x2_t) __builtin_aarch64_get_qregoiv2di_pss (__o, 0);
        -:19084:  ret.val[1] = (poly64x2_t) __builtin_aarch64_get_qregoiv2di_pss (__o, 1);
        -:19085:  return ret;
        -:19086:}
        -:19087:
        -:19088:__extension__ extern __inline int64x1x3_t
        -:19089:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19090:vld3_dup_s64 (const int64_t * __a)
        -:19091:{
        -:19092:  int64x1x3_t ret;
        -:19093:  __builtin_aarch64_simd_ci __o;
        -:19094:  __o = __builtin_aarch64_ld3rdi ((const __builtin_aarch64_simd_di *) __a);
        -:19095:  ret.val[0] = (int64x1_t) __builtin_aarch64_get_dregcidi (__o, 0);
        -:19096:  ret.val[1] = (int64x1_t) __builtin_aarch64_get_dregcidi (__o, 1);
        -:19097:  ret.val[2] = (int64x1_t) __builtin_aarch64_get_dregcidi (__o, 2);
        -:19098:  return ret;
        -:19099:}
        -:19100:
        -:19101:__extension__ extern __inline uint64x1x3_t
        -:19102:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19103:vld3_dup_u64 (const uint64_t * __a)
        -:19104:{
        -:19105:  uint64x1x3_t ret;
        -:19106:  __builtin_aarch64_simd_ci __o;
        -:19107:  __o = __builtin_aarch64_ld3rdi ((const __builtin_aarch64_simd_di *) __a);
        -:19108:  ret.val[0] = (uint64x1_t) __builtin_aarch64_get_dregcidi (__o, 0);
        -:19109:  ret.val[1] = (uint64x1_t) __builtin_aarch64_get_dregcidi (__o, 1);
        -:19110:  ret.val[2] = (uint64x1_t) __builtin_aarch64_get_dregcidi (__o, 2);
        -:19111:  return ret;
        -:19112:}
        -:19113:
        -:19114:__extension__ extern __inline float64x1x3_t
        -:19115:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19116:vld3_dup_f64 (const float64_t * __a)
        -:19117:{
        -:19118:  float64x1x3_t ret;
        -:19119:  __builtin_aarch64_simd_ci __o;
        -:19120:  __o = __builtin_aarch64_ld3rdf ((const __builtin_aarch64_simd_df *) __a);
        -:19121:  ret.val[0] = (float64x1_t) {__builtin_aarch64_get_dregcidf (__o, 0)};
        -:19122:  ret.val[1] = (float64x1_t) {__builtin_aarch64_get_dregcidf (__o, 1)};
        -:19123:  ret.val[2] = (float64x1_t) {__builtin_aarch64_get_dregcidf (__o, 2)};
        -:19124:  return ret;
        -:19125:}
        -:19126:
        -:19127:__extension__ extern __inline int8x8x3_t
        -:19128:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19129:vld3_dup_s8 (const int8_t * __a)
        -:19130:{
        -:19131:  int8x8x3_t ret;
        -:19132:  __builtin_aarch64_simd_ci __o;
        -:19133:  __o = __builtin_aarch64_ld3rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19134:  ret.val[0] = (int8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 0);
        -:19135:  ret.val[1] = (int8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 1);
        -:19136:  ret.val[2] = (int8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 2);
        -:19137:  return ret;
        -:19138:}
        -:19139:
        -:19140:__extension__ extern __inline poly8x8x3_t
        -:19141:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19142:vld3_dup_p8 (const poly8_t * __a)
        -:19143:{
        -:19144:  poly8x8x3_t ret;
        -:19145:  __builtin_aarch64_simd_ci __o;
        -:19146:  __o = __builtin_aarch64_ld3rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19147:  ret.val[0] = (poly8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 0);
        -:19148:  ret.val[1] = (poly8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 1);
        -:19149:  ret.val[2] = (poly8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 2);
        -:19150:  return ret;
        -:19151:}
        -:19152:
        -:19153:__extension__ extern __inline int16x4x3_t
        -:19154:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19155:vld3_dup_s16 (const int16_t * __a)
        -:19156:{
        -:19157:  int16x4x3_t ret;
        -:19158:  __builtin_aarch64_simd_ci __o;
        -:19159:  __o = __builtin_aarch64_ld3rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19160:  ret.val[0] = (int16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 0);
        -:19161:  ret.val[1] = (int16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 1);
        -:19162:  ret.val[2] = (int16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 2);
        -:19163:  return ret;
        -:19164:}
        -:19165:
        -:19166:__extension__ extern __inline poly16x4x3_t
        -:19167:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19168:vld3_dup_p16 (const poly16_t * __a)
        -:19169:{
        -:19170:  poly16x4x3_t ret;
        -:19171:  __builtin_aarch64_simd_ci __o;
        -:19172:  __o = __builtin_aarch64_ld3rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19173:  ret.val[0] = (poly16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 0);
        -:19174:  ret.val[1] = (poly16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 1);
        -:19175:  ret.val[2] = (poly16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 2);
        -:19176:  return ret;
        -:19177:}
        -:19178:
        -:19179:__extension__ extern __inline int32x2x3_t
        -:19180:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19181:vld3_dup_s32 (const int32_t * __a)
        -:19182:{
        -:19183:  int32x2x3_t ret;
        -:19184:  __builtin_aarch64_simd_ci __o;
        -:19185:  __o = __builtin_aarch64_ld3rv2si ((const __builtin_aarch64_simd_si *) __a);
        -:19186:  ret.val[0] = (int32x2_t) __builtin_aarch64_get_dregciv2si (__o, 0);
        -:19187:  ret.val[1] = (int32x2_t) __builtin_aarch64_get_dregciv2si (__o, 1);
        -:19188:  ret.val[2] = (int32x2_t) __builtin_aarch64_get_dregciv2si (__o, 2);
        -:19189:  return ret;
        -:19190:}
        -:19191:
        -:19192:__extension__ extern __inline uint8x8x3_t
        -:19193:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19194:vld3_dup_u8 (const uint8_t * __a)
        -:19195:{
        -:19196:  uint8x8x3_t ret;
        -:19197:  __builtin_aarch64_simd_ci __o;
        -:19198:  __o = __builtin_aarch64_ld3rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19199:  ret.val[0] = (uint8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 0);
        -:19200:  ret.val[1] = (uint8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 1);
        -:19201:  ret.val[2] = (uint8x8_t) __builtin_aarch64_get_dregciv8qi (__o, 2);
        -:19202:  return ret;
        -:19203:}
        -:19204:
        -:19205:__extension__ extern __inline uint16x4x3_t
        -:19206:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19207:vld3_dup_u16 (const uint16_t * __a)
        -:19208:{
        -:19209:  uint16x4x3_t ret;
        -:19210:  __builtin_aarch64_simd_ci __o;
        -:19211:  __o = __builtin_aarch64_ld3rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19212:  ret.val[0] = (uint16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 0);
        -:19213:  ret.val[1] = (uint16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 1);
        -:19214:  ret.val[2] = (uint16x4_t) __builtin_aarch64_get_dregciv4hi (__o, 2);
        -:19215:  return ret;
        -:19216:}
        -:19217:
        -:19218:__extension__ extern __inline uint32x2x3_t
        -:19219:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19220:vld3_dup_u32 (const uint32_t * __a)
        -:19221:{
        -:19222:  uint32x2x3_t ret;
        -:19223:  __builtin_aarch64_simd_ci __o;
        -:19224:  __o = __builtin_aarch64_ld3rv2si ((const __builtin_aarch64_simd_si *) __a);
        -:19225:  ret.val[0] = (uint32x2_t) __builtin_aarch64_get_dregciv2si (__o, 0);
        -:19226:  ret.val[1] = (uint32x2_t) __builtin_aarch64_get_dregciv2si (__o, 1);
        -:19227:  ret.val[2] = (uint32x2_t) __builtin_aarch64_get_dregciv2si (__o, 2);
        -:19228:  return ret;
        -:19229:}
        -:19230:
        -:19231:__extension__ extern __inline float16x4x3_t
        -:19232:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19233:vld3_dup_f16 (const float16_t * __a)
        -:19234:{
        -:19235:  float16x4x3_t ret;
        -:19236:  __builtin_aarch64_simd_ci __o;
        -:19237:  __o = __builtin_aarch64_ld3rv4hf ((const __builtin_aarch64_simd_hf *) __a);
        -:19238:  ret.val[0] = (float16x4_t) __builtin_aarch64_get_dregciv4hf (__o, 0);
        -:19239:  ret.val[1] = (float16x4_t) __builtin_aarch64_get_dregciv4hf (__o, 1);
        -:19240:  ret.val[2] = (float16x4_t) __builtin_aarch64_get_dregciv4hf (__o, 2);
        -:19241:  return ret;
        -:19242:}
        -:19243:
        -:19244:__extension__ extern __inline float32x2x3_t
        -:19245:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19246:vld3_dup_f32 (const float32_t * __a)
        -:19247:{
        -:19248:  float32x2x3_t ret;
        -:19249:  __builtin_aarch64_simd_ci __o;
        -:19250:  __o = __builtin_aarch64_ld3rv2sf ((const __builtin_aarch64_simd_sf *) __a);
        -:19251:  ret.val[0] = (float32x2_t) __builtin_aarch64_get_dregciv2sf (__o, 0);
        -:19252:  ret.val[1] = (float32x2_t) __builtin_aarch64_get_dregciv2sf (__o, 1);
        -:19253:  ret.val[2] = (float32x2_t) __builtin_aarch64_get_dregciv2sf (__o, 2);
        -:19254:  return ret;
        -:19255:}
        -:19256:
        -:19257:__extension__ extern __inline poly64x1x3_t
        -:19258:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19259:vld3_dup_p64 (const poly64_t * __a)
        -:19260:{
        -:19261:  poly64x1x3_t ret;
        -:19262:  __builtin_aarch64_simd_ci __o;
        -:19263:  __o = __builtin_aarch64_ld3rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19264:  ret.val[0] = (poly64x1_t) __builtin_aarch64_get_dregcidi_pss (__o, 0);
        -:19265:  ret.val[1] = (poly64x1_t) __builtin_aarch64_get_dregcidi_pss (__o, 1);
        -:19266:  ret.val[2] = (poly64x1_t) __builtin_aarch64_get_dregcidi_pss (__o, 2);
        -:19267:  return ret;
        -:19268:}
        -:19269:
        -:19270:__extension__ extern __inline int8x16x3_t
        -:19271:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19272:vld3q_dup_s8 (const int8_t * __a)
        -:19273:{
        -:19274:  int8x16x3_t ret;
        -:19275:  __builtin_aarch64_simd_ci __o;
        -:19276:  __o = __builtin_aarch64_ld3rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19277:  ret.val[0] = (int8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 0);
        -:19278:  ret.val[1] = (int8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 1);
        -:19279:  ret.val[2] = (int8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 2);
        -:19280:  return ret;
        -:19281:}
        -:19282:
        -:19283:__extension__ extern __inline poly8x16x3_t
        -:19284:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19285:vld3q_dup_p8 (const poly8_t * __a)
        -:19286:{
        -:19287:  poly8x16x3_t ret;
        -:19288:  __builtin_aarch64_simd_ci __o;
        -:19289:  __o = __builtin_aarch64_ld3rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19290:  ret.val[0] = (poly8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 0);
        -:19291:  ret.val[1] = (poly8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 1);
        -:19292:  ret.val[2] = (poly8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 2);
        -:19293:  return ret;
        -:19294:}
        -:19295:
        -:19296:__extension__ extern __inline int16x8x3_t
        -:19297:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19298:vld3q_dup_s16 (const int16_t * __a)
        -:19299:{
        -:19300:  int16x8x3_t ret;
        -:19301:  __builtin_aarch64_simd_ci __o;
        -:19302:  __o = __builtin_aarch64_ld3rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19303:  ret.val[0] = (int16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 0);
        -:19304:  ret.val[1] = (int16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 1);
        -:19305:  ret.val[2] = (int16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 2);
        -:19306:  return ret;
        -:19307:}
        -:19308:
        -:19309:__extension__ extern __inline poly16x8x3_t
        -:19310:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19311:vld3q_dup_p16 (const poly16_t * __a)
        -:19312:{
        -:19313:  poly16x8x3_t ret;
        -:19314:  __builtin_aarch64_simd_ci __o;
        -:19315:  __o = __builtin_aarch64_ld3rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19316:  ret.val[0] = (poly16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 0);
        -:19317:  ret.val[1] = (poly16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 1);
        -:19318:  ret.val[2] = (poly16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 2);
        -:19319:  return ret;
        -:19320:}
        -:19321:
        -:19322:__extension__ extern __inline int32x4x3_t
        -:19323:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19324:vld3q_dup_s32 (const int32_t * __a)
        -:19325:{
        -:19326:  int32x4x3_t ret;
        -:19327:  __builtin_aarch64_simd_ci __o;
        -:19328:  __o = __builtin_aarch64_ld3rv4si ((const __builtin_aarch64_simd_si *) __a);
        -:19329:  ret.val[0] = (int32x4_t) __builtin_aarch64_get_qregciv4si (__o, 0);
        -:19330:  ret.val[1] = (int32x4_t) __builtin_aarch64_get_qregciv4si (__o, 1);
        -:19331:  ret.val[2] = (int32x4_t) __builtin_aarch64_get_qregciv4si (__o, 2);
        -:19332:  return ret;
        -:19333:}
        -:19334:
        -:19335:__extension__ extern __inline int64x2x3_t
        -:19336:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19337:vld3q_dup_s64 (const int64_t * __a)
        -:19338:{
        -:19339:  int64x2x3_t ret;
        -:19340:  __builtin_aarch64_simd_ci __o;
        -:19341:  __o = __builtin_aarch64_ld3rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19342:  ret.val[0] = (int64x2_t) __builtin_aarch64_get_qregciv2di (__o, 0);
        -:19343:  ret.val[1] = (int64x2_t) __builtin_aarch64_get_qregciv2di (__o, 1);
        -:19344:  ret.val[2] = (int64x2_t) __builtin_aarch64_get_qregciv2di (__o, 2);
        -:19345:  return ret;
        -:19346:}
        -:19347:
        -:19348:__extension__ extern __inline uint8x16x3_t
        -:19349:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19350:vld3q_dup_u8 (const uint8_t * __a)
        -:19351:{
        -:19352:  uint8x16x3_t ret;
        -:19353:  __builtin_aarch64_simd_ci __o;
        -:19354:  __o = __builtin_aarch64_ld3rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19355:  ret.val[0] = (uint8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 0);
        -:19356:  ret.val[1] = (uint8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 1);
        -:19357:  ret.val[2] = (uint8x16_t) __builtin_aarch64_get_qregciv16qi (__o, 2);
        -:19358:  return ret;
        -:19359:}
        -:19360:
        -:19361:__extension__ extern __inline uint16x8x3_t
        -:19362:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19363:vld3q_dup_u16 (const uint16_t * __a)
        -:19364:{
        -:19365:  uint16x8x3_t ret;
        -:19366:  __builtin_aarch64_simd_ci __o;
        -:19367:  __o = __builtin_aarch64_ld3rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19368:  ret.val[0] = (uint16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 0);
        -:19369:  ret.val[1] = (uint16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 1);
        -:19370:  ret.val[2] = (uint16x8_t) __builtin_aarch64_get_qregciv8hi (__o, 2);
        -:19371:  return ret;
        -:19372:}
        -:19373:
        -:19374:__extension__ extern __inline uint32x4x3_t
        -:19375:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19376:vld3q_dup_u32 (const uint32_t * __a)
        -:19377:{
        -:19378:  uint32x4x3_t ret;
        -:19379:  __builtin_aarch64_simd_ci __o;
        -:19380:  __o = __builtin_aarch64_ld3rv4si ((const __builtin_aarch64_simd_si *) __a);
        -:19381:  ret.val[0] = (uint32x4_t) __builtin_aarch64_get_qregciv4si (__o, 0);
        -:19382:  ret.val[1] = (uint32x4_t) __builtin_aarch64_get_qregciv4si (__o, 1);
        -:19383:  ret.val[2] = (uint32x4_t) __builtin_aarch64_get_qregciv4si (__o, 2);
        -:19384:  return ret;
        -:19385:}
        -:19386:
        -:19387:__extension__ extern __inline uint64x2x3_t
        -:19388:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19389:vld3q_dup_u64 (const uint64_t * __a)
        -:19390:{
        -:19391:  uint64x2x3_t ret;
        -:19392:  __builtin_aarch64_simd_ci __o;
        -:19393:  __o = __builtin_aarch64_ld3rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19394:  ret.val[0] = (uint64x2_t) __builtin_aarch64_get_qregciv2di (__o, 0);
        -:19395:  ret.val[1] = (uint64x2_t) __builtin_aarch64_get_qregciv2di (__o, 1);
        -:19396:  ret.val[2] = (uint64x2_t) __builtin_aarch64_get_qregciv2di (__o, 2);
        -:19397:  return ret;
        -:19398:}
        -:19399:
        -:19400:__extension__ extern __inline float16x8x3_t
        -:19401:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19402:vld3q_dup_f16 (const float16_t * __a)
        -:19403:{
        -:19404:  float16x8x3_t ret;
        -:19405:  __builtin_aarch64_simd_ci __o;
        -:19406:  __o = __builtin_aarch64_ld3rv8hf ((const __builtin_aarch64_simd_hf *) __a);
        -:19407:  ret.val[0] = (float16x8_t) __builtin_aarch64_get_qregciv8hf (__o, 0);
        -:19408:  ret.val[1] = (float16x8_t) __builtin_aarch64_get_qregciv8hf (__o, 1);
        -:19409:  ret.val[2] = (float16x8_t) __builtin_aarch64_get_qregciv8hf (__o, 2);
        -:19410:  return ret;
        -:19411:}
        -:19412:
        -:19413:__extension__ extern __inline float32x4x3_t
        -:19414:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19415:vld3q_dup_f32 (const float32_t * __a)
        -:19416:{
        -:19417:  float32x4x3_t ret;
        -:19418:  __builtin_aarch64_simd_ci __o;
        -:19419:  __o = __builtin_aarch64_ld3rv4sf ((const __builtin_aarch64_simd_sf *) __a);
        -:19420:  ret.val[0] = (float32x4_t) __builtin_aarch64_get_qregciv4sf (__o, 0);
        -:19421:  ret.val[1] = (float32x4_t) __builtin_aarch64_get_qregciv4sf (__o, 1);
        -:19422:  ret.val[2] = (float32x4_t) __builtin_aarch64_get_qregciv4sf (__o, 2);
        -:19423:  return ret;
        -:19424:}
        -:19425:
        -:19426:__extension__ extern __inline float64x2x3_t
        -:19427:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19428:vld3q_dup_f64 (const float64_t * __a)
        -:19429:{
        -:19430:  float64x2x3_t ret;
        -:19431:  __builtin_aarch64_simd_ci __o;
        -:19432:  __o = __builtin_aarch64_ld3rv2df ((const __builtin_aarch64_simd_df *) __a);
        -:19433:  ret.val[0] = (float64x2_t) __builtin_aarch64_get_qregciv2df (__o, 0);
        -:19434:  ret.val[1] = (float64x2_t) __builtin_aarch64_get_qregciv2df (__o, 1);
        -:19435:  ret.val[2] = (float64x2_t) __builtin_aarch64_get_qregciv2df (__o, 2);
        -:19436:  return ret;
        -:19437:}
        -:19438:
        -:19439:__extension__ extern __inline poly64x2x3_t
        -:19440:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19441:vld3q_dup_p64 (const poly64_t * __a)
        -:19442:{
        -:19443:  poly64x2x3_t ret;
        -:19444:  __builtin_aarch64_simd_ci __o;
        -:19445:  __o = __builtin_aarch64_ld3rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19446:  ret.val[0] = (poly64x2_t) __builtin_aarch64_get_qregciv2di_pss (__o, 0);
        -:19447:  ret.val[1] = (poly64x2_t) __builtin_aarch64_get_qregciv2di_pss (__o, 1);
        -:19448:  ret.val[2] = (poly64x2_t) __builtin_aarch64_get_qregciv2di_pss (__o, 2);
        -:19449:  return ret;
        -:19450:}
        -:19451:
        -:19452:__extension__ extern __inline int64x1x4_t
        -:19453:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19454:vld4_dup_s64 (const int64_t * __a)
        -:19455:{
        -:19456:  int64x1x4_t ret;
        -:19457:  __builtin_aarch64_simd_xi __o;
        -:19458:  __o = __builtin_aarch64_ld4rdi ((const __builtin_aarch64_simd_di *) __a);
        -:19459:  ret.val[0] = (int64x1_t) __builtin_aarch64_get_dregxidi (__o, 0);
        -:19460:  ret.val[1] = (int64x1_t) __builtin_aarch64_get_dregxidi (__o, 1);
        -:19461:  ret.val[2] = (int64x1_t) __builtin_aarch64_get_dregxidi (__o, 2);
        -:19462:  ret.val[3] = (int64x1_t) __builtin_aarch64_get_dregxidi (__o, 3);
        -:19463:  return ret;
        -:19464:}
        -:19465:
        -:19466:__extension__ extern __inline uint64x1x4_t
        -:19467:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19468:vld4_dup_u64 (const uint64_t * __a)
        -:19469:{
        -:19470:  uint64x1x4_t ret;
        -:19471:  __builtin_aarch64_simd_xi __o;
        -:19472:  __o = __builtin_aarch64_ld4rdi ((const __builtin_aarch64_simd_di *) __a);
        -:19473:  ret.val[0] = (uint64x1_t) __builtin_aarch64_get_dregxidi (__o, 0);
        -:19474:  ret.val[1] = (uint64x1_t) __builtin_aarch64_get_dregxidi (__o, 1);
        -:19475:  ret.val[2] = (uint64x1_t) __builtin_aarch64_get_dregxidi (__o, 2);
        -:19476:  ret.val[3] = (uint64x1_t) __builtin_aarch64_get_dregxidi (__o, 3);
        -:19477:  return ret;
        -:19478:}
        -:19479:
        -:19480:__extension__ extern __inline float64x1x4_t
        -:19481:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19482:vld4_dup_f64 (const float64_t * __a)
        -:19483:{
        -:19484:  float64x1x4_t ret;
        -:19485:  __builtin_aarch64_simd_xi __o;
        -:19486:  __o = __builtin_aarch64_ld4rdf ((const __builtin_aarch64_simd_df *) __a);
        -:19487:  ret.val[0] = (float64x1_t) {__builtin_aarch64_get_dregxidf (__o, 0)};
        -:19488:  ret.val[1] = (float64x1_t) {__builtin_aarch64_get_dregxidf (__o, 1)};
        -:19489:  ret.val[2] = (float64x1_t) {__builtin_aarch64_get_dregxidf (__o, 2)};
        -:19490:  ret.val[3] = (float64x1_t) {__builtin_aarch64_get_dregxidf (__o, 3)};
        -:19491:  return ret;
        -:19492:}
        -:19493:
        -:19494:__extension__ extern __inline int8x8x4_t
        -:19495:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19496:vld4_dup_s8 (const int8_t * __a)
        -:19497:{
        -:19498:  int8x8x4_t ret;
        -:19499:  __builtin_aarch64_simd_xi __o;
        -:19500:  __o = __builtin_aarch64_ld4rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19501:  ret.val[0] = (int8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 0);
        -:19502:  ret.val[1] = (int8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 1);
        -:19503:  ret.val[2] = (int8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 2);
        -:19504:  ret.val[3] = (int8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 3);
        -:19505:  return ret;
        -:19506:}
        -:19507:
        -:19508:__extension__ extern __inline poly8x8x4_t
        -:19509:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19510:vld4_dup_p8 (const poly8_t * __a)
        -:19511:{
        -:19512:  poly8x8x4_t ret;
        -:19513:  __builtin_aarch64_simd_xi __o;
        -:19514:  __o = __builtin_aarch64_ld4rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19515:  ret.val[0] = (poly8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 0);
        -:19516:  ret.val[1] = (poly8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 1);
        -:19517:  ret.val[2] = (poly8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 2);
        -:19518:  ret.val[3] = (poly8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 3);
        -:19519:  return ret;
        -:19520:}
        -:19521:
        -:19522:__extension__ extern __inline int16x4x4_t
        -:19523:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19524:vld4_dup_s16 (const int16_t * __a)
        -:19525:{
        -:19526:  int16x4x4_t ret;
        -:19527:  __builtin_aarch64_simd_xi __o;
        -:19528:  __o = __builtin_aarch64_ld4rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19529:  ret.val[0] = (int16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 0);
        -:19530:  ret.val[1] = (int16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 1);
        -:19531:  ret.val[2] = (int16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 2);
        -:19532:  ret.val[3] = (int16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 3);
        -:19533:  return ret;
        -:19534:}
        -:19535:
        -:19536:__extension__ extern __inline poly16x4x4_t
        -:19537:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19538:vld4_dup_p16 (const poly16_t * __a)
        -:19539:{
        -:19540:  poly16x4x4_t ret;
        -:19541:  __builtin_aarch64_simd_xi __o;
        -:19542:  __o = __builtin_aarch64_ld4rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19543:  ret.val[0] = (poly16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 0);
        -:19544:  ret.val[1] = (poly16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 1);
        -:19545:  ret.val[2] = (poly16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 2);
        -:19546:  ret.val[3] = (poly16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 3);
        -:19547:  return ret;
        -:19548:}
        -:19549:
        -:19550:__extension__ extern __inline int32x2x4_t
        -:19551:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19552:vld4_dup_s32 (const int32_t * __a)
        -:19553:{
        -:19554:  int32x2x4_t ret;
        -:19555:  __builtin_aarch64_simd_xi __o;
        -:19556:  __o = __builtin_aarch64_ld4rv2si ((const __builtin_aarch64_simd_si *) __a);
        -:19557:  ret.val[0] = (int32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 0);
        -:19558:  ret.val[1] = (int32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 1);
        -:19559:  ret.val[2] = (int32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 2);
        -:19560:  ret.val[3] = (int32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 3);
        -:19561:  return ret;
        -:19562:}
        -:19563:
        -:19564:__extension__ extern __inline uint8x8x4_t
        -:19565:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19566:vld4_dup_u8 (const uint8_t * __a)
        -:19567:{
        -:19568:  uint8x8x4_t ret;
        -:19569:  __builtin_aarch64_simd_xi __o;
        -:19570:  __o = __builtin_aarch64_ld4rv8qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19571:  ret.val[0] = (uint8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 0);
        -:19572:  ret.val[1] = (uint8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 1);
        -:19573:  ret.val[2] = (uint8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 2);
        -:19574:  ret.val[3] = (uint8x8_t) __builtin_aarch64_get_dregxiv8qi (__o, 3);
        -:19575:  return ret;
        -:19576:}
        -:19577:
        -:19578:__extension__ extern __inline uint16x4x4_t
        -:19579:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19580:vld4_dup_u16 (const uint16_t * __a)
        -:19581:{
        -:19582:  uint16x4x4_t ret;
        -:19583:  __builtin_aarch64_simd_xi __o;
        -:19584:  __o = __builtin_aarch64_ld4rv4hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19585:  ret.val[0] = (uint16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 0);
        -:19586:  ret.val[1] = (uint16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 1);
        -:19587:  ret.val[2] = (uint16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 2);
        -:19588:  ret.val[3] = (uint16x4_t) __builtin_aarch64_get_dregxiv4hi (__o, 3);
        -:19589:  return ret;
        -:19590:}
        -:19591:
        -:19592:__extension__ extern __inline uint32x2x4_t
        -:19593:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19594:vld4_dup_u32 (const uint32_t * __a)
        -:19595:{
        -:19596:  uint32x2x4_t ret;
        -:19597:  __builtin_aarch64_simd_xi __o;
        -:19598:  __o = __builtin_aarch64_ld4rv2si ((const __builtin_aarch64_simd_si *) __a);
        -:19599:  ret.val[0] = (uint32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 0);
        -:19600:  ret.val[1] = (uint32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 1);
        -:19601:  ret.val[2] = (uint32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 2);
        -:19602:  ret.val[3] = (uint32x2_t) __builtin_aarch64_get_dregxiv2si (__o, 3);
        -:19603:  return ret;
        -:19604:}
        -:19605:
        -:19606:__extension__ extern __inline float16x4x4_t
        -:19607:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19608:vld4_dup_f16 (const float16_t * __a)
        -:19609:{
        -:19610:  float16x4x4_t ret;
        -:19611:  __builtin_aarch64_simd_xi __o;
        -:19612:  __o = __builtin_aarch64_ld4rv4hf ((const __builtin_aarch64_simd_hf *) __a);
        -:19613:  ret.val[0] = (float16x4_t) __builtin_aarch64_get_dregxiv4hf (__o, 0);
        -:19614:  ret.val[1] = (float16x4_t) __builtin_aarch64_get_dregxiv4hf (__o, 1);
        -:19615:  ret.val[2] = (float16x4_t) __builtin_aarch64_get_dregxiv4hf (__o, 2);
        -:19616:  ret.val[3] = (float16x4_t) __builtin_aarch64_get_dregxiv4hf (__o, 3);
        -:19617:  return ret;
        -:19618:}
        -:19619:
        -:19620:__extension__ extern __inline float32x2x4_t
        -:19621:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19622:vld4_dup_f32 (const float32_t * __a)
        -:19623:{
        -:19624:  float32x2x4_t ret;
        -:19625:  __builtin_aarch64_simd_xi __o;
        -:19626:  __o = __builtin_aarch64_ld4rv2sf ((const __builtin_aarch64_simd_sf *) __a);
        -:19627:  ret.val[0] = (float32x2_t) __builtin_aarch64_get_dregxiv2sf (__o, 0);
        -:19628:  ret.val[1] = (float32x2_t) __builtin_aarch64_get_dregxiv2sf (__o, 1);
        -:19629:  ret.val[2] = (float32x2_t) __builtin_aarch64_get_dregxiv2sf (__o, 2);
        -:19630:  ret.val[3] = (float32x2_t) __builtin_aarch64_get_dregxiv2sf (__o, 3);
        -:19631:  return ret;
        -:19632:}
        -:19633:
        -:19634:__extension__ extern __inline poly64x1x4_t
        -:19635:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19636:vld4_dup_p64 (const poly64_t * __a)
        -:19637:{
        -:19638:  poly64x1x4_t ret;
        -:19639:  __builtin_aarch64_simd_xi __o;
        -:19640:  __o = __builtin_aarch64_ld4rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19641:  ret.val[0] = (poly64x1_t) __builtin_aarch64_get_dregxidi_pss (__o, 0);
        -:19642:  ret.val[1] = (poly64x1_t) __builtin_aarch64_get_dregxidi_pss (__o, 1);
        -:19643:  ret.val[2] = (poly64x1_t) __builtin_aarch64_get_dregxidi_pss (__o, 2);
        -:19644:  ret.val[3] = (poly64x1_t) __builtin_aarch64_get_dregxidi_pss (__o, 3);
        -:19645:  return ret;
        -:19646:}
        -:19647:
        -:19648:__extension__ extern __inline int8x16x4_t
        -:19649:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19650:vld4q_dup_s8 (const int8_t * __a)
        -:19651:{
        -:19652:  int8x16x4_t ret;
        -:19653:  __builtin_aarch64_simd_xi __o;
        -:19654:  __o = __builtin_aarch64_ld4rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19655:  ret.val[0] = (int8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 0);
        -:19656:  ret.val[1] = (int8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 1);
        -:19657:  ret.val[2] = (int8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 2);
        -:19658:  ret.val[3] = (int8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 3);
        -:19659:  return ret;
        -:19660:}
        -:19661:
        -:19662:__extension__ extern __inline poly8x16x4_t
        -:19663:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19664:vld4q_dup_p8 (const poly8_t * __a)
        -:19665:{
        -:19666:  poly8x16x4_t ret;
        -:19667:  __builtin_aarch64_simd_xi __o;
        -:19668:  __o = __builtin_aarch64_ld4rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19669:  ret.val[0] = (poly8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 0);
        -:19670:  ret.val[1] = (poly8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 1);
        -:19671:  ret.val[2] = (poly8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 2);
        -:19672:  ret.val[3] = (poly8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 3);
        -:19673:  return ret;
        -:19674:}
        -:19675:
        -:19676:__extension__ extern __inline int16x8x4_t
        -:19677:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19678:vld4q_dup_s16 (const int16_t * __a)
        -:19679:{
        -:19680:  int16x8x4_t ret;
        -:19681:  __builtin_aarch64_simd_xi __o;
        -:19682:  __o = __builtin_aarch64_ld4rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19683:  ret.val[0] = (int16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 0);
        -:19684:  ret.val[1] = (int16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 1);
        -:19685:  ret.val[2] = (int16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 2);
        -:19686:  ret.val[3] = (int16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 3);
        -:19687:  return ret;
        -:19688:}
        -:19689:
        -:19690:__extension__ extern __inline poly16x8x4_t
        -:19691:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19692:vld4q_dup_p16 (const poly16_t * __a)
        -:19693:{
        -:19694:  poly16x8x4_t ret;
        -:19695:  __builtin_aarch64_simd_xi __o;
        -:19696:  __o = __builtin_aarch64_ld4rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19697:  ret.val[0] = (poly16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 0);
        -:19698:  ret.val[1] = (poly16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 1);
        -:19699:  ret.val[2] = (poly16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 2);
        -:19700:  ret.val[3] = (poly16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 3);
        -:19701:  return ret;
        -:19702:}
        -:19703:
        -:19704:__extension__ extern __inline int32x4x4_t
        -:19705:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19706:vld4q_dup_s32 (const int32_t * __a)
        -:19707:{
        -:19708:  int32x4x4_t ret;
        -:19709:  __builtin_aarch64_simd_xi __o;
        -:19710:  __o = __builtin_aarch64_ld4rv4si ((const __builtin_aarch64_simd_si *) __a);
        -:19711:  ret.val[0] = (int32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 0);
        -:19712:  ret.val[1] = (int32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 1);
        -:19713:  ret.val[2] = (int32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 2);
        -:19714:  ret.val[3] = (int32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 3);
        -:19715:  return ret;
        -:19716:}
        -:19717:
        -:19718:__extension__ extern __inline int64x2x4_t
        -:19719:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19720:vld4q_dup_s64 (const int64_t * __a)
        -:19721:{
        -:19722:  int64x2x4_t ret;
        -:19723:  __builtin_aarch64_simd_xi __o;
        -:19724:  __o = __builtin_aarch64_ld4rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19725:  ret.val[0] = (int64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 0);
        -:19726:  ret.val[1] = (int64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 1);
        -:19727:  ret.val[2] = (int64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 2);
        -:19728:  ret.val[3] = (int64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 3);
        -:19729:  return ret;
        -:19730:}
        -:19731:
        -:19732:__extension__ extern __inline uint8x16x4_t
        -:19733:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19734:vld4q_dup_u8 (const uint8_t * __a)
        -:19735:{
        -:19736:  uint8x16x4_t ret;
        -:19737:  __builtin_aarch64_simd_xi __o;
        -:19738:  __o = __builtin_aarch64_ld4rv16qi ((const __builtin_aarch64_simd_qi *) __a);
        -:19739:  ret.val[0] = (uint8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 0);
        -:19740:  ret.val[1] = (uint8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 1);
        -:19741:  ret.val[2] = (uint8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 2);
        -:19742:  ret.val[3] = (uint8x16_t) __builtin_aarch64_get_qregxiv16qi (__o, 3);
        -:19743:  return ret;
        -:19744:}
        -:19745:
        -:19746:__extension__ extern __inline uint16x8x4_t
        -:19747:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19748:vld4q_dup_u16 (const uint16_t * __a)
        -:19749:{
        -:19750:  uint16x8x4_t ret;
        -:19751:  __builtin_aarch64_simd_xi __o;
        -:19752:  __o = __builtin_aarch64_ld4rv8hi ((const __builtin_aarch64_simd_hi *) __a);
        -:19753:  ret.val[0] = (uint16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 0);
        -:19754:  ret.val[1] = (uint16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 1);
        -:19755:  ret.val[2] = (uint16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 2);
        -:19756:  ret.val[3] = (uint16x8_t) __builtin_aarch64_get_qregxiv8hi (__o, 3);
        -:19757:  return ret;
        -:19758:}
        -:19759:
        -:19760:__extension__ extern __inline uint32x4x4_t
        -:19761:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19762:vld4q_dup_u32 (const uint32_t * __a)
        -:19763:{
        -:19764:  uint32x4x4_t ret;
        -:19765:  __builtin_aarch64_simd_xi __o;
        -:19766:  __o = __builtin_aarch64_ld4rv4si ((const __builtin_aarch64_simd_si *) __a);
        -:19767:  ret.val[0] = (uint32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 0);
        -:19768:  ret.val[1] = (uint32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 1);
        -:19769:  ret.val[2] = (uint32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 2);
        -:19770:  ret.val[3] = (uint32x4_t) __builtin_aarch64_get_qregxiv4si (__o, 3);
        -:19771:  return ret;
        -:19772:}
        -:19773:
        -:19774:__extension__ extern __inline uint64x2x4_t
        -:19775:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19776:vld4q_dup_u64 (const uint64_t * __a)
        -:19777:{
        -:19778:  uint64x2x4_t ret;
        -:19779:  __builtin_aarch64_simd_xi __o;
        -:19780:  __o = __builtin_aarch64_ld4rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19781:  ret.val[0] = (uint64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 0);
        -:19782:  ret.val[1] = (uint64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 1);
        -:19783:  ret.val[2] = (uint64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 2);
        -:19784:  ret.val[3] = (uint64x2_t) __builtin_aarch64_get_qregxiv2di (__o, 3);
        -:19785:  return ret;
        -:19786:}
        -:19787:
        -:19788:__extension__ extern __inline float16x8x4_t
        -:19789:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19790:vld4q_dup_f16 (const float16_t * __a)
        -:19791:{
        -:19792:  float16x8x4_t ret;
        -:19793:  __builtin_aarch64_simd_xi __o;
        -:19794:  __o = __builtin_aarch64_ld4rv8hf ((const __builtin_aarch64_simd_hf *) __a);
        -:19795:  ret.val[0] = (float16x8_t) __builtin_aarch64_get_qregxiv8hf (__o, 0);
        -:19796:  ret.val[1] = (float16x8_t) __builtin_aarch64_get_qregxiv8hf (__o, 1);
        -:19797:  ret.val[2] = (float16x8_t) __builtin_aarch64_get_qregxiv8hf (__o, 2);
        -:19798:  ret.val[3] = (float16x8_t) __builtin_aarch64_get_qregxiv8hf (__o, 3);
        -:19799:  return ret;
        -:19800:}
        -:19801:
        -:19802:__extension__ extern __inline float32x4x4_t
        -:19803:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19804:vld4q_dup_f32 (const float32_t * __a)
        -:19805:{
        -:19806:  float32x4x4_t ret;
        -:19807:  __builtin_aarch64_simd_xi __o;
        -:19808:  __o = __builtin_aarch64_ld4rv4sf ((const __builtin_aarch64_simd_sf *) __a);
        -:19809:  ret.val[0] = (float32x4_t) __builtin_aarch64_get_qregxiv4sf (__o, 0);
        -:19810:  ret.val[1] = (float32x4_t) __builtin_aarch64_get_qregxiv4sf (__o, 1);
        -:19811:  ret.val[2] = (float32x4_t) __builtin_aarch64_get_qregxiv4sf (__o, 2);
        -:19812:  ret.val[3] = (float32x4_t) __builtin_aarch64_get_qregxiv4sf (__o, 3);
        -:19813:  return ret;
        -:19814:}
        -:19815:
        -:19816:__extension__ extern __inline float64x2x4_t
        -:19817:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19818:vld4q_dup_f64 (const float64_t * __a)
        -:19819:{
        -:19820:  float64x2x4_t ret;
        -:19821:  __builtin_aarch64_simd_xi __o;
        -:19822:  __o = __builtin_aarch64_ld4rv2df ((const __builtin_aarch64_simd_df *) __a);
        -:19823:  ret.val[0] = (float64x2_t) __builtin_aarch64_get_qregxiv2df (__o, 0);
        -:19824:  ret.val[1] = (float64x2_t) __builtin_aarch64_get_qregxiv2df (__o, 1);
        -:19825:  ret.val[2] = (float64x2_t) __builtin_aarch64_get_qregxiv2df (__o, 2);
        -:19826:  ret.val[3] = (float64x2_t) __builtin_aarch64_get_qregxiv2df (__o, 3);
        -:19827:  return ret;
        -:19828:}
        -:19829:
        -:19830:__extension__ extern __inline poly64x2x4_t
        -:19831:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:19832:vld4q_dup_p64 (const poly64_t * __a)
        -:19833:{
        -:19834:  poly64x2x4_t ret;
        -:19835:  __builtin_aarch64_simd_xi __o;
        -:19836:  __o = __builtin_aarch64_ld4rv2di ((const __builtin_aarch64_simd_di *) __a);
        -:19837:  ret.val[0] = (poly64x2_t) __builtin_aarch64_get_qregxiv2di_pss (__o, 0);
        -:19838:  ret.val[1] = (poly64x2_t) __builtin_aarch64_get_qregxiv2di_pss (__o, 1);
        -:19839:  ret.val[2] = (poly64x2_t) __builtin_aarch64_get_qregxiv2di_pss (__o, 2);
        -:19840:  ret.val[3] = (poly64x2_t) __builtin_aarch64_get_qregxiv2di_pss (__o, 3);
        -:19841:  return ret;
        -:19842:}
        -:19843:
        -:19844:/* vld2_lane */
        -:19845:
        -:19846:#define __LD2_LANE_FUNC(intype, vectype, largetype, ptrtype, mode,	   \
        -:19847:			 qmode, ptrmode, funcsuffix, signedtype)	   \
        -:19848:__extension__ extern __inline intype \
        -:19849:__attribute__ ((__always_inline__, __gnu_inline__,__artificial__)) \
        -:19850:vld2_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c)  \
        -:19851:{									   \
        -:19852:  __builtin_aarch64_simd_oi __o;					   \
        -:19853:  largetype __temp;							   \
        -:19854:  __temp.val[0] =							   \
        -:19855:    vcombine_##funcsuffix (__b.val[0], vcreate_##funcsuffix (0));	   \
        -:19856:  __temp.val[1] =							   \
        -:19857:    vcombine_##funcsuffix (__b.val[1], vcreate_##funcsuffix (0));	   \
        -:19858:  __o = __builtin_aarch64_set_qregoi##qmode (__o,			   \
        -:19859:					    (signedtype) __temp.val[0],	   \
        -:19860:					    0);				   \
        -:19861:  __o = __builtin_aarch64_set_qregoi##qmode (__o,			   \
        -:19862:					    (signedtype) __temp.val[1],	   \
        -:19863:					    1);				   \
        -:19864:  __o =	__builtin_aarch64_ld2_lane##mode (				   \
        -:19865:	  (__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);	   \
        -:19866:  __b.val[0] = (vectype) __builtin_aarch64_get_dregoidi (__o, 0);	   \
        -:19867:  __b.val[1] = (vectype) __builtin_aarch64_get_dregoidi (__o, 1);	   \
        -:19868:  return __b;								   \
        -:19869:}
        -:19870:
        -:19871:__LD2_LANE_FUNC (float16x4x2_t, float16x4_t, float16x8x2_t, float16_t, v4hf,
        -:19872:		 v8hf, hf, f16, float16x8_t)
        -:19873:__LD2_LANE_FUNC (float32x2x2_t, float32x2_t, float32x4x2_t, float32_t, v2sf, v4sf,
        -:19874:		 sf, f32, float32x4_t)
        -:19875:__LD2_LANE_FUNC (float64x1x2_t, float64x1_t, float64x2x2_t, float64_t, df, v2df,
        -:19876:		 df, f64, float64x2_t)
        -:19877:__LD2_LANE_FUNC (poly8x8x2_t, poly8x8_t, poly8x16x2_t, poly8_t, v8qi, v16qi, qi, p8,
        -:19878:		 int8x16_t)
        -:19879:__LD2_LANE_FUNC (poly16x4x2_t, poly16x4_t, poly16x8x2_t, poly16_t, v4hi, v8hi, hi,
        -:19880:		 p16, int16x8_t)
        -:19881:__LD2_LANE_FUNC (poly64x1x2_t, poly64x1_t, poly64x2x2_t, poly64_t, di,
        -:19882:		 v2di_ssps, di, p64, poly64x2_t)
        -:19883:__LD2_LANE_FUNC (int8x8x2_t, int8x8_t, int8x16x2_t, int8_t, v8qi, v16qi, qi, s8,
        -:19884:		 int8x16_t)
        -:19885:__LD2_LANE_FUNC (int16x4x2_t, int16x4_t, int16x8x2_t, int16_t, v4hi, v8hi, hi, s16,
        -:19886:		 int16x8_t)
        -:19887:__LD2_LANE_FUNC (int32x2x2_t, int32x2_t, int32x4x2_t, int32_t, v2si, v4si, si, s32,
        -:19888:		 int32x4_t)
        -:19889:__LD2_LANE_FUNC (int64x1x2_t, int64x1_t, int64x2x2_t, int64_t, di, v2di, di, s64,
        -:19890:		 int64x2_t)
        -:19891:__LD2_LANE_FUNC (uint8x8x2_t, uint8x8_t, uint8x16x2_t, uint8_t, v8qi, v16qi, qi, u8,
        -:19892:		 int8x16_t)
        -:19893:__LD2_LANE_FUNC (uint16x4x2_t, uint16x4_t, uint16x8x2_t, uint16_t, v4hi, v8hi, hi,
        -:19894:		 u16, int16x8_t)
        -:19895:__LD2_LANE_FUNC (uint32x2x2_t, uint32x2_t, uint32x4x2_t, uint32_t, v2si, v4si, si,
        -:19896:		 u32, int32x4_t)
        -:19897:__LD2_LANE_FUNC (uint64x1x2_t, uint64x1_t, uint64x2x2_t, uint64_t, di, v2di, di,
        -:19898:		 u64, int64x2_t)
        -:19899:
        -:19900:#undef __LD2_LANE_FUNC
        -:19901:
        -:19902:/* vld2q_lane */
        -:19903:
        -:19904:#define __LD2_LANE_FUNC(intype, vtype, ptrtype, mode, ptrmode, funcsuffix) \
        -:19905:__extension__ extern __inline intype \
        -:19906:__attribute__ ((__always_inline__, __gnu_inline__,__artificial__)) \
        -:19907:vld2q_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c) \
        -:19908:{									   \
        -:19909:  __builtin_aarch64_simd_oi __o;					   \
        -:19910:  intype ret;								   \
        -:19911:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) __b.val[0], 0); \
        -:19912:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) __b.val[1], 1); \
        -:19913:  __o = __builtin_aarch64_ld2_lane##mode (				   \
        -:19914:	(__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);		   \
        -:19915:  ret.val[0] = (vtype) __builtin_aarch64_get_qregoiv4si (__o, 0);	   \
        -:19916:  ret.val[1] = (vtype) __builtin_aarch64_get_qregoiv4si (__o, 1);	   \
        -:19917:  return ret;								   \
        -:19918:}
        -:19919:
        -:19920:__LD2_LANE_FUNC (float16x8x2_t, float16x8_t, float16_t, v8hf, hf, f16)
        -:19921:__LD2_LANE_FUNC (float32x4x2_t, float32x4_t, float32_t, v4sf, sf, f32)
        -:19922:__LD2_LANE_FUNC (float64x2x2_t, float64x2_t, float64_t, v2df, df, f64)
        -:19923:__LD2_LANE_FUNC (poly8x16x2_t, poly8x16_t, poly8_t, v16qi, qi, p8)
        -:19924:__LD2_LANE_FUNC (poly16x8x2_t, poly16x8_t, poly16_t, v8hi, hi, p16)
        -:19925:__LD2_LANE_FUNC (poly64x2x2_t, poly64x2_t, poly64_t, v2di, di, p64)
        -:19926:__LD2_LANE_FUNC (int8x16x2_t, int8x16_t, int8_t, v16qi, qi, s8)
        -:19927:__LD2_LANE_FUNC (int16x8x2_t, int16x8_t, int16_t, v8hi, hi, s16)
        -:19928:__LD2_LANE_FUNC (int32x4x2_t, int32x4_t, int32_t, v4si, si, s32)
        -:19929:__LD2_LANE_FUNC (int64x2x2_t, int64x2_t, int64_t, v2di, di, s64)
        -:19930:__LD2_LANE_FUNC (uint8x16x2_t, uint8x16_t, uint8_t, v16qi, qi, u8)
        -:19931:__LD2_LANE_FUNC (uint16x8x2_t, uint16x8_t, uint16_t, v8hi, hi, u16)
        -:19932:__LD2_LANE_FUNC (uint32x4x2_t, uint32x4_t, uint32_t, v4si, si, u32)
        -:19933:__LD2_LANE_FUNC (uint64x2x2_t, uint64x2_t, uint64_t, v2di, di, u64)
        -:19934:
        -:19935:#undef __LD2_LANE_FUNC
        -:19936:
        -:19937:/* vld3_lane */
        -:19938:
        -:19939:#define __LD3_LANE_FUNC(intype, vectype, largetype, ptrtype, mode,	   \
        -:19940:			 qmode, ptrmode, funcsuffix, signedtype)	   \
        -:19941:__extension__ extern __inline intype \
        -:19942:__attribute__ ((__always_inline__, __gnu_inline__,__artificial__)) \
        -:19943:vld3_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c)  \
        -:19944:{									   \
        -:19945:  __builtin_aarch64_simd_ci __o;					   \
        -:19946:  largetype __temp;							   \
        -:19947:  __temp.val[0] =							   \
        -:19948:    vcombine_##funcsuffix (__b.val[0], vcreate_##funcsuffix (0));	   \
        -:19949:  __temp.val[1] =							   \
        -:19950:    vcombine_##funcsuffix (__b.val[1], vcreate_##funcsuffix (0));	   \
        -:19951:  __temp.val[2] =							   \
        -:19952:    vcombine_##funcsuffix (__b.val[2], vcreate_##funcsuffix (0));	   \
        -:19953:  __o = __builtin_aarch64_set_qregci##qmode (__o,			   \
        -:19954:					    (signedtype) __temp.val[0],	   \
        -:19955:					    0);				   \
        -:19956:  __o = __builtin_aarch64_set_qregci##qmode (__o,			   \
        -:19957:					    (signedtype) __temp.val[1],	   \
        -:19958:					    1);				   \
        -:19959:  __o = __builtin_aarch64_set_qregci##qmode (__o,			   \
        -:19960:					    (signedtype) __temp.val[2],	   \
        -:19961:					    2);				   \
        -:19962:  __o =	__builtin_aarch64_ld3_lane##mode (				   \
        -:19963:	  (__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);	   \
        -:19964:  __b.val[0] = (vectype) __builtin_aarch64_get_dregcidi (__o, 0);	   \
        -:19965:  __b.val[1] = (vectype) __builtin_aarch64_get_dregcidi (__o, 1);	   \
        -:19966:  __b.val[2] = (vectype) __builtin_aarch64_get_dregcidi (__o, 2);	   \
        -:19967:  return __b;								   \
        -:19968:}
        -:19969:
        -:19970:__LD3_LANE_FUNC (float16x4x3_t, float16x4_t, float16x8x3_t, float16_t, v4hf,
        -:19971:		 v8hf, hf, f16, float16x8_t)
        -:19972:__LD3_LANE_FUNC (float32x2x3_t, float32x2_t, float32x4x3_t, float32_t, v2sf, v4sf,
        -:19973:		 sf, f32, float32x4_t)
        -:19974:__LD3_LANE_FUNC (float64x1x3_t, float64x1_t, float64x2x3_t, float64_t, df, v2df,
        -:19975:		 df, f64, float64x2_t)
        -:19976:__LD3_LANE_FUNC (poly8x8x3_t, poly8x8_t, poly8x16x3_t, poly8_t, v8qi, v16qi, qi, p8,
        -:19977:		 int8x16_t)
        -:19978:__LD3_LANE_FUNC (poly16x4x3_t, poly16x4_t, poly16x8x3_t, poly16_t, v4hi, v8hi, hi,
        -:19979:		 p16, int16x8_t)
        -:19980:__LD3_LANE_FUNC (poly64x1x3_t, poly64x1_t, poly64x2x3_t, poly64_t, di,
        -:19981:		 v2di_ssps, di, p64, poly64x2_t)
        -:19982:__LD3_LANE_FUNC (int8x8x3_t, int8x8_t, int8x16x3_t, int8_t, v8qi, v16qi, qi, s8,
        -:19983:		 int8x16_t)
        -:19984:__LD3_LANE_FUNC (int16x4x3_t, int16x4_t, int16x8x3_t, int16_t, v4hi, v8hi, hi, s16,
        -:19985:		 int16x8_t)
        -:19986:__LD3_LANE_FUNC (int32x2x3_t, int32x2_t, int32x4x3_t, int32_t, v2si, v4si, si, s32,
        -:19987:		 int32x4_t)
        -:19988:__LD3_LANE_FUNC (int64x1x3_t, int64x1_t, int64x2x3_t, int64_t, di, v2di, di, s64,
        -:19989:		 int64x2_t)
        -:19990:__LD3_LANE_FUNC (uint8x8x3_t, uint8x8_t, uint8x16x3_t, uint8_t, v8qi, v16qi, qi, u8,
        -:19991:		 int8x16_t)
        -:19992:__LD3_LANE_FUNC (uint16x4x3_t, uint16x4_t, uint16x8x3_t, uint16_t, v4hi, v8hi, hi,
        -:19993:		 u16, int16x8_t)
        -:19994:__LD3_LANE_FUNC (uint32x2x3_t, uint32x2_t, uint32x4x3_t, uint32_t, v2si, v4si, si,
        -:19995:		 u32, int32x4_t)
        -:19996:__LD3_LANE_FUNC (uint64x1x3_t, uint64x1_t, uint64x2x3_t, uint64_t, di, v2di, di,
        -:19997:		 u64, int64x2_t)
        -:19998:
        -:19999:#undef __LD3_LANE_FUNC
        -:20000:
        -:20001:/* vld3q_lane */
        -:20002:
        -:20003:#define __LD3_LANE_FUNC(intype, vtype, ptrtype, mode, ptrmode, funcsuffix) \
        -:20004:__extension__ extern __inline intype \
        -:20005:__attribute__ ((__always_inline__, __gnu_inline__,__artificial__)) \
        -:20006:vld3q_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c) \
        -:20007:{									   \
        -:20008:  __builtin_aarch64_simd_ci __o;					   \
        -:20009:  intype ret;								   \
        -:20010:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) __b.val[0], 0); \
        -:20011:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) __b.val[1], 1); \
        -:20012:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) __b.val[2], 2); \
        -:20013:  __o = __builtin_aarch64_ld3_lane##mode (				   \
        -:20014:	(__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);		   \
        -:20015:  ret.val[0] = (vtype) __builtin_aarch64_get_qregciv4si (__o, 0);	   \
        -:20016:  ret.val[1] = (vtype) __builtin_aarch64_get_qregciv4si (__o, 1);	   \
        -:20017:  ret.val[2] = (vtype) __builtin_aarch64_get_qregciv4si (__o, 2);	   \
        -:20018:  return ret;								   \
        -:20019:}
        -:20020:
        -:20021:__LD3_LANE_FUNC (float16x8x3_t, float16x8_t, float16_t, v8hf, hf, f16)
        -:20022:__LD3_LANE_FUNC (float32x4x3_t, float32x4_t, float32_t, v4sf, sf, f32)
        -:20023:__LD3_LANE_FUNC (float64x2x3_t, float64x2_t, float64_t, v2df, df, f64)
        -:20024:__LD3_LANE_FUNC (poly8x16x3_t, poly8x16_t, poly8_t, v16qi, qi, p8)
        -:20025:__LD3_LANE_FUNC (poly16x8x3_t, poly16x8_t, poly16_t, v8hi, hi, p16)
        -:20026:__LD3_LANE_FUNC (poly64x2x3_t, poly64x2_t, poly64_t, v2di, di, p64)
        -:20027:__LD3_LANE_FUNC (int8x16x3_t, int8x16_t, int8_t, v16qi, qi, s8)
        -:20028:__LD3_LANE_FUNC (int16x8x3_t, int16x8_t, int16_t, v8hi, hi, s16)
        -:20029:__LD3_LANE_FUNC (int32x4x3_t, int32x4_t, int32_t, v4si, si, s32)
        -:20030:__LD3_LANE_FUNC (int64x2x3_t, int64x2_t, int64_t, v2di, di, s64)
        -:20031:__LD3_LANE_FUNC (uint8x16x3_t, uint8x16_t, uint8_t, v16qi, qi, u8)
        -:20032:__LD3_LANE_FUNC (uint16x8x3_t, uint16x8_t, uint16_t, v8hi, hi, u16)
        -:20033:__LD3_LANE_FUNC (uint32x4x3_t, uint32x4_t, uint32_t, v4si, si, u32)
        -:20034:__LD3_LANE_FUNC (uint64x2x3_t, uint64x2_t, uint64_t, v2di, di, u64)
        -:20035:
        -:20036:#undef __LD3_LANE_FUNC
        -:20037:
        -:20038:/* vld4_lane */
        -:20039:
        -:20040:#define __LD4_LANE_FUNC(intype, vectype, largetype, ptrtype, mode,	   \
        -:20041:			 qmode, ptrmode, funcsuffix, signedtype)	   \
        -:20042:__extension__ extern __inline intype \
        -:20043:__attribute__ ((__always_inline__, __gnu_inline__,__artificial__)) \
        -:20044:vld4_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c)  \
        -:20045:{									   \
        -:20046:  __builtin_aarch64_simd_xi __o;					   \
        -:20047:  largetype __temp;							   \
        -:20048:  __temp.val[0] =							   \
        -:20049:    vcombine_##funcsuffix (__b.val[0], vcreate_##funcsuffix (0));	   \
        -:20050:  __temp.val[1] =							   \
        -:20051:    vcombine_##funcsuffix (__b.val[1], vcreate_##funcsuffix (0));	   \
        -:20052:  __temp.val[2] =							   \
        -:20053:    vcombine_##funcsuffix (__b.val[2], vcreate_##funcsuffix (0));	   \
        -:20054:  __temp.val[3] =							   \
        -:20055:    vcombine_##funcsuffix (__b.val[3], vcreate_##funcsuffix (0));	   \
        -:20056:  __o = __builtin_aarch64_set_qregxi##qmode (__o,			   \
        -:20057:					    (signedtype) __temp.val[0],	   \
        -:20058:					    0);				   \
        -:20059:  __o = __builtin_aarch64_set_qregxi##qmode (__o,			   \
        -:20060:					    (signedtype) __temp.val[1],	   \
        -:20061:					    1);				   \
        -:20062:  __o = __builtin_aarch64_set_qregxi##qmode (__o,			   \
        -:20063:					    (signedtype) __temp.val[2],	   \
        -:20064:					    2);				   \
        -:20065:  __o = __builtin_aarch64_set_qregxi##qmode (__o,			   \
        -:20066:					    (signedtype) __temp.val[3],	   \
        -:20067:					    3);				   \
        -:20068:  __o =	__builtin_aarch64_ld4_lane##mode (				   \
        -:20069:	  (__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);	   \
        -:20070:  __b.val[0] = (vectype) __builtin_aarch64_get_dregxidi (__o, 0);	   \
        -:20071:  __b.val[1] = (vectype) __builtin_aarch64_get_dregxidi (__o, 1);	   \
        -:20072:  __b.val[2] = (vectype) __builtin_aarch64_get_dregxidi (__o, 2);	   \
        -:20073:  __b.val[3] = (vectype) __builtin_aarch64_get_dregxidi (__o, 3);	   \
        -:20074:  return __b;								   \
        -:20075:}
        -:20076:
        -:20077:/* vld4q_lane */
        -:20078:
        -:20079:__LD4_LANE_FUNC (float16x4x4_t, float16x4_t, float16x8x4_t, float16_t, v4hf,
        -:20080:		 v8hf, hf, f16, float16x8_t)
        -:20081:__LD4_LANE_FUNC (float32x2x4_t, float32x2_t, float32x4x4_t, float32_t, v2sf, v4sf,
        -:20082:		 sf, f32, float32x4_t)
        -:20083:__LD4_LANE_FUNC (float64x1x4_t, float64x1_t, float64x2x4_t, float64_t, df, v2df,
        -:20084:		 df, f64, float64x2_t)
        -:20085:__LD4_LANE_FUNC (poly8x8x4_t, poly8x8_t, poly8x16x4_t, poly8_t, v8qi, v16qi, qi, p8,
        -:20086:		 int8x16_t)
        -:20087:__LD4_LANE_FUNC (poly16x4x4_t, poly16x4_t, poly16x8x4_t, poly16_t, v4hi, v8hi, hi,
        -:20088:		 p16, int16x8_t)
        -:20089:__LD4_LANE_FUNC (poly64x1x4_t, poly64x1_t, poly64x2x4_t, poly64_t, di,
        -:20090:		 v2di_ssps, di, p64, poly64x2_t)
        -:20091:__LD4_LANE_FUNC (int8x8x4_t, int8x8_t, int8x16x4_t, int8_t, v8qi, v16qi, qi, s8,
        -:20092:		 int8x16_t)
        -:20093:__LD4_LANE_FUNC (int16x4x4_t, int16x4_t, int16x8x4_t, int16_t, v4hi, v8hi, hi, s16,
        -:20094:		 int16x8_t)
        -:20095:__LD4_LANE_FUNC (int32x2x4_t, int32x2_t, int32x4x4_t, int32_t, v2si, v4si, si, s32,
        -:20096:		 int32x4_t)
        -:20097:__LD4_LANE_FUNC (int64x1x4_t, int64x1_t, int64x2x4_t, int64_t, di, v2di, di, s64,
        -:20098:		 int64x2_t)
        -:20099:__LD4_LANE_FUNC (uint8x8x4_t, uint8x8_t, uint8x16x4_t, uint8_t, v8qi, v16qi, qi, u8,
        -:20100:		 int8x16_t)
        -:20101:__LD4_LANE_FUNC (uint16x4x4_t, uint16x4_t, uint16x8x4_t, uint16_t, v4hi, v8hi, hi,
        -:20102:		 u16, int16x8_t)
        -:20103:__LD4_LANE_FUNC (uint32x2x4_t, uint32x2_t, uint32x4x4_t, uint32_t, v2si, v4si, si,
        -:20104:		 u32, int32x4_t)
        -:20105:__LD4_LANE_FUNC (uint64x1x4_t, uint64x1_t, uint64x2x4_t, uint64_t, di, v2di, di,
        -:20106:		 u64, int64x2_t)
        -:20107:
        -:20108:#undef __LD4_LANE_FUNC
        -:20109:
        -:20110:/* vld4q_lane */
        -:20111:
        -:20112:#define __LD4_LANE_FUNC(intype, vtype, ptrtype, mode, ptrmode, funcsuffix) \
        -:20113:__extension__ extern __inline intype \
        -:20114:__attribute__ ((__always_inline__, __gnu_inline__,__artificial__)) \
        -:20115:vld4q_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c) \
        -:20116:{									   \
        -:20117:  __builtin_aarch64_simd_xi __o;					   \
        -:20118:  intype ret;								   \
        -:20119:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[0], 0); \
        -:20120:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[1], 1); \
        -:20121:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[2], 2); \
        -:20122:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[3], 3); \
        -:20123:  __o = __builtin_aarch64_ld4_lane##mode (				   \
        -:20124:	(__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);		   \
        -:20125:  ret.val[0] = (vtype) __builtin_aarch64_get_qregxiv4si (__o, 0);	   \
        -:20126:  ret.val[1] = (vtype) __builtin_aarch64_get_qregxiv4si (__o, 1);	   \
        -:20127:  ret.val[2] = (vtype) __builtin_aarch64_get_qregxiv4si (__o, 2);	   \
        -:20128:  ret.val[3] = (vtype) __builtin_aarch64_get_qregxiv4si (__o, 3);	   \
        -:20129:  return ret;								   \
        -:20130:}
        -:20131:
        -:20132:__LD4_LANE_FUNC (float16x8x4_t, float16x8_t, float16_t, v8hf, hf, f16)
        -:20133:__LD4_LANE_FUNC (float32x4x4_t, float32x4_t, float32_t, v4sf, sf, f32)
        -:20134:__LD4_LANE_FUNC (float64x2x4_t, float64x2_t, float64_t, v2df, df, f64)
        -:20135:__LD4_LANE_FUNC (poly8x16x4_t, poly8x16_t, poly8_t, v16qi, qi, p8)
        -:20136:__LD4_LANE_FUNC (poly16x8x4_t, poly16x8_t, poly16_t, v8hi, hi, p16)
        -:20137:__LD4_LANE_FUNC (poly64x2x4_t, poly64x2_t, poly64_t, v2di, di, p64)
        -:20138:__LD4_LANE_FUNC (int8x16x4_t, int8x16_t, int8_t, v16qi, qi, s8)
        -:20139:__LD4_LANE_FUNC (int16x8x4_t, int16x8_t, int16_t, v8hi, hi, s16)
        -:20140:__LD4_LANE_FUNC (int32x4x4_t, int32x4_t, int32_t, v4si, si, s32)
        -:20141:__LD4_LANE_FUNC (int64x2x4_t, int64x2_t, int64_t, v2di, di, s64)
        -:20142:__LD4_LANE_FUNC (uint8x16x4_t, uint8x16_t, uint8_t, v16qi, qi, u8)
        -:20143:__LD4_LANE_FUNC (uint16x8x4_t, uint16x8_t, uint16_t, v8hi, hi, u16)
        -:20144:__LD4_LANE_FUNC (uint32x4x4_t, uint32x4_t, uint32_t, v4si, si, u32)
        -:20145:__LD4_LANE_FUNC (uint64x2x4_t, uint64x2_t, uint64_t, v2di, di, u64)
        -:20146:
        -:20147:#undef __LD4_LANE_FUNC
        -:20148:
        -:20149:/* vmax */
        -:20150:
        -:20151:__extension__ extern __inline float32x2_t
        -:20152:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20153:vmax_f32 (float32x2_t __a, float32x2_t __b)
        -:20154:{
        -:20155:  return __builtin_aarch64_smax_nanv2sf (__a, __b);
        -:20156:}
        -:20157:
        -:20158:__extension__ extern __inline float64x1_t
        -:20159:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20160:vmax_f64 (float64x1_t __a, float64x1_t __b)
        -:20161:{
        -:20162:    return (float64x1_t)
        -:20163:      { __builtin_aarch64_smax_nandf (vget_lane_f64 (__a, 0),
        -:20164:				      vget_lane_f64 (__b, 0)) };
        -:20165:}
        -:20166:
        -:20167:__extension__ extern __inline int8x8_t
        -:20168:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20169:vmax_s8 (int8x8_t __a, int8x8_t __b)
        -:20170:{
        -:20171:  return __builtin_aarch64_smaxv8qi (__a, __b);
        -:20172:}
        -:20173:
        -:20174:__extension__ extern __inline int16x4_t
        -:20175:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20176:vmax_s16 (int16x4_t __a, int16x4_t __b)
        -:20177:{
        -:20178:  return __builtin_aarch64_smaxv4hi (__a, __b);
        -:20179:}
        -:20180:
        -:20181:__extension__ extern __inline int32x2_t
        -:20182:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20183:vmax_s32 (int32x2_t __a, int32x2_t __b)
        -:20184:{
        -:20185:  return __builtin_aarch64_smaxv2si (__a, __b);
        -:20186:}
        -:20187:
        -:20188:__extension__ extern __inline uint8x8_t
        -:20189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20190:vmax_u8 (uint8x8_t __a, uint8x8_t __b)
        -:20191:{
        -:20192:  return (uint8x8_t) __builtin_aarch64_umaxv8qi ((int8x8_t) __a,
        -:20193:						 (int8x8_t) __b);
        -:20194:}
        -:20195:
        -:20196:__extension__ extern __inline uint16x4_t
        -:20197:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20198:vmax_u16 (uint16x4_t __a, uint16x4_t __b)
        -:20199:{
        -:20200:  return (uint16x4_t) __builtin_aarch64_umaxv4hi ((int16x4_t) __a,
        -:20201:						  (int16x4_t) __b);
        -:20202:}
        -:20203:
        -:20204:__extension__ extern __inline uint32x2_t
        -:20205:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20206:vmax_u32 (uint32x2_t __a, uint32x2_t __b)
        -:20207:{
        -:20208:  return (uint32x2_t) __builtin_aarch64_umaxv2si ((int32x2_t) __a,
        -:20209:						  (int32x2_t) __b);
        -:20210:}
        -:20211:
        -:20212:__extension__ extern __inline float32x4_t
        -:20213:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20214:vmaxq_f32 (float32x4_t __a, float32x4_t __b)
        -:20215:{
        -:20216:  return __builtin_aarch64_smax_nanv4sf (__a, __b);
        -:20217:}
        -:20218:
        -:20219:__extension__ extern __inline float64x2_t
        -:20220:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20221:vmaxq_f64 (float64x2_t __a, float64x2_t __b)
        -:20222:{
        -:20223:  return __builtin_aarch64_smax_nanv2df (__a, __b);
        -:20224:}
        -:20225:
        -:20226:__extension__ extern __inline int8x16_t
        -:20227:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20228:vmaxq_s8 (int8x16_t __a, int8x16_t __b)
        -:20229:{
        -:20230:  return __builtin_aarch64_smaxv16qi (__a, __b);
        -:20231:}
        -:20232:
        -:20233:__extension__ extern __inline int16x8_t
        -:20234:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20235:vmaxq_s16 (int16x8_t __a, int16x8_t __b)
        -:20236:{
        -:20237:  return __builtin_aarch64_smaxv8hi (__a, __b);
        -:20238:}
        -:20239:
        -:20240:__extension__ extern __inline int32x4_t
        -:20241:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20242:vmaxq_s32 (int32x4_t __a, int32x4_t __b)
        -:20243:{
        -:20244:  return __builtin_aarch64_smaxv4si (__a, __b);
        -:20245:}
        -:20246:
        -:20247:__extension__ extern __inline uint8x16_t
        -:20248:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20249:vmaxq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:20250:{
        -:20251:  return (uint8x16_t) __builtin_aarch64_umaxv16qi ((int8x16_t) __a,
        -:20252:						   (int8x16_t) __b);
        -:20253:}
        -:20254:
        -:20255:__extension__ extern __inline uint16x8_t
        -:20256:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20257:vmaxq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:20258:{
        -:20259:  return (uint16x8_t) __builtin_aarch64_umaxv8hi ((int16x8_t) __a,
        -:20260:						  (int16x8_t) __b);
        -:20261:}
        -:20262:
        -:20263:__extension__ extern __inline uint32x4_t
        -:20264:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20265:vmaxq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:20266:{
        -:20267:  return (uint32x4_t) __builtin_aarch64_umaxv4si ((int32x4_t) __a,
        -:20268:						  (int32x4_t) __b);
        -:20269:}
        -:20270:/* vmulx */
        -:20271:
        -:20272:__extension__ extern __inline float32x2_t
        -:20273:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20274:vmulx_f32 (float32x2_t __a, float32x2_t __b)
        -:20275:{
        -:20276:  return __builtin_aarch64_fmulxv2sf (__a, __b);
        -:20277:}
        -:20278:
        -:20279:__extension__ extern __inline float32x4_t
        -:20280:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20281:vmulxq_f32 (float32x4_t __a, float32x4_t __b)
        -:20282:{
        -:20283:  return __builtin_aarch64_fmulxv4sf (__a, __b);
        -:20284:}
        -:20285:
        -:20286:__extension__ extern __inline float64x1_t
        -:20287:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20288:vmulx_f64 (float64x1_t __a, float64x1_t __b)
        -:20289:{
        -:20290:  return (float64x1_t) {__builtin_aarch64_fmulxdf (__a[0], __b[0])};
        -:20291:}
        -:20292:
        -:20293:__extension__ extern __inline float64x2_t
        -:20294:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20295:vmulxq_f64 (float64x2_t __a, float64x2_t __b)
        -:20296:{
        -:20297:  return __builtin_aarch64_fmulxv2df (__a, __b);
        -:20298:}
        -:20299:
        -:20300:__extension__ extern __inline float32_t
        -:20301:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20302:vmulxs_f32 (float32_t __a, float32_t __b)
        -:20303:{
        -:20304:  return __builtin_aarch64_fmulxsf (__a, __b);
        -:20305:}
        -:20306:
        -:20307:__extension__ extern __inline float64_t
        -:20308:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20309:vmulxd_f64 (float64_t __a, float64_t __b)
        -:20310:{
        -:20311:  return __builtin_aarch64_fmulxdf (__a, __b);
        -:20312:}
        -:20313:
        -:20314:__extension__ extern __inline float32x2_t
        -:20315:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20316:vmulx_lane_f32 (float32x2_t __a, float32x2_t __v, const int __lane)
        -:20317:{
        -:20318:  return vmulx_f32 (__a, __aarch64_vdup_lane_f32 (__v, __lane));
        -:20319:}
        -:20320:
        -:20321:__extension__ extern __inline float64x1_t
        -:20322:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20323:vmulx_lane_f64 (float64x1_t __a, float64x1_t __v, const int __lane)
        -:20324:{
        -:20325:  return vmulx_f64 (__a, __aarch64_vdup_lane_f64 (__v, __lane));
        -:20326:}
        -:20327:
        -:20328:__extension__ extern __inline float32x4_t
        -:20329:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20330:vmulxq_lane_f32 (float32x4_t __a, float32x2_t __v, const int __lane)
        -:20331:{
        -:20332:  return vmulxq_f32 (__a, __aarch64_vdupq_lane_f32 (__v, __lane));
        -:20333:}
        -:20334:
        -:20335:__extension__ extern __inline float64x2_t
        -:20336:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20337:vmulxq_lane_f64 (float64x2_t __a, float64x1_t __v, const int __lane)
        -:20338:{
        -:20339:  return vmulxq_f64 (__a, __aarch64_vdupq_lane_f64 (__v, __lane));
        -:20340:}
        -:20341:
        -:20342:__extension__ extern __inline float32x2_t
        -:20343:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20344:vmulx_laneq_f32 (float32x2_t __a, float32x4_t __v, const int __lane)
        -:20345:{
        -:20346:  return vmulx_f32 (__a, __aarch64_vdup_laneq_f32 (__v, __lane));
        -:20347:}
        -:20348:
        -:20349:__extension__ extern __inline float64x1_t
        -:20350:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20351:vmulx_laneq_f64 (float64x1_t __a, float64x2_t __v, const int __lane)
        -:20352:{
        -:20353:  return vmulx_f64 (__a, __aarch64_vdup_laneq_f64 (__v, __lane));
        -:20354:}
        -:20355:
        -:20356:__extension__ extern __inline float32x4_t
        -:20357:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20358:vmulxq_laneq_f32 (float32x4_t __a, float32x4_t __v, const int __lane)
        -:20359:{
        -:20360:  return vmulxq_f32 (__a, __aarch64_vdupq_laneq_f32 (__v, __lane));
        -:20361:}
        -:20362:
        -:20363:__extension__ extern __inline float64x2_t
        -:20364:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20365:vmulxq_laneq_f64 (float64x2_t __a, float64x2_t __v, const int __lane)
        -:20366:{
        -:20367:  return vmulxq_f64 (__a, __aarch64_vdupq_laneq_f64 (__v, __lane));
        -:20368:}
        -:20369:
        -:20370:__extension__ extern __inline float32_t
        -:20371:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20372:vmulxs_lane_f32 (float32_t __a, float32x2_t __v, const int __lane)
        -:20373:{
        -:20374:  return vmulxs_f32 (__a, __aarch64_vget_lane_any (__v, __lane));
        -:20375:}
        -:20376:
        -:20377:__extension__ extern __inline float32_t
        -:20378:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20379:vmulxs_laneq_f32 (float32_t __a, float32x4_t __v, const int __lane)
        -:20380:{
        -:20381:  return vmulxs_f32 (__a, __aarch64_vget_lane_any (__v, __lane));
        -:20382:}
        -:20383:
        -:20384:__extension__ extern __inline float64_t
        -:20385:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20386:vmulxd_lane_f64 (float64_t __a, float64x1_t __v, const int __lane)
        -:20387:{
        -:20388:  return vmulxd_f64 (__a, __aarch64_vget_lane_any (__v, __lane));
        -:20389:}
        -:20390:
        -:20391:__extension__ extern __inline float64_t
        -:20392:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20393:vmulxd_laneq_f64 (float64_t __a, float64x2_t __v, const int __lane)
        -:20394:{
        -:20395:  return vmulxd_f64 (__a, __aarch64_vget_lane_any (__v, __lane));
        -:20396:}
        -:20397:
        -:20398:/* vpmax  */
        -:20399:
        -:20400:__extension__ extern __inline int8x8_t
        -:20401:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20402:vpmax_s8 (int8x8_t a, int8x8_t b)
        -:20403:{
        -:20404:  return __builtin_aarch64_smaxpv8qi (a, b);
        -:20405:}
        -:20406:
        -:20407:__extension__ extern __inline int16x4_t
        -:20408:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20409:vpmax_s16 (int16x4_t a, int16x4_t b)
        -:20410:{
        -:20411:  return __builtin_aarch64_smaxpv4hi (a, b);
        -:20412:}
        -:20413:
        -:20414:__extension__ extern __inline int32x2_t
        -:20415:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20416:vpmax_s32 (int32x2_t a, int32x2_t b)
        -:20417:{
        -:20418:  return __builtin_aarch64_smaxpv2si (a, b);
        -:20419:}
        -:20420:
        -:20421:__extension__ extern __inline uint8x8_t
        -:20422:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20423:vpmax_u8 (uint8x8_t a, uint8x8_t b)
        -:20424:{
        -:20425:  return (uint8x8_t) __builtin_aarch64_umaxpv8qi ((int8x8_t) a,
        -:20426:						  (int8x8_t) b);
        -:20427:}
        -:20428:
        -:20429:__extension__ extern __inline uint16x4_t
        -:20430:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20431:vpmax_u16 (uint16x4_t a, uint16x4_t b)
        -:20432:{
        -:20433:  return (uint16x4_t) __builtin_aarch64_umaxpv4hi ((int16x4_t) a,
        -:20434:						   (int16x4_t) b);
        -:20435:}
        -:20436:
        -:20437:__extension__ extern __inline uint32x2_t
        -:20438:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20439:vpmax_u32 (uint32x2_t a, uint32x2_t b)
        -:20440:{
        -:20441:  return (uint32x2_t) __builtin_aarch64_umaxpv2si ((int32x2_t) a,
        -:20442:						   (int32x2_t) b);
        -:20443:}
        -:20444:
        -:20445:__extension__ extern __inline int8x16_t
        -:20446:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20447:vpmaxq_s8 (int8x16_t a, int8x16_t b)
        -:20448:{
        -:20449:  return __builtin_aarch64_smaxpv16qi (a, b);
        -:20450:}
        -:20451:
        -:20452:__extension__ extern __inline int16x8_t
        -:20453:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20454:vpmaxq_s16 (int16x8_t a, int16x8_t b)
        -:20455:{
        -:20456:  return __builtin_aarch64_smaxpv8hi (a, b);
        -:20457:}
        -:20458:
        -:20459:__extension__ extern __inline int32x4_t
        -:20460:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20461:vpmaxq_s32 (int32x4_t a, int32x4_t b)
        -:20462:{
        -:20463:  return __builtin_aarch64_smaxpv4si (a, b);
        -:20464:}
        -:20465:
        -:20466:__extension__ extern __inline uint8x16_t
        -:20467:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20468:vpmaxq_u8 (uint8x16_t a, uint8x16_t b)
        -:20469:{
        -:20470:  return (uint8x16_t) __builtin_aarch64_umaxpv16qi ((int8x16_t) a,
        -:20471:						    (int8x16_t) b);
        -:20472:}
        -:20473:
        -:20474:__extension__ extern __inline uint16x8_t
        -:20475:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20476:vpmaxq_u16 (uint16x8_t a, uint16x8_t b)
        -:20477:{
        -:20478:  return (uint16x8_t) __builtin_aarch64_umaxpv8hi ((int16x8_t) a,
        -:20479:						   (int16x8_t) b);
        -:20480:}
        -:20481:
        -:20482:__extension__ extern __inline uint32x4_t
        -:20483:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20484:vpmaxq_u32 (uint32x4_t a, uint32x4_t b)
        -:20485:{
        -:20486:  return (uint32x4_t) __builtin_aarch64_umaxpv4si ((int32x4_t) a,
        -:20487:						   (int32x4_t) b);
        -:20488:}
        -:20489:
        -:20490:__extension__ extern __inline float32x2_t
        -:20491:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20492:vpmax_f32 (float32x2_t a, float32x2_t b)
        -:20493:{
        -:20494:  return __builtin_aarch64_smax_nanpv2sf (a, b);
        -:20495:}
        -:20496:
        -:20497:__extension__ extern __inline float32x4_t
        -:20498:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20499:vpmaxq_f32 (float32x4_t a, float32x4_t b)
        -:20500:{
        -:20501:  return __builtin_aarch64_smax_nanpv4sf (a, b);
        -:20502:}
        -:20503:
        -:20504:__extension__ extern __inline float64x2_t
        -:20505:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20506:vpmaxq_f64 (float64x2_t a, float64x2_t b)
        -:20507:{
        -:20508:  return __builtin_aarch64_smax_nanpv2df (a, b);
        -:20509:}
        -:20510:
        -:20511:__extension__ extern __inline float64_t
        -:20512:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20513:vpmaxqd_f64 (float64x2_t a)
        -:20514:{
        -:20515:  return __builtin_aarch64_reduc_smax_nan_scal_v2df (a);
        -:20516:}
        -:20517:
        -:20518:__extension__ extern __inline float32_t
        -:20519:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20520:vpmaxs_f32 (float32x2_t a)
        -:20521:{
        -:20522:  return __builtin_aarch64_reduc_smax_nan_scal_v2sf (a);
        -:20523:}
        -:20524:
        -:20525:/* vpmaxnm  */
        -:20526:
        -:20527:__extension__ extern __inline float32x2_t
        -:20528:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20529:vpmaxnm_f32 (float32x2_t a, float32x2_t b)
        -:20530:{
        -:20531:  return __builtin_aarch64_smaxpv2sf (a, b);
        -:20532:}
        -:20533:
        -:20534:__extension__ extern __inline float32x4_t
        -:20535:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20536:vpmaxnmq_f32 (float32x4_t a, float32x4_t b)
        -:20537:{
        -:20538:  return __builtin_aarch64_smaxpv4sf (a, b);
        -:20539:}
        -:20540:
        -:20541:__extension__ extern __inline float64x2_t
        -:20542:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20543:vpmaxnmq_f64 (float64x2_t a, float64x2_t b)
        -:20544:{
        -:20545:  return __builtin_aarch64_smaxpv2df (a, b);
        -:20546:}
        -:20547:
        -:20548:__extension__ extern __inline float64_t
        -:20549:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20550:vpmaxnmqd_f64 (float64x2_t a)
        -:20551:{
        -:20552:  return __builtin_aarch64_reduc_smax_scal_v2df (a);
        -:20553:}
        -:20554:
        -:20555:__extension__ extern __inline float32_t
        -:20556:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20557:vpmaxnms_f32 (float32x2_t a)
        -:20558:{
        -:20559:  return __builtin_aarch64_reduc_smax_scal_v2sf (a);
        -:20560:}
        -:20561:
        -:20562:/* vpmin  */
        -:20563:
        -:20564:__extension__ extern __inline int8x8_t
        -:20565:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20566:vpmin_s8 (int8x8_t a, int8x8_t b)
        -:20567:{
        -:20568:  return __builtin_aarch64_sminpv8qi (a, b);
        -:20569:}
        -:20570:
        -:20571:__extension__ extern __inline int16x4_t
        -:20572:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20573:vpmin_s16 (int16x4_t a, int16x4_t b)
        -:20574:{
        -:20575:  return __builtin_aarch64_sminpv4hi (a, b);
        -:20576:}
        -:20577:
        -:20578:__extension__ extern __inline int32x2_t
        -:20579:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20580:vpmin_s32 (int32x2_t a, int32x2_t b)
        -:20581:{
        -:20582:  return __builtin_aarch64_sminpv2si (a, b);
        -:20583:}
        -:20584:
        -:20585:__extension__ extern __inline uint8x8_t
        -:20586:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20587:vpmin_u8 (uint8x8_t a, uint8x8_t b)
        -:20588:{
        -:20589:  return (uint8x8_t) __builtin_aarch64_uminpv8qi ((int8x8_t) a,
        -:20590:						  (int8x8_t) b);
        -:20591:}
        -:20592:
        -:20593:__extension__ extern __inline uint16x4_t
        -:20594:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20595:vpmin_u16 (uint16x4_t a, uint16x4_t b)
        -:20596:{
        -:20597:  return (uint16x4_t) __builtin_aarch64_uminpv4hi ((int16x4_t) a,
        -:20598:						   (int16x4_t) b);
        -:20599:}
        -:20600:
        -:20601:__extension__ extern __inline uint32x2_t
        -:20602:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20603:vpmin_u32 (uint32x2_t a, uint32x2_t b)
        -:20604:{
        -:20605:  return (uint32x2_t) __builtin_aarch64_uminpv2si ((int32x2_t) a,
        -:20606:						   (int32x2_t) b);
        -:20607:}
        -:20608:
        -:20609:__extension__ extern __inline int8x16_t
        -:20610:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20611:vpminq_s8 (int8x16_t a, int8x16_t b)
        -:20612:{
        -:20613:  return __builtin_aarch64_sminpv16qi (a, b);
        -:20614:}
        -:20615:
        -:20616:__extension__ extern __inline int16x8_t
        -:20617:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20618:vpminq_s16 (int16x8_t a, int16x8_t b)
        -:20619:{
        -:20620:  return __builtin_aarch64_sminpv8hi (a, b);
        -:20621:}
        -:20622:
        -:20623:__extension__ extern __inline int32x4_t
        -:20624:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20625:vpminq_s32 (int32x4_t a, int32x4_t b)
        -:20626:{
        -:20627:  return __builtin_aarch64_sminpv4si (a, b);
        -:20628:}
        -:20629:
        -:20630:__extension__ extern __inline uint8x16_t
        -:20631:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20632:vpminq_u8 (uint8x16_t a, uint8x16_t b)
        -:20633:{
        -:20634:  return (uint8x16_t) __builtin_aarch64_uminpv16qi ((int8x16_t) a,
        -:20635:						    (int8x16_t) b);
        -:20636:}
        -:20637:
        -:20638:__extension__ extern __inline uint16x8_t
        -:20639:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20640:vpminq_u16 (uint16x8_t a, uint16x8_t b)
        -:20641:{
        -:20642:  return (uint16x8_t) __builtin_aarch64_uminpv8hi ((int16x8_t) a,
        -:20643:						   (int16x8_t) b);
        -:20644:}
        -:20645:
        -:20646:__extension__ extern __inline uint32x4_t
        -:20647:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20648:vpminq_u32 (uint32x4_t a, uint32x4_t b)
        -:20649:{
        -:20650:  return (uint32x4_t) __builtin_aarch64_uminpv4si ((int32x4_t) a,
        -:20651:						   (int32x4_t) b);
        -:20652:}
        -:20653:
        -:20654:__extension__ extern __inline float32x2_t
        -:20655:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20656:vpmin_f32 (float32x2_t a, float32x2_t b)
        -:20657:{
        -:20658:  return __builtin_aarch64_smin_nanpv2sf (a, b);
        -:20659:}
        -:20660:
        -:20661:__extension__ extern __inline float32x4_t
        -:20662:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20663:vpminq_f32 (float32x4_t a, float32x4_t b)
        -:20664:{
        -:20665:  return __builtin_aarch64_smin_nanpv4sf (a, b);
        -:20666:}
        -:20667:
        -:20668:__extension__ extern __inline float64x2_t
        -:20669:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20670:vpminq_f64 (float64x2_t a, float64x2_t b)
        -:20671:{
        -:20672:  return __builtin_aarch64_smin_nanpv2df (a, b);
        -:20673:}
        -:20674:
        -:20675:__extension__ extern __inline float64_t
        -:20676:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20677:vpminqd_f64 (float64x2_t a)
        -:20678:{
        -:20679:  return __builtin_aarch64_reduc_smin_nan_scal_v2df (a);
        -:20680:}
        -:20681:
        -:20682:__extension__ extern __inline float32_t
        -:20683:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20684:vpmins_f32 (float32x2_t a)
        -:20685:{
        -:20686:  return __builtin_aarch64_reduc_smin_nan_scal_v2sf (a);
        -:20687:}
        -:20688:
        -:20689:/* vpminnm  */
        -:20690:
        -:20691:__extension__ extern __inline float32x2_t
        -:20692:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20693:vpminnm_f32 (float32x2_t a, float32x2_t b)
        -:20694:{
        -:20695:  return __builtin_aarch64_sminpv2sf (a, b);
        -:20696:}
        -:20697:
        -:20698:__extension__ extern __inline float32x4_t
        -:20699:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20700:vpminnmq_f32 (float32x4_t a, float32x4_t b)
        -:20701:{
        -:20702:  return __builtin_aarch64_sminpv4sf (a, b);
        -:20703:}
        -:20704:
        -:20705:__extension__ extern __inline float64x2_t
        -:20706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20707:vpminnmq_f64 (float64x2_t a, float64x2_t b)
        -:20708:{
        -:20709:  return __builtin_aarch64_sminpv2df (a, b);
        -:20710:}
        -:20711:
        -:20712:__extension__ extern __inline float64_t
        -:20713:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20714:vpminnmqd_f64 (float64x2_t a)
        -:20715:{
        -:20716:  return __builtin_aarch64_reduc_smin_scal_v2df (a);
        -:20717:}
        -:20718:
        -:20719:__extension__ extern __inline float32_t
        -:20720:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20721:vpminnms_f32 (float32x2_t a)
        -:20722:{
        -:20723:  return __builtin_aarch64_reduc_smin_scal_v2sf (a);
        -:20724:}
        -:20725:
        -:20726:/* vmaxnm  */
        -:20727:
        -:20728:__extension__ extern __inline float32x2_t
        -:20729:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20730:vmaxnm_f32 (float32x2_t __a, float32x2_t __b)
        -:20731:{
        -:20732:  return __builtin_aarch64_fmaxv2sf (__a, __b);
        -:20733:}
        -:20734:
        -:20735:__extension__ extern __inline float64x1_t
        -:20736:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20737:vmaxnm_f64 (float64x1_t __a, float64x1_t __b)
        -:20738:{
        -:20739:  return (float64x1_t)
        -:20740:    { __builtin_aarch64_fmaxdf (vget_lane_f64 (__a, 0),
        -:20741:				vget_lane_f64 (__b, 0)) };
        -:20742:}
        -:20743:
        -:20744:__extension__ extern __inline float32x4_t
        -:20745:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20746:vmaxnmq_f32 (float32x4_t __a, float32x4_t __b)
        -:20747:{
        -:20748:  return __builtin_aarch64_fmaxv4sf (__a, __b);
        -:20749:}
        -:20750:
        -:20751:__extension__ extern __inline float64x2_t
        -:20752:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20753:vmaxnmq_f64 (float64x2_t __a, float64x2_t __b)
        -:20754:{
        -:20755:  return __builtin_aarch64_fmaxv2df (__a, __b);
        -:20756:}
        -:20757:
        -:20758:/* vmaxv  */
        -:20759:
        -:20760:__extension__ extern __inline float32_t
        -:20761:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20762:vmaxv_f32 (float32x2_t __a)
        -:20763:{
        -:20764:  return __builtin_aarch64_reduc_smax_nan_scal_v2sf (__a);
        -:20765:}
        -:20766:
        -:20767:__extension__ extern __inline int8_t
        -:20768:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20769:vmaxv_s8 (int8x8_t __a)
        -:20770:{
        -:20771:  return __builtin_aarch64_reduc_smax_scal_v8qi (__a);
        -:20772:}
        -:20773:
        -:20774:__extension__ extern __inline int16_t
        -:20775:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20776:vmaxv_s16 (int16x4_t __a)
        -:20777:{
        -:20778:  return __builtin_aarch64_reduc_smax_scal_v4hi (__a);
        -:20779:}
        -:20780:
        -:20781:__extension__ extern __inline int32_t
        -:20782:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20783:vmaxv_s32 (int32x2_t __a)
        -:20784:{
        -:20785:  return __builtin_aarch64_reduc_smax_scal_v2si (__a);
        -:20786:}
        -:20787:
        -:20788:__extension__ extern __inline uint8_t
        -:20789:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20790:vmaxv_u8 (uint8x8_t __a)
        -:20791:{
        -:20792:  return __builtin_aarch64_reduc_umax_scal_v8qi_uu (__a);
        -:20793:}
        -:20794:
        -:20795:__extension__ extern __inline uint16_t
        -:20796:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20797:vmaxv_u16 (uint16x4_t __a)
        -:20798:{
        -:20799:  return __builtin_aarch64_reduc_umax_scal_v4hi_uu (__a);
        -:20800:}
        -:20801:
        -:20802:__extension__ extern __inline uint32_t
        -:20803:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20804:vmaxv_u32 (uint32x2_t __a)
        -:20805:{
        -:20806:  return __builtin_aarch64_reduc_umax_scal_v2si_uu (__a);
        -:20807:}
        -:20808:
        -:20809:__extension__ extern __inline float32_t
        -:20810:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20811:vmaxvq_f32 (float32x4_t __a)
        -:20812:{
        -:20813:  return __builtin_aarch64_reduc_smax_nan_scal_v4sf (__a);
        -:20814:}
        -:20815:
        -:20816:__extension__ extern __inline float64_t
        -:20817:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20818:vmaxvq_f64 (float64x2_t __a)
        -:20819:{
        -:20820:  return __builtin_aarch64_reduc_smax_nan_scal_v2df (__a);
        -:20821:}
        -:20822:
        -:20823:__extension__ extern __inline int8_t
        -:20824:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20825:vmaxvq_s8 (int8x16_t __a)
        -:20826:{
        -:20827:  return __builtin_aarch64_reduc_smax_scal_v16qi (__a);
        -:20828:}
        -:20829:
        -:20830:__extension__ extern __inline int16_t
        -:20831:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20832:vmaxvq_s16 (int16x8_t __a)
        -:20833:{
        -:20834:  return __builtin_aarch64_reduc_smax_scal_v8hi (__a);
        -:20835:}
        -:20836:
        -:20837:__extension__ extern __inline int32_t
        -:20838:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20839:vmaxvq_s32 (int32x4_t __a)
        -:20840:{
        -:20841:  return __builtin_aarch64_reduc_smax_scal_v4si (__a);
        -:20842:}
        -:20843:
        -:20844:__extension__ extern __inline uint8_t
        -:20845:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20846:vmaxvq_u8 (uint8x16_t __a)
        -:20847:{
        -:20848:  return __builtin_aarch64_reduc_umax_scal_v16qi_uu (__a);
        -:20849:}
        -:20850:
        -:20851:__extension__ extern __inline uint16_t
        -:20852:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20853:vmaxvq_u16 (uint16x8_t __a)
        -:20854:{
        -:20855:  return __builtin_aarch64_reduc_umax_scal_v8hi_uu (__a);
        -:20856:}
        -:20857:
        -:20858:__extension__ extern __inline uint32_t
        -:20859:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20860:vmaxvq_u32 (uint32x4_t __a)
        -:20861:{
        -:20862:  return __builtin_aarch64_reduc_umax_scal_v4si_uu (__a);
        -:20863:}
        -:20864:
        -:20865:/* vmaxnmv  */
        -:20866:
        -:20867:__extension__ extern __inline float32_t
        -:20868:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20869:vmaxnmv_f32 (float32x2_t __a)
        -:20870:{
        -:20871:  return __builtin_aarch64_reduc_smax_scal_v2sf (__a);
        -:20872:}
        -:20873:
        -:20874:__extension__ extern __inline float32_t
        -:20875:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20876:vmaxnmvq_f32 (float32x4_t __a)
        -:20877:{
        -:20878:  return __builtin_aarch64_reduc_smax_scal_v4sf (__a);
        -:20879:}
        -:20880:
        -:20881:__extension__ extern __inline float64_t
        -:20882:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20883:vmaxnmvq_f64 (float64x2_t __a)
        -:20884:{
        -:20885:  return __builtin_aarch64_reduc_smax_scal_v2df (__a);
        -:20886:}
        -:20887:
        -:20888:/* vmin  */
        -:20889:
        -:20890:__extension__ extern __inline float32x2_t
        -:20891:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20892:vmin_f32 (float32x2_t __a, float32x2_t __b)
        -:20893:{
        -:20894:  return __builtin_aarch64_smin_nanv2sf (__a, __b);
        -:20895:}
        -:20896:
        -:20897:__extension__ extern __inline float64x1_t
        -:20898:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20899:vmin_f64 (float64x1_t __a, float64x1_t __b)
        -:20900:{
        -:20901:    return (float64x1_t)
        -:20902:	  { __builtin_aarch64_smin_nandf (vget_lane_f64 (__a, 0),
        -:20903:					  vget_lane_f64 (__b, 0)) };
        -:20904:}
        -:20905:
        -:20906:__extension__ extern __inline int8x8_t
        -:20907:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20908:vmin_s8 (int8x8_t __a, int8x8_t __b)
        -:20909:{
        -:20910:  return __builtin_aarch64_sminv8qi (__a, __b);
        -:20911:}
        -:20912:
        -:20913:__extension__ extern __inline int16x4_t
        -:20914:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20915:vmin_s16 (int16x4_t __a, int16x4_t __b)
        -:20916:{
        -:20917:  return __builtin_aarch64_sminv4hi (__a, __b);
        -:20918:}
        -:20919:
        -:20920:__extension__ extern __inline int32x2_t
        -:20921:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20922:vmin_s32 (int32x2_t __a, int32x2_t __b)
        -:20923:{
        -:20924:  return __builtin_aarch64_sminv2si (__a, __b);
        -:20925:}
        -:20926:
        -:20927:__extension__ extern __inline uint8x8_t
        -:20928:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20929:vmin_u8 (uint8x8_t __a, uint8x8_t __b)
        -:20930:{
        -:20931:  return (uint8x8_t) __builtin_aarch64_uminv8qi ((int8x8_t) __a,
        -:20932:						 (int8x8_t) __b);
        -:20933:}
        -:20934:
        -:20935:__extension__ extern __inline uint16x4_t
        -:20936:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20937:vmin_u16 (uint16x4_t __a, uint16x4_t __b)
        -:20938:{
        -:20939:  return (uint16x4_t) __builtin_aarch64_uminv4hi ((int16x4_t) __a,
        -:20940:						  (int16x4_t) __b);
        -:20941:}
        -:20942:
        -:20943:__extension__ extern __inline uint32x2_t
        -:20944:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20945:vmin_u32 (uint32x2_t __a, uint32x2_t __b)
        -:20946:{
        -:20947:  return (uint32x2_t) __builtin_aarch64_uminv2si ((int32x2_t) __a,
        -:20948:						  (int32x2_t) __b);
        -:20949:}
        -:20950:
        -:20951:__extension__ extern __inline float32x4_t
        -:20952:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20953:vminq_f32 (float32x4_t __a, float32x4_t __b)
        -:20954:{
        -:20955:  return __builtin_aarch64_smin_nanv4sf (__a, __b);
        -:20956:}
        -:20957:
        -:20958:__extension__ extern __inline float64x2_t
        -:20959:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20960:vminq_f64 (float64x2_t __a, float64x2_t __b)
        -:20961:{
        -:20962:  return __builtin_aarch64_smin_nanv2df (__a, __b);
        -:20963:}
        -:20964:
        -:20965:__extension__ extern __inline int8x16_t
        -:20966:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20967:vminq_s8 (int8x16_t __a, int8x16_t __b)
        -:20968:{
        -:20969:  return __builtin_aarch64_sminv16qi (__a, __b);
        -:20970:}
        -:20971:
        -:20972:__extension__ extern __inline int16x8_t
        -:20973:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20974:vminq_s16 (int16x8_t __a, int16x8_t __b)
        -:20975:{
        -:20976:  return __builtin_aarch64_sminv8hi (__a, __b);
        -:20977:}
        -:20978:
        -:20979:__extension__ extern __inline int32x4_t
        -:20980:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20981:vminq_s32 (int32x4_t __a, int32x4_t __b)
        -:20982:{
        -:20983:  return __builtin_aarch64_sminv4si (__a, __b);
        -:20984:}
        -:20985:
        -:20986:__extension__ extern __inline uint8x16_t
        -:20987:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20988:vminq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:20989:{
        -:20990:  return (uint8x16_t) __builtin_aarch64_uminv16qi ((int8x16_t) __a,
        -:20991:						   (int8x16_t) __b);
        -:20992:}
        -:20993:
        -:20994:__extension__ extern __inline uint16x8_t
        -:20995:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:20996:vminq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:20997:{
        -:20998:  return (uint16x8_t) __builtin_aarch64_uminv8hi ((int16x8_t) __a,
        -:20999:						  (int16x8_t) __b);
        -:21000:}
        -:21001:
        -:21002:__extension__ extern __inline uint32x4_t
        -:21003:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21004:vminq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:21005:{
        -:21006:  return (uint32x4_t) __builtin_aarch64_uminv4si ((int32x4_t) __a,
        -:21007:						  (int32x4_t) __b);
        -:21008:}
        -:21009:
        -:21010:/* vminnm  */
        -:21011:
        -:21012:__extension__ extern __inline float32x2_t
        -:21013:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21014:vminnm_f32 (float32x2_t __a, float32x2_t __b)
        -:21015:{
        -:21016:  return __builtin_aarch64_fminv2sf (__a, __b);
        -:21017:}
        -:21018:
        -:21019:__extension__ extern __inline float64x1_t
        -:21020:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21021:vminnm_f64 (float64x1_t __a, float64x1_t __b)
        -:21022:{
        -:21023:  return (float64x1_t)
        -:21024:    { __builtin_aarch64_fmindf (vget_lane_f64 (__a, 0),
        -:21025:				vget_lane_f64 (__b, 0)) };
        -:21026:}
        -:21027:
        -:21028:__extension__ extern __inline float32x4_t
        -:21029:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21030:vminnmq_f32 (float32x4_t __a, float32x4_t __b)
        -:21031:{
        -:21032:  return __builtin_aarch64_fminv4sf (__a, __b);
        -:21033:}
        -:21034:
        -:21035:__extension__ extern __inline float64x2_t
        -:21036:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21037:vminnmq_f64 (float64x2_t __a, float64x2_t __b)
        -:21038:{
        -:21039:  return __builtin_aarch64_fminv2df (__a, __b);
        -:21040:}
        -:21041:
        -:21042:/* vminv  */
        -:21043:
        -:21044:__extension__ extern __inline float32_t
        -:21045:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21046:vminv_f32 (float32x2_t __a)
        -:21047:{
        -:21048:  return __builtin_aarch64_reduc_smin_nan_scal_v2sf (__a);
        -:21049:}
        -:21050:
        -:21051:__extension__ extern __inline int8_t
        -:21052:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21053:vminv_s8 (int8x8_t __a)
        -:21054:{
        -:21055:  return __builtin_aarch64_reduc_smin_scal_v8qi (__a);
        -:21056:}
        -:21057:
        -:21058:__extension__ extern __inline int16_t
        -:21059:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21060:vminv_s16 (int16x4_t __a)
        -:21061:{
        -:21062:  return __builtin_aarch64_reduc_smin_scal_v4hi (__a);
        -:21063:}
        -:21064:
        -:21065:__extension__ extern __inline int32_t
        -:21066:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21067:vminv_s32 (int32x2_t __a)
        -:21068:{
        -:21069:  return __builtin_aarch64_reduc_smin_scal_v2si (__a);
        -:21070:}
        -:21071:
        -:21072:__extension__ extern __inline uint8_t
        -:21073:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21074:vminv_u8 (uint8x8_t __a)
        -:21075:{
        -:21076:  return __builtin_aarch64_reduc_umin_scal_v8qi_uu (__a);
        -:21077:}
        -:21078:
        -:21079:__extension__ extern __inline uint16_t
        -:21080:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21081:vminv_u16 (uint16x4_t __a)
        -:21082:{
        -:21083:  return __builtin_aarch64_reduc_umin_scal_v4hi_uu (__a);
        -:21084:}
        -:21085:
        -:21086:__extension__ extern __inline uint32_t
        -:21087:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21088:vminv_u32 (uint32x2_t __a)
        -:21089:{
        -:21090:  return __builtin_aarch64_reduc_umin_scal_v2si_uu (__a);
        -:21091:}
        -:21092:
        -:21093:__extension__ extern __inline float32_t
        -:21094:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21095:vminvq_f32 (float32x4_t __a)
        -:21096:{
        -:21097:  return __builtin_aarch64_reduc_smin_nan_scal_v4sf (__a);
        -:21098:}
        -:21099:
        -:21100:__extension__ extern __inline float64_t
        -:21101:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21102:vminvq_f64 (float64x2_t __a)
        -:21103:{
        -:21104:  return __builtin_aarch64_reduc_smin_nan_scal_v2df (__a);
        -:21105:}
        -:21106:
        -:21107:__extension__ extern __inline int8_t
        -:21108:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21109:vminvq_s8 (int8x16_t __a)
        -:21110:{
        -:21111:  return __builtin_aarch64_reduc_smin_scal_v16qi (__a);
        -:21112:}
        -:21113:
        -:21114:__extension__ extern __inline int16_t
        -:21115:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21116:vminvq_s16 (int16x8_t __a)
        -:21117:{
        -:21118:  return __builtin_aarch64_reduc_smin_scal_v8hi (__a);
        -:21119:}
        -:21120:
        -:21121:__extension__ extern __inline int32_t
        -:21122:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21123:vminvq_s32 (int32x4_t __a)
        -:21124:{
        -:21125:  return __builtin_aarch64_reduc_smin_scal_v4si (__a);
        -:21126:}
        -:21127:
        -:21128:__extension__ extern __inline uint8_t
        -:21129:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21130:vminvq_u8 (uint8x16_t __a)
        -:21131:{
        -:21132:  return __builtin_aarch64_reduc_umin_scal_v16qi_uu (__a);
        -:21133:}
        -:21134:
        -:21135:__extension__ extern __inline uint16_t
        -:21136:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21137:vminvq_u16 (uint16x8_t __a)
        -:21138:{
        -:21139:  return __builtin_aarch64_reduc_umin_scal_v8hi_uu (__a);
        -:21140:}
        -:21141:
        -:21142:__extension__ extern __inline uint32_t
        -:21143:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21144:vminvq_u32 (uint32x4_t __a)
        -:21145:{
        -:21146:  return __builtin_aarch64_reduc_umin_scal_v4si_uu (__a);
        -:21147:}
        -:21148:
        -:21149:/* vminnmv  */
        -:21150:
        -:21151:__extension__ extern __inline float32_t
        -:21152:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21153:vminnmv_f32 (float32x2_t __a)
        -:21154:{
        -:21155:  return __builtin_aarch64_reduc_smin_scal_v2sf (__a);
        -:21156:}
        -:21157:
        -:21158:__extension__ extern __inline float32_t
        -:21159:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21160:vminnmvq_f32 (float32x4_t __a)
        -:21161:{
        -:21162:  return __builtin_aarch64_reduc_smin_scal_v4sf (__a);
        -:21163:}
        -:21164:
        -:21165:__extension__ extern __inline float64_t
        -:21166:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21167:vminnmvq_f64 (float64x2_t __a)
        -:21168:{
        -:21169:  return __builtin_aarch64_reduc_smin_scal_v2df (__a);
        -:21170:}
        -:21171:
        -:21172:/* vmla */
        -:21173:
        -:21174:__extension__ extern __inline float32x2_t
        -:21175:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21176:vmla_f32 (float32x2_t a, float32x2_t b, float32x2_t c)
        -:21177:{
        -:21178:  return a + b * c;
        -:21179:}
        -:21180:
        -:21181:__extension__ extern __inline float64x1_t
        -:21182:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21183:vmla_f64 (float64x1_t __a, float64x1_t __b, float64x1_t __c)
        -:21184:{
        -:21185:  return __a + __b * __c;
        -:21186:}
        -:21187:
        -:21188:__extension__ extern __inline float32x4_t
        -:21189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21190:vmlaq_f32 (float32x4_t a, float32x4_t b, float32x4_t c)
        -:21191:{
        -:21192:  return a + b * c;
        -:21193:}
        -:21194:
        -:21195:__extension__ extern __inline float64x2_t
        -:21196:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21197:vmlaq_f64 (float64x2_t a, float64x2_t b, float64x2_t c)
        -:21198:{
        -:21199:  return a + b * c;
        -:21200:}
        -:21201:
        -:21202:/* vmla_lane  */
        -:21203:
        -:21204:__extension__ extern __inline float32x2_t
        -:21205:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21206:vmla_lane_f32 (float32x2_t __a, float32x2_t __b,
        -:21207:	       float32x2_t __c, const int __lane)
        -:21208:{
        -:21209:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21210:}
        -:21211:
        -:21212:__extension__ extern __inline int16x4_t
        -:21213:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21214:vmla_lane_s16 (int16x4_t __a, int16x4_t __b,
        -:21215:		int16x4_t __c, const int __lane)
        -:21216:{
        -:21217:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21218:}
        -:21219:
        -:21220:__extension__ extern __inline int32x2_t
        -:21221:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21222:vmla_lane_s32 (int32x2_t __a, int32x2_t __b,
        -:21223:		int32x2_t __c, const int __lane)
        -:21224:{
        -:21225:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21226:}
        -:21227:
        -:21228:__extension__ extern __inline uint16x4_t
        -:21229:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21230:vmla_lane_u16 (uint16x4_t __a, uint16x4_t __b,
        -:21231:		uint16x4_t __c, const int __lane)
        -:21232:{
        -:21233:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21234:}
        -:21235:
        -:21236:__extension__ extern __inline uint32x2_t
        -:21237:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21238:vmla_lane_u32 (uint32x2_t __a, uint32x2_t __b,
        -:21239:	       uint32x2_t __c, const int __lane)
        -:21240:{
        -:21241:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21242:}
        -:21243:
        -:21244:/* vmla_laneq  */
        -:21245:
        -:21246:__extension__ extern __inline float32x2_t
        -:21247:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21248:vmla_laneq_f32 (float32x2_t __a, float32x2_t __b,
        -:21249:	        float32x4_t __c, const int __lane)
        -:21250:{
        -:21251:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21252:}
        -:21253:
        -:21254:__extension__ extern __inline int16x4_t
        -:21255:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21256:vmla_laneq_s16 (int16x4_t __a, int16x4_t __b,
        -:21257:		int16x8_t __c, const int __lane)
        -:21258:{
        -:21259:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21260:}
        -:21261:
        -:21262:__extension__ extern __inline int32x2_t
        -:21263:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21264:vmla_laneq_s32 (int32x2_t __a, int32x2_t __b,
        -:21265:		int32x4_t __c, const int __lane)
        -:21266:{
        -:21267:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21268:}
        -:21269:
        -:21270:__extension__ extern __inline uint16x4_t
        -:21271:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21272:vmla_laneq_u16 (uint16x4_t __a, uint16x4_t __b,
        -:21273:		uint16x8_t __c, const int __lane)
        -:21274:{
        -:21275:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21276:}
        -:21277:
        -:21278:__extension__ extern __inline uint32x2_t
        -:21279:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21280:vmla_laneq_u32 (uint32x2_t __a, uint32x2_t __b,
        -:21281:		uint32x4_t __c, const int __lane)
        -:21282:{
        -:21283:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21284:}
        -:21285:
        -:21286:/* vmlaq_lane  */
        -:21287:
        -:21288:__extension__ extern __inline float32x4_t
        -:21289:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21290:vmlaq_lane_f32 (float32x4_t __a, float32x4_t __b,
        -:21291:		float32x2_t __c, const int __lane)
        -:21292:{
        -:21293:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21294:}
        -:21295:
        -:21296:__extension__ extern __inline int16x8_t
        -:21297:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21298:vmlaq_lane_s16 (int16x8_t __a, int16x8_t __b,
        -:21299:		int16x4_t __c, const int __lane)
        -:21300:{
        -:21301:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21302:}
        -:21303:
        -:21304:__extension__ extern __inline int32x4_t
        -:21305:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21306:vmlaq_lane_s32 (int32x4_t __a, int32x4_t __b,
        -:21307:		int32x2_t __c, const int __lane)
        -:21308:{
        -:21309:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21310:}
        -:21311:
        -:21312:__extension__ extern __inline uint16x8_t
        -:21313:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21314:vmlaq_lane_u16 (uint16x8_t __a, uint16x8_t __b,
        -:21315:		uint16x4_t __c, const int __lane)
        -:21316:{
        -:21317:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21318:}
        -:21319:
        -:21320:__extension__ extern __inline uint32x4_t
        -:21321:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21322:vmlaq_lane_u32 (uint32x4_t __a, uint32x4_t __b,
        -:21323:		uint32x2_t __c, const int __lane)
        -:21324:{
        -:21325:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21326:}
        -:21327:
        -:21328:  /* vmlaq_laneq  */
        -:21329:
        -:21330:__extension__ extern __inline float32x4_t
        -:21331:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21332:vmlaq_laneq_f32 (float32x4_t __a, float32x4_t __b,
        -:21333:		 float32x4_t __c, const int __lane)
        -:21334:{
        -:21335:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21336:}
        -:21337:
        -:21338:__extension__ extern __inline int16x8_t
        -:21339:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21340:vmlaq_laneq_s16 (int16x8_t __a, int16x8_t __b,
        -:21341:		int16x8_t __c, const int __lane)
        -:21342:{
        -:21343:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21344:}
        -:21345:
        -:21346:__extension__ extern __inline int32x4_t
        -:21347:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21348:vmlaq_laneq_s32 (int32x4_t __a, int32x4_t __b,
        -:21349:		int32x4_t __c, const int __lane)
        -:21350:{
        -:21351:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21352:}
        -:21353:
        -:21354:__extension__ extern __inline uint16x8_t
        -:21355:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21356:vmlaq_laneq_u16 (uint16x8_t __a, uint16x8_t __b,
        -:21357:		uint16x8_t __c, const int __lane)
        -:21358:{
        -:21359:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21360:}
        -:21361:
        -:21362:__extension__ extern __inline uint32x4_t
        -:21363:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21364:vmlaq_laneq_u32 (uint32x4_t __a, uint32x4_t __b,
        -:21365:		uint32x4_t __c, const int __lane)
        -:21366:{
        -:21367:  return (__a + (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21368:}
        -:21369:
        -:21370:/* vmls  */
        -:21371:
        -:21372:__extension__ extern __inline float32x2_t
        -:21373:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21374:vmls_f32 (float32x2_t a, float32x2_t b, float32x2_t c)
        -:21375:{
        -:21376:  return a - b * c;
        -:21377:}
        -:21378:
        -:21379:__extension__ extern __inline float64x1_t
        -:21380:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21381:vmls_f64 (float64x1_t __a, float64x1_t __b, float64x1_t __c)
        -:21382:{
        -:21383:  return __a - __b * __c;
        -:21384:}
        -:21385:
        -:21386:__extension__ extern __inline float32x4_t
        -:21387:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21388:vmlsq_f32 (float32x4_t a, float32x4_t b, float32x4_t c)
        -:21389:{
        -:21390:  return a - b * c;
        -:21391:}
        -:21392:
        -:21393:__extension__ extern __inline float64x2_t
        -:21394:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21395:vmlsq_f64 (float64x2_t a, float64x2_t b, float64x2_t c)
        -:21396:{
        -:21397:  return a - b * c;
        -:21398:}
        -:21399:
        -:21400:/* vmls_lane  */
        -:21401:
        -:21402:__extension__ extern __inline float32x2_t
        -:21403:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21404:vmls_lane_f32 (float32x2_t __a, float32x2_t __b,
        -:21405:	       float32x2_t __c, const int __lane)
        -:21406:{
        -:21407:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21408:}
        -:21409:
        -:21410:__extension__ extern __inline int16x4_t
        -:21411:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21412:vmls_lane_s16 (int16x4_t __a, int16x4_t __b,
        -:21413:		int16x4_t __c, const int __lane)
        -:21414:{
        -:21415:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21416:}
        -:21417:
        -:21418:__extension__ extern __inline int32x2_t
        -:21419:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21420:vmls_lane_s32 (int32x2_t __a, int32x2_t __b,
        -:21421:		int32x2_t __c, const int __lane)
        -:21422:{
        -:21423:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21424:}
        -:21425:
        -:21426:__extension__ extern __inline uint16x4_t
        -:21427:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21428:vmls_lane_u16 (uint16x4_t __a, uint16x4_t __b,
        -:21429:		uint16x4_t __c, const int __lane)
        -:21430:{
        -:21431:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21432:}
        -:21433:
        -:21434:__extension__ extern __inline uint32x2_t
        -:21435:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21436:vmls_lane_u32 (uint32x2_t __a, uint32x2_t __b,
        -:21437:	       uint32x2_t __c, const int __lane)
        -:21438:{
        -:21439:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21440:}
        -:21441:
        -:21442:/* vmls_laneq  */
        -:21443:
        -:21444:__extension__ extern __inline float32x2_t
        -:21445:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21446:vmls_laneq_f32 (float32x2_t __a, float32x2_t __b,
        -:21447:	       float32x4_t __c, const int __lane)
        -:21448:{
        -:21449:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21450:}
        -:21451:
        -:21452:__extension__ extern __inline int16x4_t
        -:21453:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21454:vmls_laneq_s16 (int16x4_t __a, int16x4_t __b,
        -:21455:		int16x8_t __c, const int __lane)
        -:21456:{
        -:21457:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21458:}
        -:21459:
        -:21460:__extension__ extern __inline int32x2_t
        -:21461:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21462:vmls_laneq_s32 (int32x2_t __a, int32x2_t __b,
        -:21463:		int32x4_t __c, const int __lane)
        -:21464:{
        -:21465:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21466:}
        -:21467:
        -:21468:__extension__ extern __inline uint16x4_t
        -:21469:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21470:vmls_laneq_u16 (uint16x4_t __a, uint16x4_t __b,
        -:21471:		uint16x8_t __c, const int __lane)
        -:21472:{
        -:21473:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21474:}
        -:21475:
        -:21476:__extension__ extern __inline uint32x2_t
        -:21477:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21478:vmls_laneq_u32 (uint32x2_t __a, uint32x2_t __b,
        -:21479:		uint32x4_t __c, const int __lane)
        -:21480:{
        -:21481:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21482:}
        -:21483:
        -:21484:/* vmlsq_lane  */
        -:21485:
        -:21486:__extension__ extern __inline float32x4_t
        -:21487:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21488:vmlsq_lane_f32 (float32x4_t __a, float32x4_t __b,
        -:21489:		float32x2_t __c, const int __lane)
        -:21490:{
        -:21491:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21492:}
        -:21493:
        -:21494:__extension__ extern __inline int16x8_t
        -:21495:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21496:vmlsq_lane_s16 (int16x8_t __a, int16x8_t __b,
        -:21497:		int16x4_t __c, const int __lane)
        -:21498:{
        -:21499:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21500:}
        -:21501:
        -:21502:__extension__ extern __inline int32x4_t
        -:21503:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21504:vmlsq_lane_s32 (int32x4_t __a, int32x4_t __b,
        -:21505:		int32x2_t __c, const int __lane)
        -:21506:{
        -:21507:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21508:}
        -:21509:
        -:21510:__extension__ extern __inline uint16x8_t
        -:21511:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21512:vmlsq_lane_u16 (uint16x8_t __a, uint16x8_t __b,
        -:21513:		uint16x4_t __c, const int __lane)
        -:21514:{
        -:21515:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21516:}
        -:21517:
        -:21518:__extension__ extern __inline uint32x4_t
        -:21519:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21520:vmlsq_lane_u32 (uint32x4_t __a, uint32x4_t __b,
        -:21521:		uint32x2_t __c, const int __lane)
        -:21522:{
        -:21523:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21524:}
        -:21525:
        -:21526:  /* vmlsq_laneq  */
        -:21527:
        -:21528:__extension__ extern __inline float32x4_t
        -:21529:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21530:vmlsq_laneq_f32 (float32x4_t __a, float32x4_t __b,
        -:21531:		float32x4_t __c, const int __lane)
        -:21532:{
        -:21533:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21534:}
        -:21535:
        -:21536:__extension__ extern __inline int16x8_t
        -:21537:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21538:vmlsq_laneq_s16 (int16x8_t __a, int16x8_t __b,
        -:21539:		int16x8_t __c, const int __lane)
        -:21540:{
        -:21541:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21542:}
        -:21543:
        -:21544:__extension__ extern __inline int32x4_t
        -:21545:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21546:vmlsq_laneq_s32 (int32x4_t __a, int32x4_t __b,
        -:21547:		int32x4_t __c, const int __lane)
        -:21548:{
        -:21549:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21550:}
        -:21551:__extension__ extern __inline uint16x8_t
        -:21552:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21553:vmlsq_laneq_u16 (uint16x8_t __a, uint16x8_t __b,
        -:21554:		uint16x8_t __c, const int __lane)
        -:21555:{
        -:21556:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21557:}
        -:21558:
        -:21559:__extension__ extern __inline uint32x4_t
        -:21560:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21561:vmlsq_laneq_u32 (uint32x4_t __a, uint32x4_t __b,
        -:21562:		uint32x4_t __c, const int __lane)
        -:21563:{
        -:21564:  return (__a - (__b * __aarch64_vget_lane_any (__c, __lane)));
        -:21565:}
        -:21566:
        -:21567:/* vmov_n_  */
        -:21568:
        -:21569:__extension__ extern __inline float16x4_t
        -:21570:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21571:vmov_n_f16 (float16_t __a)
        -:21572:{
        -:21573:  return vdup_n_f16 (__a);
        -:21574:}
        -:21575:
        -:21576:__extension__ extern __inline float32x2_t
        -:21577:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21578:vmov_n_f32 (float32_t __a)
        -:21579:{
        -:21580:  return vdup_n_f32 (__a);
        -:21581:}
        -:21582:
        -:21583:__extension__ extern __inline float64x1_t
        -:21584:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21585:vmov_n_f64 (float64_t __a)
        -:21586:{
        -:21587:  return (float64x1_t) {__a};
        -:21588:}
        -:21589:
        -:21590:__extension__ extern __inline poly8x8_t
        -:21591:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21592:vmov_n_p8 (poly8_t __a)
        -:21593:{
        -:21594:  return vdup_n_p8 (__a);
        -:21595:}
        -:21596:
        -:21597:__extension__ extern __inline poly16x4_t
        -:21598:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21599:vmov_n_p16 (poly16_t __a)
        -:21600:{
        -:21601:  return vdup_n_p16 (__a);
        -:21602:}
        -:21603:
        -:21604:__extension__ extern __inline poly64x1_t
        -:21605:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21606:vmov_n_p64 (poly64_t __a)
        -:21607:{
        -:21608:  return vdup_n_p64 (__a);
        -:21609:}
        -:21610:
        -:21611:__extension__ extern __inline int8x8_t
        -:21612:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21613:vmov_n_s8 (int8_t __a)
        -:21614:{
        -:21615:  return vdup_n_s8 (__a);
        -:21616:}
        -:21617:
        -:21618:__extension__ extern __inline int16x4_t
        -:21619:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21620:vmov_n_s16 (int16_t __a)
        -:21621:{
        -:21622:  return vdup_n_s16 (__a);
        -:21623:}
        -:21624:
        -:21625:__extension__ extern __inline int32x2_t
        -:21626:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21627:vmov_n_s32 (int32_t __a)
        -:21628:{
        -:21629:  return vdup_n_s32 (__a);
        -:21630:}
        -:21631:
        -:21632:__extension__ extern __inline int64x1_t
        -:21633:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21634:vmov_n_s64 (int64_t __a)
        -:21635:{
        -:21636:  return (int64x1_t) {__a};
        -:21637:}
        -:21638:
        -:21639:__extension__ extern __inline uint8x8_t
        -:21640:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21641:vmov_n_u8 (uint8_t __a)
        -:21642:{
        -:21643:  return vdup_n_u8 (__a);
        -:21644:}
        -:21645:
        -:21646:__extension__ extern __inline uint16x4_t
        -:21647:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21648:vmov_n_u16 (uint16_t __a)
        -:21649:{
        -:21650:    return vdup_n_u16 (__a);
        -:21651:}
        -:21652:
        -:21653:__extension__ extern __inline uint32x2_t
        -:21654:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21655:vmov_n_u32 (uint32_t __a)
        -:21656:{
        -:21657:   return vdup_n_u32 (__a);
        -:21658:}
        -:21659:
        -:21660:__extension__ extern __inline uint64x1_t
        -:21661:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21662:vmov_n_u64 (uint64_t __a)
        -:21663:{
        -:21664:  return (uint64x1_t) {__a};
        -:21665:}
        -:21666:
        -:21667:__extension__ extern __inline float16x8_t
        -:21668:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21669:vmovq_n_f16 (float16_t __a)
        -:21670:{
        -:21671:  return vdupq_n_f16 (__a);
        -:21672:}
        -:21673:
        -:21674:__extension__ extern __inline float32x4_t
        -:21675:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21676:vmovq_n_f32 (float32_t __a)
        -:21677:{
        -:21678:  return vdupq_n_f32 (__a);
        -:21679:}
        -:21680:
        -:21681:__extension__ extern __inline float64x2_t
        -:21682:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21683:vmovq_n_f64 (float64_t __a)
        -:21684:{
        -:21685:  return vdupq_n_f64 (__a);
        -:21686:}
        -:21687:
        -:21688:__extension__ extern __inline poly8x16_t
        -:21689:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21690:vmovq_n_p8 (poly8_t __a)
        -:21691:{
        -:21692:  return vdupq_n_p8 (__a);
        -:21693:}
        -:21694:
        -:21695:__extension__ extern __inline poly16x8_t
        -:21696:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21697:vmovq_n_p16 (poly16_t __a)
        -:21698:{
        -:21699:  return vdupq_n_p16 (__a);
        -:21700:}
        -:21701:
        -:21702:__extension__ extern __inline poly64x2_t
        -:21703:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21704:vmovq_n_p64 (poly64_t __a)
        -:21705:{
        -:21706:  return vdupq_n_p64 (__a);
        -:21707:}
        -:21708:
        -:21709:__extension__ extern __inline int8x16_t
        -:21710:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21711:vmovq_n_s8 (int8_t __a)
        -:21712:{
        -:21713:  return vdupq_n_s8 (__a);
        -:21714:}
        -:21715:
        -:21716:__extension__ extern __inline int16x8_t
        -:21717:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21718:vmovq_n_s16 (int16_t __a)
        -:21719:{
        -:21720:  return vdupq_n_s16 (__a);
        -:21721:}
        -:21722:
        -:21723:__extension__ extern __inline int32x4_t
        -:21724:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21725:vmovq_n_s32 (int32_t __a)
        -:21726:{
        -:21727:  return vdupq_n_s32 (__a);
        -:21728:}
        -:21729:
        -:21730:__extension__ extern __inline int64x2_t
        -:21731:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21732:vmovq_n_s64 (int64_t __a)
        -:21733:{
        -:21734:  return vdupq_n_s64 (__a);
        -:21735:}
        -:21736:
        -:21737:__extension__ extern __inline uint8x16_t
        -:21738:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21739:vmovq_n_u8 (uint8_t __a)
        -:21740:{
        -:21741:  return vdupq_n_u8 (__a);
        -:21742:}
        -:21743:
        -:21744:__extension__ extern __inline uint16x8_t
        -:21745:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21746:vmovq_n_u16 (uint16_t __a)
        -:21747:{
        -:21748:  return vdupq_n_u16 (__a);
        -:21749:}
        -:21750:
        -:21751:__extension__ extern __inline uint32x4_t
        -:21752:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21753:vmovq_n_u32 (uint32_t __a)
        -:21754:{
        -:21755:  return vdupq_n_u32 (__a);
        -:21756:}
        -:21757:
        -:21758:__extension__ extern __inline uint64x2_t
        -:21759:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21760:vmovq_n_u64 (uint64_t __a)
        -:21761:{
        -:21762:  return vdupq_n_u64 (__a);
        -:21763:}
        -:21764:
        -:21765:/* vmul_lane  */
        -:21766:
        -:21767:__extension__ extern __inline float32x2_t
        -:21768:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21769:vmul_lane_f32 (float32x2_t __a, float32x2_t __b, const int __lane)
        -:21770:{
        -:21771:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21772:}
        -:21773:
        -:21774:__extension__ extern __inline float64x1_t
        -:21775:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21776:vmul_lane_f64 (float64x1_t __a, float64x1_t __b, const int __lane)
        -:21777:{
        -:21778:  return __a * __b;
        -:21779:}
        -:21780:
        -:21781:__extension__ extern __inline int16x4_t
        -:21782:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21783:vmul_lane_s16 (int16x4_t __a, int16x4_t __b, const int __lane)
        -:21784:{
        -:21785:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21786:}
        -:21787:
        -:21788:__extension__ extern __inline int32x2_t
        -:21789:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21790:vmul_lane_s32 (int32x2_t __a, int32x2_t __b, const int __lane)
        -:21791:{
        -:21792:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21793:}
        -:21794:
        -:21795:__extension__ extern __inline uint16x4_t
        -:21796:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21797:vmul_lane_u16 (uint16x4_t __a, uint16x4_t __b, const int __lane)
        -:21798:{
        -:21799:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21800:}
        -:21801:
        -:21802:__extension__ extern __inline uint32x2_t
        -:21803:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21804:vmul_lane_u32 (uint32x2_t __a, uint32x2_t __b, const int __lane)
        -:21805:{
        -:21806:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21807:}
        -:21808:
        -:21809:/* vmuld_lane  */
        -:21810:
        -:21811:__extension__ extern __inline float64_t
        -:21812:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21813:vmuld_lane_f64 (float64_t __a, float64x1_t __b, const int __lane)
        -:21814:{
        -:21815:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21816:}
        -:21817:
        -:21818:__extension__ extern __inline float64_t
        -:21819:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21820:vmuld_laneq_f64 (float64_t __a, float64x2_t __b, const int __lane)
        -:21821:{
        -:21822:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21823:}
        -:21824:
        -:21825:/* vmuls_lane  */
        -:21826:
        -:21827:__extension__ extern __inline float32_t
        -:21828:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21829:vmuls_lane_f32 (float32_t __a, float32x2_t __b, const int __lane)
        -:21830:{
        -:21831:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21832:}
        -:21833:
        -:21834:__extension__ extern __inline float32_t
        -:21835:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21836:vmuls_laneq_f32 (float32_t __a, float32x4_t __b, const int __lane)
        -:21837:{
        -:21838:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21839:}
        -:21840:
        -:21841:/* vmul_laneq  */
        -:21842:
        -:21843:__extension__ extern __inline float32x2_t
        -:21844:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21845:vmul_laneq_f32 (float32x2_t __a, float32x4_t __b, const int __lane)
        -:21846:{
        -:21847:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21848:}
        -:21849:
        -:21850:__extension__ extern __inline float64x1_t
        -:21851:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21852:vmul_laneq_f64 (float64x1_t __a, float64x2_t __b, const int __lane)
        -:21853:{
        -:21854:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21855:}
        -:21856:
        -:21857:__extension__ extern __inline int16x4_t
        -:21858:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21859:vmul_laneq_s16 (int16x4_t __a, int16x8_t __b, const int __lane)
        -:21860:{
        -:21861:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21862:}
        -:21863:
        -:21864:__extension__ extern __inline int32x2_t
        -:21865:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21866:vmul_laneq_s32 (int32x2_t __a, int32x4_t __b, const int __lane)
        -:21867:{
        -:21868:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21869:}
        -:21870:
        -:21871:__extension__ extern __inline uint16x4_t
        -:21872:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21873:vmul_laneq_u16 (uint16x4_t __a, uint16x8_t __b, const int __lane)
        -:21874:{
        -:21875:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21876:}
        -:21877:
        -:21878:__extension__ extern __inline uint32x2_t
        -:21879:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21880:vmul_laneq_u32 (uint32x2_t __a, uint32x4_t __b, const int __lane)
        -:21881:{
        -:21882:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21883:}
        -:21884:
        -:21885:/* vmul_n  */
        -:21886:
        -:21887:__extension__ extern __inline float64x1_t
        -:21888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21889:vmul_n_f64  (float64x1_t __a, float64_t __b)
        -:21890:{
        -:21891:  return (float64x1_t) { vget_lane_f64 (__a, 0) * __b };
        -:21892:}
        -:21893:
        -:21894:/* vmulq_lane  */
        -:21895:
        -:21896:__extension__ extern __inline float32x4_t
        -:21897:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21898:vmulq_lane_f32 (float32x4_t __a, float32x2_t __b, const int __lane)
        -:21899:{
        -:21900:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21901:}
        -:21902:
        -:21903:__extension__ extern __inline float64x2_t
        -:21904:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21905:vmulq_lane_f64 (float64x2_t __a, float64x1_t __b, const int __lane)
        -:21906:{
        -:21907:  __AARCH64_LANE_CHECK (__a, __lane);
        -:21908:  return __a * __b[0];
        -:21909:}
        -:21910:
        -:21911:__extension__ extern __inline int16x8_t
        -:21912:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21913:vmulq_lane_s16 (int16x8_t __a, int16x4_t __b, const int __lane)
        -:21914:{
        -:21915:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21916:}
        -:21917:
        -:21918:__extension__ extern __inline int32x4_t
        -:21919:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21920:vmulq_lane_s32 (int32x4_t __a, int32x2_t __b, const int __lane)
        -:21921:{
        -:21922:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21923:}
        -:21924:
        -:21925:__extension__ extern __inline uint16x8_t
        -:21926:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21927:vmulq_lane_u16 (uint16x8_t __a, uint16x4_t __b, const int __lane)
        -:21928:{
        -:21929:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21930:}
        -:21931:
        -:21932:__extension__ extern __inline uint32x4_t
        -:21933:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21934:vmulq_lane_u32 (uint32x4_t __a, uint32x2_t __b, const int __lane)
        -:21935:{
        -:21936:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21937:}
        -:21938:
        -:21939:/* vmulq_laneq  */
        -:21940:
        -:21941:__extension__ extern __inline float32x4_t
        -:21942:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21943:vmulq_laneq_f32 (float32x4_t __a, float32x4_t __b, const int __lane)
        -:21944:{
        -:21945:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21946:}
        -:21947:
        -:21948:__extension__ extern __inline float64x2_t
        -:21949:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21950:vmulq_laneq_f64 (float64x2_t __a, float64x2_t __b, const int __lane)
        -:21951:{
        -:21952:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21953:}
        -:21954:
        -:21955:__extension__ extern __inline int16x8_t
        -:21956:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21957:vmulq_laneq_s16 (int16x8_t __a, int16x8_t __b, const int __lane)
        -:21958:{
        -:21959:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21960:}
        -:21961:
        -:21962:__extension__ extern __inline int32x4_t
        -:21963:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21964:vmulq_laneq_s32 (int32x4_t __a, int32x4_t __b, const int __lane)
        -:21965:{
        -:21966:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21967:}
        -:21968:
        -:21969:__extension__ extern __inline uint16x8_t
        -:21970:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21971:vmulq_laneq_u16 (uint16x8_t __a, uint16x8_t __b, const int __lane)
        -:21972:{
        -:21973:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21974:}
        -:21975:
        -:21976:__extension__ extern __inline uint32x4_t
        -:21977:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21978:vmulq_laneq_u32 (uint32x4_t __a, uint32x4_t __b, const int __lane)
        -:21979:{
        -:21980:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:21981:}
        -:21982:
        -:21983:/* vmul_n.  */
        -:21984:
        -:21985:__extension__ extern __inline float32x2_t
        -:21986:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21987:vmul_n_f32 (float32x2_t __a, float32_t __b)
        -:21988:{
        -:21989:  return __a * __b;
        -:21990:}
        -:21991:
        -:21992:__extension__ extern __inline float32x4_t
        -:21993:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:21994:vmulq_n_f32 (float32x4_t __a, float32_t __b)
        -:21995:{
        -:21996:  return __a * __b;
        -:21997:}
        -:21998:
        -:21999:__extension__ extern __inline float64x2_t
        -:22000:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22001:vmulq_n_f64 (float64x2_t __a, float64_t __b)
        -:22002:{
        -:22003:  return __a * __b;
        -:22004:}
        -:22005:
        -:22006:__extension__ extern __inline int16x4_t
        -:22007:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22008:vmul_n_s16 (int16x4_t __a, int16_t __b)
        -:22009:{
        -:22010:  return __a * __b;
        -:22011:}
        -:22012:
        -:22013:__extension__ extern __inline int16x8_t
        -:22014:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22015:vmulq_n_s16 (int16x8_t __a, int16_t __b)
        -:22016:{
        -:22017:  return __a * __b;
        -:22018:}
        -:22019:
        -:22020:__extension__ extern __inline int32x2_t
        -:22021:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22022:vmul_n_s32 (int32x2_t __a, int32_t __b)
        -:22023:{
        -:22024:  return __a * __b;
        -:22025:}
        -:22026:
        -:22027:__extension__ extern __inline int32x4_t
        -:22028:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22029:vmulq_n_s32 (int32x4_t __a, int32_t __b)
        -:22030:{
        -:22031:  return __a * __b;
        -:22032:}
        -:22033:
        -:22034:__extension__ extern __inline uint16x4_t
        -:22035:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22036:vmul_n_u16 (uint16x4_t __a, uint16_t __b)
        -:22037:{
        -:22038:  return __a * __b;
        -:22039:}
        -:22040:
        -:22041:__extension__ extern __inline uint16x8_t
        -:22042:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22043:vmulq_n_u16 (uint16x8_t __a, uint16_t __b)
        -:22044:{
        -:22045:  return __a * __b;
        -:22046:}
        -:22047:
        -:22048:__extension__ extern __inline uint32x2_t
        -:22049:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22050:vmul_n_u32 (uint32x2_t __a, uint32_t __b)
        -:22051:{
        -:22052:  return __a * __b;
        -:22053:}
        -:22054:
        -:22055:__extension__ extern __inline uint32x4_t
        -:22056:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22057:vmulq_n_u32 (uint32x4_t __a, uint32_t __b)
        -:22058:{
        -:22059:  return __a * __b;
        -:22060:}
        -:22061:
        -:22062:/* vmvn  */
        -:22063:
        -:22064:__extension__ extern __inline poly8x8_t
        -:22065:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22066:vmvn_p8 (poly8x8_t __a)
        -:22067:{
        -:22068:  return (poly8x8_t) ~((int8x8_t) __a);
        -:22069:}
        -:22070:
        -:22071:__extension__ extern __inline int8x8_t
        -:22072:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22073:vmvn_s8 (int8x8_t __a)
        -:22074:{
        -:22075:  return ~__a;
        -:22076:}
        -:22077:
        -:22078:__extension__ extern __inline int16x4_t
        -:22079:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22080:vmvn_s16 (int16x4_t __a)
        -:22081:{
        -:22082:  return ~__a;
        -:22083:}
        -:22084:
        -:22085:__extension__ extern __inline int32x2_t
        -:22086:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22087:vmvn_s32 (int32x2_t __a)
        -:22088:{
        -:22089:  return ~__a;
        -:22090:}
        -:22091:
        -:22092:__extension__ extern __inline uint8x8_t
        -:22093:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22094:vmvn_u8 (uint8x8_t __a)
        -:22095:{
        -:22096:  return ~__a;
        -:22097:}
        -:22098:
        -:22099:__extension__ extern __inline uint16x4_t
        -:22100:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22101:vmvn_u16 (uint16x4_t __a)
        -:22102:{
        -:22103:  return ~__a;
        -:22104:}
        -:22105:
        -:22106:__extension__ extern __inline uint32x2_t
        -:22107:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22108:vmvn_u32 (uint32x2_t __a)
        -:22109:{
        -:22110:  return ~__a;
        -:22111:}
        -:22112:
        -:22113:__extension__ extern __inline poly8x16_t
        -:22114:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22115:vmvnq_p8 (poly8x16_t __a)
        -:22116:{
        -:22117:  return (poly8x16_t) ~((int8x16_t) __a);
        -:22118:}
        -:22119:
        -:22120:__extension__ extern __inline int8x16_t
        -:22121:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22122:vmvnq_s8 (int8x16_t __a)
        -:22123:{
        -:22124:  return ~__a;
        -:22125:}
        -:22126:
        -:22127:__extension__ extern __inline int16x8_t
        -:22128:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22129:vmvnq_s16 (int16x8_t __a)
        -:22130:{
        -:22131:  return ~__a;
        -:22132:}
        -:22133:
        -:22134:__extension__ extern __inline int32x4_t
        -:22135:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22136:vmvnq_s32 (int32x4_t __a)
        -:22137:{
        -:22138:  return ~__a;
        -:22139:}
        -:22140:
        -:22141:__extension__ extern __inline uint8x16_t
        -:22142:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22143:vmvnq_u8 (uint8x16_t __a)
        -:22144:{
        -:22145:  return ~__a;
        -:22146:}
        -:22147:
        -:22148:__extension__ extern __inline uint16x8_t
        -:22149:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22150:vmvnq_u16 (uint16x8_t __a)
        -:22151:{
        -:22152:  return ~__a;
        -:22153:}
        -:22154:
        -:22155:__extension__ extern __inline uint32x4_t
        -:22156:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22157:vmvnq_u32 (uint32x4_t __a)
        -:22158:{
        -:22159:  return ~__a;
        -:22160:}
        -:22161:
        -:22162:/* vneg  */
        -:22163:
        -:22164:__extension__ extern __inline float32x2_t
        -:22165:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22166:vneg_f32 (float32x2_t __a)
        -:22167:{
        -:22168:  return -__a;
        -:22169:}
        -:22170:
        -:22171:__extension__ extern __inline float64x1_t
        -:22172:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22173:vneg_f64 (float64x1_t __a)
        -:22174:{
        -:22175:  return -__a;
        -:22176:}
        -:22177:
        -:22178:__extension__ extern __inline int8x8_t
        -:22179:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22180:vneg_s8 (int8x8_t __a)
        -:22181:{
        -:22182:  return -__a;
        -:22183:}
        -:22184:
        -:22185:__extension__ extern __inline int16x4_t
        -:22186:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22187:vneg_s16 (int16x4_t __a)
        -:22188:{
        -:22189:  return -__a;
        -:22190:}
        -:22191:
        -:22192:__extension__ extern __inline int32x2_t
        -:22193:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22194:vneg_s32 (int32x2_t __a)
        -:22195:{
        -:22196:  return -__a;
        -:22197:}
        -:22198:
        -:22199:__extension__ extern __inline int64x1_t
        -:22200:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22201:vneg_s64 (int64x1_t __a)
        -:22202:{
        -:22203:  return -__a;
        -:22204:}
        -:22205:
        -:22206:__extension__ extern __inline float32x4_t
        -:22207:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22208:vnegq_f32 (float32x4_t __a)
        -:22209:{
        -:22210:  return -__a;
        -:22211:}
        -:22212:
        -:22213:__extension__ extern __inline float64x2_t
        -:22214:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22215:vnegq_f64 (float64x2_t __a)
        -:22216:{
        -:22217:  return -__a;
        -:22218:}
        -:22219:
        -:22220:__extension__ extern __inline int8x16_t
        -:22221:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22222:vnegq_s8 (int8x16_t __a)
        -:22223:{
        -:22224:  return -__a;
        -:22225:}
        -:22226:
        -:22227:__extension__ extern __inline int16x8_t
        -:22228:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22229:vnegq_s16 (int16x8_t __a)
        -:22230:{
        -:22231:  return -__a;
        -:22232:}
        -:22233:
        -:22234:__extension__ extern __inline int32x4_t
        -:22235:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22236:vnegq_s32 (int32x4_t __a)
        -:22237:{
        -:22238:  return -__a;
        -:22239:}
        -:22240:
        -:22241:__extension__ extern __inline int64x2_t
        -:22242:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22243:vnegq_s64 (int64x2_t __a)
        -:22244:{
        -:22245:  return -__a;
        -:22246:}
        -:22247:
        -:22248:/* vpadd  */
        -:22249:
        -:22250:__extension__ extern __inline float32x2_t
        -:22251:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22252:vpadd_f32 (float32x2_t __a, float32x2_t __b)
        -:22253:{
        -:22254:  return __builtin_aarch64_faddpv2sf (__a, __b);
        -:22255:}
        -:22256:
        -:22257:__extension__ extern __inline float32x4_t
        -:22258:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22259:vpaddq_f32 (float32x4_t __a, float32x4_t __b)
        -:22260:{
        -:22261:  return __builtin_aarch64_faddpv4sf (__a, __b);
        -:22262:}
        -:22263:
        -:22264:__extension__ extern __inline float64x2_t
        -:22265:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22266:vpaddq_f64 (float64x2_t __a, float64x2_t __b)
        -:22267:{
        -:22268:  return __builtin_aarch64_faddpv2df (__a, __b);
        -:22269:}
        -:22270:
        -:22271:__extension__ extern __inline int8x8_t
        -:22272:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22273:vpadd_s8 (int8x8_t __a, int8x8_t __b)
        -:22274:{
        -:22275:  return __builtin_aarch64_addpv8qi (__a, __b);
        -:22276:}
        -:22277:
        -:22278:__extension__ extern __inline int16x4_t
        -:22279:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22280:vpadd_s16 (int16x4_t __a, int16x4_t __b)
        -:22281:{
        -:22282:  return __builtin_aarch64_addpv4hi (__a, __b);
        -:22283:}
        -:22284:
        -:22285:__extension__ extern __inline int32x2_t
        -:22286:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22287:vpadd_s32 (int32x2_t __a, int32x2_t __b)
        -:22288:{
        -:22289:  return __builtin_aarch64_addpv2si (__a, __b);
        -:22290:}
        -:22291:
        -:22292:__extension__ extern __inline uint8x8_t
        -:22293:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22294:vpadd_u8 (uint8x8_t __a, uint8x8_t __b)
        -:22295:{
        -:22296:  return (uint8x8_t) __builtin_aarch64_addpv8qi ((int8x8_t) __a,
        -:22297:						 (int8x8_t) __b);
        -:22298:}
        -:22299:
        -:22300:__extension__ extern __inline uint16x4_t
        -:22301:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22302:vpadd_u16 (uint16x4_t __a, uint16x4_t __b)
        -:22303:{
        -:22304:  return (uint16x4_t) __builtin_aarch64_addpv4hi ((int16x4_t) __a,
        -:22305:						  (int16x4_t) __b);
        -:22306:}
        -:22307:
        -:22308:__extension__ extern __inline uint32x2_t
        -:22309:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22310:vpadd_u32 (uint32x2_t __a, uint32x2_t __b)
        -:22311:{
        -:22312:  return (uint32x2_t) __builtin_aarch64_addpv2si ((int32x2_t) __a,
        -:22313:						  (int32x2_t) __b);
        -:22314:}
        -:22315:
        -:22316:__extension__ extern __inline float32_t
        -:22317:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22318:vpadds_f32 (float32x2_t __a)
        -:22319:{
        -:22320:  return __builtin_aarch64_reduc_plus_scal_v2sf (__a);
        -:22321:}
        -:22322:
        -:22323:__extension__ extern __inline float64_t
        -:22324:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22325:vpaddd_f64 (float64x2_t __a)
        -:22326:{
        -:22327:  return __builtin_aarch64_reduc_plus_scal_v2df (__a);
        -:22328:}
        -:22329:
        -:22330:__extension__ extern __inline int64_t
        -:22331:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22332:vpaddd_s64 (int64x2_t __a)
        -:22333:{
        -:22334:  return __builtin_aarch64_addpdi (__a);
        -:22335:}
        -:22336:
        -:22337:__extension__ extern __inline uint64_t
        -:22338:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22339:vpaddd_u64 (uint64x2_t __a)
        -:22340:{
        -:22341:  return __builtin_aarch64_addpdi ((int64x2_t) __a);
        -:22342:}
        -:22343:
        -:22344:/* vqabs */
        -:22345:
        -:22346:__extension__ extern __inline int64x2_t
        -:22347:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22348:vqabsq_s64 (int64x2_t __a)
        -:22349:{
        -:22350:  return (int64x2_t) __builtin_aarch64_sqabsv2di (__a);
        -:22351:}
        -:22352:
        -:22353:__extension__ extern __inline int8_t
        -:22354:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22355:vqabsb_s8 (int8_t __a)
        -:22356:{
        -:22357:  return (int8_t) __builtin_aarch64_sqabsqi (__a);
        -:22358:}
        -:22359:
        -:22360:__extension__ extern __inline int16_t
        -:22361:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22362:vqabsh_s16 (int16_t __a)
        -:22363:{
        -:22364:  return (int16_t) __builtin_aarch64_sqabshi (__a);
        -:22365:}
        -:22366:
        -:22367:__extension__ extern __inline int32_t
        -:22368:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22369:vqabss_s32 (int32_t __a)
        -:22370:{
        -:22371:  return (int32_t) __builtin_aarch64_sqabssi (__a);
        -:22372:}
        -:22373:
        -:22374:__extension__ extern __inline int64_t
        -:22375:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22376:vqabsd_s64 (int64_t __a)
        -:22377:{
        -:22378:  return __builtin_aarch64_sqabsdi (__a);
        -:22379:}
        -:22380:
        -:22381:/* vqadd */
        -:22382:
        -:22383:__extension__ extern __inline int8_t
        -:22384:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22385:vqaddb_s8 (int8_t __a, int8_t __b)
        -:22386:{
        -:22387:  return (int8_t) __builtin_aarch64_sqaddqi (__a, __b);
        -:22388:}
        -:22389:
        -:22390:__extension__ extern __inline int16_t
        -:22391:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22392:vqaddh_s16 (int16_t __a, int16_t __b)
        -:22393:{
        -:22394:  return (int16_t) __builtin_aarch64_sqaddhi (__a, __b);
        -:22395:}
        -:22396:
        -:22397:__extension__ extern __inline int32_t
        -:22398:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22399:vqadds_s32 (int32_t __a, int32_t __b)
        -:22400:{
        -:22401:  return (int32_t) __builtin_aarch64_sqaddsi (__a, __b);
        -:22402:}
        -:22403:
        -:22404:__extension__ extern __inline int64_t
        -:22405:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22406:vqaddd_s64 (int64_t __a, int64_t __b)
        -:22407:{
        -:22408:  return __builtin_aarch64_sqadddi (__a, __b);
        -:22409:}
        -:22410:
        -:22411:__extension__ extern __inline uint8_t
        -:22412:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22413:vqaddb_u8 (uint8_t __a, uint8_t __b)
        -:22414:{
        -:22415:  return (uint8_t) __builtin_aarch64_uqaddqi_uuu (__a, __b);
        -:22416:}
        -:22417:
        -:22418:__extension__ extern __inline uint16_t
        -:22419:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22420:vqaddh_u16 (uint16_t __a, uint16_t __b)
        -:22421:{
        -:22422:  return (uint16_t) __builtin_aarch64_uqaddhi_uuu (__a, __b);
        -:22423:}
        -:22424:
        -:22425:__extension__ extern __inline uint32_t
        -:22426:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22427:vqadds_u32 (uint32_t __a, uint32_t __b)
        -:22428:{
        -:22429:  return (uint32_t) __builtin_aarch64_uqaddsi_uuu (__a, __b);
        -:22430:}
        -:22431:
        -:22432:__extension__ extern __inline uint64_t
        -:22433:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22434:vqaddd_u64 (uint64_t __a, uint64_t __b)
        -:22435:{
        -:22436:  return __builtin_aarch64_uqadddi_uuu (__a, __b);
        -:22437:}
        -:22438:
        -:22439:/* vqdmlal */
        -:22440:
        -:22441:__extension__ extern __inline int32x4_t
        -:22442:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22443:vqdmlal_s16 (int32x4_t __a, int16x4_t __b, int16x4_t __c)
        -:22444:{
        -:22445:  return __builtin_aarch64_sqdmlalv4hi (__a, __b, __c);
        -:22446:}
        -:22447:
        -:22448:__extension__ extern __inline int32x4_t
        -:22449:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22450:vqdmlal_high_s16 (int32x4_t __a, int16x8_t __b, int16x8_t __c)
        -:22451:{
        -:22452:  return __builtin_aarch64_sqdmlal2v8hi (__a, __b, __c);
        -:22453:}
        -:22454:
        -:22455:__extension__ extern __inline int32x4_t
        -:22456:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22457:vqdmlal_high_lane_s16 (int32x4_t __a, int16x8_t __b, int16x4_t __c,
        -:22458:		       int const __d)
        -:22459:{
        -:22460:  return __builtin_aarch64_sqdmlal2_lanev8hi (__a, __b, __c, __d);
        -:22461:}
        -:22462:
        -:22463:__extension__ extern __inline int32x4_t
        -:22464:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22465:vqdmlal_high_laneq_s16 (int32x4_t __a, int16x8_t __b, int16x8_t __c,
        -:22466:			int const __d)
        -:22467:{
        -:22468:  return __builtin_aarch64_sqdmlal2_laneqv8hi (__a, __b, __c, __d);
        -:22469:}
        -:22470:
        -:22471:__extension__ extern __inline int32x4_t
        -:22472:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22473:vqdmlal_high_n_s16 (int32x4_t __a, int16x8_t __b, int16_t __c)
        -:22474:{
        -:22475:  return __builtin_aarch64_sqdmlal2_nv8hi (__a, __b, __c);
        -:22476:}
        -:22477:
        -:22478:__extension__ extern __inline int32x4_t
        -:22479:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22480:vqdmlal_lane_s16 (int32x4_t __a, int16x4_t __b, int16x4_t __c, int const __d)
        -:22481:{
        -:22482:  return __builtin_aarch64_sqdmlal_lanev4hi (__a, __b, __c, __d);
        -:22483:}
        -:22484:
        -:22485:__extension__ extern __inline int32x4_t
        -:22486:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22487:vqdmlal_laneq_s16 (int32x4_t __a, int16x4_t __b, int16x8_t __c, int const __d)
        -:22488:{
        -:22489:  return __builtin_aarch64_sqdmlal_laneqv4hi (__a, __b, __c, __d);
        -:22490:}
        -:22491:
        -:22492:__extension__ extern __inline int32x4_t
        -:22493:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22494:vqdmlal_n_s16 (int32x4_t __a, int16x4_t __b, int16_t __c)
        -:22495:{
        -:22496:  return __builtin_aarch64_sqdmlal_nv4hi (__a, __b, __c);
        -:22497:}
        -:22498:
        -:22499:__extension__ extern __inline int64x2_t
        -:22500:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22501:vqdmlal_s32 (int64x2_t __a, int32x2_t __b, int32x2_t __c)
        -:22502:{
        -:22503:  return __builtin_aarch64_sqdmlalv2si (__a, __b, __c);
        -:22504:}
        -:22505:
        -:22506:__extension__ extern __inline int64x2_t
        -:22507:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22508:vqdmlal_high_s32 (int64x2_t __a, int32x4_t __b, int32x4_t __c)
        -:22509:{
        -:22510:  return __builtin_aarch64_sqdmlal2v4si (__a, __b, __c);
        -:22511:}
        -:22512:
        -:22513:__extension__ extern __inline int64x2_t
        -:22514:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22515:vqdmlal_high_lane_s32 (int64x2_t __a, int32x4_t __b, int32x2_t __c,
        -:22516:		       int const __d)
        -:22517:{
        -:22518:  return __builtin_aarch64_sqdmlal2_lanev4si (__a, __b, __c, __d);
        -:22519:}
        -:22520:
        -:22521:__extension__ extern __inline int64x2_t
        -:22522:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22523:vqdmlal_high_laneq_s32 (int64x2_t __a, int32x4_t __b, int32x4_t __c,
        -:22524:			int const __d)
        -:22525:{
        -:22526:  return __builtin_aarch64_sqdmlal2_laneqv4si (__a, __b, __c, __d);
        -:22527:}
        -:22528:
        -:22529:__extension__ extern __inline int64x2_t
        -:22530:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22531:vqdmlal_high_n_s32 (int64x2_t __a, int32x4_t __b, int32_t __c)
        -:22532:{
        -:22533:  return __builtin_aarch64_sqdmlal2_nv4si (__a, __b, __c);
        -:22534:}
        -:22535:
        -:22536:__extension__ extern __inline int64x2_t
        -:22537:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22538:vqdmlal_lane_s32 (int64x2_t __a, int32x2_t __b, int32x2_t __c, int const __d)
        -:22539:{
        -:22540:  return __builtin_aarch64_sqdmlal_lanev2si (__a, __b, __c, __d);
        -:22541:}
        -:22542:
        -:22543:__extension__ extern __inline int64x2_t
        -:22544:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22545:vqdmlal_laneq_s32 (int64x2_t __a, int32x2_t __b, int32x4_t __c, int const __d)
        -:22546:{
        -:22547:  return __builtin_aarch64_sqdmlal_laneqv2si (__a, __b, __c, __d);
        -:22548:}
        -:22549:
        -:22550:__extension__ extern __inline int64x2_t
        -:22551:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22552:vqdmlal_n_s32 (int64x2_t __a, int32x2_t __b, int32_t __c)
        -:22553:{
        -:22554:  return __builtin_aarch64_sqdmlal_nv2si (__a, __b, __c);
        -:22555:}
        -:22556:
        -:22557:__extension__ extern __inline int32_t
        -:22558:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22559:vqdmlalh_s16 (int32_t __a, int16_t __b, int16_t __c)
        -:22560:{
        -:22561:  return __builtin_aarch64_sqdmlalhi (__a, __b, __c);
        -:22562:}
        -:22563:
        -:22564:__extension__ extern __inline int32_t
        -:22565:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22566:vqdmlalh_lane_s16 (int32_t __a, int16_t __b, int16x4_t __c, const int __d)
        -:22567:{
        -:22568:  return __builtin_aarch64_sqdmlal_lanehi (__a, __b, __c, __d);
        -:22569:}
        -:22570:
        -:22571:__extension__ extern __inline int32_t
        -:22572:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22573:vqdmlalh_laneq_s16 (int32_t __a, int16_t __b, int16x8_t __c, const int __d)
        -:22574:{
        -:22575:  return __builtin_aarch64_sqdmlal_laneqhi (__a, __b, __c, __d);
        -:22576:}
        -:22577:
        -:22578:__extension__ extern __inline int64_t
        -:22579:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22580:vqdmlals_s32 (int64_t __a, int32_t __b, int32_t __c)
        -:22581:{
        -:22582:  return __builtin_aarch64_sqdmlalsi (__a, __b, __c);
        -:22583:}
        -:22584:
        -:22585:__extension__ extern __inline int64_t
        -:22586:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22587:vqdmlals_lane_s32 (int64_t __a, int32_t __b, int32x2_t __c, const int __d)
        -:22588:{
        -:22589:  return __builtin_aarch64_sqdmlal_lanesi (__a, __b, __c, __d);
        -:22590:}
        -:22591:
        -:22592:__extension__ extern __inline int64_t
        -:22593:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22594:vqdmlals_laneq_s32 (int64_t __a, int32_t __b, int32x4_t __c, const int __d)
        -:22595:{
        -:22596:  return __builtin_aarch64_sqdmlal_laneqsi (__a, __b, __c, __d);
        -:22597:}
        -:22598:
        -:22599:/* vqdmlsl */
        -:22600:
        -:22601:__extension__ extern __inline int32x4_t
        -:22602:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22603:vqdmlsl_s16 (int32x4_t __a, int16x4_t __b, int16x4_t __c)
        -:22604:{
        -:22605:  return __builtin_aarch64_sqdmlslv4hi (__a, __b, __c);
        -:22606:}
        -:22607:
        -:22608:__extension__ extern __inline int32x4_t
        -:22609:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22610:vqdmlsl_high_s16 (int32x4_t __a, int16x8_t __b, int16x8_t __c)
        -:22611:{
        -:22612:  return __builtin_aarch64_sqdmlsl2v8hi (__a, __b, __c);
        -:22613:}
        -:22614:
        -:22615:__extension__ extern __inline int32x4_t
        -:22616:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22617:vqdmlsl_high_lane_s16 (int32x4_t __a, int16x8_t __b, int16x4_t __c,
        -:22618:		       int const __d)
        -:22619:{
        -:22620:  return __builtin_aarch64_sqdmlsl2_lanev8hi (__a, __b, __c, __d);
        -:22621:}
        -:22622:
        -:22623:__extension__ extern __inline int32x4_t
        -:22624:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22625:vqdmlsl_high_laneq_s16 (int32x4_t __a, int16x8_t __b, int16x8_t __c,
        -:22626:			int const __d)
        -:22627:{
        -:22628:  return __builtin_aarch64_sqdmlsl2_laneqv8hi (__a, __b, __c, __d);
        -:22629:}
        -:22630:
        -:22631:__extension__ extern __inline int32x4_t
        -:22632:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22633:vqdmlsl_high_n_s16 (int32x4_t __a, int16x8_t __b, int16_t __c)
        -:22634:{
        -:22635:  return __builtin_aarch64_sqdmlsl2_nv8hi (__a, __b, __c);
        -:22636:}
        -:22637:
        -:22638:__extension__ extern __inline int32x4_t
        -:22639:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22640:vqdmlsl_lane_s16 (int32x4_t __a, int16x4_t __b, int16x4_t __c, int const __d)
        -:22641:{
        -:22642:  return __builtin_aarch64_sqdmlsl_lanev4hi (__a, __b, __c, __d);
        -:22643:}
        -:22644:
        -:22645:__extension__ extern __inline int32x4_t
        -:22646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22647:vqdmlsl_laneq_s16 (int32x4_t __a, int16x4_t __b, int16x8_t __c, int const __d)
        -:22648:{
        -:22649:  return __builtin_aarch64_sqdmlsl_laneqv4hi (__a, __b, __c, __d);
        -:22650:}
        -:22651:
        -:22652:__extension__ extern __inline int32x4_t
        -:22653:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22654:vqdmlsl_n_s16 (int32x4_t __a, int16x4_t __b, int16_t __c)
        -:22655:{
        -:22656:  return __builtin_aarch64_sqdmlsl_nv4hi (__a, __b, __c);
        -:22657:}
        -:22658:
        -:22659:__extension__ extern __inline int64x2_t
        -:22660:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22661:vqdmlsl_s32 (int64x2_t __a, int32x2_t __b, int32x2_t __c)
        -:22662:{
        -:22663:  return __builtin_aarch64_sqdmlslv2si (__a, __b, __c);
        -:22664:}
        -:22665:
        -:22666:__extension__ extern __inline int64x2_t
        -:22667:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22668:vqdmlsl_high_s32 (int64x2_t __a, int32x4_t __b, int32x4_t __c)
        -:22669:{
        -:22670:  return __builtin_aarch64_sqdmlsl2v4si (__a, __b, __c);
        -:22671:}
        -:22672:
        -:22673:__extension__ extern __inline int64x2_t
        -:22674:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22675:vqdmlsl_high_lane_s32 (int64x2_t __a, int32x4_t __b, int32x2_t __c,
        -:22676:		       int const __d)
        -:22677:{
        -:22678:  return __builtin_aarch64_sqdmlsl2_lanev4si (__a, __b, __c, __d);
        -:22679:}
        -:22680:
        -:22681:__extension__ extern __inline int64x2_t
        -:22682:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22683:vqdmlsl_high_laneq_s32 (int64x2_t __a, int32x4_t __b, int32x4_t __c,
        -:22684:			int const __d)
        -:22685:{
        -:22686:  return __builtin_aarch64_sqdmlsl2_laneqv4si (__a, __b, __c, __d);
        -:22687:}
        -:22688:
        -:22689:__extension__ extern __inline int64x2_t
        -:22690:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22691:vqdmlsl_high_n_s32 (int64x2_t __a, int32x4_t __b, int32_t __c)
        -:22692:{
        -:22693:  return __builtin_aarch64_sqdmlsl2_nv4si (__a, __b, __c);
        -:22694:}
        -:22695:
        -:22696:__extension__ extern __inline int64x2_t
        -:22697:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22698:vqdmlsl_lane_s32 (int64x2_t __a, int32x2_t __b, int32x2_t __c, int const __d)
        -:22699:{
        -:22700:  return __builtin_aarch64_sqdmlsl_lanev2si (__a, __b, __c, __d);
        -:22701:}
        -:22702:
        -:22703:__extension__ extern __inline int64x2_t
        -:22704:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22705:vqdmlsl_laneq_s32 (int64x2_t __a, int32x2_t __b, int32x4_t __c, int const __d)
        -:22706:{
        -:22707:  return __builtin_aarch64_sqdmlsl_laneqv2si (__a, __b, __c, __d);
        -:22708:}
        -:22709:
        -:22710:__extension__ extern __inline int64x2_t
        -:22711:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22712:vqdmlsl_n_s32 (int64x2_t __a, int32x2_t __b, int32_t __c)
        -:22713:{
        -:22714:  return __builtin_aarch64_sqdmlsl_nv2si (__a, __b, __c);
        -:22715:}
        -:22716:
        -:22717:__extension__ extern __inline int32_t
        -:22718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22719:vqdmlslh_s16 (int32_t __a, int16_t __b, int16_t __c)
        -:22720:{
        -:22721:  return __builtin_aarch64_sqdmlslhi (__a, __b, __c);
        -:22722:}
        -:22723:
        -:22724:__extension__ extern __inline int32_t
        -:22725:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22726:vqdmlslh_lane_s16 (int32_t __a, int16_t __b, int16x4_t __c, const int __d)
        -:22727:{
        -:22728:  return __builtin_aarch64_sqdmlsl_lanehi (__a, __b, __c, __d);
        -:22729:}
        -:22730:
        -:22731:__extension__ extern __inline int32_t
        -:22732:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22733:vqdmlslh_laneq_s16 (int32_t __a, int16_t __b, int16x8_t __c, const int __d)
        -:22734:{
        -:22735:  return __builtin_aarch64_sqdmlsl_laneqhi (__a, __b, __c, __d);
        -:22736:}
        -:22737:
        -:22738:__extension__ extern __inline int64_t
        -:22739:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22740:vqdmlsls_s32 (int64_t __a, int32_t __b, int32_t __c)
        -:22741:{
        -:22742:  return __builtin_aarch64_sqdmlslsi (__a, __b, __c);
        -:22743:}
        -:22744:
        -:22745:__extension__ extern __inline int64_t
        -:22746:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22747:vqdmlsls_lane_s32 (int64_t __a, int32_t __b, int32x2_t __c, const int __d)
        -:22748:{
        -:22749:  return __builtin_aarch64_sqdmlsl_lanesi (__a, __b, __c, __d);
        -:22750:}
        -:22751:
        -:22752:__extension__ extern __inline int64_t
        -:22753:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22754:vqdmlsls_laneq_s32 (int64_t __a, int32_t __b, int32x4_t __c, const int __d)
        -:22755:{
        -:22756:  return __builtin_aarch64_sqdmlsl_laneqsi (__a, __b, __c, __d);
        -:22757:}
        -:22758:
        -:22759:/* vqdmulh */
        -:22760:
        -:22761:__extension__ extern __inline int16x4_t
        -:22762:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22763:vqdmulh_lane_s16 (int16x4_t __a, int16x4_t __b, const int __c)
        -:22764:{
        -:22765:  return __builtin_aarch64_sqdmulh_lanev4hi (__a, __b, __c);
        -:22766:}
        -:22767:
        -:22768:__extension__ extern __inline int32x2_t
        -:22769:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22770:vqdmulh_lane_s32 (int32x2_t __a, int32x2_t __b, const int __c)
        -:22771:{
        -:22772:  return __builtin_aarch64_sqdmulh_lanev2si (__a, __b, __c);
        -:22773:}
        -:22774:
        -:22775:__extension__ extern __inline int16x8_t
        -:22776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22777:vqdmulhq_lane_s16 (int16x8_t __a, int16x4_t __b, const int __c)
        -:22778:{
        -:22779:  return __builtin_aarch64_sqdmulh_lanev8hi (__a, __b, __c);
        -:22780:}
        -:22781:
        -:22782:__extension__ extern __inline int32x4_t
        -:22783:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22784:vqdmulhq_lane_s32 (int32x4_t __a, int32x2_t __b, const int __c)
        -:22785:{
        -:22786:  return __builtin_aarch64_sqdmulh_lanev4si (__a, __b, __c);
        -:22787:}
        -:22788:
        -:22789:__extension__ extern __inline int16_t
        -:22790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22791:vqdmulhh_s16 (int16_t __a, int16_t __b)
        -:22792:{
        -:22793:  return (int16_t) __builtin_aarch64_sqdmulhhi (__a, __b);
        -:22794:}
        -:22795:
        -:22796:__extension__ extern __inline int16_t
        -:22797:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22798:vqdmulhh_lane_s16 (int16_t __a, int16x4_t __b, const int __c)
        -:22799:{
        -:22800:  return __builtin_aarch64_sqdmulh_lanehi (__a, __b, __c);
        -:22801:}
        -:22802:
        -:22803:__extension__ extern __inline int16_t
        -:22804:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22805:vqdmulhh_laneq_s16 (int16_t __a, int16x8_t __b, const int __c)
        -:22806:{
        -:22807:  return __builtin_aarch64_sqdmulh_laneqhi (__a, __b, __c);
        -:22808:}
        -:22809:
        -:22810:__extension__ extern __inline int32_t
        -:22811:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22812:vqdmulhs_s32 (int32_t __a, int32_t __b)
        -:22813:{
        -:22814:  return (int32_t) __builtin_aarch64_sqdmulhsi (__a, __b);
        -:22815:}
        -:22816:
        -:22817:__extension__ extern __inline int32_t
        -:22818:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22819:vqdmulhs_lane_s32 (int32_t __a, int32x2_t __b, const int __c)
        -:22820:{
        -:22821:  return __builtin_aarch64_sqdmulh_lanesi (__a, __b, __c);
        -:22822:}
        -:22823:
        -:22824:__extension__ extern __inline int32_t
        -:22825:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22826:vqdmulhs_laneq_s32 (int32_t __a, int32x4_t __b, const int __c)
        -:22827:{
        -:22828:  return __builtin_aarch64_sqdmulh_laneqsi (__a, __b, __c);
        -:22829:}
        -:22830:
        -:22831:/* vqdmull */
        -:22832:
        -:22833:__extension__ extern __inline int32x4_t
        -:22834:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22835:vqdmull_s16 (int16x4_t __a, int16x4_t __b)
        -:22836:{
        -:22837:  return __builtin_aarch64_sqdmullv4hi (__a, __b);
        -:22838:}
        -:22839:
        -:22840:__extension__ extern __inline int32x4_t
        -:22841:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22842:vqdmull_high_s16 (int16x8_t __a, int16x8_t __b)
        -:22843:{
        -:22844:  return __builtin_aarch64_sqdmull2v8hi (__a, __b);
        -:22845:}
        -:22846:
        -:22847:__extension__ extern __inline int32x4_t
        -:22848:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22849:vqdmull_high_lane_s16 (int16x8_t __a, int16x4_t __b, int const __c)
        -:22850:{
        -:22851:  return __builtin_aarch64_sqdmull2_lanev8hi (__a, __b,__c);
        -:22852:}
        -:22853:
        -:22854:__extension__ extern __inline int32x4_t
        -:22855:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22856:vqdmull_high_laneq_s16 (int16x8_t __a, int16x8_t __b, int const __c)
        -:22857:{
        -:22858:  return __builtin_aarch64_sqdmull2_laneqv8hi (__a, __b,__c);
        -:22859:}
        -:22860:
        -:22861:__extension__ extern __inline int32x4_t
        -:22862:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22863:vqdmull_high_n_s16 (int16x8_t __a, int16_t __b)
        -:22864:{
        -:22865:  return __builtin_aarch64_sqdmull2_nv8hi (__a, __b);
        -:22866:}
        -:22867:
        -:22868:__extension__ extern __inline int32x4_t
        -:22869:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22870:vqdmull_lane_s16 (int16x4_t __a, int16x4_t __b, int const __c)
        -:22871:{
        -:22872:  return __builtin_aarch64_sqdmull_lanev4hi (__a, __b, __c);
        -:22873:}
        -:22874:
        -:22875:__extension__ extern __inline int32x4_t
        -:22876:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22877:vqdmull_laneq_s16 (int16x4_t __a, int16x8_t __b, int const __c)
        -:22878:{
        -:22879:  return __builtin_aarch64_sqdmull_laneqv4hi (__a, __b, __c);
        -:22880:}
        -:22881:
        -:22882:__extension__ extern __inline int32x4_t
        -:22883:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22884:vqdmull_n_s16 (int16x4_t __a, int16_t __b)
        -:22885:{
        -:22886:  return __builtin_aarch64_sqdmull_nv4hi (__a, __b);
        -:22887:}
        -:22888:
        -:22889:__extension__ extern __inline int64x2_t
        -:22890:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22891:vqdmull_s32 (int32x2_t __a, int32x2_t __b)
        -:22892:{
        -:22893:  return __builtin_aarch64_sqdmullv2si (__a, __b);
        -:22894:}
        -:22895:
        -:22896:__extension__ extern __inline int64x2_t
        -:22897:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22898:vqdmull_high_s32 (int32x4_t __a, int32x4_t __b)
        -:22899:{
        -:22900:  return __builtin_aarch64_sqdmull2v4si (__a, __b);
        -:22901:}
        -:22902:
        -:22903:__extension__ extern __inline int64x2_t
        -:22904:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22905:vqdmull_high_lane_s32 (int32x4_t __a, int32x2_t __b, int const __c)
        -:22906:{
        -:22907:  return __builtin_aarch64_sqdmull2_lanev4si (__a, __b, __c);
        -:22908:}
        -:22909:
        -:22910:__extension__ extern __inline int64x2_t
        -:22911:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22912:vqdmull_high_laneq_s32 (int32x4_t __a, int32x4_t __b, int const __c)
        -:22913:{
        -:22914:  return __builtin_aarch64_sqdmull2_laneqv4si (__a, __b, __c);
        -:22915:}
        -:22916:
        -:22917:__extension__ extern __inline int64x2_t
        -:22918:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22919:vqdmull_high_n_s32 (int32x4_t __a, int32_t __b)
        -:22920:{
        -:22921:  return __builtin_aarch64_sqdmull2_nv4si (__a, __b);
        -:22922:}
        -:22923:
        -:22924:__extension__ extern __inline int64x2_t
        -:22925:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22926:vqdmull_lane_s32 (int32x2_t __a, int32x2_t __b, int const __c)
        -:22927:{
        -:22928:  return __builtin_aarch64_sqdmull_lanev2si (__a, __b, __c);
        -:22929:}
        -:22930:
        -:22931:__extension__ extern __inline int64x2_t
        -:22932:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22933:vqdmull_laneq_s32 (int32x2_t __a, int32x4_t __b, int const __c)
        -:22934:{
        -:22935:  return __builtin_aarch64_sqdmull_laneqv2si (__a, __b, __c);
        -:22936:}
        -:22937:
        -:22938:__extension__ extern __inline int64x2_t
        -:22939:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22940:vqdmull_n_s32 (int32x2_t __a, int32_t __b)
        -:22941:{
        -:22942:  return __builtin_aarch64_sqdmull_nv2si (__a, __b);
        -:22943:}
        -:22944:
        -:22945:__extension__ extern __inline int32_t
        -:22946:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22947:vqdmullh_s16 (int16_t __a, int16_t __b)
        -:22948:{
        -:22949:  return (int32_t) __builtin_aarch64_sqdmullhi (__a, __b);
        -:22950:}
        -:22951:
        -:22952:__extension__ extern __inline int32_t
        -:22953:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22954:vqdmullh_lane_s16 (int16_t __a, int16x4_t __b, const int __c)
        -:22955:{
        -:22956:  return __builtin_aarch64_sqdmull_lanehi (__a, __b, __c);
        -:22957:}
        -:22958:
        -:22959:__extension__ extern __inline int32_t
        -:22960:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22961:vqdmullh_laneq_s16 (int16_t __a, int16x8_t __b, const int __c)
        -:22962:{
        -:22963:  return __builtin_aarch64_sqdmull_laneqhi (__a, __b, __c);
        -:22964:}
        -:22965:
        -:22966:__extension__ extern __inline int64_t
        -:22967:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22968:vqdmulls_s32 (int32_t __a, int32_t __b)
        -:22969:{
        -:22970:  return __builtin_aarch64_sqdmullsi (__a, __b);
        -:22971:}
        -:22972:
        -:22973:__extension__ extern __inline int64_t
        -:22974:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22975:vqdmulls_lane_s32 (int32_t __a, int32x2_t __b, const int __c)
        -:22976:{
        -:22977:  return __builtin_aarch64_sqdmull_lanesi (__a, __b, __c);
        -:22978:}
        -:22979:
        -:22980:__extension__ extern __inline int64_t
        -:22981:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22982:vqdmulls_laneq_s32 (int32_t __a, int32x4_t __b, const int __c)
        -:22983:{
        -:22984:  return __builtin_aarch64_sqdmull_laneqsi (__a, __b, __c);
        -:22985:}
        -:22986:
        -:22987:/* vqmovn */
        -:22988:
        -:22989:__extension__ extern __inline int8x8_t
        -:22990:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22991:vqmovn_s16 (int16x8_t __a)
        -:22992:{
        -:22993:  return (int8x8_t) __builtin_aarch64_sqmovnv8hi (__a);
        -:22994:}
        -:22995:
        -:22996:__extension__ extern __inline int16x4_t
        -:22997:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:22998:vqmovn_s32 (int32x4_t __a)
        -:22999:{
        -:23000:  return (int16x4_t) __builtin_aarch64_sqmovnv4si (__a);
        -:23001:}
        -:23002:
        -:23003:__extension__ extern __inline int32x2_t
        -:23004:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23005:vqmovn_s64 (int64x2_t __a)
        -:23006:{
        -:23007:  return (int32x2_t) __builtin_aarch64_sqmovnv2di (__a);
        -:23008:}
        -:23009:
        -:23010:__extension__ extern __inline uint8x8_t
        -:23011:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23012:vqmovn_u16 (uint16x8_t __a)
        -:23013:{
        -:23014:  return (uint8x8_t) __builtin_aarch64_uqmovnv8hi ((int16x8_t) __a);
        -:23015:}
        -:23016:
        -:23017:__extension__ extern __inline uint16x4_t
        -:23018:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23019:vqmovn_u32 (uint32x4_t __a)
        -:23020:{
        -:23021:  return (uint16x4_t) __builtin_aarch64_uqmovnv4si ((int32x4_t) __a);
        -:23022:}
        -:23023:
        -:23024:__extension__ extern __inline uint32x2_t
        -:23025:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23026:vqmovn_u64 (uint64x2_t __a)
        -:23027:{
        -:23028:  return (uint32x2_t) __builtin_aarch64_uqmovnv2di ((int64x2_t) __a);
        -:23029:}
        -:23030:
        -:23031:__extension__ extern __inline int8_t
        -:23032:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23033:vqmovnh_s16 (int16_t __a)
        -:23034:{
        -:23035:  return (int8_t) __builtin_aarch64_sqmovnhi (__a);
        -:23036:}
        -:23037:
        -:23038:__extension__ extern __inline int16_t
        -:23039:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23040:vqmovns_s32 (int32_t __a)
        -:23041:{
        -:23042:  return (int16_t) __builtin_aarch64_sqmovnsi (__a);
        -:23043:}
        -:23044:
        -:23045:__extension__ extern __inline int32_t
        -:23046:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23047:vqmovnd_s64 (int64_t __a)
        -:23048:{
        -:23049:  return (int32_t) __builtin_aarch64_sqmovndi (__a);
        -:23050:}
        -:23051:
        -:23052:__extension__ extern __inline uint8_t
        -:23053:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23054:vqmovnh_u16 (uint16_t __a)
        -:23055:{
        -:23056:  return (uint8_t) __builtin_aarch64_uqmovnhi (__a);
        -:23057:}
        -:23058:
        -:23059:__extension__ extern __inline uint16_t
        -:23060:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23061:vqmovns_u32 (uint32_t __a)
        -:23062:{
        -:23063:  return (uint16_t) __builtin_aarch64_uqmovnsi (__a);
        -:23064:}
        -:23065:
        -:23066:__extension__ extern __inline uint32_t
        -:23067:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23068:vqmovnd_u64 (uint64_t __a)
        -:23069:{
        -:23070:  return (uint32_t) __builtin_aarch64_uqmovndi (__a);
        -:23071:}
        -:23072:
        -:23073:/* vqmovun */
        -:23074:
        -:23075:__extension__ extern __inline uint8x8_t
        -:23076:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23077:vqmovun_s16 (int16x8_t __a)
        -:23078:{
        -:23079:  return (uint8x8_t) __builtin_aarch64_sqmovunv8hi (__a);
        -:23080:}
        -:23081:
        -:23082:__extension__ extern __inline uint16x4_t
        -:23083:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23084:vqmovun_s32 (int32x4_t __a)
        -:23085:{
        -:23086:  return (uint16x4_t) __builtin_aarch64_sqmovunv4si (__a);
        -:23087:}
        -:23088:
        -:23089:__extension__ extern __inline uint32x2_t
        -:23090:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23091:vqmovun_s64 (int64x2_t __a)
        -:23092:{
        -:23093:  return (uint32x2_t) __builtin_aarch64_sqmovunv2di (__a);
        -:23094:}
        -:23095:
        -:23096:__extension__ extern __inline int8_t
        -:23097:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23098:vqmovunh_s16 (int16_t __a)
        -:23099:{
        -:23100:  return (int8_t) __builtin_aarch64_sqmovunhi (__a);
        -:23101:}
        -:23102:
        -:23103:__extension__ extern __inline int16_t
        -:23104:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23105:vqmovuns_s32 (int32_t __a)
        -:23106:{
        -:23107:  return (int16_t) __builtin_aarch64_sqmovunsi (__a);
        -:23108:}
        -:23109:
        -:23110:__extension__ extern __inline int32_t
        -:23111:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23112:vqmovund_s64 (int64_t __a)
        -:23113:{
        -:23114:  return (int32_t) __builtin_aarch64_sqmovundi (__a);
        -:23115:}
        -:23116:
        -:23117:/* vqneg */
        -:23118:
        -:23119:__extension__ extern __inline int64x2_t
        -:23120:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23121:vqnegq_s64 (int64x2_t __a)
        -:23122:{
        -:23123:  return (int64x2_t) __builtin_aarch64_sqnegv2di (__a);
        -:23124:}
        -:23125:
        -:23126:__extension__ extern __inline int8_t
        -:23127:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23128:vqnegb_s8 (int8_t __a)
        -:23129:{
        -:23130:  return (int8_t) __builtin_aarch64_sqnegqi (__a);
        -:23131:}
        -:23132:
        -:23133:__extension__ extern __inline int16_t
        -:23134:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23135:vqnegh_s16 (int16_t __a)
        -:23136:{
        -:23137:  return (int16_t) __builtin_aarch64_sqneghi (__a);
        -:23138:}
        -:23139:
        -:23140:__extension__ extern __inline int32_t
        -:23141:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23142:vqnegs_s32 (int32_t __a)
        -:23143:{
        -:23144:  return (int32_t) __builtin_aarch64_sqnegsi (__a);
        -:23145:}
        -:23146:
        -:23147:__extension__ extern __inline int64_t
        -:23148:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23149:vqnegd_s64 (int64_t __a)
        -:23150:{
        -:23151:  return __builtin_aarch64_sqnegdi (__a);
        -:23152:}
        -:23153:
        -:23154:/* vqrdmulh */
        -:23155:
        -:23156:__extension__ extern __inline int16x4_t
        -:23157:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23158:vqrdmulh_lane_s16 (int16x4_t __a, int16x4_t __b, const int __c)
        -:23159:{
        -:23160:  return  __builtin_aarch64_sqrdmulh_lanev4hi (__a, __b, __c);
        -:23161:}
        -:23162:
        -:23163:__extension__ extern __inline int32x2_t
        -:23164:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23165:vqrdmulh_lane_s32 (int32x2_t __a, int32x2_t __b, const int __c)
        -:23166:{
        -:23167:  return __builtin_aarch64_sqrdmulh_lanev2si (__a, __b, __c);
        -:23168:}
        -:23169:
        -:23170:__extension__ extern __inline int16x8_t
        -:23171:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23172:vqrdmulhq_lane_s16 (int16x8_t __a, int16x4_t __b, const int __c)
        -:23173:{
        -:23174:  return __builtin_aarch64_sqrdmulh_lanev8hi (__a, __b, __c);
        -:23175:}
        -:23176:
        -:23177:__extension__ extern __inline int32x4_t
        -:23178:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23179:vqrdmulhq_lane_s32 (int32x4_t __a, int32x2_t __b, const int __c)
        -:23180:{
        -:23181:  return __builtin_aarch64_sqrdmulh_lanev4si (__a, __b, __c);
        -:23182:}
        -:23183:
        -:23184:__extension__ extern __inline int16_t
        -:23185:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23186:vqrdmulhh_s16 (int16_t __a, int16_t __b)
        -:23187:{
        -:23188:  return (int16_t) __builtin_aarch64_sqrdmulhhi (__a, __b);
        -:23189:}
        -:23190:
        -:23191:__extension__ extern __inline int16_t
        -:23192:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23193:vqrdmulhh_lane_s16 (int16_t __a, int16x4_t __b, const int __c)
        -:23194:{
        -:23195:  return __builtin_aarch64_sqrdmulh_lanehi (__a, __b, __c);
        -:23196:}
        -:23197:
        -:23198:__extension__ extern __inline int16_t
        -:23199:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23200:vqrdmulhh_laneq_s16 (int16_t __a, int16x8_t __b, const int __c)
        -:23201:{
        -:23202:  return __builtin_aarch64_sqrdmulh_laneqhi (__a, __b, __c);
        -:23203:}
        -:23204:
        -:23205:__extension__ extern __inline int32_t
        -:23206:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23207:vqrdmulhs_s32 (int32_t __a, int32_t __b)
        -:23208:{
        -:23209:  return (int32_t) __builtin_aarch64_sqrdmulhsi (__a, __b);
        -:23210:}
        -:23211:
        -:23212:__extension__ extern __inline int32_t
        -:23213:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23214:vqrdmulhs_lane_s32 (int32_t __a, int32x2_t __b, const int __c)
        -:23215:{
        -:23216:  return __builtin_aarch64_sqrdmulh_lanesi (__a, __b, __c);
        -:23217:}
        -:23218:
        -:23219:__extension__ extern __inline int32_t
        -:23220:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23221:vqrdmulhs_laneq_s32 (int32_t __a, int32x4_t __b, const int __c)
        -:23222:{
        -:23223:  return __builtin_aarch64_sqrdmulh_laneqsi (__a, __b, __c);
        -:23224:}
        -:23225:
        -:23226:/* vqrshl */
        -:23227:
        -:23228:__extension__ extern __inline int8x8_t
        -:23229:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23230:vqrshl_s8 (int8x8_t __a, int8x8_t __b)
        -:23231:{
        -:23232:  return __builtin_aarch64_sqrshlv8qi (__a, __b);
        -:23233:}
        -:23234:
        -:23235:__extension__ extern __inline int16x4_t
        -:23236:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23237:vqrshl_s16 (int16x4_t __a, int16x4_t __b)
        -:23238:{
        -:23239:  return __builtin_aarch64_sqrshlv4hi (__a, __b);
        -:23240:}
        -:23241:
        -:23242:__extension__ extern __inline int32x2_t
        -:23243:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23244:vqrshl_s32 (int32x2_t __a, int32x2_t __b)
        -:23245:{
        -:23246:  return __builtin_aarch64_sqrshlv2si (__a, __b);
        -:23247:}
        -:23248:
        -:23249:__extension__ extern __inline int64x1_t
        -:23250:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23251:vqrshl_s64 (int64x1_t __a, int64x1_t __b)
        -:23252:{
        -:23253:  return (int64x1_t) {__builtin_aarch64_sqrshldi (__a[0], __b[0])};
        -:23254:}
        -:23255:
        -:23256:__extension__ extern __inline uint8x8_t
        -:23257:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23258:vqrshl_u8 (uint8x8_t __a, int8x8_t __b)
        -:23259:{
        -:23260:  return __builtin_aarch64_uqrshlv8qi_uus ( __a, __b);
        -:23261:}
        -:23262:
        -:23263:__extension__ extern __inline uint16x4_t
        -:23264:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23265:vqrshl_u16 (uint16x4_t __a, int16x4_t __b)
        -:23266:{
        -:23267:  return __builtin_aarch64_uqrshlv4hi_uus ( __a, __b);
        -:23268:}
        -:23269:
        -:23270:__extension__ extern __inline uint32x2_t
        -:23271:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23272:vqrshl_u32 (uint32x2_t __a, int32x2_t __b)
        -:23273:{
        -:23274:  return __builtin_aarch64_uqrshlv2si_uus ( __a, __b);
        -:23275:}
        -:23276:
        -:23277:__extension__ extern __inline uint64x1_t
        -:23278:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23279:vqrshl_u64 (uint64x1_t __a, int64x1_t __b)
        -:23280:{
        -:23281:  return (uint64x1_t) {__builtin_aarch64_uqrshldi_uus (__a[0], __b[0])};
        -:23282:}
        -:23283:
        -:23284:__extension__ extern __inline int8x16_t
        -:23285:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23286:vqrshlq_s8 (int8x16_t __a, int8x16_t __b)
        -:23287:{
        -:23288:  return __builtin_aarch64_sqrshlv16qi (__a, __b);
        -:23289:}
        -:23290:
        -:23291:__extension__ extern __inline int16x8_t
        -:23292:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23293:vqrshlq_s16 (int16x8_t __a, int16x8_t __b)
        -:23294:{
        -:23295:  return __builtin_aarch64_sqrshlv8hi (__a, __b);
        -:23296:}
        -:23297:
        -:23298:__extension__ extern __inline int32x4_t
        -:23299:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23300:vqrshlq_s32 (int32x4_t __a, int32x4_t __b)
        -:23301:{
        -:23302:  return __builtin_aarch64_sqrshlv4si (__a, __b);
        -:23303:}
        -:23304:
        -:23305:__extension__ extern __inline int64x2_t
        -:23306:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23307:vqrshlq_s64 (int64x2_t __a, int64x2_t __b)
        -:23308:{
        -:23309:  return __builtin_aarch64_sqrshlv2di (__a, __b);
        -:23310:}
        -:23311:
        -:23312:__extension__ extern __inline uint8x16_t
        -:23313:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23314:vqrshlq_u8 (uint8x16_t __a, int8x16_t __b)
        -:23315:{
        -:23316:  return __builtin_aarch64_uqrshlv16qi_uus ( __a, __b);
        -:23317:}
        -:23318:
        -:23319:__extension__ extern __inline uint16x8_t
        -:23320:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23321:vqrshlq_u16 (uint16x8_t __a, int16x8_t __b)
        -:23322:{
        -:23323:  return __builtin_aarch64_uqrshlv8hi_uus ( __a, __b);
        -:23324:}
        -:23325:
        -:23326:__extension__ extern __inline uint32x4_t
        -:23327:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23328:vqrshlq_u32 (uint32x4_t __a, int32x4_t __b)
        -:23329:{
        -:23330:  return __builtin_aarch64_uqrshlv4si_uus ( __a, __b);
        -:23331:}
        -:23332:
        -:23333:__extension__ extern __inline uint64x2_t
        -:23334:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23335:vqrshlq_u64 (uint64x2_t __a, int64x2_t __b)
        -:23336:{
        -:23337:  return __builtin_aarch64_uqrshlv2di_uus ( __a, __b);
        -:23338:}
        -:23339:
        -:23340:__extension__ extern __inline int8_t
        -:23341:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23342:vqrshlb_s8 (int8_t __a, int8_t __b)
        -:23343:{
        -:23344:  return __builtin_aarch64_sqrshlqi (__a, __b);
        -:23345:}
        -:23346:
        -:23347:__extension__ extern __inline int16_t
        -:23348:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23349:vqrshlh_s16 (int16_t __a, int16_t __b)
        -:23350:{
        -:23351:  return __builtin_aarch64_sqrshlhi (__a, __b);
        -:23352:}
        -:23353:
        -:23354:__extension__ extern __inline int32_t
        -:23355:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23356:vqrshls_s32 (int32_t __a, int32_t __b)
        -:23357:{
        -:23358:  return __builtin_aarch64_sqrshlsi (__a, __b);
        -:23359:}
        -:23360:
        -:23361:__extension__ extern __inline int64_t
        -:23362:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23363:vqrshld_s64 (int64_t __a, int64_t __b)
        -:23364:{
        -:23365:  return __builtin_aarch64_sqrshldi (__a, __b);
        -:23366:}
        -:23367:
        -:23368:__extension__ extern __inline uint8_t
        -:23369:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23370:vqrshlb_u8 (uint8_t __a, uint8_t __b)
        -:23371:{
        -:23372:  return __builtin_aarch64_uqrshlqi_uus (__a, __b);
        -:23373:}
        -:23374:
        -:23375:__extension__ extern __inline uint16_t
        -:23376:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23377:vqrshlh_u16 (uint16_t __a, uint16_t __b)
        -:23378:{
        -:23379:  return __builtin_aarch64_uqrshlhi_uus (__a, __b);
        -:23380:}
        -:23381:
        -:23382:__extension__ extern __inline uint32_t
        -:23383:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23384:vqrshls_u32 (uint32_t __a, uint32_t __b)
        -:23385:{
        -:23386:  return __builtin_aarch64_uqrshlsi_uus (__a, __b);
        -:23387:}
        -:23388:
        -:23389:__extension__ extern __inline uint64_t
        -:23390:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23391:vqrshld_u64 (uint64_t __a, uint64_t __b)
        -:23392:{
        -:23393:  return __builtin_aarch64_uqrshldi_uus (__a, __b);
        -:23394:}
        -:23395:
        -:23396:/* vqrshrn */
        -:23397:
        -:23398:__extension__ extern __inline int8x8_t
        -:23399:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23400:vqrshrn_n_s16 (int16x8_t __a, const int __b)
        -:23401:{
        -:23402:  return (int8x8_t) __builtin_aarch64_sqrshrn_nv8hi (__a, __b);
        -:23403:}
        -:23404:
        -:23405:__extension__ extern __inline int16x4_t
        -:23406:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23407:vqrshrn_n_s32 (int32x4_t __a, const int __b)
        -:23408:{
        -:23409:  return (int16x4_t) __builtin_aarch64_sqrshrn_nv4si (__a, __b);
        -:23410:}
        -:23411:
        -:23412:__extension__ extern __inline int32x2_t
        -:23413:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23414:vqrshrn_n_s64 (int64x2_t __a, const int __b)
        -:23415:{
        -:23416:  return (int32x2_t) __builtin_aarch64_sqrshrn_nv2di (__a, __b);
        -:23417:}
        -:23418:
        -:23419:__extension__ extern __inline uint8x8_t
        -:23420:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23421:vqrshrn_n_u16 (uint16x8_t __a, const int __b)
        -:23422:{
        -:23423:  return __builtin_aarch64_uqrshrn_nv8hi_uus ( __a, __b);
        -:23424:}
        -:23425:
        -:23426:__extension__ extern __inline uint16x4_t
        -:23427:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23428:vqrshrn_n_u32 (uint32x4_t __a, const int __b)
        -:23429:{
        -:23430:  return __builtin_aarch64_uqrshrn_nv4si_uus ( __a, __b);
        -:23431:}
        -:23432:
        -:23433:__extension__ extern __inline uint32x2_t
        -:23434:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23435:vqrshrn_n_u64 (uint64x2_t __a, const int __b)
        -:23436:{
        -:23437:  return __builtin_aarch64_uqrshrn_nv2di_uus ( __a, __b);
        -:23438:}
        -:23439:
        -:23440:__extension__ extern __inline int8_t
        -:23441:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23442:vqrshrnh_n_s16 (int16_t __a, const int __b)
        -:23443:{
        -:23444:  return (int8_t) __builtin_aarch64_sqrshrn_nhi (__a, __b);
        -:23445:}
        -:23446:
        -:23447:__extension__ extern __inline int16_t
        -:23448:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23449:vqrshrns_n_s32 (int32_t __a, const int __b)
        -:23450:{
        -:23451:  return (int16_t) __builtin_aarch64_sqrshrn_nsi (__a, __b);
        -:23452:}
        -:23453:
        -:23454:__extension__ extern __inline int32_t
        -:23455:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23456:vqrshrnd_n_s64 (int64_t __a, const int __b)
        -:23457:{
        -:23458:  return (int32_t) __builtin_aarch64_sqrshrn_ndi (__a, __b);
        -:23459:}
        -:23460:
        -:23461:__extension__ extern __inline uint8_t
        -:23462:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23463:vqrshrnh_n_u16 (uint16_t __a, const int __b)
        -:23464:{
        -:23465:  return __builtin_aarch64_uqrshrn_nhi_uus (__a, __b);
        -:23466:}
        -:23467:
        -:23468:__extension__ extern __inline uint16_t
        -:23469:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23470:vqrshrns_n_u32 (uint32_t __a, const int __b)
        -:23471:{
        -:23472:  return __builtin_aarch64_uqrshrn_nsi_uus (__a, __b);
        -:23473:}
        -:23474:
        -:23475:__extension__ extern __inline uint32_t
        -:23476:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23477:vqrshrnd_n_u64 (uint64_t __a, const int __b)
        -:23478:{
        -:23479:  return __builtin_aarch64_uqrshrn_ndi_uus (__a, __b);
        -:23480:}
        -:23481:
        -:23482:/* vqrshrun */
        -:23483:
        -:23484:__extension__ extern __inline uint8x8_t
        -:23485:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23486:vqrshrun_n_s16 (int16x8_t __a, const int __b)
        -:23487:{
        -:23488:  return (uint8x8_t) __builtin_aarch64_sqrshrun_nv8hi (__a, __b);
        -:23489:}
        -:23490:
        -:23491:__extension__ extern __inline uint16x4_t
        -:23492:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23493:vqrshrun_n_s32 (int32x4_t __a, const int __b)
        -:23494:{
        -:23495:  return (uint16x4_t) __builtin_aarch64_sqrshrun_nv4si (__a, __b);
        -:23496:}
        -:23497:
        -:23498:__extension__ extern __inline uint32x2_t
        -:23499:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23500:vqrshrun_n_s64 (int64x2_t __a, const int __b)
        -:23501:{
        -:23502:  return (uint32x2_t) __builtin_aarch64_sqrshrun_nv2di (__a, __b);
        -:23503:}
        -:23504:
        -:23505:__extension__ extern __inline int8_t
        -:23506:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23507:vqrshrunh_n_s16 (int16_t __a, const int __b)
        -:23508:{
        -:23509:  return (int8_t) __builtin_aarch64_sqrshrun_nhi (__a, __b);
        -:23510:}
        -:23511:
        -:23512:__extension__ extern __inline int16_t
        -:23513:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23514:vqrshruns_n_s32 (int32_t __a, const int __b)
        -:23515:{
        -:23516:  return (int16_t) __builtin_aarch64_sqrshrun_nsi (__a, __b);
        -:23517:}
        -:23518:
        -:23519:__extension__ extern __inline int32_t
        -:23520:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23521:vqrshrund_n_s64 (int64_t __a, const int __b)
        -:23522:{
        -:23523:  return (int32_t) __builtin_aarch64_sqrshrun_ndi (__a, __b);
        -:23524:}
        -:23525:
        -:23526:/* vqshl */
        -:23527:
        -:23528:__extension__ extern __inline int8x8_t
        -:23529:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23530:vqshl_s8 (int8x8_t __a, int8x8_t __b)
        -:23531:{
        -:23532:  return __builtin_aarch64_sqshlv8qi (__a, __b);
        -:23533:}
        -:23534:
        -:23535:__extension__ extern __inline int16x4_t
        -:23536:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23537:vqshl_s16 (int16x4_t __a, int16x4_t __b)
        -:23538:{
        -:23539:  return __builtin_aarch64_sqshlv4hi (__a, __b);
        -:23540:}
        -:23541:
        -:23542:__extension__ extern __inline int32x2_t
        -:23543:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23544:vqshl_s32 (int32x2_t __a, int32x2_t __b)
        -:23545:{
        -:23546:  return __builtin_aarch64_sqshlv2si (__a, __b);
        -:23547:}
        -:23548:
        -:23549:__extension__ extern __inline int64x1_t
        -:23550:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23551:vqshl_s64 (int64x1_t __a, int64x1_t __b)
        -:23552:{
        -:23553:  return (int64x1_t) {__builtin_aarch64_sqshldi (__a[0], __b[0])};
        -:23554:}
        -:23555:
        -:23556:__extension__ extern __inline uint8x8_t
        -:23557:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23558:vqshl_u8 (uint8x8_t __a, int8x8_t __b)
        -:23559:{
        -:23560:  return __builtin_aarch64_uqshlv8qi_uus ( __a, __b);
        -:23561:}
        -:23562:
        -:23563:__extension__ extern __inline uint16x4_t
        -:23564:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23565:vqshl_u16 (uint16x4_t __a, int16x4_t __b)
        -:23566:{
        -:23567:  return __builtin_aarch64_uqshlv4hi_uus ( __a, __b);
        -:23568:}
        -:23569:
        -:23570:__extension__ extern __inline uint32x2_t
        -:23571:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23572:vqshl_u32 (uint32x2_t __a, int32x2_t __b)
        -:23573:{
        -:23574:  return __builtin_aarch64_uqshlv2si_uus ( __a, __b);
        -:23575:}
        -:23576:
        -:23577:__extension__ extern __inline uint64x1_t
        -:23578:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23579:vqshl_u64 (uint64x1_t __a, int64x1_t __b)
        -:23580:{
        -:23581:  return (uint64x1_t) {__builtin_aarch64_uqshldi_uus (__a[0], __b[0])};
        -:23582:}
        -:23583:
        -:23584:__extension__ extern __inline int8x16_t
        -:23585:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23586:vqshlq_s8 (int8x16_t __a, int8x16_t __b)
        -:23587:{
        -:23588:  return __builtin_aarch64_sqshlv16qi (__a, __b);
        -:23589:}
        -:23590:
        -:23591:__extension__ extern __inline int16x8_t
        -:23592:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23593:vqshlq_s16 (int16x8_t __a, int16x8_t __b)
        -:23594:{
        -:23595:  return __builtin_aarch64_sqshlv8hi (__a, __b);
        -:23596:}
        -:23597:
        -:23598:__extension__ extern __inline int32x4_t
        -:23599:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23600:vqshlq_s32 (int32x4_t __a, int32x4_t __b)
        -:23601:{
        -:23602:  return __builtin_aarch64_sqshlv4si (__a, __b);
        -:23603:}
        -:23604:
        -:23605:__extension__ extern __inline int64x2_t
        -:23606:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23607:vqshlq_s64 (int64x2_t __a, int64x2_t __b)
        -:23608:{
        -:23609:  return __builtin_aarch64_sqshlv2di (__a, __b);
        -:23610:}
        -:23611:
        -:23612:__extension__ extern __inline uint8x16_t
        -:23613:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23614:vqshlq_u8 (uint8x16_t __a, int8x16_t __b)
        -:23615:{
        -:23616:  return __builtin_aarch64_uqshlv16qi_uus ( __a, __b);
        -:23617:}
        -:23618:
        -:23619:__extension__ extern __inline uint16x8_t
        -:23620:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23621:vqshlq_u16 (uint16x8_t __a, int16x8_t __b)
        -:23622:{
        -:23623:  return __builtin_aarch64_uqshlv8hi_uus ( __a, __b);
        -:23624:}
        -:23625:
        -:23626:__extension__ extern __inline uint32x4_t
        -:23627:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23628:vqshlq_u32 (uint32x4_t __a, int32x4_t __b)
        -:23629:{
        -:23630:  return __builtin_aarch64_uqshlv4si_uus ( __a, __b);
        -:23631:}
        -:23632:
        -:23633:__extension__ extern __inline uint64x2_t
        -:23634:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23635:vqshlq_u64 (uint64x2_t __a, int64x2_t __b)
        -:23636:{
        -:23637:  return __builtin_aarch64_uqshlv2di_uus ( __a, __b);
        -:23638:}
        -:23639:
        -:23640:__extension__ extern __inline int8_t
        -:23641:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23642:vqshlb_s8 (int8_t __a, int8_t __b)
        -:23643:{
        -:23644:  return __builtin_aarch64_sqshlqi (__a, __b);
        -:23645:}
        -:23646:
        -:23647:__extension__ extern __inline int16_t
        -:23648:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23649:vqshlh_s16 (int16_t __a, int16_t __b)
        -:23650:{
        -:23651:  return __builtin_aarch64_sqshlhi (__a, __b);
        -:23652:}
        -:23653:
        -:23654:__extension__ extern __inline int32_t
        -:23655:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23656:vqshls_s32 (int32_t __a, int32_t __b)
        -:23657:{
        -:23658:  return __builtin_aarch64_sqshlsi (__a, __b);
        -:23659:}
        -:23660:
        -:23661:__extension__ extern __inline int64_t
        -:23662:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23663:vqshld_s64 (int64_t __a, int64_t __b)
        -:23664:{
        -:23665:  return __builtin_aarch64_sqshldi (__a, __b);
        -:23666:}
        -:23667:
        -:23668:__extension__ extern __inline uint8_t
        -:23669:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23670:vqshlb_u8 (uint8_t __a, uint8_t __b)
        -:23671:{
        -:23672:  return __builtin_aarch64_uqshlqi_uus (__a, __b);
        -:23673:}
        -:23674:
        -:23675:__extension__ extern __inline uint16_t
        -:23676:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23677:vqshlh_u16 (uint16_t __a, uint16_t __b)
        -:23678:{
        -:23679:  return __builtin_aarch64_uqshlhi_uus (__a, __b);
        -:23680:}
        -:23681:
        -:23682:__extension__ extern __inline uint32_t
        -:23683:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23684:vqshls_u32 (uint32_t __a, uint32_t __b)
        -:23685:{
        -:23686:  return __builtin_aarch64_uqshlsi_uus (__a, __b);
        -:23687:}
        -:23688:
        -:23689:__extension__ extern __inline uint64_t
        -:23690:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23691:vqshld_u64 (uint64_t __a, uint64_t __b)
        -:23692:{
        -:23693:  return __builtin_aarch64_uqshldi_uus (__a, __b);
        -:23694:}
        -:23695:
        -:23696:__extension__ extern __inline int8x8_t
        -:23697:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23698:vqshl_n_s8 (int8x8_t __a, const int __b)
        -:23699:{
        -:23700:  return (int8x8_t) __builtin_aarch64_sqshl_nv8qi (__a, __b);
        -:23701:}
        -:23702:
        -:23703:__extension__ extern __inline int16x4_t
        -:23704:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23705:vqshl_n_s16 (int16x4_t __a, const int __b)
        -:23706:{
        -:23707:  return (int16x4_t) __builtin_aarch64_sqshl_nv4hi (__a, __b);
        -:23708:}
        -:23709:
        -:23710:__extension__ extern __inline int32x2_t
        -:23711:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23712:vqshl_n_s32 (int32x2_t __a, const int __b)
        -:23713:{
        -:23714:  return (int32x2_t) __builtin_aarch64_sqshl_nv2si (__a, __b);
        -:23715:}
        -:23716:
        -:23717:__extension__ extern __inline int64x1_t
        -:23718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23719:vqshl_n_s64 (int64x1_t __a, const int __b)
        -:23720:{
        -:23721:  return (int64x1_t) {__builtin_aarch64_sqshl_ndi (__a[0], __b)};
        -:23722:}
        -:23723:
        -:23724:__extension__ extern __inline uint8x8_t
        -:23725:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23726:vqshl_n_u8 (uint8x8_t __a, const int __b)
        -:23727:{
        -:23728:  return __builtin_aarch64_uqshl_nv8qi_uus (__a, __b);
        -:23729:}
        -:23730:
        -:23731:__extension__ extern __inline uint16x4_t
        -:23732:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23733:vqshl_n_u16 (uint16x4_t __a, const int __b)
        -:23734:{
        -:23735:  return __builtin_aarch64_uqshl_nv4hi_uus (__a, __b);
        -:23736:}
        -:23737:
        -:23738:__extension__ extern __inline uint32x2_t
        -:23739:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23740:vqshl_n_u32 (uint32x2_t __a, const int __b)
        -:23741:{
        -:23742:  return __builtin_aarch64_uqshl_nv2si_uus (__a, __b);
        -:23743:}
        -:23744:
        -:23745:__extension__ extern __inline uint64x1_t
        -:23746:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23747:vqshl_n_u64 (uint64x1_t __a, const int __b)
        -:23748:{
        -:23749:  return (uint64x1_t) {__builtin_aarch64_uqshl_ndi_uus (__a[0], __b)};
        -:23750:}
        -:23751:
        -:23752:__extension__ extern __inline int8x16_t
        -:23753:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23754:vqshlq_n_s8 (int8x16_t __a, const int __b)
        -:23755:{
        -:23756:  return (int8x16_t) __builtin_aarch64_sqshl_nv16qi (__a, __b);
        -:23757:}
        -:23758:
        -:23759:__extension__ extern __inline int16x8_t
        -:23760:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23761:vqshlq_n_s16 (int16x8_t __a, const int __b)
        -:23762:{
        -:23763:  return (int16x8_t) __builtin_aarch64_sqshl_nv8hi (__a, __b);
        -:23764:}
        -:23765:
        -:23766:__extension__ extern __inline int32x4_t
        -:23767:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23768:vqshlq_n_s32 (int32x4_t __a, const int __b)
        -:23769:{
        -:23770:  return (int32x4_t) __builtin_aarch64_sqshl_nv4si (__a, __b);
        -:23771:}
        -:23772:
        -:23773:__extension__ extern __inline int64x2_t
        -:23774:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23775:vqshlq_n_s64 (int64x2_t __a, const int __b)
        -:23776:{
        -:23777:  return (int64x2_t) __builtin_aarch64_sqshl_nv2di (__a, __b);
        -:23778:}
        -:23779:
        -:23780:__extension__ extern __inline uint8x16_t
        -:23781:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23782:vqshlq_n_u8 (uint8x16_t __a, const int __b)
        -:23783:{
        -:23784:  return __builtin_aarch64_uqshl_nv16qi_uus (__a, __b);
        -:23785:}
        -:23786:
        -:23787:__extension__ extern __inline uint16x8_t
        -:23788:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23789:vqshlq_n_u16 (uint16x8_t __a, const int __b)
        -:23790:{
        -:23791:  return __builtin_aarch64_uqshl_nv8hi_uus (__a, __b);
        -:23792:}
        -:23793:
        -:23794:__extension__ extern __inline uint32x4_t
        -:23795:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23796:vqshlq_n_u32 (uint32x4_t __a, const int __b)
        -:23797:{
        -:23798:  return __builtin_aarch64_uqshl_nv4si_uus (__a, __b);
        -:23799:}
        -:23800:
        -:23801:__extension__ extern __inline uint64x2_t
        -:23802:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23803:vqshlq_n_u64 (uint64x2_t __a, const int __b)
        -:23804:{
        -:23805:  return __builtin_aarch64_uqshl_nv2di_uus (__a, __b);
        -:23806:}
        -:23807:
        -:23808:__extension__ extern __inline int8_t
        -:23809:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23810:vqshlb_n_s8 (int8_t __a, const int __b)
        -:23811:{
        -:23812:  return (int8_t) __builtin_aarch64_sqshl_nqi (__a, __b);
        -:23813:}
        -:23814:
        -:23815:__extension__ extern __inline int16_t
        -:23816:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23817:vqshlh_n_s16 (int16_t __a, const int __b)
        -:23818:{
        -:23819:  return (int16_t) __builtin_aarch64_sqshl_nhi (__a, __b);
        -:23820:}
        -:23821:
        -:23822:__extension__ extern __inline int32_t
        -:23823:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23824:vqshls_n_s32 (int32_t __a, const int __b)
        -:23825:{
        -:23826:  return (int32_t) __builtin_aarch64_sqshl_nsi (__a, __b);
        -:23827:}
        -:23828:
        -:23829:__extension__ extern __inline int64_t
        -:23830:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23831:vqshld_n_s64 (int64_t __a, const int __b)
        -:23832:{
        -:23833:  return __builtin_aarch64_sqshl_ndi (__a, __b);
        -:23834:}
        -:23835:
        -:23836:__extension__ extern __inline uint8_t
        -:23837:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23838:vqshlb_n_u8 (uint8_t __a, const int __b)
        -:23839:{
        -:23840:  return __builtin_aarch64_uqshl_nqi_uus (__a, __b);
        -:23841:}
        -:23842:
        -:23843:__extension__ extern __inline uint16_t
        -:23844:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23845:vqshlh_n_u16 (uint16_t __a, const int __b)
        -:23846:{
        -:23847:  return __builtin_aarch64_uqshl_nhi_uus (__a, __b);
        -:23848:}
        -:23849:
        -:23850:__extension__ extern __inline uint32_t
        -:23851:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23852:vqshls_n_u32 (uint32_t __a, const int __b)
        -:23853:{
        -:23854:  return __builtin_aarch64_uqshl_nsi_uus (__a, __b);
        -:23855:}
        -:23856:
        -:23857:__extension__ extern __inline uint64_t
        -:23858:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23859:vqshld_n_u64 (uint64_t __a, const int __b)
        -:23860:{
        -:23861:  return __builtin_aarch64_uqshl_ndi_uus (__a, __b);
        -:23862:}
        -:23863:
        -:23864:/* vqshlu */
        -:23865:
        -:23866:__extension__ extern __inline uint8x8_t
        -:23867:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23868:vqshlu_n_s8 (int8x8_t __a, const int __b)
        -:23869:{
        -:23870:  return __builtin_aarch64_sqshlu_nv8qi_uss (__a, __b);
        -:23871:}
        -:23872:
        -:23873:__extension__ extern __inline uint16x4_t
        -:23874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23875:vqshlu_n_s16 (int16x4_t __a, const int __b)
        -:23876:{
        -:23877:  return __builtin_aarch64_sqshlu_nv4hi_uss (__a, __b);
        -:23878:}
        -:23879:
        -:23880:__extension__ extern __inline uint32x2_t
        -:23881:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23882:vqshlu_n_s32 (int32x2_t __a, const int __b)
        -:23883:{
        -:23884:  return __builtin_aarch64_sqshlu_nv2si_uss (__a, __b);
        -:23885:}
        -:23886:
        -:23887:__extension__ extern __inline uint64x1_t
        -:23888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23889:vqshlu_n_s64 (int64x1_t __a, const int __b)
        -:23890:{
        -:23891:  return (uint64x1_t) {__builtin_aarch64_sqshlu_ndi_uss (__a[0], __b)};
        -:23892:}
        -:23893:
        -:23894:__extension__ extern __inline uint8x16_t
        -:23895:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23896:vqshluq_n_s8 (int8x16_t __a, const int __b)
        -:23897:{
        -:23898:  return __builtin_aarch64_sqshlu_nv16qi_uss (__a, __b);
        -:23899:}
        -:23900:
        -:23901:__extension__ extern __inline uint16x8_t
        -:23902:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23903:vqshluq_n_s16 (int16x8_t __a, const int __b)
        -:23904:{
        -:23905:  return __builtin_aarch64_sqshlu_nv8hi_uss (__a, __b);
        -:23906:}
        -:23907:
        -:23908:__extension__ extern __inline uint32x4_t
        -:23909:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23910:vqshluq_n_s32 (int32x4_t __a, const int __b)
        -:23911:{
        -:23912:  return __builtin_aarch64_sqshlu_nv4si_uss (__a, __b);
        -:23913:}
        -:23914:
        -:23915:__extension__ extern __inline uint64x2_t
        -:23916:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23917:vqshluq_n_s64 (int64x2_t __a, const int __b)
        -:23918:{
        -:23919:  return __builtin_aarch64_sqshlu_nv2di_uss (__a, __b);
        -:23920:}
        -:23921:
        -:23922:__extension__ extern __inline int8_t
        -:23923:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23924:vqshlub_n_s8 (int8_t __a, const int __b)
        -:23925:{
        -:23926:  return (int8_t) __builtin_aarch64_sqshlu_nqi_uss (__a, __b);
        -:23927:}
        -:23928:
        -:23929:__extension__ extern __inline int16_t
        -:23930:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23931:vqshluh_n_s16 (int16_t __a, const int __b)
        -:23932:{
        -:23933:  return (int16_t) __builtin_aarch64_sqshlu_nhi_uss (__a, __b);
        -:23934:}
        -:23935:
        -:23936:__extension__ extern __inline int32_t
        -:23937:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23938:vqshlus_n_s32 (int32_t __a, const int __b)
        -:23939:{
        -:23940:  return (int32_t) __builtin_aarch64_sqshlu_nsi_uss (__a, __b);
        -:23941:}
        -:23942:
        -:23943:__extension__ extern __inline uint64_t
        -:23944:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23945:vqshlud_n_s64 (int64_t __a, const int __b)
        -:23946:{
        -:23947:  return __builtin_aarch64_sqshlu_ndi_uss (__a, __b);
        -:23948:}
        -:23949:
        -:23950:/* vqshrn */
        -:23951:
        -:23952:__extension__ extern __inline int8x8_t
        -:23953:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23954:vqshrn_n_s16 (int16x8_t __a, const int __b)
        -:23955:{
        -:23956:  return (int8x8_t) __builtin_aarch64_sqshrn_nv8hi (__a, __b);
        -:23957:}
        -:23958:
        -:23959:__extension__ extern __inline int16x4_t
        -:23960:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23961:vqshrn_n_s32 (int32x4_t __a, const int __b)
        -:23962:{
        -:23963:  return (int16x4_t) __builtin_aarch64_sqshrn_nv4si (__a, __b);
        -:23964:}
        -:23965:
        -:23966:__extension__ extern __inline int32x2_t
        -:23967:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23968:vqshrn_n_s64 (int64x2_t __a, const int __b)
        -:23969:{
        -:23970:  return (int32x2_t) __builtin_aarch64_sqshrn_nv2di (__a, __b);
        -:23971:}
        -:23972:
        -:23973:__extension__ extern __inline uint8x8_t
        -:23974:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23975:vqshrn_n_u16 (uint16x8_t __a, const int __b)
        -:23976:{
        -:23977:  return __builtin_aarch64_uqshrn_nv8hi_uus ( __a, __b);
        -:23978:}
        -:23979:
        -:23980:__extension__ extern __inline uint16x4_t
        -:23981:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23982:vqshrn_n_u32 (uint32x4_t __a, const int __b)
        -:23983:{
        -:23984:  return __builtin_aarch64_uqshrn_nv4si_uus ( __a, __b);
        -:23985:}
        -:23986:
        -:23987:__extension__ extern __inline uint32x2_t
        -:23988:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23989:vqshrn_n_u64 (uint64x2_t __a, const int __b)
        -:23990:{
        -:23991:  return __builtin_aarch64_uqshrn_nv2di_uus ( __a, __b);
        -:23992:}
        -:23993:
        -:23994:__extension__ extern __inline int8_t
        -:23995:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:23996:vqshrnh_n_s16 (int16_t __a, const int __b)
        -:23997:{
        -:23998:  return (int8_t) __builtin_aarch64_sqshrn_nhi (__a, __b);
        -:23999:}
        -:24000:
        -:24001:__extension__ extern __inline int16_t
        -:24002:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24003:vqshrns_n_s32 (int32_t __a, const int __b)
        -:24004:{
        -:24005:  return (int16_t) __builtin_aarch64_sqshrn_nsi (__a, __b);
        -:24006:}
        -:24007:
        -:24008:__extension__ extern __inline int32_t
        -:24009:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24010:vqshrnd_n_s64 (int64_t __a, const int __b)
        -:24011:{
        -:24012:  return (int32_t) __builtin_aarch64_sqshrn_ndi (__a, __b);
        -:24013:}
        -:24014:
        -:24015:__extension__ extern __inline uint8_t
        -:24016:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24017:vqshrnh_n_u16 (uint16_t __a, const int __b)
        -:24018:{
        -:24019:  return __builtin_aarch64_uqshrn_nhi_uus (__a, __b);
        -:24020:}
        -:24021:
        -:24022:__extension__ extern __inline uint16_t
        -:24023:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24024:vqshrns_n_u32 (uint32_t __a, const int __b)
        -:24025:{
        -:24026:  return __builtin_aarch64_uqshrn_nsi_uus (__a, __b);
        -:24027:}
        -:24028:
        -:24029:__extension__ extern __inline uint32_t
        -:24030:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24031:vqshrnd_n_u64 (uint64_t __a, const int __b)
        -:24032:{
        -:24033:  return __builtin_aarch64_uqshrn_ndi_uus (__a, __b);
        -:24034:}
        -:24035:
        -:24036:/* vqshrun */
        -:24037:
        -:24038:__extension__ extern __inline uint8x8_t
        -:24039:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24040:vqshrun_n_s16 (int16x8_t __a, const int __b)
        -:24041:{
        -:24042:  return (uint8x8_t) __builtin_aarch64_sqshrun_nv8hi (__a, __b);
        -:24043:}
        -:24044:
        -:24045:__extension__ extern __inline uint16x4_t
        -:24046:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24047:vqshrun_n_s32 (int32x4_t __a, const int __b)
        -:24048:{
        -:24049:  return (uint16x4_t) __builtin_aarch64_sqshrun_nv4si (__a, __b);
        -:24050:}
        -:24051:
        -:24052:__extension__ extern __inline uint32x2_t
        -:24053:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24054:vqshrun_n_s64 (int64x2_t __a, const int __b)
        -:24055:{
        -:24056:  return (uint32x2_t) __builtin_aarch64_sqshrun_nv2di (__a, __b);
        -:24057:}
        -:24058:
        -:24059:__extension__ extern __inline int8_t
        -:24060:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24061:vqshrunh_n_s16 (int16_t __a, const int __b)
        -:24062:{
        -:24063:  return (int8_t) __builtin_aarch64_sqshrun_nhi (__a, __b);
        -:24064:}
        -:24065:
        -:24066:__extension__ extern __inline int16_t
        -:24067:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24068:vqshruns_n_s32 (int32_t __a, const int __b)
        -:24069:{
        -:24070:  return (int16_t) __builtin_aarch64_sqshrun_nsi (__a, __b);
        -:24071:}
        -:24072:
        -:24073:__extension__ extern __inline int32_t
        -:24074:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24075:vqshrund_n_s64 (int64_t __a, const int __b)
        -:24076:{
        -:24077:  return (int32_t) __builtin_aarch64_sqshrun_ndi (__a, __b);
        -:24078:}
        -:24079:
        -:24080:/* vqsub */
        -:24081:
        -:24082:__extension__ extern __inline int8_t
        -:24083:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24084:vqsubb_s8 (int8_t __a, int8_t __b)
        -:24085:{
        -:24086:  return (int8_t) __builtin_aarch64_sqsubqi (__a, __b);
        -:24087:}
        -:24088:
        -:24089:__extension__ extern __inline int16_t
        -:24090:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24091:vqsubh_s16 (int16_t __a, int16_t __b)
        -:24092:{
        -:24093:  return (int16_t) __builtin_aarch64_sqsubhi (__a, __b);
        -:24094:}
        -:24095:
        -:24096:__extension__ extern __inline int32_t
        -:24097:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24098:vqsubs_s32 (int32_t __a, int32_t __b)
        -:24099:{
        -:24100:  return (int32_t) __builtin_aarch64_sqsubsi (__a, __b);
        -:24101:}
        -:24102:
        -:24103:__extension__ extern __inline int64_t
        -:24104:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24105:vqsubd_s64 (int64_t __a, int64_t __b)
        -:24106:{
        -:24107:  return __builtin_aarch64_sqsubdi (__a, __b);
        -:24108:}
        -:24109:
        -:24110:__extension__ extern __inline uint8_t
        -:24111:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24112:vqsubb_u8 (uint8_t __a, uint8_t __b)
        -:24113:{
        -:24114:  return (uint8_t) __builtin_aarch64_uqsubqi_uuu (__a, __b);
        -:24115:}
        -:24116:
        -:24117:__extension__ extern __inline uint16_t
        -:24118:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24119:vqsubh_u16 (uint16_t __a, uint16_t __b)
        -:24120:{
        -:24121:  return (uint16_t) __builtin_aarch64_uqsubhi_uuu (__a, __b);
        -:24122:}
        -:24123:
        -:24124:__extension__ extern __inline uint32_t
        -:24125:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24126:vqsubs_u32 (uint32_t __a, uint32_t __b)
        -:24127:{
        -:24128:  return (uint32_t) __builtin_aarch64_uqsubsi_uuu (__a, __b);
        -:24129:}
        -:24130:
        -:24131:__extension__ extern __inline uint64_t
        -:24132:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24133:vqsubd_u64 (uint64_t __a, uint64_t __b)
        -:24134:{
        -:24135:  return __builtin_aarch64_uqsubdi_uuu (__a, __b);
        -:24136:}
        -:24137:
        -:24138:/* vqtbl2 */
        -:24139:
        -:24140:__extension__ extern __inline int8x8_t
        -:24141:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24142:vqtbl2_s8 (int8x16x2_t tab, uint8x8_t idx)
        -:24143:{
        -:24144:  __builtin_aarch64_simd_oi __o;
        -:24145:  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[0], 0);
        -:24146:  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[1], 1);
        -:24147:  return __builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);
        -:24148:}
        -:24149:
        -:24150:__extension__ extern __inline uint8x8_t
        -:24151:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24152:vqtbl2_u8 (uint8x16x2_t tab, uint8x8_t idx)
        -:24153:{
        -:24154:  __builtin_aarch64_simd_oi __o;
        -:24155:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24156:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24157:  return (uint8x8_t)__builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);
        -:24158:}
        -:24159:
        -:24160:__extension__ extern __inline poly8x8_t
        -:24161:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24162:vqtbl2_p8 (poly8x16x2_t tab, uint8x8_t idx)
        -:24163:{
        -:24164:  __builtin_aarch64_simd_oi __o;
        -:24165:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24166:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24167:  return (poly8x8_t)__builtin_aarch64_tbl3v8qi (__o, (int8x8_t)idx);
        -:24168:}
        -:24169:
        -:24170:__extension__ extern __inline int8x16_t
        -:24171:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24172:vqtbl2q_s8 (int8x16x2_t tab, uint8x16_t idx)
        -:24173:{
        -:24174:  __builtin_aarch64_simd_oi __o;
        -:24175:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24176:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24177:  return __builtin_aarch64_tbl3v16qi (__o, (int8x16_t)idx);
        -:24178:}
        -:24179:
        -:24180:__extension__ extern __inline uint8x16_t
        -:24181:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24182:vqtbl2q_u8 (uint8x16x2_t tab, uint8x16_t idx)
        -:24183:{
        -:24184:  __builtin_aarch64_simd_oi __o;
        -:24185:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24186:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24187:  return (uint8x16_t)__builtin_aarch64_tbl3v16qi (__o, (int8x16_t)idx);
        -:24188:}
        -:24189:
        -:24190:__extension__ extern __inline poly8x16_t
        -:24191:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24192:vqtbl2q_p8 (poly8x16x2_t tab, uint8x16_t idx)
        -:24193:{
        -:24194:  __builtin_aarch64_simd_oi __o;
        -:24195:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24196:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24197:  return (poly8x16_t)__builtin_aarch64_tbl3v16qi (__o, (int8x16_t)idx);
        -:24198:}
        -:24199:
        -:24200:/* vqtbl3 */
        -:24201:
        -:24202:__extension__ extern __inline int8x8_t
        -:24203:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24204:vqtbl3_s8 (int8x16x3_t tab, uint8x8_t idx)
        -:24205:{
        -:24206:  __builtin_aarch64_simd_ci __o;
        -:24207:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24208:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24209:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24210:  return __builtin_aarch64_qtbl3v8qi (__o, (int8x8_t)idx);
        -:24211:}
        -:24212:
        -:24213:__extension__ extern __inline uint8x8_t
        -:24214:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24215:vqtbl3_u8 (uint8x16x3_t tab, uint8x8_t idx)
        -:24216:{
        -:24217:  __builtin_aarch64_simd_ci __o;
        -:24218:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24219:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24220:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24221:  return (uint8x8_t)__builtin_aarch64_qtbl3v8qi (__o, (int8x8_t)idx);
        -:24222:}
        -:24223:
        -:24224:__extension__ extern __inline poly8x8_t
        -:24225:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24226:vqtbl3_p8 (poly8x16x3_t tab, uint8x8_t idx)
        -:24227:{
        -:24228:  __builtin_aarch64_simd_ci __o;
        -:24229:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24230:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24231:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24232:  return (poly8x8_t)__builtin_aarch64_qtbl3v8qi (__o, (int8x8_t)idx);
        -:24233:}
        -:24234:
        -:24235:__extension__ extern __inline int8x16_t
        -:24236:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24237:vqtbl3q_s8 (int8x16x3_t tab, uint8x16_t idx)
        -:24238:{
        -:24239:  __builtin_aarch64_simd_ci __o;
        -:24240:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24241:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24242:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24243:  return __builtin_aarch64_qtbl3v16qi (__o, (int8x16_t)idx);
        -:24244:}
        -:24245:
        -:24246:__extension__ extern __inline uint8x16_t
        -:24247:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24248:vqtbl3q_u8 (uint8x16x3_t tab, uint8x16_t idx)
        -:24249:{
        -:24250:  __builtin_aarch64_simd_ci __o;
        -:24251:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24252:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24253:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24254:  return (uint8x16_t)__builtin_aarch64_qtbl3v16qi (__o, (int8x16_t)idx);
        -:24255:}
        -:24256:
        -:24257:__extension__ extern __inline poly8x16_t
        -:24258:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24259:vqtbl3q_p8 (poly8x16x3_t tab, uint8x16_t idx)
        -:24260:{
        -:24261:  __builtin_aarch64_simd_ci __o;
        -:24262:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24263:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24264:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24265:  return (poly8x16_t)__builtin_aarch64_qtbl3v16qi (__o, (int8x16_t)idx);
        -:24266:}
        -:24267:
        -:24268:/* vqtbl4 */
        -:24269:
        -:24270:__extension__ extern __inline int8x8_t
        -:24271:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24272:vqtbl4_s8 (int8x16x4_t tab, uint8x8_t idx)
        -:24273:{
        -:24274:  __builtin_aarch64_simd_xi __o;
        -:24275:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24276:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24277:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24278:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24279:  return __builtin_aarch64_qtbl4v8qi (__o, (int8x8_t)idx);
        -:24280:}
        -:24281:
        -:24282:__extension__ extern __inline uint8x8_t
        -:24283:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24284:vqtbl4_u8 (uint8x16x4_t tab, uint8x8_t idx)
        -:24285:{
        -:24286:  __builtin_aarch64_simd_xi __o;
        -:24287:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24288:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24289:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24290:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24291:  return (uint8x8_t)__builtin_aarch64_qtbl4v8qi (__o, (int8x8_t)idx);
        -:24292:}
        -:24293:
        -:24294:__extension__ extern __inline poly8x8_t
        -:24295:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24296:vqtbl4_p8 (poly8x16x4_t tab, uint8x8_t idx)
        -:24297:{
        -:24298:  __builtin_aarch64_simd_xi __o;
        -:24299:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24300:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24301:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24302:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24303:  return (poly8x8_t)__builtin_aarch64_qtbl4v8qi (__o, (int8x8_t)idx);
        -:24304:}
        -:24305:
        -:24306:__extension__ extern __inline int8x16_t
        -:24307:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24308:vqtbl4q_s8 (int8x16x4_t tab, uint8x16_t idx)
        -:24309:{
        -:24310:  __builtin_aarch64_simd_xi __o;
        -:24311:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24312:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24313:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24314:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24315:  return __builtin_aarch64_qtbl4v16qi (__o, (int8x16_t)idx);
        -:24316:}
        -:24317:
        -:24318:__extension__ extern __inline uint8x16_t
        -:24319:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24320:vqtbl4q_u8 (uint8x16x4_t tab, uint8x16_t idx)
        -:24321:{
        -:24322:  __builtin_aarch64_simd_xi __o;
        -:24323:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24324:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24325:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24326:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24327:  return (uint8x16_t)__builtin_aarch64_qtbl4v16qi (__o, (int8x16_t)idx);
        -:24328:}
        -:24329:
        -:24330:__extension__ extern __inline poly8x16_t
        -:24331:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24332:vqtbl4q_p8 (poly8x16x4_t tab, uint8x16_t idx)
        -:24333:{
        -:24334:  __builtin_aarch64_simd_xi __o;
        -:24335:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24336:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24337:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24338:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24339:  return (poly8x16_t)__builtin_aarch64_qtbl4v16qi (__o, (int8x16_t)idx);
        -:24340:}
        -:24341:
        -:24342:
        -:24343:/* vqtbx2 */
        -:24344:__extension__ extern __inline int8x8_t
        -:24345:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24346:vqtbx2_s8 (int8x8_t r, int8x16x2_t tab, uint8x8_t idx)
        -:24347:{
        -:24348:  __builtin_aarch64_simd_oi __o;
        -:24349:  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[0], 0);
        -:24350:  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[1], 1);
        -:24351:  return __builtin_aarch64_tbx4v8qi (r, __o, (int8x8_t)idx);
        -:24352:}
        -:24353:
        -:24354:__extension__ extern __inline uint8x8_t
        -:24355:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24356:vqtbx2_u8 (uint8x8_t r, uint8x16x2_t tab, uint8x8_t idx)
        -:24357:{
        -:24358:  __builtin_aarch64_simd_oi __o;
        -:24359:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24360:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24361:  return (uint8x8_t)__builtin_aarch64_tbx4v8qi ((int8x8_t)r, __o,
        -:24362:						(int8x8_t)idx);
        -:24363:}
        -:24364:
        -:24365:__extension__ extern __inline poly8x8_t
        -:24366:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24367:vqtbx2_p8 (poly8x8_t r, poly8x16x2_t tab, uint8x8_t idx)
        -:24368:{
        -:24369:  __builtin_aarch64_simd_oi __o;
        -:24370:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24371:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24372:  return (poly8x8_t)__builtin_aarch64_tbx4v8qi ((int8x8_t)r, __o,
        -:24373:						(int8x8_t)idx);
        -:24374:}
        -:24375:
        -:24376:__extension__ extern __inline int8x16_t
        -:24377:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24378:vqtbx2q_s8 (int8x16_t r, int8x16x2_t tab, uint8x16_t idx)
        -:24379:{
        -:24380:  __builtin_aarch64_simd_oi __o;
        -:24381:  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[0], 0);
        -:24382:  __o = __builtin_aarch64_set_qregoiv16qi (__o, tab.val[1], 1);
        -:24383:  return __builtin_aarch64_tbx4v16qi (r, __o, (int8x16_t)idx);
        -:24384:}
        -:24385:
        -:24386:__extension__ extern __inline uint8x16_t
        -:24387:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24388:vqtbx2q_u8 (uint8x16_t r, uint8x16x2_t tab, uint8x16_t idx)
        -:24389:{
        -:24390:  __builtin_aarch64_simd_oi __o;
        -:24391:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24392:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24393:  return (uint8x16_t)__builtin_aarch64_tbx4v16qi ((int8x16_t)r, __o,
        -:24394:						  (int8x16_t)idx);
        -:24395:}
        -:24396:
        -:24397:__extension__ extern __inline poly8x16_t
        -:24398:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24399:vqtbx2q_p8 (poly8x16_t r, poly8x16x2_t tab, uint8x16_t idx)
        -:24400:{
        -:24401:  __builtin_aarch64_simd_oi __o;
        -:24402:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24403:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24404:  return (poly8x16_t)__builtin_aarch64_tbx4v16qi ((int8x16_t)r, __o,
        -:24405:						  (int8x16_t)idx);
        -:24406:}
        -:24407:
        -:24408:/* vqtbx3 */
        -:24409:__extension__ extern __inline int8x8_t
        -:24410:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24411:vqtbx3_s8 (int8x8_t r, int8x16x3_t tab, uint8x8_t idx)
        -:24412:{
        -:24413:  __builtin_aarch64_simd_ci __o;
        -:24414:  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[0], 0);
        -:24415:  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[1], 1);
        -:24416:  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[2], 2);
        -:24417:  return __builtin_aarch64_qtbx3v8qi (r, __o, (int8x8_t)idx);
        -:24418:}
        -:24419:
        -:24420:__extension__ extern __inline uint8x8_t
        -:24421:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24422:vqtbx3_u8 (uint8x8_t r, uint8x16x3_t tab, uint8x8_t idx)
        -:24423:{
        -:24424:  __builtin_aarch64_simd_ci __o;
        -:24425:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24426:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24427:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24428:  return (uint8x8_t)__builtin_aarch64_qtbx3v8qi ((int8x8_t)r, __o,
        -:24429:						 (int8x8_t)idx);
        -:24430:}
        -:24431:
        -:24432:__extension__ extern __inline poly8x8_t
        -:24433:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24434:vqtbx3_p8 (poly8x8_t r, poly8x16x3_t tab, uint8x8_t idx)
        -:24435:{
        -:24436:  __builtin_aarch64_simd_ci __o;
        -:24437:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24438:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24439:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24440:  return (poly8x8_t)__builtin_aarch64_qtbx3v8qi ((int8x8_t)r, __o,
        -:24441:						 (int8x8_t)idx);
        -:24442:}
        -:24443:
        -:24444:__extension__ extern __inline int8x16_t
        -:24445:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24446:vqtbx3q_s8 (int8x16_t r, int8x16x3_t tab, uint8x16_t idx)
        -:24447:{
        -:24448:  __builtin_aarch64_simd_ci __o;
        -:24449:  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[0], 0);
        -:24450:  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[1], 1);
        -:24451:  __o = __builtin_aarch64_set_qregciv16qi (__o, tab.val[2], 2);
        -:24452:  return __builtin_aarch64_qtbx3v16qi (r, __o, (int8x16_t)idx);
        -:24453:}
        -:24454:
        -:24455:__extension__ extern __inline uint8x16_t
        -:24456:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24457:vqtbx3q_u8 (uint8x16_t r, uint8x16x3_t tab, uint8x16_t idx)
        -:24458:{
        -:24459:  __builtin_aarch64_simd_ci __o;
        -:24460:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24461:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24462:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24463:  return (uint8x16_t)__builtin_aarch64_qtbx3v16qi ((int8x16_t)r, __o,
        -:24464:						   (int8x16_t)idx);
        -:24465:}
        -:24466:
        -:24467:__extension__ extern __inline poly8x16_t
        -:24468:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24469:vqtbx3q_p8 (poly8x16_t r, poly8x16x3_t tab, uint8x16_t idx)
        -:24470:{
        -:24471:  __builtin_aarch64_simd_ci __o;
        -:24472:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24473:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24474:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24475:  return (poly8x16_t)__builtin_aarch64_qtbx3v16qi ((int8x16_t)r, __o,
        -:24476:						   (int8x16_t)idx);
        -:24477:}
        -:24478:
        -:24479:/* vqtbx4 */
        -:24480:
        -:24481:__extension__ extern __inline int8x8_t
        -:24482:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24483:vqtbx4_s8 (int8x8_t r, int8x16x4_t tab, uint8x8_t idx)
        -:24484:{
        -:24485:  __builtin_aarch64_simd_xi __o;
        -:24486:  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[0], 0);
        -:24487:  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[1], 1);
        -:24488:  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[2], 2);
        -:24489:  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[3], 3);
        -:24490:  return __builtin_aarch64_qtbx4v8qi (r, __o, (int8x8_t)idx);
        -:24491:}
        -:24492:
        -:24493:__extension__ extern __inline uint8x8_t
        -:24494:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24495:vqtbx4_u8 (uint8x8_t r, uint8x16x4_t tab, uint8x8_t idx)
        -:24496:{
        -:24497:  __builtin_aarch64_simd_xi __o;
        -:24498:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24499:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24500:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24501:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24502:  return (uint8x8_t)__builtin_aarch64_qtbx4v8qi ((int8x8_t)r, __o,
        -:24503:						 (int8x8_t)idx);
        -:24504:}
        -:24505:
        -:24506:__extension__ extern __inline poly8x8_t
        -:24507:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24508:vqtbx4_p8 (poly8x8_t r, poly8x16x4_t tab, uint8x8_t idx)
        -:24509:{
        -:24510:  __builtin_aarch64_simd_xi __o;
        -:24511:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24512:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24513:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24514:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24515:  return (poly8x8_t)__builtin_aarch64_qtbx4v8qi ((int8x8_t)r, __o,
        -:24516:						 (int8x8_t)idx);
        -:24517:}
        -:24518:
        -:24519:__extension__ extern __inline int8x16_t
        -:24520:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24521:vqtbx4q_s8 (int8x16_t r, int8x16x4_t tab, uint8x16_t idx)
        -:24522:{
        -:24523:  __builtin_aarch64_simd_xi __o;
        -:24524:  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[0], 0);
        -:24525:  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[1], 1);
        -:24526:  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[2], 2);
        -:24527:  __o = __builtin_aarch64_set_qregxiv16qi (__o, tab.val[3], 3);
        -:24528:  return __builtin_aarch64_qtbx4v16qi (r, __o, (int8x16_t)idx);
        -:24529:}
        -:24530:
        -:24531:__extension__ extern __inline uint8x16_t
        -:24532:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24533:vqtbx4q_u8 (uint8x16_t r, uint8x16x4_t tab, uint8x16_t idx)
        -:24534:{
        -:24535:  __builtin_aarch64_simd_xi __o;
        -:24536:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24537:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24538:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24539:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24540:  return (uint8x16_t)__builtin_aarch64_qtbx4v16qi ((int8x16_t)r, __o,
        -:24541:						   (int8x16_t)idx);
        -:24542:}
        -:24543:
        -:24544:__extension__ extern __inline poly8x16_t
        -:24545:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24546:vqtbx4q_p8 (poly8x16_t r, poly8x16x4_t tab, uint8x16_t idx)
        -:24547:{
        -:24548:  __builtin_aarch64_simd_xi __o;
        -:24549:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[0], 0);
        -:24550:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[1], 1);
        -:24551:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[2], 2);
        -:24552:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t)tab.val[3], 3);
        -:24553:  return (poly8x16_t)__builtin_aarch64_qtbx4v16qi ((int8x16_t)r, __o,
        -:24554:						   (int8x16_t)idx);
        -:24555:}
        -:24556:
        -:24557:/* vrbit  */
        -:24558:
        -:24559:__extension__ extern __inline poly8x8_t
        -:24560:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24561:vrbit_p8 (poly8x8_t __a)
        -:24562:{
        -:24563:  return (poly8x8_t) __builtin_aarch64_rbitv8qi ((int8x8_t) __a);
        -:24564:}
        -:24565:
        -:24566:__extension__ extern __inline int8x8_t
        -:24567:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24568:vrbit_s8 (int8x8_t __a)
        -:24569:{
        -:24570:  return __builtin_aarch64_rbitv8qi (__a);
        -:24571:}
        -:24572:
        -:24573:__extension__ extern __inline uint8x8_t
        -:24574:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24575:vrbit_u8 (uint8x8_t __a)
        -:24576:{
        -:24577:  return (uint8x8_t) __builtin_aarch64_rbitv8qi ((int8x8_t) __a);
        -:24578:}
        -:24579:
        -:24580:__extension__ extern __inline poly8x16_t
        -:24581:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24582:vrbitq_p8 (poly8x16_t __a)
        -:24583:{
        -:24584:  return (poly8x16_t) __builtin_aarch64_rbitv16qi ((int8x16_t)__a);
        -:24585:}
        -:24586:
        -:24587:__extension__ extern __inline int8x16_t
        -:24588:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24589:vrbitq_s8 (int8x16_t __a)
        -:24590:{
        -:24591:  return __builtin_aarch64_rbitv16qi (__a);
        -:24592:}
        -:24593:
        -:24594:__extension__ extern __inline uint8x16_t
        -:24595:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24596:vrbitq_u8 (uint8x16_t __a)
        -:24597:{
        -:24598:  return (uint8x16_t) __builtin_aarch64_rbitv16qi ((int8x16_t) __a);
        -:24599:}
        -:24600:
        -:24601:/* vrecpe  */
        -:24602:
        -:24603:__extension__ extern __inline uint32x2_t
        -:24604:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24605:vrecpe_u32 (uint32x2_t __a)
        -:24606:{
        -:24607:  return (uint32x2_t) __builtin_aarch64_urecpev2si ((int32x2_t) __a);
        -:24608:}
        -:24609:
        -:24610:__extension__ extern __inline uint32x4_t
        -:24611:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24612:vrecpeq_u32 (uint32x4_t __a)
        -:24613:{
        -:24614:  return (uint32x4_t) __builtin_aarch64_urecpev4si ((int32x4_t) __a);
        -:24615:}
        -:24616:
        -:24617:__extension__ extern __inline float32_t
        -:24618:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24619:vrecpes_f32 (float32_t __a)
        -:24620:{
        -:24621:  return __builtin_aarch64_frecpesf (__a);
        -:24622:}
        -:24623:
        -:24624:__extension__ extern __inline float64_t
        -:24625:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24626:vrecped_f64 (float64_t __a)
        -:24627:{
        -:24628:  return __builtin_aarch64_frecpedf (__a);
        -:24629:}
        -:24630:
        -:24631:__extension__ extern __inline float32x2_t
        -:24632:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24633:vrecpe_f32 (float32x2_t __a)
        -:24634:{
        -:24635:  return __builtin_aarch64_frecpev2sf (__a);
        -:24636:}
        -:24637:
        -:24638:__extension__ extern __inline float64x1_t
        -:24639:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24640:vrecpe_f64 (float64x1_t __a)
        -:24641:{
        -:24642:  return (float64x1_t) { vrecped_f64 (vget_lane_f64 (__a, 0)) };
        -:24643:}
        -:24644:
        -:24645:__extension__ extern __inline float32x4_t
        -:24646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24647:vrecpeq_f32 (float32x4_t __a)
        -:24648:{
        -:24649:  return __builtin_aarch64_frecpev4sf (__a);
        -:24650:}
        -:24651:
        -:24652:__extension__ extern __inline float64x2_t
        -:24653:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24654:vrecpeq_f64 (float64x2_t __a)
        -:24655:{
        -:24656:  return __builtin_aarch64_frecpev2df (__a);
        -:24657:}
        -:24658:
        -:24659:/* vrecps  */
        -:24660:
        -:24661:__extension__ extern __inline float32_t
        -:24662:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24663:vrecpss_f32 (float32_t __a, float32_t __b)
        -:24664:{
        -:24665:  return __builtin_aarch64_frecpssf (__a, __b);
        -:24666:}
        -:24667:
        -:24668:__extension__ extern __inline float64_t
        -:24669:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24670:vrecpsd_f64 (float64_t __a, float64_t __b)
        -:24671:{
        -:24672:  return __builtin_aarch64_frecpsdf (__a, __b);
        -:24673:}
        -:24674:
        -:24675:__extension__ extern __inline float32x2_t
        -:24676:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24677:vrecps_f32 (float32x2_t __a, float32x2_t __b)
        -:24678:{
        -:24679:  return __builtin_aarch64_frecpsv2sf (__a, __b);
        -:24680:}
        -:24681:
        -:24682:__extension__ extern __inline float64x1_t
        -:24683:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24684:vrecps_f64 (float64x1_t __a, float64x1_t __b)
        -:24685:{
        -:24686:  return (float64x1_t) { vrecpsd_f64 (vget_lane_f64 (__a, 0),
        -:24687:				      vget_lane_f64 (__b, 0)) };
        -:24688:}
        -:24689:
        -:24690:__extension__ extern __inline float32x4_t
        -:24691:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24692:vrecpsq_f32 (float32x4_t __a, float32x4_t __b)
        -:24693:{
        -:24694:  return __builtin_aarch64_frecpsv4sf (__a, __b);
        -:24695:}
        -:24696:
        -:24697:__extension__ extern __inline float64x2_t
        -:24698:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24699:vrecpsq_f64 (float64x2_t __a, float64x2_t __b)
        -:24700:{
        -:24701:  return __builtin_aarch64_frecpsv2df (__a, __b);
        -:24702:}
        -:24703:
        -:24704:/* vrecpx  */
        -:24705:
        -:24706:__extension__ extern __inline float32_t
        -:24707:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24708:vrecpxs_f32 (float32_t __a)
        -:24709:{
        -:24710:  return __builtin_aarch64_frecpxsf (__a);
        -:24711:}
        -:24712:
        -:24713:__extension__ extern __inline float64_t
        -:24714:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24715:vrecpxd_f64 (float64_t __a)
        -:24716:{
        -:24717:  return __builtin_aarch64_frecpxdf (__a);
        -:24718:}
        -:24719:
        -:24720:
        -:24721:/* vrev  */
        -:24722:
        -:24723:__extension__ extern __inline poly8x8_t
        -:24724:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24725:vrev16_p8 (poly8x8_t a)
        -:24726:{
        -:24727:  return __builtin_shuffle (a, (uint8x8_t) { 1, 0, 3, 2, 5, 4, 7, 6 });
        -:24728:}
        -:24729:
        -:24730:__extension__ extern __inline int8x8_t
        -:24731:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24732:vrev16_s8 (int8x8_t a)
        -:24733:{
        -:24734:  return __builtin_shuffle (a, (uint8x8_t) { 1, 0, 3, 2, 5, 4, 7, 6 });
        -:24735:}
        -:24736:
        -:24737:__extension__ extern __inline uint8x8_t
        -:24738:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24739:vrev16_u8 (uint8x8_t a)
        -:24740:{
        -:24741:  return __builtin_shuffle (a, (uint8x8_t) { 1, 0, 3, 2, 5, 4, 7, 6 });
        -:24742:}
        -:24743:
        -:24744:__extension__ extern __inline poly8x16_t
        -:24745:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24746:vrev16q_p8 (poly8x16_t a)
        -:24747:{
        -:24748:  return __builtin_shuffle (a,
        -:24749:      (uint8x16_t) { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14 });
        -:24750:}
        -:24751:
        -:24752:__extension__ extern __inline int8x16_t
        -:24753:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24754:vrev16q_s8 (int8x16_t a)
        -:24755:{
        -:24756:  return __builtin_shuffle (a,
        -:24757:      (uint8x16_t) { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14 });
        -:24758:}
        -:24759:
        -:24760:__extension__ extern __inline uint8x16_t
        -:24761:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24762:vrev16q_u8 (uint8x16_t a)
        -:24763:{
        -:24764:  return __builtin_shuffle (a,
        -:24765:      (uint8x16_t) { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14 });
        -:24766:}
        -:24767:
        -:24768:__extension__ extern __inline poly8x8_t
        -:24769:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24770:vrev32_p8 (poly8x8_t a)
        -:24771:{
        -:24772:  return __builtin_shuffle (a, (uint8x8_t) { 3, 2, 1, 0, 7, 6, 5, 4 });
        -:24773:}
        -:24774:
        -:24775:__extension__ extern __inline poly16x4_t
        -:24776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24777:vrev32_p16 (poly16x4_t a)
        -:24778:{
        -:24779:  return __builtin_shuffle (a, (uint16x4_t) { 1, 0, 3, 2 });
        -:24780:}
        -:24781:
        -:24782:__extension__ extern __inline int8x8_t
        -:24783:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24784:vrev32_s8 (int8x8_t a)
        -:24785:{
        -:24786:  return __builtin_shuffle (a, (uint8x8_t) { 3, 2, 1, 0, 7, 6, 5, 4 });
        -:24787:}
        -:24788:
        -:24789:__extension__ extern __inline int16x4_t
        -:24790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24791:vrev32_s16 (int16x4_t a)
        -:24792:{
        -:24793:  return __builtin_shuffle (a, (uint16x4_t) { 1, 0, 3, 2 });
        -:24794:}
        -:24795:
        -:24796:__extension__ extern __inline uint8x8_t
        -:24797:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24798:vrev32_u8 (uint8x8_t a)
        -:24799:{
        -:24800:  return __builtin_shuffle (a, (uint8x8_t) { 3, 2, 1, 0, 7, 6, 5, 4 });
        -:24801:}
        -:24802:
        -:24803:__extension__ extern __inline uint16x4_t
        -:24804:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24805:vrev32_u16 (uint16x4_t a)
        -:24806:{
        -:24807:  return __builtin_shuffle (a, (uint16x4_t) { 1, 0, 3, 2 });
        -:24808:}
        -:24809:
        -:24810:__extension__ extern __inline poly8x16_t
        -:24811:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24812:vrev32q_p8 (poly8x16_t a)
        -:24813:{
        -:24814:  return __builtin_shuffle (a,
        -:24815:      (uint8x16_t) { 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12 });
        -:24816:}
        -:24817:
        -:24818:__extension__ extern __inline poly16x8_t
        -:24819:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24820:vrev32q_p16 (poly16x8_t a)
        -:24821:{
        -:24822:  return __builtin_shuffle (a, (uint16x8_t) { 1, 0, 3, 2, 5, 4, 7, 6 });
        -:24823:}
        -:24824:
        -:24825:__extension__ extern __inline int8x16_t
        -:24826:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24827:vrev32q_s8 (int8x16_t a)
        -:24828:{
        -:24829:  return __builtin_shuffle (a,
        -:24830:      (uint8x16_t) { 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12 });
        -:24831:}
        -:24832:
        -:24833:__extension__ extern __inline int16x8_t
        -:24834:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24835:vrev32q_s16 (int16x8_t a)
        -:24836:{
        -:24837:  return __builtin_shuffle (a, (uint16x8_t) { 1, 0, 3, 2, 5, 4, 7, 6 });
        -:24838:}
        -:24839:
        -:24840:__extension__ extern __inline uint8x16_t
        -:24841:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24842:vrev32q_u8 (uint8x16_t a)
        -:24843:{
        -:24844:  return __builtin_shuffle (a,
        -:24845:      (uint8x16_t) { 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12 });
        -:24846:}
        -:24847:
        -:24848:__extension__ extern __inline uint16x8_t
        -:24849:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24850:vrev32q_u16 (uint16x8_t a)
        -:24851:{
        -:24852:  return __builtin_shuffle (a, (uint16x8_t) { 1, 0, 3, 2, 5, 4, 7, 6 });
        -:24853:}
        -:24854:
        -:24855:__extension__ extern __inline float16x4_t
        -:24856:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24857:vrev64_f16 (float16x4_t __a)
        -:24858:{
        -:24859:  return __builtin_shuffle (__a, (uint16x4_t) { 3, 2, 1, 0 });
        -:24860:}
        -:24861:
        -:24862:__extension__ extern __inline float32x2_t
        -:24863:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24864:vrev64_f32 (float32x2_t a)
        -:24865:{
        -:24866:  return __builtin_shuffle (a, (uint32x2_t) { 1, 0 });
        -:24867:}
        -:24868:
        -:24869:__extension__ extern __inline poly8x8_t
        -:24870:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24871:vrev64_p8 (poly8x8_t a)
        -:24872:{
        -:24873:  return __builtin_shuffle (a, (uint8x8_t) { 7, 6, 5, 4, 3, 2, 1, 0 });
        -:24874:}
        -:24875:
        -:24876:__extension__ extern __inline poly16x4_t
        -:24877:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24878:vrev64_p16 (poly16x4_t a)
        -:24879:{
        -:24880:  return __builtin_shuffle (a, (uint16x4_t) { 3, 2, 1, 0 });
        -:24881:}
        -:24882:
        -:24883:__extension__ extern __inline int8x8_t
        -:24884:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24885:vrev64_s8 (int8x8_t a)
        -:24886:{
        -:24887:  return __builtin_shuffle (a, (uint8x8_t) { 7, 6, 5, 4, 3, 2, 1, 0 });
        -:24888:}
        -:24889:
        -:24890:__extension__ extern __inline int16x4_t
        -:24891:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24892:vrev64_s16 (int16x4_t a)
        -:24893:{
        -:24894:  return __builtin_shuffle (a, (uint16x4_t) { 3, 2, 1, 0 });
        -:24895:}
        -:24896:
        -:24897:__extension__ extern __inline int32x2_t
        -:24898:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24899:vrev64_s32 (int32x2_t a)
        -:24900:{
        -:24901:  return __builtin_shuffle (a, (uint32x2_t) { 1, 0 });
        -:24902:}
        -:24903:
        -:24904:__extension__ extern __inline uint8x8_t
        -:24905:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24906:vrev64_u8 (uint8x8_t a)
        -:24907:{
        -:24908:  return __builtin_shuffle (a, (uint8x8_t) { 7, 6, 5, 4, 3, 2, 1, 0 });
        -:24909:}
        -:24910:
        -:24911:__extension__ extern __inline uint16x4_t
        -:24912:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24913:vrev64_u16 (uint16x4_t a)
        -:24914:{
        -:24915:  return __builtin_shuffle (a, (uint16x4_t) { 3, 2, 1, 0 });
        -:24916:}
        -:24917:
        -:24918:__extension__ extern __inline uint32x2_t
        -:24919:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24920:vrev64_u32 (uint32x2_t a)
        -:24921:{
        -:24922:  return __builtin_shuffle (a, (uint32x2_t) { 1, 0 });
        -:24923:}
        -:24924:
        -:24925:__extension__ extern __inline float16x8_t
        -:24926:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24927:vrev64q_f16 (float16x8_t __a)
        -:24928:{
        -:24929:  return __builtin_shuffle (__a, (uint16x8_t) { 3, 2, 1, 0, 7, 6, 5, 4 });
        -:24930:}
        -:24931:
        -:24932:__extension__ extern __inline float32x4_t
        -:24933:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24934:vrev64q_f32 (float32x4_t a)
        -:24935:{
        -:24936:  return __builtin_shuffle (a, (uint32x4_t) { 1, 0, 3, 2 });
        -:24937:}
        -:24938:
        -:24939:__extension__ extern __inline poly8x16_t
        -:24940:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24941:vrev64q_p8 (poly8x16_t a)
        -:24942:{
        -:24943:  return __builtin_shuffle (a,
        -:24944:      (uint8x16_t) { 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8 });
        -:24945:}
        -:24946:
        -:24947:__extension__ extern __inline poly16x8_t
        -:24948:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24949:vrev64q_p16 (poly16x8_t a)
        -:24950:{
        -:24951:  return __builtin_shuffle (a, (uint16x8_t) { 3, 2, 1, 0, 7, 6, 5, 4 });
        -:24952:}
        -:24953:
        -:24954:__extension__ extern __inline int8x16_t
        -:24955:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24956:vrev64q_s8 (int8x16_t a)
        -:24957:{
        -:24958:  return __builtin_shuffle (a,
        -:24959:      (uint8x16_t) { 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8 });
        -:24960:}
        -:24961:
        -:24962:__extension__ extern __inline int16x8_t
        -:24963:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24964:vrev64q_s16 (int16x8_t a)
        -:24965:{
        -:24966:  return __builtin_shuffle (a, (uint16x8_t) { 3, 2, 1, 0, 7, 6, 5, 4 });
        -:24967:}
        -:24968:
        -:24969:__extension__ extern __inline int32x4_t
        -:24970:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24971:vrev64q_s32 (int32x4_t a)
        -:24972:{
        -:24973:  return __builtin_shuffle (a, (uint32x4_t) { 1, 0, 3, 2 });
        -:24974:}
        -:24975:
        -:24976:__extension__ extern __inline uint8x16_t
        -:24977:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24978:vrev64q_u8 (uint8x16_t a)
        -:24979:{
        -:24980:  return __builtin_shuffle (a,
        -:24981:      (uint8x16_t) { 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8 });
        -:24982:}
        -:24983:
        -:24984:__extension__ extern __inline uint16x8_t
        -:24985:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24986:vrev64q_u16 (uint16x8_t a)
        -:24987:{
        -:24988:  return __builtin_shuffle (a, (uint16x8_t) { 3, 2, 1, 0, 7, 6, 5, 4 });
        -:24989:}
        -:24990:
        -:24991:__extension__ extern __inline uint32x4_t
        -:24992:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:24993:vrev64q_u32 (uint32x4_t a)
        -:24994:{
        -:24995:  return __builtin_shuffle (a, (uint32x4_t) { 1, 0, 3, 2 });
        -:24996:}
        -:24997:
        -:24998:/* vrnd  */
        -:24999:
        -:25000:__extension__ extern __inline float32x2_t
        -:25001:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25002:vrnd_f32 (float32x2_t __a)
        -:25003:{
        -:25004:  return __builtin_aarch64_btruncv2sf (__a);
        -:25005:}
        -:25006:
        -:25007:__extension__ extern __inline float64x1_t
        -:25008:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25009:vrnd_f64 (float64x1_t __a)
        -:25010:{
        -:25011:  return vset_lane_f64 (__builtin_trunc (vget_lane_f64 (__a, 0)), __a, 0);
        -:25012:}
        -:25013:
        -:25014:__extension__ extern __inline float32x4_t
        -:25015:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25016:vrndq_f32 (float32x4_t __a)
        -:25017:{
        -:25018:  return __builtin_aarch64_btruncv4sf (__a);
        -:25019:}
        -:25020:
        -:25021:__extension__ extern __inline float64x2_t
        -:25022:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25023:vrndq_f64 (float64x2_t __a)
        -:25024:{
        -:25025:  return __builtin_aarch64_btruncv2df (__a);
        -:25026:}
        -:25027:
        -:25028:/* vrnda  */
        -:25029:
        -:25030:__extension__ extern __inline float32x2_t
        -:25031:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25032:vrnda_f32 (float32x2_t __a)
        -:25033:{
        -:25034:  return __builtin_aarch64_roundv2sf (__a);
        -:25035:}
        -:25036:
        -:25037:__extension__ extern __inline float64x1_t
        -:25038:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25039:vrnda_f64 (float64x1_t __a)
        -:25040:{
        -:25041:  return vset_lane_f64 (__builtin_round (vget_lane_f64 (__a, 0)), __a, 0);
        -:25042:}
        -:25043:
        -:25044:__extension__ extern __inline float32x4_t
        -:25045:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25046:vrndaq_f32 (float32x4_t __a)
        -:25047:{
        -:25048:  return __builtin_aarch64_roundv4sf (__a);
        -:25049:}
        -:25050:
        -:25051:__extension__ extern __inline float64x2_t
        -:25052:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25053:vrndaq_f64 (float64x2_t __a)
        -:25054:{
        -:25055:  return __builtin_aarch64_roundv2df (__a);
        -:25056:}
        -:25057:
        -:25058:/* vrndi  */
        -:25059:
        -:25060:__extension__ extern __inline float32x2_t
        -:25061:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25062:vrndi_f32 (float32x2_t __a)
        -:25063:{
        -:25064:  return __builtin_aarch64_nearbyintv2sf (__a);
        -:25065:}
        -:25066:
        -:25067:__extension__ extern __inline float64x1_t
        -:25068:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25069:vrndi_f64 (float64x1_t __a)
        -:25070:{
        -:25071:  return vset_lane_f64 (__builtin_nearbyint (vget_lane_f64 (__a, 0)), __a, 0);
        -:25072:}
        -:25073:
        -:25074:__extension__ extern __inline float32x4_t
        -:25075:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25076:vrndiq_f32 (float32x4_t __a)
        -:25077:{
        -:25078:  return __builtin_aarch64_nearbyintv4sf (__a);
        -:25079:}
        -:25080:
        -:25081:__extension__ extern __inline float64x2_t
        -:25082:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25083:vrndiq_f64 (float64x2_t __a)
        -:25084:{
        -:25085:  return __builtin_aarch64_nearbyintv2df (__a);
        -:25086:}
        -:25087:
        -:25088:/* vrndm  */
        -:25089:
        -:25090:__extension__ extern __inline float32x2_t
        -:25091:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25092:vrndm_f32 (float32x2_t __a)
        -:25093:{
        -:25094:  return __builtin_aarch64_floorv2sf (__a);
        -:25095:}
        -:25096:
        -:25097:__extension__ extern __inline float64x1_t
        -:25098:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25099:vrndm_f64 (float64x1_t __a)
        -:25100:{
        -:25101:  return vset_lane_f64 (__builtin_floor (vget_lane_f64 (__a, 0)), __a, 0);
        -:25102:}
        -:25103:
        -:25104:__extension__ extern __inline float32x4_t
        -:25105:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25106:vrndmq_f32 (float32x4_t __a)
        -:25107:{
        -:25108:  return __builtin_aarch64_floorv4sf (__a);
        -:25109:}
        -:25110:
        -:25111:__extension__ extern __inline float64x2_t
        -:25112:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25113:vrndmq_f64 (float64x2_t __a)
        -:25114:{
        -:25115:  return __builtin_aarch64_floorv2df (__a);
        -:25116:}
        -:25117:
        -:25118:/* vrndn  */
        -:25119:
        -:25120:__extension__ extern __inline float32x2_t
        -:25121:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25122:vrndn_f32 (float32x2_t __a)
        -:25123:{
        -:25124:  return __builtin_aarch64_frintnv2sf (__a);
        -:25125:}
        -:25126:
        -:25127:__extension__ extern __inline float64x1_t
        -:25128:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25129:vrndn_f64 (float64x1_t __a)
        -:25130:{
        -:25131:  return (float64x1_t) {__builtin_aarch64_frintndf (__a[0])};
        -:25132:}
        -:25133:
        -:25134:__extension__ extern __inline float32x4_t
        -:25135:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25136:vrndnq_f32 (float32x4_t __a)
        -:25137:{
        -:25138:  return __builtin_aarch64_frintnv4sf (__a);
        -:25139:}
        -:25140:
        -:25141:__extension__ extern __inline float64x2_t
        -:25142:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25143:vrndnq_f64 (float64x2_t __a)
        -:25144:{
        -:25145:  return __builtin_aarch64_frintnv2df (__a);
        -:25146:}
        -:25147:
        -:25148:/* vrndp  */
        -:25149:
        -:25150:__extension__ extern __inline float32x2_t
        -:25151:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25152:vrndp_f32 (float32x2_t __a)
        -:25153:{
        -:25154:  return __builtin_aarch64_ceilv2sf (__a);
        -:25155:}
        -:25156:
        -:25157:__extension__ extern __inline float64x1_t
        -:25158:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25159:vrndp_f64 (float64x1_t __a)
        -:25160:{
        -:25161:  return vset_lane_f64 (__builtin_ceil (vget_lane_f64 (__a, 0)), __a, 0);
        -:25162:}
        -:25163:
        -:25164:__extension__ extern __inline float32x4_t
        -:25165:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25166:vrndpq_f32 (float32x4_t __a)
        -:25167:{
        -:25168:  return __builtin_aarch64_ceilv4sf (__a);
        -:25169:}
        -:25170:
        -:25171:__extension__ extern __inline float64x2_t
        -:25172:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25173:vrndpq_f64 (float64x2_t __a)
        -:25174:{
        -:25175:  return __builtin_aarch64_ceilv2df (__a);
        -:25176:}
        -:25177:
        -:25178:/* vrndx  */
        -:25179:
        -:25180:__extension__ extern __inline float32x2_t
        -:25181:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25182:vrndx_f32 (float32x2_t __a)
        -:25183:{
        -:25184:  return __builtin_aarch64_rintv2sf (__a);
        -:25185:}
        -:25186:
        -:25187:__extension__ extern __inline float64x1_t
        -:25188:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25189:vrndx_f64 (float64x1_t __a)
        -:25190:{
        -:25191:  return vset_lane_f64 (__builtin_rint (vget_lane_f64 (__a, 0)), __a, 0);
        -:25192:}
        -:25193:
        -:25194:__extension__ extern __inline float32x4_t
        -:25195:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25196:vrndxq_f32 (float32x4_t __a)
        -:25197:{
        -:25198:  return __builtin_aarch64_rintv4sf (__a);
        -:25199:}
        -:25200:
        -:25201:__extension__ extern __inline float64x2_t
        -:25202:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25203:vrndxq_f64 (float64x2_t __a)
        -:25204:{
        -:25205:  return __builtin_aarch64_rintv2df (__a);
        -:25206:}
        -:25207:
        -:25208:/* vrshl */
        -:25209:
        -:25210:__extension__ extern __inline int8x8_t
        -:25211:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25212:vrshl_s8 (int8x8_t __a, int8x8_t __b)
        -:25213:{
        -:25214:  return (int8x8_t) __builtin_aarch64_srshlv8qi (__a, __b);
        -:25215:}
        -:25216:
        -:25217:__extension__ extern __inline int16x4_t
        -:25218:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25219:vrshl_s16 (int16x4_t __a, int16x4_t __b)
        -:25220:{
        -:25221:  return (int16x4_t) __builtin_aarch64_srshlv4hi (__a, __b);
        -:25222:}
        -:25223:
        -:25224:__extension__ extern __inline int32x2_t
        -:25225:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25226:vrshl_s32 (int32x2_t __a, int32x2_t __b)
        -:25227:{
        -:25228:  return (int32x2_t) __builtin_aarch64_srshlv2si (__a, __b);
        -:25229:}
        -:25230:
        -:25231:__extension__ extern __inline int64x1_t
        -:25232:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25233:vrshl_s64 (int64x1_t __a, int64x1_t __b)
        -:25234:{
        -:25235:  return (int64x1_t) {__builtin_aarch64_srshldi (__a[0], __b[0])};
        -:25236:}
        -:25237:
        -:25238:__extension__ extern __inline uint8x8_t
        -:25239:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25240:vrshl_u8 (uint8x8_t __a, int8x8_t __b)
        -:25241:{
        -:25242:  return __builtin_aarch64_urshlv8qi_uus (__a, __b);
        -:25243:}
        -:25244:
        -:25245:__extension__ extern __inline uint16x4_t
        -:25246:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25247:vrshl_u16 (uint16x4_t __a, int16x4_t __b)
        -:25248:{
        -:25249:  return __builtin_aarch64_urshlv4hi_uus (__a, __b);
        -:25250:}
        -:25251:
        -:25252:__extension__ extern __inline uint32x2_t
        -:25253:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25254:vrshl_u32 (uint32x2_t __a, int32x2_t __b)
        -:25255:{
        -:25256:  return __builtin_aarch64_urshlv2si_uus (__a, __b);
        -:25257:}
        -:25258:
        -:25259:__extension__ extern __inline uint64x1_t
        -:25260:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25261:vrshl_u64 (uint64x1_t __a, int64x1_t __b)
        -:25262:{
        -:25263:  return (uint64x1_t) {__builtin_aarch64_urshldi_uus (__a[0], __b[0])};
        -:25264:}
        -:25265:
        -:25266:__extension__ extern __inline int8x16_t
        -:25267:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25268:vrshlq_s8 (int8x16_t __a, int8x16_t __b)
        -:25269:{
        -:25270:  return (int8x16_t) __builtin_aarch64_srshlv16qi (__a, __b);
        -:25271:}
        -:25272:
        -:25273:__extension__ extern __inline int16x8_t
        -:25274:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25275:vrshlq_s16 (int16x8_t __a, int16x8_t __b)
        -:25276:{
        -:25277:  return (int16x8_t) __builtin_aarch64_srshlv8hi (__a, __b);
        -:25278:}
        -:25279:
        -:25280:__extension__ extern __inline int32x4_t
        -:25281:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25282:vrshlq_s32 (int32x4_t __a, int32x4_t __b)
        -:25283:{
        -:25284:  return (int32x4_t) __builtin_aarch64_srshlv4si (__a, __b);
        -:25285:}
        -:25286:
        -:25287:__extension__ extern __inline int64x2_t
        -:25288:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25289:vrshlq_s64 (int64x2_t __a, int64x2_t __b)
        -:25290:{
        -:25291:  return (int64x2_t) __builtin_aarch64_srshlv2di (__a, __b);
        -:25292:}
        -:25293:
        -:25294:__extension__ extern __inline uint8x16_t
        -:25295:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25296:vrshlq_u8 (uint8x16_t __a, int8x16_t __b)
        -:25297:{
        -:25298:  return __builtin_aarch64_urshlv16qi_uus (__a, __b);
        -:25299:}
        -:25300:
        -:25301:__extension__ extern __inline uint16x8_t
        -:25302:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25303:vrshlq_u16 (uint16x8_t __a, int16x8_t __b)
        -:25304:{
        -:25305:  return __builtin_aarch64_urshlv8hi_uus (__a, __b);
        -:25306:}
        -:25307:
        -:25308:__extension__ extern __inline uint32x4_t
        -:25309:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25310:vrshlq_u32 (uint32x4_t __a, int32x4_t __b)
        -:25311:{
        -:25312:  return __builtin_aarch64_urshlv4si_uus (__a, __b);
        -:25313:}
        -:25314:
        -:25315:__extension__ extern __inline uint64x2_t
        -:25316:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25317:vrshlq_u64 (uint64x2_t __a, int64x2_t __b)
        -:25318:{
        -:25319:  return __builtin_aarch64_urshlv2di_uus (__a, __b);
        -:25320:}
        -:25321:
        -:25322:__extension__ extern __inline int64_t
        -:25323:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25324:vrshld_s64 (int64_t __a, int64_t __b)
        -:25325:{
        -:25326:  return __builtin_aarch64_srshldi (__a, __b);
        -:25327:}
        -:25328:
        -:25329:__extension__ extern __inline uint64_t
        -:25330:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25331:vrshld_u64 (uint64_t __a, int64_t __b)
        -:25332:{
        -:25333:  return __builtin_aarch64_urshldi_uus (__a, __b);
        -:25334:}
        -:25335:
        -:25336:/* vrshr */
        -:25337:
        -:25338:__extension__ extern __inline int8x8_t
        -:25339:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25340:vrshr_n_s8 (int8x8_t __a, const int __b)
        -:25341:{
        -:25342:  return (int8x8_t) __builtin_aarch64_srshr_nv8qi (__a, __b);
        -:25343:}
        -:25344:
        -:25345:__extension__ extern __inline int16x4_t
        -:25346:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25347:vrshr_n_s16 (int16x4_t __a, const int __b)
        -:25348:{
        -:25349:  return (int16x4_t) __builtin_aarch64_srshr_nv4hi (__a, __b);
        -:25350:}
        -:25351:
        -:25352:__extension__ extern __inline int32x2_t
        -:25353:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25354:vrshr_n_s32 (int32x2_t __a, const int __b)
        -:25355:{
        -:25356:  return (int32x2_t) __builtin_aarch64_srshr_nv2si (__a, __b);
        -:25357:}
        -:25358:
        -:25359:__extension__ extern __inline int64x1_t
        -:25360:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25361:vrshr_n_s64 (int64x1_t __a, const int __b)
        -:25362:{
        -:25363:  return (int64x1_t) {__builtin_aarch64_srshr_ndi (__a[0], __b)};
        -:25364:}
        -:25365:
        -:25366:__extension__ extern __inline uint8x8_t
        -:25367:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25368:vrshr_n_u8 (uint8x8_t __a, const int __b)
        -:25369:{
        -:25370:  return __builtin_aarch64_urshr_nv8qi_uus (__a, __b);
        -:25371:}
        -:25372:
        -:25373:__extension__ extern __inline uint16x4_t
        -:25374:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25375:vrshr_n_u16 (uint16x4_t __a, const int __b)
        -:25376:{
        -:25377:  return __builtin_aarch64_urshr_nv4hi_uus (__a, __b);
        -:25378:}
        -:25379:
        -:25380:__extension__ extern __inline uint32x2_t
        -:25381:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25382:vrshr_n_u32 (uint32x2_t __a, const int __b)
        -:25383:{
        -:25384:  return __builtin_aarch64_urshr_nv2si_uus (__a, __b);
        -:25385:}
        -:25386:
        -:25387:__extension__ extern __inline uint64x1_t
        -:25388:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25389:vrshr_n_u64 (uint64x1_t __a, const int __b)
        -:25390:{
        -:25391:  return (uint64x1_t) {__builtin_aarch64_urshr_ndi_uus (__a[0], __b)};
        -:25392:}
        -:25393:
        -:25394:__extension__ extern __inline int8x16_t
        -:25395:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25396:vrshrq_n_s8 (int8x16_t __a, const int __b)
        -:25397:{
        -:25398:  return (int8x16_t) __builtin_aarch64_srshr_nv16qi (__a, __b);
        -:25399:}
        -:25400:
        -:25401:__extension__ extern __inline int16x8_t
        -:25402:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25403:vrshrq_n_s16 (int16x8_t __a, const int __b)
        -:25404:{
        -:25405:  return (int16x8_t) __builtin_aarch64_srshr_nv8hi (__a, __b);
        -:25406:}
        -:25407:
        -:25408:__extension__ extern __inline int32x4_t
        -:25409:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25410:vrshrq_n_s32 (int32x4_t __a, const int __b)
        -:25411:{
        -:25412:  return (int32x4_t) __builtin_aarch64_srshr_nv4si (__a, __b);
        -:25413:}
        -:25414:
        -:25415:__extension__ extern __inline int64x2_t
        -:25416:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25417:vrshrq_n_s64 (int64x2_t __a, const int __b)
        -:25418:{
        -:25419:  return (int64x2_t) __builtin_aarch64_srshr_nv2di (__a, __b);
        -:25420:}
        -:25421:
        -:25422:__extension__ extern __inline uint8x16_t
        -:25423:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25424:vrshrq_n_u8 (uint8x16_t __a, const int __b)
        -:25425:{
        -:25426:  return __builtin_aarch64_urshr_nv16qi_uus (__a, __b);
        -:25427:}
        -:25428:
        -:25429:__extension__ extern __inline uint16x8_t
        -:25430:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25431:vrshrq_n_u16 (uint16x8_t __a, const int __b)
        -:25432:{
        -:25433:  return __builtin_aarch64_urshr_nv8hi_uus (__a, __b);
        -:25434:}
        -:25435:
        -:25436:__extension__ extern __inline uint32x4_t
        -:25437:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25438:vrshrq_n_u32 (uint32x4_t __a, const int __b)
        -:25439:{
        -:25440:  return __builtin_aarch64_urshr_nv4si_uus (__a, __b);
        -:25441:}
        -:25442:
        -:25443:__extension__ extern __inline uint64x2_t
        -:25444:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25445:vrshrq_n_u64 (uint64x2_t __a, const int __b)
        -:25446:{
        -:25447:  return __builtin_aarch64_urshr_nv2di_uus (__a, __b);
        -:25448:}
        -:25449:
        -:25450:__extension__ extern __inline int64_t
        -:25451:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25452:vrshrd_n_s64 (int64_t __a, const int __b)
        -:25453:{
        -:25454:  return __builtin_aarch64_srshr_ndi (__a, __b);
        -:25455:}
        -:25456:
        -:25457:__extension__ extern __inline uint64_t
        -:25458:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25459:vrshrd_n_u64 (uint64_t __a, const int __b)
        -:25460:{
        -:25461:  return __builtin_aarch64_urshr_ndi_uus (__a, __b);
        -:25462:}
        -:25463:
        -:25464:/* vrsqrte.  */
        -:25465:
        -:25466:__extension__ extern __inline float32_t
        -:25467:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25468:vrsqrtes_f32 (float32_t __a)
        -:25469:{
        -:25470:  return __builtin_aarch64_rsqrtesf (__a);
        -:25471:}
        -:25472:
        -:25473:__extension__ extern __inline float64_t
        -:25474:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25475:vrsqrted_f64 (float64_t __a)
        -:25476:{
        -:25477:  return __builtin_aarch64_rsqrtedf (__a);
        -:25478:}
        -:25479:
        -:25480:__extension__ extern __inline float32x2_t
        -:25481:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25482:vrsqrte_f32 (float32x2_t __a)
        -:25483:{
        -:25484:  return __builtin_aarch64_rsqrtev2sf (__a);
        -:25485:}
        -:25486:
        -:25487:__extension__ extern __inline float64x1_t
        -:25488:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25489:vrsqrte_f64 (float64x1_t __a)
        -:25490:{
        -:25491:  return (float64x1_t) {vrsqrted_f64 (vget_lane_f64 (__a, 0))};
        -:25492:}
        -:25493:
        -:25494:__extension__ extern __inline float32x4_t
        -:25495:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25496:vrsqrteq_f32 (float32x4_t __a)
        -:25497:{
        -:25498:  return __builtin_aarch64_rsqrtev4sf (__a);
        -:25499:}
        -:25500:
        -:25501:__extension__ extern __inline float64x2_t
        -:25502:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25503:vrsqrteq_f64 (float64x2_t __a)
        -:25504:{
        -:25505:  return __builtin_aarch64_rsqrtev2df (__a);
        -:25506:}
        -:25507:
        -:25508:/* vrsqrts.  */
        -:25509:
        -:25510:__extension__ extern __inline float32_t
        -:25511:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25512:vrsqrtss_f32 (float32_t __a, float32_t __b)
        -:25513:{
        -:25514:  return __builtin_aarch64_rsqrtssf (__a, __b);
        -:25515:}
        -:25516:
        -:25517:__extension__ extern __inline float64_t
        -:25518:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25519:vrsqrtsd_f64 (float64_t __a, float64_t __b)
        -:25520:{
        -:25521:  return __builtin_aarch64_rsqrtsdf (__a, __b);
        -:25522:}
        -:25523:
        -:25524:__extension__ extern __inline float32x2_t
        -:25525:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25526:vrsqrts_f32 (float32x2_t __a, float32x2_t __b)
        -:25527:{
        -:25528:  return __builtin_aarch64_rsqrtsv2sf (__a, __b);
        -:25529:}
        -:25530:
        -:25531:__extension__ extern __inline float64x1_t
        -:25532:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25533:vrsqrts_f64 (float64x1_t __a, float64x1_t __b)
        -:25534:{
        -:25535:  return (float64x1_t) {vrsqrtsd_f64 (vget_lane_f64 (__a, 0),
        -:25536:				      vget_lane_f64 (__b, 0))};
        -:25537:}
        -:25538:
        -:25539:__extension__ extern __inline float32x4_t
        -:25540:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25541:vrsqrtsq_f32 (float32x4_t __a, float32x4_t __b)
        -:25542:{
        -:25543:  return __builtin_aarch64_rsqrtsv4sf (__a, __b);
        -:25544:}
        -:25545:
        -:25546:__extension__ extern __inline float64x2_t
        -:25547:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25548:vrsqrtsq_f64 (float64x2_t __a, float64x2_t __b)
        -:25549:{
        -:25550:  return __builtin_aarch64_rsqrtsv2df (__a, __b);
        -:25551:}
        -:25552:
        -:25553:/* vrsra */
        -:25554:
        -:25555:__extension__ extern __inline int8x8_t
        -:25556:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25557:vrsra_n_s8 (int8x8_t __a, int8x8_t __b, const int __c)
        -:25558:{
        -:25559:  return (int8x8_t) __builtin_aarch64_srsra_nv8qi (__a, __b, __c);
        -:25560:}
        -:25561:
        -:25562:__extension__ extern __inline int16x4_t
        -:25563:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25564:vrsra_n_s16 (int16x4_t __a, int16x4_t __b, const int __c)
        -:25565:{
        -:25566:  return (int16x4_t) __builtin_aarch64_srsra_nv4hi (__a, __b, __c);
        -:25567:}
        -:25568:
        -:25569:__extension__ extern __inline int32x2_t
        -:25570:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25571:vrsra_n_s32 (int32x2_t __a, int32x2_t __b, const int __c)
        -:25572:{
        -:25573:  return (int32x2_t) __builtin_aarch64_srsra_nv2si (__a, __b, __c);
        -:25574:}
        -:25575:
        -:25576:__extension__ extern __inline int64x1_t
        -:25577:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25578:vrsra_n_s64 (int64x1_t __a, int64x1_t __b, const int __c)
        -:25579:{
        -:25580:  return (int64x1_t) {__builtin_aarch64_srsra_ndi (__a[0], __b[0], __c)};
        -:25581:}
        -:25582:
        -:25583:__extension__ extern __inline uint8x8_t
        -:25584:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25585:vrsra_n_u8 (uint8x8_t __a, uint8x8_t __b, const int __c)
        -:25586:{
        -:25587:  return __builtin_aarch64_ursra_nv8qi_uuus (__a, __b, __c);
        -:25588:}
        -:25589:
        -:25590:__extension__ extern __inline uint16x4_t
        -:25591:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25592:vrsra_n_u16 (uint16x4_t __a, uint16x4_t __b, const int __c)
        -:25593:{
        -:25594:  return __builtin_aarch64_ursra_nv4hi_uuus (__a, __b, __c);
        -:25595:}
        -:25596:
        -:25597:__extension__ extern __inline uint32x2_t
        -:25598:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25599:vrsra_n_u32 (uint32x2_t __a, uint32x2_t __b, const int __c)
        -:25600:{
        -:25601:  return __builtin_aarch64_ursra_nv2si_uuus (__a, __b, __c);
        -:25602:}
        -:25603:
        -:25604:__extension__ extern __inline uint64x1_t
        -:25605:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25606:vrsra_n_u64 (uint64x1_t __a, uint64x1_t __b, const int __c)
        -:25607:{
        -:25608:  return (uint64x1_t) {__builtin_aarch64_ursra_ndi_uuus (__a[0], __b[0], __c)};
        -:25609:}
        -:25610:
        -:25611:__extension__ extern __inline int8x16_t
        -:25612:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25613:vrsraq_n_s8 (int8x16_t __a, int8x16_t __b, const int __c)
        -:25614:{
        -:25615:  return (int8x16_t) __builtin_aarch64_srsra_nv16qi (__a, __b, __c);
        -:25616:}
        -:25617:
        -:25618:__extension__ extern __inline int16x8_t
        -:25619:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25620:vrsraq_n_s16 (int16x8_t __a, int16x8_t __b, const int __c)
        -:25621:{
        -:25622:  return (int16x8_t) __builtin_aarch64_srsra_nv8hi (__a, __b, __c);
        -:25623:}
        -:25624:
        -:25625:__extension__ extern __inline int32x4_t
        -:25626:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25627:vrsraq_n_s32 (int32x4_t __a, int32x4_t __b, const int __c)
        -:25628:{
        -:25629:  return (int32x4_t) __builtin_aarch64_srsra_nv4si (__a, __b, __c);
        -:25630:}
        -:25631:
        -:25632:__extension__ extern __inline int64x2_t
        -:25633:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25634:vrsraq_n_s64 (int64x2_t __a, int64x2_t __b, const int __c)
        -:25635:{
        -:25636:  return (int64x2_t) __builtin_aarch64_srsra_nv2di (__a, __b, __c);
        -:25637:}
        -:25638:
        -:25639:__extension__ extern __inline uint8x16_t
        -:25640:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25641:vrsraq_n_u8 (uint8x16_t __a, uint8x16_t __b, const int __c)
        -:25642:{
        -:25643:  return __builtin_aarch64_ursra_nv16qi_uuus (__a, __b, __c);
        -:25644:}
        -:25645:
        -:25646:__extension__ extern __inline uint16x8_t
        -:25647:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25648:vrsraq_n_u16 (uint16x8_t __a, uint16x8_t __b, const int __c)
        -:25649:{
        -:25650:  return __builtin_aarch64_ursra_nv8hi_uuus (__a, __b, __c);
        -:25651:}
        -:25652:
        -:25653:__extension__ extern __inline uint32x4_t
        -:25654:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25655:vrsraq_n_u32 (uint32x4_t __a, uint32x4_t __b, const int __c)
        -:25656:{
        -:25657:  return __builtin_aarch64_ursra_nv4si_uuus (__a, __b, __c);
        -:25658:}
        -:25659:
        -:25660:__extension__ extern __inline uint64x2_t
        -:25661:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25662:vrsraq_n_u64 (uint64x2_t __a, uint64x2_t __b, const int __c)
        -:25663:{
        -:25664:  return __builtin_aarch64_ursra_nv2di_uuus (__a, __b, __c);
        -:25665:}
        -:25666:
        -:25667:__extension__ extern __inline int64_t
        -:25668:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25669:vrsrad_n_s64 (int64_t __a, int64_t __b, const int __c)
        -:25670:{
        -:25671:  return __builtin_aarch64_srsra_ndi (__a, __b, __c);
        -:25672:}
        -:25673:
        -:25674:__extension__ extern __inline uint64_t
        -:25675:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25676:vrsrad_n_u64 (uint64_t __a, uint64_t __b, const int __c)
        -:25677:{
        -:25678:  return __builtin_aarch64_ursra_ndi_uuus (__a, __b, __c);
        -:25679:}
        -:25680:
        -:25681:#pragma GCC push_options
        -:25682:#pragma GCC target ("+nothing+crypto")
        -:25683:
        -:25684:/* vsha1  */
        -:25685:
        -:25686:__extension__ extern __inline uint32x4_t
        -:25687:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25688:vsha1cq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)
        -:25689:{
        -:25690:  return __builtin_aarch64_crypto_sha1cv4si_uuuu (hash_abcd, hash_e, wk);
        -:25691:}
        -:25692:
        -:25693:__extension__ extern __inline uint32x4_t
        -:25694:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25695:vsha1mq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)
        -:25696:{
        -:25697:  return __builtin_aarch64_crypto_sha1mv4si_uuuu (hash_abcd, hash_e, wk);
        -:25698:}
        -:25699:
        -:25700:__extension__ extern __inline uint32x4_t
        -:25701:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25702:vsha1pq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)
        -:25703:{
        -:25704:  return __builtin_aarch64_crypto_sha1pv4si_uuuu (hash_abcd, hash_e, wk);
        -:25705:}
        -:25706:
        -:25707:__extension__ extern __inline uint32_t
        -:25708:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25709:vsha1h_u32 (uint32_t hash_e)
        -:25710:{
        -:25711:  return __builtin_aarch64_crypto_sha1hsi_uu (hash_e);
        -:25712:}
        -:25713:
        -:25714:__extension__ extern __inline uint32x4_t
        -:25715:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25716:vsha1su0q_u32 (uint32x4_t w0_3, uint32x4_t w4_7, uint32x4_t w8_11)
        -:25717:{
        -:25718:  return __builtin_aarch64_crypto_sha1su0v4si_uuuu (w0_3, w4_7, w8_11);
        -:25719:}
        -:25720:
        -:25721:__extension__ extern __inline uint32x4_t
        -:25722:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25723:vsha1su1q_u32 (uint32x4_t tw0_3, uint32x4_t w12_15)
        -:25724:{
        -:25725:  return __builtin_aarch64_crypto_sha1su1v4si_uuu (tw0_3, w12_15);
        -:25726:}
        -:25727:
        -:25728:__extension__ extern __inline uint32x4_t
        -:25729:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25730:vsha256hq_u32 (uint32x4_t hash_abcd, uint32x4_t hash_efgh, uint32x4_t wk)
        -:25731:{
        -:25732:  return __builtin_aarch64_crypto_sha256hv4si_uuuu (hash_abcd, hash_efgh, wk);
        -:25733:}
        -:25734:
        -:25735:__extension__ extern __inline uint32x4_t
        -:25736:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25737:vsha256h2q_u32 (uint32x4_t hash_efgh, uint32x4_t hash_abcd, uint32x4_t wk)
        -:25738:{
        -:25739:  return __builtin_aarch64_crypto_sha256h2v4si_uuuu (hash_efgh, hash_abcd, wk);
        -:25740:}
        -:25741:
        -:25742:__extension__ extern __inline uint32x4_t
        -:25743:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25744:vsha256su0q_u32 (uint32x4_t w0_3, uint32x4_t w4_7)
        -:25745:{
        -:25746:  return __builtin_aarch64_crypto_sha256su0v4si_uuu (w0_3, w4_7);
        -:25747:}
        -:25748:
        -:25749:__extension__ extern __inline uint32x4_t
        -:25750:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25751:vsha256su1q_u32 (uint32x4_t tw0_3, uint32x4_t w8_11, uint32x4_t w12_15)
        -:25752:{
        -:25753:  return __builtin_aarch64_crypto_sha256su1v4si_uuuu (tw0_3, w8_11, w12_15);
        -:25754:}
        -:25755:
        -:25756:__extension__ extern __inline poly128_t
        -:25757:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25758:vmull_p64 (poly64_t a, poly64_t b)
        -:25759:{
        -:25760:  return
        -:25761:    __builtin_aarch64_crypto_pmulldi_ppp (a, b);
        -:25762:}
        -:25763:
        -:25764:__extension__ extern __inline poly128_t
        -:25765:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25766:vmull_high_p64 (poly64x2_t a, poly64x2_t b)
        -:25767:{
        -:25768:  return __builtin_aarch64_crypto_pmullv2di_ppp (a, b);
        -:25769:}
        -:25770:
        -:25771:#pragma GCC pop_options
        -:25772:
        -:25773:/* vshl */
        -:25774:
        -:25775:__extension__ extern __inline int8x8_t
        -:25776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25777:vshl_n_s8 (int8x8_t __a, const int __b)
        -:25778:{
        -:25779:  return (int8x8_t) __builtin_aarch64_ashlv8qi (__a, __b);
        -:25780:}
        -:25781:
        -:25782:__extension__ extern __inline int16x4_t
        -:25783:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25784:vshl_n_s16 (int16x4_t __a, const int __b)
        -:25785:{
        -:25786:  return (int16x4_t) __builtin_aarch64_ashlv4hi (__a, __b);
        -:25787:}
        -:25788:
        -:25789:__extension__ extern __inline int32x2_t
        -:25790:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25791:vshl_n_s32 (int32x2_t __a, const int __b)
        -:25792:{
        -:25793:  return (int32x2_t) __builtin_aarch64_ashlv2si (__a, __b);
        -:25794:}
        -:25795:
        -:25796:__extension__ extern __inline int64x1_t
        -:25797:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25798:vshl_n_s64 (int64x1_t __a, const int __b)
        -:25799:{
        -:25800:  return (int64x1_t) {__builtin_aarch64_ashldi (__a[0], __b)};
        -:25801:}
        -:25802:
        -:25803:__extension__ extern __inline uint8x8_t
        -:25804:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25805:vshl_n_u8 (uint8x8_t __a, const int __b)
        -:25806:{
        -:25807:  return (uint8x8_t) __builtin_aarch64_ashlv8qi ((int8x8_t) __a, __b);
        -:25808:}
        -:25809:
        -:25810:__extension__ extern __inline uint16x4_t
        -:25811:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25812:vshl_n_u16 (uint16x4_t __a, const int __b)
        -:25813:{
        -:25814:  return (uint16x4_t) __builtin_aarch64_ashlv4hi ((int16x4_t) __a, __b);
        -:25815:}
        -:25816:
        -:25817:__extension__ extern __inline uint32x2_t
        -:25818:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25819:vshl_n_u32 (uint32x2_t __a, const int __b)
        -:25820:{
        -:25821:  return (uint32x2_t) __builtin_aarch64_ashlv2si ((int32x2_t) __a, __b);
        -:25822:}
        -:25823:
        -:25824:__extension__ extern __inline uint64x1_t
        -:25825:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25826:vshl_n_u64 (uint64x1_t __a, const int __b)
        -:25827:{
        -:25828:  return (uint64x1_t) {__builtin_aarch64_ashldi ((int64_t) __a[0], __b)};
        -:25829:}
        -:25830:
        -:25831:__extension__ extern __inline int8x16_t
        -:25832:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25833:vshlq_n_s8 (int8x16_t __a, const int __b)
        -:25834:{
        -:25835:  return (int8x16_t) __builtin_aarch64_ashlv16qi (__a, __b);
        -:25836:}
        -:25837:
        -:25838:__extension__ extern __inline int16x8_t
        -:25839:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25840:vshlq_n_s16 (int16x8_t __a, const int __b)
        -:25841:{
        -:25842:  return (int16x8_t) __builtin_aarch64_ashlv8hi (__a, __b);
        -:25843:}
        -:25844:
        -:25845:__extension__ extern __inline int32x4_t
        -:25846:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25847:vshlq_n_s32 (int32x4_t __a, const int __b)
        -:25848:{
        -:25849:  return (int32x4_t) __builtin_aarch64_ashlv4si (__a, __b);
        -:25850:}
        -:25851:
        -:25852:__extension__ extern __inline int64x2_t
        -:25853:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25854:vshlq_n_s64 (int64x2_t __a, const int __b)
        -:25855:{
        -:25856:  return (int64x2_t) __builtin_aarch64_ashlv2di (__a, __b);
        -:25857:}
        -:25858:
        -:25859:__extension__ extern __inline uint8x16_t
        -:25860:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25861:vshlq_n_u8 (uint8x16_t __a, const int __b)
        -:25862:{
        -:25863:  return (uint8x16_t) __builtin_aarch64_ashlv16qi ((int8x16_t) __a, __b);
        -:25864:}
        -:25865:
        -:25866:__extension__ extern __inline uint16x8_t
        -:25867:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25868:vshlq_n_u16 (uint16x8_t __a, const int __b)
        -:25869:{
        -:25870:  return (uint16x8_t) __builtin_aarch64_ashlv8hi ((int16x8_t) __a, __b);
        -:25871:}
        -:25872:
        -:25873:__extension__ extern __inline uint32x4_t
        -:25874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25875:vshlq_n_u32 (uint32x4_t __a, const int __b)
        -:25876:{
        -:25877:  return (uint32x4_t) __builtin_aarch64_ashlv4si ((int32x4_t) __a, __b);
        -:25878:}
        -:25879:
        -:25880:__extension__ extern __inline uint64x2_t
        -:25881:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25882:vshlq_n_u64 (uint64x2_t __a, const int __b)
        -:25883:{
        -:25884:  return (uint64x2_t) __builtin_aarch64_ashlv2di ((int64x2_t) __a, __b);
        -:25885:}
        -:25886:
        -:25887:__extension__ extern __inline int64_t
        -:25888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25889:vshld_n_s64 (int64_t __a, const int __b)
        -:25890:{
        -:25891:  return __builtin_aarch64_ashldi (__a, __b);
        -:25892:}
        -:25893:
        -:25894:__extension__ extern __inline uint64_t
        -:25895:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25896:vshld_n_u64 (uint64_t __a, const int __b)
        -:25897:{
        -:25898:  return (uint64_t) __builtin_aarch64_ashldi (__a, __b);
        -:25899:}
        -:25900:
        -:25901:__extension__ extern __inline int8x8_t
        -:25902:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25903:vshl_s8 (int8x8_t __a, int8x8_t __b)
        -:25904:{
        -:25905:  return __builtin_aarch64_sshlv8qi (__a, __b);
        -:25906:}
        -:25907:
        -:25908:__extension__ extern __inline int16x4_t
        -:25909:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25910:vshl_s16 (int16x4_t __a, int16x4_t __b)
        -:25911:{
        -:25912:  return __builtin_aarch64_sshlv4hi (__a, __b);
        -:25913:}
        -:25914:
        -:25915:__extension__ extern __inline int32x2_t
        -:25916:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25917:vshl_s32 (int32x2_t __a, int32x2_t __b)
        -:25918:{
        -:25919:  return __builtin_aarch64_sshlv2si (__a, __b);
        -:25920:}
        -:25921:
        -:25922:__extension__ extern __inline int64x1_t
        -:25923:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25924:vshl_s64 (int64x1_t __a, int64x1_t __b)
        -:25925:{
        -:25926:  return (int64x1_t) {__builtin_aarch64_sshldi (__a[0], __b[0])};
        -:25927:}
        -:25928:
        -:25929:__extension__ extern __inline uint8x8_t
        -:25930:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25931:vshl_u8 (uint8x8_t __a, int8x8_t __b)
        -:25932:{
        -:25933:  return __builtin_aarch64_ushlv8qi_uus (__a, __b);
        -:25934:}
        -:25935:
        -:25936:__extension__ extern __inline uint16x4_t
        -:25937:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25938:vshl_u16 (uint16x4_t __a, int16x4_t __b)
        -:25939:{
        -:25940:  return __builtin_aarch64_ushlv4hi_uus (__a, __b);
        -:25941:}
        -:25942:
        -:25943:__extension__ extern __inline uint32x2_t
        -:25944:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25945:vshl_u32 (uint32x2_t __a, int32x2_t __b)
        -:25946:{
        -:25947:  return __builtin_aarch64_ushlv2si_uus (__a, __b);
        -:25948:}
        -:25949:
        -:25950:__extension__ extern __inline uint64x1_t
        -:25951:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25952:vshl_u64 (uint64x1_t __a, int64x1_t __b)
        -:25953:{
        -:25954:  return (uint64x1_t) {__builtin_aarch64_ushldi_uus (__a[0], __b[0])};
        -:25955:}
        -:25956:
        -:25957:__extension__ extern __inline int8x16_t
        -:25958:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25959:vshlq_s8 (int8x16_t __a, int8x16_t __b)
        -:25960:{
        -:25961:  return __builtin_aarch64_sshlv16qi (__a, __b);
        -:25962:}
        -:25963:
        -:25964:__extension__ extern __inline int16x8_t
        -:25965:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25966:vshlq_s16 (int16x8_t __a, int16x8_t __b)
        -:25967:{
        -:25968:  return __builtin_aarch64_sshlv8hi (__a, __b);
        -:25969:}
        -:25970:
        -:25971:__extension__ extern __inline int32x4_t
        -:25972:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25973:vshlq_s32 (int32x4_t __a, int32x4_t __b)
        -:25974:{
        -:25975:  return __builtin_aarch64_sshlv4si (__a, __b);
        -:25976:}
        -:25977:
        -:25978:__extension__ extern __inline int64x2_t
        -:25979:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25980:vshlq_s64 (int64x2_t __a, int64x2_t __b)
        -:25981:{
        -:25982:  return __builtin_aarch64_sshlv2di (__a, __b);
        -:25983:}
        -:25984:
        -:25985:__extension__ extern __inline uint8x16_t
        -:25986:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25987:vshlq_u8 (uint8x16_t __a, int8x16_t __b)
        -:25988:{
        -:25989:  return __builtin_aarch64_ushlv16qi_uus (__a, __b);
        -:25990:}
        -:25991:
        -:25992:__extension__ extern __inline uint16x8_t
        -:25993:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:25994:vshlq_u16 (uint16x8_t __a, int16x8_t __b)
        -:25995:{
        -:25996:  return __builtin_aarch64_ushlv8hi_uus (__a, __b);
        -:25997:}
        -:25998:
        -:25999:__extension__ extern __inline uint32x4_t
        -:26000:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26001:vshlq_u32 (uint32x4_t __a, int32x4_t __b)
        -:26002:{
        -:26003:  return __builtin_aarch64_ushlv4si_uus (__a, __b);
        -:26004:}
        -:26005:
        -:26006:__extension__ extern __inline uint64x2_t
        -:26007:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26008:vshlq_u64 (uint64x2_t __a, int64x2_t __b)
        -:26009:{
        -:26010:  return __builtin_aarch64_ushlv2di_uus (__a, __b);
        -:26011:}
        -:26012:
        -:26013:__extension__ extern __inline int64_t
        -:26014:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26015:vshld_s64 (int64_t __a, int64_t __b)
        -:26016:{
        -:26017:  return __builtin_aarch64_sshldi (__a, __b);
        -:26018:}
        -:26019:
        -:26020:__extension__ extern __inline uint64_t
        -:26021:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26022:vshld_u64 (uint64_t __a, uint64_t __b)
        -:26023:{
        -:26024:  return __builtin_aarch64_ushldi_uus (__a, __b);
        -:26025:}
        -:26026:
        -:26027:__extension__ extern __inline int16x8_t
        -:26028:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26029:vshll_high_n_s8 (int8x16_t __a, const int __b)
        -:26030:{
        -:26031:  return __builtin_aarch64_sshll2_nv16qi (__a, __b);
        -:26032:}
        -:26033:
        -:26034:__extension__ extern __inline int32x4_t
        -:26035:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26036:vshll_high_n_s16 (int16x8_t __a, const int __b)
        -:26037:{
        -:26038:  return __builtin_aarch64_sshll2_nv8hi (__a, __b);
        -:26039:}
        -:26040:
        -:26041:__extension__ extern __inline int64x2_t
        -:26042:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26043:vshll_high_n_s32 (int32x4_t __a, const int __b)
        -:26044:{
        -:26045:  return __builtin_aarch64_sshll2_nv4si (__a, __b);
        -:26046:}
        -:26047:
        -:26048:__extension__ extern __inline uint16x8_t
        -:26049:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26050:vshll_high_n_u8 (uint8x16_t __a, const int __b)
        -:26051:{
        -:26052:  return (uint16x8_t) __builtin_aarch64_ushll2_nv16qi ((int8x16_t) __a, __b);
        -:26053:}
        -:26054:
        -:26055:__extension__ extern __inline uint32x4_t
        -:26056:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26057:vshll_high_n_u16 (uint16x8_t __a, const int __b)
        -:26058:{
        -:26059:  return (uint32x4_t) __builtin_aarch64_ushll2_nv8hi ((int16x8_t) __a, __b);
        -:26060:}
        -:26061:
        -:26062:__extension__ extern __inline uint64x2_t
        -:26063:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26064:vshll_high_n_u32 (uint32x4_t __a, const int __b)
        -:26065:{
        -:26066:  return (uint64x2_t) __builtin_aarch64_ushll2_nv4si ((int32x4_t) __a, __b);
        -:26067:}
        -:26068:
        -:26069:__extension__ extern __inline int16x8_t
        -:26070:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26071:vshll_n_s8 (int8x8_t __a, const int __b)
        -:26072:{
        -:26073:  return __builtin_aarch64_sshll_nv8qi (__a, __b);
        -:26074:}
        -:26075:
        -:26076:__extension__ extern __inline int32x4_t
        -:26077:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26078:vshll_n_s16 (int16x4_t __a, const int __b)
        -:26079:{
        -:26080:  return __builtin_aarch64_sshll_nv4hi (__a, __b);
        -:26081:}
        -:26082:
        -:26083:__extension__ extern __inline int64x2_t
        -:26084:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26085:vshll_n_s32 (int32x2_t __a, const int __b)
        -:26086:{
        -:26087:  return __builtin_aarch64_sshll_nv2si (__a, __b);
        -:26088:}
        -:26089:
        -:26090:__extension__ extern __inline uint16x8_t
        -:26091:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26092:vshll_n_u8 (uint8x8_t __a, const int __b)
        -:26093:{
        -:26094:  return __builtin_aarch64_ushll_nv8qi_uus (__a, __b);
        -:26095:}
        -:26096:
        -:26097:__extension__ extern __inline uint32x4_t
        -:26098:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26099:vshll_n_u16 (uint16x4_t __a, const int __b)
        -:26100:{
        -:26101:  return __builtin_aarch64_ushll_nv4hi_uus (__a, __b);
        -:26102:}
        -:26103:
        -:26104:__extension__ extern __inline uint64x2_t
        -:26105:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26106:vshll_n_u32 (uint32x2_t __a, const int __b)
        -:26107:{
        -:26108:  return __builtin_aarch64_ushll_nv2si_uus (__a, __b);
        -:26109:}
        -:26110:
        -:26111:/* vshr */
        -:26112:
        -:26113:__extension__ extern __inline int8x8_t
        -:26114:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26115:vshr_n_s8 (int8x8_t __a, const int __b)
        -:26116:{
        -:26117:  return (int8x8_t) __builtin_aarch64_ashrv8qi (__a, __b);
        -:26118:}
        -:26119:
        -:26120:__extension__ extern __inline int16x4_t
        -:26121:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26122:vshr_n_s16 (int16x4_t __a, const int __b)
        -:26123:{
        -:26124:  return (int16x4_t) __builtin_aarch64_ashrv4hi (__a, __b);
        -:26125:}
        -:26126:
        -:26127:__extension__ extern __inline int32x2_t
        -:26128:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26129:vshr_n_s32 (int32x2_t __a, const int __b)
        -:26130:{
        -:26131:  return (int32x2_t) __builtin_aarch64_ashrv2si (__a, __b);
        -:26132:}
        -:26133:
        -:26134:__extension__ extern __inline int64x1_t
        -:26135:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26136:vshr_n_s64 (int64x1_t __a, const int __b)
        -:26137:{
        -:26138:  return (int64x1_t) {__builtin_aarch64_ashr_simddi (__a[0], __b)};
        -:26139:}
        -:26140:
        -:26141:__extension__ extern __inline uint8x8_t
        -:26142:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26143:vshr_n_u8 (uint8x8_t __a, const int __b)
        -:26144:{
        -:26145:  return (uint8x8_t) __builtin_aarch64_lshrv8qi ((int8x8_t) __a, __b);
        -:26146:}
        -:26147:
        -:26148:__extension__ extern __inline uint16x4_t
        -:26149:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26150:vshr_n_u16 (uint16x4_t __a, const int __b)
        -:26151:{
        -:26152:  return (uint16x4_t) __builtin_aarch64_lshrv4hi ((int16x4_t) __a, __b);
        -:26153:}
        -:26154:
        -:26155:__extension__ extern __inline uint32x2_t
        -:26156:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26157:vshr_n_u32 (uint32x2_t __a, const int __b)
        -:26158:{
        -:26159:  return (uint32x2_t) __builtin_aarch64_lshrv2si ((int32x2_t) __a, __b);
        -:26160:}
        -:26161:
        -:26162:__extension__ extern __inline uint64x1_t
        -:26163:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26164:vshr_n_u64 (uint64x1_t __a, const int __b)
        -:26165:{
        -:26166:  return (uint64x1_t) {__builtin_aarch64_lshr_simddi_uus ( __a[0], __b)};
        -:26167:}
        -:26168:
        -:26169:__extension__ extern __inline int8x16_t
        -:26170:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26171:vshrq_n_s8 (int8x16_t __a, const int __b)
        -:26172:{
        -:26173:  return (int8x16_t) __builtin_aarch64_ashrv16qi (__a, __b);
        -:26174:}
        -:26175:
        -:26176:__extension__ extern __inline int16x8_t
        -:26177:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26178:vshrq_n_s16 (int16x8_t __a, const int __b)
        -:26179:{
        -:26180:  return (int16x8_t) __builtin_aarch64_ashrv8hi (__a, __b);
        -:26181:}
        -:26182:
        -:26183:__extension__ extern __inline int32x4_t
        -:26184:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26185:vshrq_n_s32 (int32x4_t __a, const int __b)
        -:26186:{
        -:26187:  return (int32x4_t) __builtin_aarch64_ashrv4si (__a, __b);
        -:26188:}
        -:26189:
        -:26190:__extension__ extern __inline int64x2_t
        -:26191:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26192:vshrq_n_s64 (int64x2_t __a, const int __b)
        -:26193:{
        -:26194:  return (int64x2_t) __builtin_aarch64_ashrv2di (__a, __b);
        -:26195:}
        -:26196:
        -:26197:__extension__ extern __inline uint8x16_t
        -:26198:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26199:vshrq_n_u8 (uint8x16_t __a, const int __b)
        -:26200:{
        -:26201:  return (uint8x16_t) __builtin_aarch64_lshrv16qi ((int8x16_t) __a, __b);
        -:26202:}
        -:26203:
        -:26204:__extension__ extern __inline uint16x8_t
        -:26205:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26206:vshrq_n_u16 (uint16x8_t __a, const int __b)
        -:26207:{
        -:26208:  return (uint16x8_t) __builtin_aarch64_lshrv8hi ((int16x8_t) __a, __b);
        -:26209:}
        -:26210:
        -:26211:__extension__ extern __inline uint32x4_t
        -:26212:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26213:vshrq_n_u32 (uint32x4_t __a, const int __b)
        -:26214:{
        -:26215:  return (uint32x4_t) __builtin_aarch64_lshrv4si ((int32x4_t) __a, __b);
        -:26216:}
        -:26217:
        -:26218:__extension__ extern __inline uint64x2_t
        -:26219:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26220:vshrq_n_u64 (uint64x2_t __a, const int __b)
        -:26221:{
        -:26222:  return (uint64x2_t) __builtin_aarch64_lshrv2di ((int64x2_t) __a, __b);
        -:26223:}
        -:26224:
        -:26225:__extension__ extern __inline int64_t
        -:26226:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26227:vshrd_n_s64 (int64_t __a, const int __b)
        -:26228:{
        -:26229:  return __builtin_aarch64_ashr_simddi (__a, __b);
        -:26230:}
        -:26231:
        -:26232:__extension__ extern __inline uint64_t
        -:26233:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26234:vshrd_n_u64 (uint64_t __a, const int __b)
        -:26235:{
        -:26236:  return __builtin_aarch64_lshr_simddi_uus (__a, __b);
        -:26237:}
        -:26238:
        -:26239:/* vsli */
        -:26240:
        -:26241:__extension__ extern __inline int8x8_t
        -:26242:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26243:vsli_n_s8 (int8x8_t __a, int8x8_t __b, const int __c)
        -:26244:{
        -:26245:  return (int8x8_t) __builtin_aarch64_ssli_nv8qi (__a, __b, __c);
        -:26246:}
        -:26247:
        -:26248:__extension__ extern __inline int16x4_t
        -:26249:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26250:vsli_n_s16 (int16x4_t __a, int16x4_t __b, const int __c)
        -:26251:{
        -:26252:  return (int16x4_t) __builtin_aarch64_ssli_nv4hi (__a, __b, __c);
        -:26253:}
        -:26254:
        -:26255:__extension__ extern __inline int32x2_t
        -:26256:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26257:vsli_n_s32 (int32x2_t __a, int32x2_t __b, const int __c)
        -:26258:{
        -:26259:  return (int32x2_t) __builtin_aarch64_ssli_nv2si (__a, __b, __c);
        -:26260:}
        -:26261:
        -:26262:__extension__ extern __inline int64x1_t
        -:26263:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26264:vsli_n_s64 (int64x1_t __a, int64x1_t __b, const int __c)
        -:26265:{
        -:26266:  return (int64x1_t) {__builtin_aarch64_ssli_ndi (__a[0], __b[0], __c)};
        -:26267:}
        -:26268:
        -:26269:__extension__ extern __inline uint8x8_t
        -:26270:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26271:vsli_n_u8 (uint8x8_t __a, uint8x8_t __b, const int __c)
        -:26272:{
        -:26273:  return __builtin_aarch64_usli_nv8qi_uuus (__a, __b, __c);
        -:26274:}
        -:26275:
        -:26276:__extension__ extern __inline uint16x4_t
        -:26277:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26278:vsli_n_u16 (uint16x4_t __a, uint16x4_t __b, const int __c)
        -:26279:{
        -:26280:  return __builtin_aarch64_usli_nv4hi_uuus (__a, __b, __c);
        -:26281:}
        -:26282:
        -:26283:__extension__ extern __inline uint32x2_t
        -:26284:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26285:vsli_n_u32 (uint32x2_t __a, uint32x2_t __b, const int __c)
        -:26286:{
        -:26287:  return __builtin_aarch64_usli_nv2si_uuus (__a, __b, __c);
        -:26288:}
        -:26289:
        -:26290:__extension__ extern __inline uint64x1_t
        -:26291:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26292:vsli_n_u64 (uint64x1_t __a, uint64x1_t __b, const int __c)
        -:26293:{
        -:26294:  return (uint64x1_t) {__builtin_aarch64_usli_ndi_uuus (__a[0], __b[0], __c)};
        -:26295:}
        -:26296:
        -:26297:__extension__ extern __inline poly64x1_t
        -:26298:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26299:vsli_n_p64 (poly64x1_t __a, poly64x1_t __b, const int __c)
        -:26300:{
        -:26301:  return (poly64x1_t) {__builtin_aarch64_ssli_ndi_ppps (__a[0], __b[0], __c)};
        -:26302:}
        -:26303:
        -:26304:__extension__ extern __inline int8x16_t
        -:26305:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26306:vsliq_n_s8 (int8x16_t __a, int8x16_t __b, const int __c)
        -:26307:{
        -:26308:  return (int8x16_t) __builtin_aarch64_ssli_nv16qi (__a, __b, __c);
        -:26309:}
        -:26310:
        -:26311:__extension__ extern __inline int16x8_t
        -:26312:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26313:vsliq_n_s16 (int16x8_t __a, int16x8_t __b, const int __c)
        -:26314:{
        -:26315:  return (int16x8_t) __builtin_aarch64_ssli_nv8hi (__a, __b, __c);
        -:26316:}
        -:26317:
        -:26318:__extension__ extern __inline int32x4_t
        -:26319:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26320:vsliq_n_s32 (int32x4_t __a, int32x4_t __b, const int __c)
        -:26321:{
        -:26322:  return (int32x4_t) __builtin_aarch64_ssli_nv4si (__a, __b, __c);
        -:26323:}
        -:26324:
        -:26325:__extension__ extern __inline int64x2_t
        -:26326:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26327:vsliq_n_s64 (int64x2_t __a, int64x2_t __b, const int __c)
        -:26328:{
        -:26329:  return (int64x2_t) __builtin_aarch64_ssli_nv2di (__a, __b, __c);
        -:26330:}
        -:26331:
        -:26332:__extension__ extern __inline uint8x16_t
        -:26333:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26334:vsliq_n_u8 (uint8x16_t __a, uint8x16_t __b, const int __c)
        -:26335:{
        -:26336:  return __builtin_aarch64_usli_nv16qi_uuus (__a, __b, __c);
        -:26337:}
        -:26338:
        -:26339:__extension__ extern __inline uint16x8_t
        -:26340:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26341:vsliq_n_u16 (uint16x8_t __a, uint16x8_t __b, const int __c)
        -:26342:{
        -:26343:  return __builtin_aarch64_usli_nv8hi_uuus (__a, __b, __c);
        -:26344:}
        -:26345:
        -:26346:__extension__ extern __inline uint32x4_t
        -:26347:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26348:vsliq_n_u32 (uint32x4_t __a, uint32x4_t __b, const int __c)
        -:26349:{
        -:26350:  return __builtin_aarch64_usli_nv4si_uuus (__a, __b, __c);
        -:26351:}
        -:26352:
        -:26353:__extension__ extern __inline uint64x2_t
        -:26354:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26355:vsliq_n_u64 (uint64x2_t __a, uint64x2_t __b, const int __c)
        -:26356:{
        -:26357:  return __builtin_aarch64_usli_nv2di_uuus (__a, __b, __c);
        -:26358:}
        -:26359:
        -:26360:__extension__ extern __inline poly64x2_t
        -:26361:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26362:vsliq_n_p64 (poly64x2_t __a, poly64x2_t __b, const int __c)
        -:26363:{
        -:26364:  return __builtin_aarch64_ssli_nv2di_ppps (__a, __b, __c);
        -:26365:}
        -:26366:
        -:26367:__extension__ extern __inline int64_t
        -:26368:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26369:vslid_n_s64 (int64_t __a, int64_t __b, const int __c)
        -:26370:{
        -:26371:  return __builtin_aarch64_ssli_ndi (__a, __b, __c);
        -:26372:}
        -:26373:
        -:26374:__extension__ extern __inline uint64_t
        -:26375:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26376:vslid_n_u64 (uint64_t __a, uint64_t __b, const int __c)
        -:26377:{
        -:26378:  return __builtin_aarch64_usli_ndi_uuus (__a, __b, __c);
        -:26379:}
        -:26380:
        -:26381:/* vsqadd */
        -:26382:
        -:26383:__extension__ extern __inline uint8x8_t
        -:26384:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26385:vsqadd_u8 (uint8x8_t __a, int8x8_t __b)
        -:26386:{
        -:26387:  return __builtin_aarch64_usqaddv8qi_uus (__a, __b);
        -:26388:}
        -:26389:
        -:26390:__extension__ extern __inline uint16x4_t
        -:26391:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26392:vsqadd_u16 (uint16x4_t __a, int16x4_t __b)
        -:26393:{
        -:26394:  return __builtin_aarch64_usqaddv4hi_uus (__a, __b);
        -:26395:}
        -:26396:
        -:26397:__extension__ extern __inline uint32x2_t
        -:26398:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26399:vsqadd_u32 (uint32x2_t __a, int32x2_t __b)
        -:26400:{
        -:26401:  return __builtin_aarch64_usqaddv2si_uus (__a, __b);
        -:26402:}
        -:26403:
        -:26404:__extension__ extern __inline uint64x1_t
        -:26405:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26406:vsqadd_u64 (uint64x1_t __a, int64x1_t __b)
        -:26407:{
        -:26408:  return (uint64x1_t) {__builtin_aarch64_usqadddi_uus (__a[0], __b[0])};
        -:26409:}
        -:26410:
        -:26411:__extension__ extern __inline uint8x16_t
        -:26412:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26413:vsqaddq_u8 (uint8x16_t __a, int8x16_t __b)
        -:26414:{
        -:26415:  return __builtin_aarch64_usqaddv16qi_uus (__a, __b);
        -:26416:}
        -:26417:
        -:26418:__extension__ extern __inline uint16x8_t
        -:26419:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26420:vsqaddq_u16 (uint16x8_t __a, int16x8_t __b)
        -:26421:{
        -:26422:  return __builtin_aarch64_usqaddv8hi_uus (__a, __b);
        -:26423:}
        -:26424:
        -:26425:__extension__ extern __inline uint32x4_t
        -:26426:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26427:vsqaddq_u32 (uint32x4_t __a, int32x4_t __b)
        -:26428:{
        -:26429:  return __builtin_aarch64_usqaddv4si_uus (__a, __b);
        -:26430:}
        -:26431:
        -:26432:__extension__ extern __inline uint64x2_t
        -:26433:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26434:vsqaddq_u64 (uint64x2_t __a, int64x2_t __b)
        -:26435:{
        -:26436:  return __builtin_aarch64_usqaddv2di_uus (__a, __b);
        -:26437:}
        -:26438:
        -:26439:__extension__ extern __inline uint8_t
        -:26440:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26441:vsqaddb_u8 (uint8_t __a, int8_t __b)
        -:26442:{
        -:26443:  return __builtin_aarch64_usqaddqi_uus (__a, __b);
        -:26444:}
        -:26445:
        -:26446:__extension__ extern __inline uint16_t
        -:26447:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26448:vsqaddh_u16 (uint16_t __a, int16_t __b)
        -:26449:{
        -:26450:  return __builtin_aarch64_usqaddhi_uus (__a, __b);
        -:26451:}
        -:26452:
        -:26453:__extension__ extern __inline uint32_t
        -:26454:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26455:vsqadds_u32 (uint32_t __a, int32_t __b)
        -:26456:{
        -:26457:  return __builtin_aarch64_usqaddsi_uus (__a, __b);
        -:26458:}
        -:26459:
        -:26460:__extension__ extern __inline uint64_t
        -:26461:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26462:vsqaddd_u64 (uint64_t __a, int64_t __b)
        -:26463:{
        -:26464:  return __builtin_aarch64_usqadddi_uus (__a, __b);
        -:26465:}
        -:26466:
        -:26467:/* vsqrt */
        -:26468:__extension__ extern __inline float32x2_t
        -:26469:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26470:vsqrt_f32 (float32x2_t a)
        -:26471:{
        -:26472:  return __builtin_aarch64_sqrtv2sf (a);
        -:26473:}
        -:26474:
        -:26475:__extension__ extern __inline float32x4_t
        -:26476:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26477:vsqrtq_f32 (float32x4_t a)
        -:26478:{
        -:26479:  return __builtin_aarch64_sqrtv4sf (a);
        -:26480:}
        -:26481:
        -:26482:__extension__ extern __inline float64x1_t
        -:26483:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26484:vsqrt_f64 (float64x1_t a)
        -:26485:{
        -:26486:  return (float64x1_t) { __builtin_aarch64_sqrtdf (a[0]) };
        -:26487:}
        -:26488:
        -:26489:__extension__ extern __inline float64x2_t
        -:26490:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26491:vsqrtq_f64 (float64x2_t a)
        -:26492:{
        -:26493:  return __builtin_aarch64_sqrtv2df (a);
        -:26494:}
        -:26495:
        -:26496:/* vsra */
        -:26497:
        -:26498:__extension__ extern __inline int8x8_t
        -:26499:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26500:vsra_n_s8 (int8x8_t __a, int8x8_t __b, const int __c)
        -:26501:{
        -:26502:  return (int8x8_t) __builtin_aarch64_ssra_nv8qi (__a, __b, __c);
        -:26503:}
        -:26504:
        -:26505:__extension__ extern __inline int16x4_t
        -:26506:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26507:vsra_n_s16 (int16x4_t __a, int16x4_t __b, const int __c)
        -:26508:{
        -:26509:  return (int16x4_t) __builtin_aarch64_ssra_nv4hi (__a, __b, __c);
        -:26510:}
        -:26511:
        -:26512:__extension__ extern __inline int32x2_t
        -:26513:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26514:vsra_n_s32 (int32x2_t __a, int32x2_t __b, const int __c)
        -:26515:{
        -:26516:  return (int32x2_t) __builtin_aarch64_ssra_nv2si (__a, __b, __c);
        -:26517:}
        -:26518:
        -:26519:__extension__ extern __inline int64x1_t
        -:26520:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26521:vsra_n_s64 (int64x1_t __a, int64x1_t __b, const int __c)
        -:26522:{
        -:26523:  return (int64x1_t) {__builtin_aarch64_ssra_ndi (__a[0], __b[0], __c)};
        -:26524:}
        -:26525:
        -:26526:__extension__ extern __inline uint8x8_t
        -:26527:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26528:vsra_n_u8 (uint8x8_t __a, uint8x8_t __b, const int __c)
        -:26529:{
        -:26530:  return __builtin_aarch64_usra_nv8qi_uuus (__a, __b, __c);
        -:26531:}
        -:26532:
        -:26533:__extension__ extern __inline uint16x4_t
        -:26534:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26535:vsra_n_u16 (uint16x4_t __a, uint16x4_t __b, const int __c)
        -:26536:{
        -:26537:  return __builtin_aarch64_usra_nv4hi_uuus (__a, __b, __c);
        -:26538:}
        -:26539:
        -:26540:__extension__ extern __inline uint32x2_t
        -:26541:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26542:vsra_n_u32 (uint32x2_t __a, uint32x2_t __b, const int __c)
        -:26543:{
        -:26544:  return __builtin_aarch64_usra_nv2si_uuus (__a, __b, __c);
        -:26545:}
        -:26546:
        -:26547:__extension__ extern __inline uint64x1_t
        -:26548:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26549:vsra_n_u64 (uint64x1_t __a, uint64x1_t __b, const int __c)
        -:26550:{
        -:26551:  return (uint64x1_t) {__builtin_aarch64_usra_ndi_uuus (__a[0], __b[0], __c)};
        -:26552:}
        -:26553:
        -:26554:__extension__ extern __inline int8x16_t
        -:26555:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26556:vsraq_n_s8 (int8x16_t __a, int8x16_t __b, const int __c)
        -:26557:{
        -:26558:  return (int8x16_t) __builtin_aarch64_ssra_nv16qi (__a, __b, __c);
        -:26559:}
        -:26560:
        -:26561:__extension__ extern __inline int16x8_t
        -:26562:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26563:vsraq_n_s16 (int16x8_t __a, int16x8_t __b, const int __c)
        -:26564:{
        -:26565:  return (int16x8_t) __builtin_aarch64_ssra_nv8hi (__a, __b, __c);
        -:26566:}
        -:26567:
        -:26568:__extension__ extern __inline int32x4_t
        -:26569:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26570:vsraq_n_s32 (int32x4_t __a, int32x4_t __b, const int __c)
        -:26571:{
        -:26572:  return (int32x4_t) __builtin_aarch64_ssra_nv4si (__a, __b, __c);
        -:26573:}
        -:26574:
        -:26575:__extension__ extern __inline int64x2_t
        -:26576:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26577:vsraq_n_s64 (int64x2_t __a, int64x2_t __b, const int __c)
        -:26578:{
        -:26579:  return (int64x2_t) __builtin_aarch64_ssra_nv2di (__a, __b, __c);
        -:26580:}
        -:26581:
        -:26582:__extension__ extern __inline uint8x16_t
        -:26583:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26584:vsraq_n_u8 (uint8x16_t __a, uint8x16_t __b, const int __c)
        -:26585:{
        -:26586:  return __builtin_aarch64_usra_nv16qi_uuus (__a, __b, __c);
        -:26587:}
        -:26588:
        -:26589:__extension__ extern __inline uint16x8_t
        -:26590:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26591:vsraq_n_u16 (uint16x8_t __a, uint16x8_t __b, const int __c)
        -:26592:{
        -:26593:  return __builtin_aarch64_usra_nv8hi_uuus (__a, __b, __c);
        -:26594:}
        -:26595:
        -:26596:__extension__ extern __inline uint32x4_t
        -:26597:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26598:vsraq_n_u32 (uint32x4_t __a, uint32x4_t __b, const int __c)
        -:26599:{
        -:26600:  return __builtin_aarch64_usra_nv4si_uuus (__a, __b, __c);
        -:26601:}
        -:26602:
        -:26603:__extension__ extern __inline uint64x2_t
        -:26604:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26605:vsraq_n_u64 (uint64x2_t __a, uint64x2_t __b, const int __c)
        -:26606:{
        -:26607:  return __builtin_aarch64_usra_nv2di_uuus (__a, __b, __c);
        -:26608:}
        -:26609:
        -:26610:__extension__ extern __inline int64_t
        -:26611:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26612:vsrad_n_s64 (int64_t __a, int64_t __b, const int __c)
        -:26613:{
        -:26614:  return __builtin_aarch64_ssra_ndi (__a, __b, __c);
        -:26615:}
        -:26616:
        -:26617:__extension__ extern __inline uint64_t
        -:26618:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26619:vsrad_n_u64 (uint64_t __a, uint64_t __b, const int __c)
        -:26620:{
        -:26621:  return __builtin_aarch64_usra_ndi_uuus (__a, __b, __c);
        -:26622:}
        -:26623:
        -:26624:/* vsri */
        -:26625:
        -:26626:__extension__ extern __inline int8x8_t
        -:26627:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26628:vsri_n_s8 (int8x8_t __a, int8x8_t __b, const int __c)
        -:26629:{
        -:26630:  return (int8x8_t) __builtin_aarch64_ssri_nv8qi (__a, __b, __c);
        -:26631:}
        -:26632:
        -:26633:__extension__ extern __inline int16x4_t
        -:26634:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26635:vsri_n_s16 (int16x4_t __a, int16x4_t __b, const int __c)
        -:26636:{
        -:26637:  return (int16x4_t) __builtin_aarch64_ssri_nv4hi (__a, __b, __c);
        -:26638:}
        -:26639:
        -:26640:__extension__ extern __inline int32x2_t
        -:26641:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26642:vsri_n_s32 (int32x2_t __a, int32x2_t __b, const int __c)
        -:26643:{
        -:26644:  return (int32x2_t) __builtin_aarch64_ssri_nv2si (__a, __b, __c);
        -:26645:}
        -:26646:
        -:26647:__extension__ extern __inline int64x1_t
        -:26648:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26649:vsri_n_s64 (int64x1_t __a, int64x1_t __b, const int __c)
        -:26650:{
        -:26651:  return (int64x1_t) {__builtin_aarch64_ssri_ndi (__a[0], __b[0], __c)};
        -:26652:}
        -:26653:
        -:26654:__extension__ extern __inline uint8x8_t
        -:26655:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26656:vsri_n_u8 (uint8x8_t __a, uint8x8_t __b, const int __c)
        -:26657:{
        -:26658:  return __builtin_aarch64_usri_nv8qi_uuus (__a, __b, __c);
        -:26659:}
        -:26660:
        -:26661:__extension__ extern __inline uint16x4_t
        -:26662:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26663:vsri_n_u16 (uint16x4_t __a, uint16x4_t __b, const int __c)
        -:26664:{
        -:26665:  return __builtin_aarch64_usri_nv4hi_uuus (__a, __b, __c);
        -:26666:}
        -:26667:
        -:26668:__extension__ extern __inline uint32x2_t
        -:26669:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26670:vsri_n_u32 (uint32x2_t __a, uint32x2_t __b, const int __c)
        -:26671:{
        -:26672:  return __builtin_aarch64_usri_nv2si_uuus (__a, __b, __c);
        -:26673:}
        -:26674:
        -:26675:__extension__ extern __inline uint64x1_t
        -:26676:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26677:vsri_n_u64 (uint64x1_t __a, uint64x1_t __b, const int __c)
        -:26678:{
        -:26679:  return (uint64x1_t) {__builtin_aarch64_usri_ndi_uuus (__a[0], __b[0], __c)};
        -:26680:}
        -:26681:
        -:26682:__extension__ extern __inline int8x16_t
        -:26683:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26684:vsriq_n_s8 (int8x16_t __a, int8x16_t __b, const int __c)
        -:26685:{
        -:26686:  return (int8x16_t) __builtin_aarch64_ssri_nv16qi (__a, __b, __c);
        -:26687:}
        -:26688:
        -:26689:__extension__ extern __inline int16x8_t
        -:26690:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26691:vsriq_n_s16 (int16x8_t __a, int16x8_t __b, const int __c)
        -:26692:{
        -:26693:  return (int16x8_t) __builtin_aarch64_ssri_nv8hi (__a, __b, __c);
        -:26694:}
        -:26695:
        -:26696:__extension__ extern __inline int32x4_t
        -:26697:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26698:vsriq_n_s32 (int32x4_t __a, int32x4_t __b, const int __c)
        -:26699:{
        -:26700:  return (int32x4_t) __builtin_aarch64_ssri_nv4si (__a, __b, __c);
        -:26701:}
        -:26702:
        -:26703:__extension__ extern __inline int64x2_t
        -:26704:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26705:vsriq_n_s64 (int64x2_t __a, int64x2_t __b, const int __c)
        -:26706:{
        -:26707:  return (int64x2_t) __builtin_aarch64_ssri_nv2di (__a, __b, __c);
        -:26708:}
        -:26709:
        -:26710:__extension__ extern __inline uint8x16_t
        -:26711:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26712:vsriq_n_u8 (uint8x16_t __a, uint8x16_t __b, const int __c)
        -:26713:{
        -:26714:  return __builtin_aarch64_usri_nv16qi_uuus (__a, __b, __c);
        -:26715:}
        -:26716:
        -:26717:__extension__ extern __inline uint16x8_t
        -:26718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26719:vsriq_n_u16 (uint16x8_t __a, uint16x8_t __b, const int __c)
        -:26720:{
        -:26721:  return __builtin_aarch64_usri_nv8hi_uuus (__a, __b, __c);
        -:26722:}
        -:26723:
        -:26724:__extension__ extern __inline uint32x4_t
        -:26725:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26726:vsriq_n_u32 (uint32x4_t __a, uint32x4_t __b, const int __c)
        -:26727:{
        -:26728:  return __builtin_aarch64_usri_nv4si_uuus (__a, __b, __c);
        -:26729:}
        -:26730:
        -:26731:__extension__ extern __inline uint64x2_t
        -:26732:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26733:vsriq_n_u64 (uint64x2_t __a, uint64x2_t __b, const int __c)
        -:26734:{
        -:26735:  return __builtin_aarch64_usri_nv2di_uuus (__a, __b, __c);
        -:26736:}
        -:26737:
        -:26738:__extension__ extern __inline int64_t
        -:26739:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26740:vsrid_n_s64 (int64_t __a, int64_t __b, const int __c)
        -:26741:{
        -:26742:  return __builtin_aarch64_ssri_ndi (__a, __b, __c);
        -:26743:}
        -:26744:
        -:26745:__extension__ extern __inline uint64_t
        -:26746:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26747:vsrid_n_u64 (uint64_t __a, uint64_t __b, const int __c)
        -:26748:{
        -:26749:  return __builtin_aarch64_usri_ndi_uuus (__a, __b, __c);
        -:26750:}
        -:26751:
        -:26752:/* vst1 */
        -:26753:
        -:26754:__extension__ extern __inline void
        -:26755:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26756:vst1_f16 (float16_t *__a, float16x4_t __b)
        -:26757:{
        -:26758:  __builtin_aarch64_st1v4hf (__a, __b);
        -:26759:}
        -:26760:
        -:26761:__extension__ extern __inline void
        -:26762:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26763:vst1_f32 (float32_t *a, float32x2_t b)
        -:26764:{
        -:26765:  __builtin_aarch64_st1v2sf ((__builtin_aarch64_simd_sf *) a, b);
        -:26766:}
        -:26767:
        -:26768:__extension__ extern __inline void
        -:26769:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26770:vst1_f64 (float64_t *a, float64x1_t b)
        -:26771:{
        -:26772:  *a = b[0];
        -:26773:}
        -:26774:
        -:26775:__extension__ extern __inline void
        -:26776:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26777:vst1_p8 (poly8_t *a, poly8x8_t b)
        -:26778:{
        -:26779:  __builtin_aarch64_st1v8qi ((__builtin_aarch64_simd_qi *) a,
        -:26780:			     (int8x8_t) b);
        -:26781:}
        -:26782:
        -:26783:__extension__ extern __inline void
        -:26784:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26785:vst1_p16 (poly16_t *a, poly16x4_t b)
        -:26786:{
        -:26787:  __builtin_aarch64_st1v4hi ((__builtin_aarch64_simd_hi *) a,
        -:26788:			     (int16x4_t) b);
        -:26789:}
        -:26790:
        -:26791:__extension__ extern __inline void
        -:26792:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26793:vst1_p64 (poly64_t *a, poly64x1_t b)
        -:26794:{
        -:26795:  *a = b[0];
        -:26796:}
        -:26797:
        -:26798:__extension__ extern __inline void
        -:26799:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26800:vst1_s8 (int8_t *a, int8x8_t b)
        -:26801:{
        -:26802:  __builtin_aarch64_st1v8qi ((__builtin_aarch64_simd_qi *) a, b);
        -:26803:}
        -:26804:
        -:26805:__extension__ extern __inline void
        -:26806:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26807:vst1_s16 (int16_t *a, int16x4_t b)
        -:26808:{
        -:26809:  __builtin_aarch64_st1v4hi ((__builtin_aarch64_simd_hi *) a, b);
        -:26810:}
        -:26811:
        -:26812:__extension__ extern __inline void
        -:26813:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26814:vst1_s32 (int32_t *a, int32x2_t b)
        -:26815:{
        -:26816:  __builtin_aarch64_st1v2si ((__builtin_aarch64_simd_si *) a, b);
        -:26817:}
        -:26818:
        -:26819:__extension__ extern __inline void
        -:26820:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26821:vst1_s64 (int64_t *a, int64x1_t b)
        -:26822:{
        -:26823:  *a = b[0];
        -:26824:}
        -:26825:
        -:26826:__extension__ extern __inline void
        -:26827:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26828:vst1_u8 (uint8_t *a, uint8x8_t b)
        -:26829:{
        -:26830:  __builtin_aarch64_st1v8qi ((__builtin_aarch64_simd_qi *) a,
        -:26831:			     (int8x8_t) b);
        -:26832:}
        -:26833:
        -:26834:__extension__ extern __inline void
        -:26835:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26836:vst1_u16 (uint16_t *a, uint16x4_t b)
        -:26837:{
        -:26838:  __builtin_aarch64_st1v4hi ((__builtin_aarch64_simd_hi *) a,
        -:26839:			     (int16x4_t) b);
        -:26840:}
        -:26841:
        -:26842:__extension__ extern __inline void
        -:26843:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26844:vst1_u32 (uint32_t *a, uint32x2_t b)
        -:26845:{
        -:26846:  __builtin_aarch64_st1v2si ((__builtin_aarch64_simd_si *) a,
        -:26847:			     (int32x2_t) b);
        -:26848:}
        -:26849:
        -:26850:__extension__ extern __inline void
        -:26851:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26852:vst1_u64 (uint64_t *a, uint64x1_t b)
        -:26853:{
        -:26854:  *a = b[0];
        -:26855:}
        -:26856:
        -:26857:/* vst1q */
        -:26858:
        -:26859:__extension__ extern __inline void
        -:26860:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26861:vst1q_f16 (float16_t *__a, float16x8_t __b)
        -:26862:{
        -:26863:  __builtin_aarch64_st1v8hf (__a, __b);
        -:26864:}
        -:26865:
        -:26866:__extension__ extern __inline void
        -:26867:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26868:vst1q_f32 (float32_t *a, float32x4_t b)
        -:26869:{
        -:26870:  __builtin_aarch64_st1v4sf ((__builtin_aarch64_simd_sf *) a, b);
        -:26871:}
        -:26872:
        -:26873:__extension__ extern __inline void
        -:26874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26875:vst1q_f64 (float64_t *a, float64x2_t b)
        -:26876:{
        -:26877:  __builtin_aarch64_st1v2df ((__builtin_aarch64_simd_df *) a, b);
        -:26878:}
        -:26879:
        -:26880:__extension__ extern __inline void
        -:26881:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26882:vst1q_p8 (poly8_t *a, poly8x16_t b)
        -:26883:{
        -:26884:  __builtin_aarch64_st1v16qi ((__builtin_aarch64_simd_qi *) a,
        -:26885:			      (int8x16_t) b);
        -:26886:}
        -:26887:
        -:26888:__extension__ extern __inline void
        -:26889:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26890:vst1q_p16 (poly16_t *a, poly16x8_t b)
        -:26891:{
        -:26892:  __builtin_aarch64_st1v8hi ((__builtin_aarch64_simd_hi *) a,
        -:26893:			     (int16x8_t) b);
        -:26894:}
        -:26895:
        -:26896:__extension__ extern __inline void
        -:26897:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26898:vst1q_p64 (poly64_t *a, poly64x2_t b)
        -:26899:{
        -:26900:  __builtin_aarch64_st1v2di_sp ((__builtin_aarch64_simd_di *) a,
        -:26901:				(poly64x2_t) b);
        -:26902:}
        -:26903:
        -:26904:__extension__ extern __inline void
        -:26905:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26906:vst1q_s8 (int8_t *a, int8x16_t b)
        -:26907:{
        -:26908:  __builtin_aarch64_st1v16qi ((__builtin_aarch64_simd_qi *) a, b);
        -:26909:}
        -:26910:
        -:26911:__extension__ extern __inline void
        -:26912:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26913:vst1q_s16 (int16_t *a, int16x8_t b)
        -:26914:{
        -:26915:  __builtin_aarch64_st1v8hi ((__builtin_aarch64_simd_hi *) a, b);
        -:26916:}
        -:26917:
        -:26918:__extension__ extern __inline void
        -:26919:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26920:vst1q_s32 (int32_t *a, int32x4_t b)
        -:26921:{
        -:26922:  __builtin_aarch64_st1v4si ((__builtin_aarch64_simd_si *) a, b);
        -:26923:}
        -:26924:
        -:26925:__extension__ extern __inline void
        -:26926:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26927:vst1q_s64 (int64_t *a, int64x2_t b)
        -:26928:{
        -:26929:  __builtin_aarch64_st1v2di ((__builtin_aarch64_simd_di *) a, b);
        -:26930:}
        -:26931:
        -:26932:__extension__ extern __inline void
        -:26933:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26934:vst1q_u8 (uint8_t *a, uint8x16_t b)
        -:26935:{
        -:26936:  __builtin_aarch64_st1v16qi ((__builtin_aarch64_simd_qi *) a,
        -:26937:			      (int8x16_t) b);
        -:26938:}
        -:26939:
        -:26940:__extension__ extern __inline void
        -:26941:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26942:vst1q_u16 (uint16_t *a, uint16x8_t b)
        -:26943:{
        -:26944:  __builtin_aarch64_st1v8hi ((__builtin_aarch64_simd_hi *) a,
        -:26945:			     (int16x8_t) b);
        -:26946:}
        -:26947:
        -:26948:__extension__ extern __inline void
        -:26949:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26950:vst1q_u32 (uint32_t *a, uint32x4_t b)
        -:26951:{
        -:26952:  __builtin_aarch64_st1v4si ((__builtin_aarch64_simd_si *) a,
        -:26953:			     (int32x4_t) b);
        -:26954:}
        -:26955:
        -:26956:__extension__ extern __inline void
        -:26957:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26958:vst1q_u64 (uint64_t *a, uint64x2_t b)
        -:26959:{
        -:26960:  __builtin_aarch64_st1v2di ((__builtin_aarch64_simd_di *) a,
        -:26961:			     (int64x2_t) b);
        -:26962:}
        -:26963:
        -:26964:/* vst1_lane */
        -:26965:
        -:26966:__extension__ extern __inline void
        -:26967:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26968:vst1_lane_f16 (float16_t *__a, float16x4_t __b, const int __lane)
        -:26969:{
        -:26970:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:26971:}
        -:26972:
        -:26973:__extension__ extern __inline void
        -:26974:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26975:vst1_lane_f32 (float32_t *__a, float32x2_t __b, const int __lane)
        -:26976:{
        -:26977:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:26978:}
        -:26979:
        -:26980:__extension__ extern __inline void
        -:26981:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26982:vst1_lane_f64 (float64_t *__a, float64x1_t __b, const int __lane)
        -:26983:{
        -:26984:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:26985:}
        -:26986:
        -:26987:__extension__ extern __inline void
        -:26988:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26989:vst1_lane_p8 (poly8_t *__a, poly8x8_t __b, const int __lane)
        -:26990:{
        -:26991:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:26992:}
        -:26993:
        -:26994:__extension__ extern __inline void
        -:26995:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:26996:vst1_lane_p16 (poly16_t *__a, poly16x4_t __b, const int __lane)
        -:26997:{
        -:26998:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:26999:}
        -:27000:
        -:27001:__extension__ extern __inline void
        -:27002:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27003:vst1_lane_p64 (poly64_t *__a, poly64x1_t __b, const int __lane)
        -:27004:{
        -:27005:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27006:}
        -:27007:
        -:27008:__extension__ extern __inline void
        -:27009:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27010:vst1_lane_s8 (int8_t *__a, int8x8_t __b, const int __lane)
        -:27011:{
        -:27012:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27013:}
        -:27014:
        -:27015:__extension__ extern __inline void
        -:27016:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27017:vst1_lane_s16 (int16_t *__a, int16x4_t __b, const int __lane)
        -:27018:{
        -:27019:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27020:}
        -:27021:
        -:27022:__extension__ extern __inline void
        -:27023:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27024:vst1_lane_s32 (int32_t *__a, int32x2_t __b, const int __lane)
        -:27025:{
        -:27026:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27027:}
        -:27028:
        -:27029:__extension__ extern __inline void
        -:27030:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27031:vst1_lane_s64 (int64_t *__a, int64x1_t __b, const int __lane)
        -:27032:{
        -:27033:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27034:}
        -:27035:
        -:27036:__extension__ extern __inline void
        -:27037:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27038:vst1_lane_u8 (uint8_t *__a, uint8x8_t __b, const int __lane)
        -:27039:{
        -:27040:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27041:}
        -:27042:
        -:27043:__extension__ extern __inline void
        -:27044:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27045:vst1_lane_u16 (uint16_t *__a, uint16x4_t __b, const int __lane)
        -:27046:{
        -:27047:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27048:}
        -:27049:
        -:27050:__extension__ extern __inline void
        -:27051:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27052:vst1_lane_u32 (uint32_t *__a, uint32x2_t __b, const int __lane)
        -:27053:{
        -:27054:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27055:}
        -:27056:
        -:27057:__extension__ extern __inline void
        -:27058:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27059:vst1_lane_u64 (uint64_t *__a, uint64x1_t __b, const int __lane)
        -:27060:{
        -:27061:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27062:}
        -:27063:
        -:27064:/* vst1q_lane */
        -:27065:
        -:27066:__extension__ extern __inline void
        -:27067:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27068:vst1q_lane_f16 (float16_t *__a, float16x8_t __b, const int __lane)
        -:27069:{
        -:27070:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27071:}
        -:27072:
        -:27073:__extension__ extern __inline void
        -:27074:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27075:vst1q_lane_f32 (float32_t *__a, float32x4_t __b, const int __lane)
        -:27076:{
        -:27077:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27078:}
        -:27079:
        -:27080:__extension__ extern __inline void
        -:27081:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27082:vst1q_lane_f64 (float64_t *__a, float64x2_t __b, const int __lane)
        -:27083:{
        -:27084:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27085:}
        -:27086:
        -:27087:__extension__ extern __inline void
        -:27088:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27089:vst1q_lane_p8 (poly8_t *__a, poly8x16_t __b, const int __lane)
        -:27090:{
        -:27091:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27092:}
        -:27093:
        -:27094:__extension__ extern __inline void
        -:27095:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27096:vst1q_lane_p16 (poly16_t *__a, poly16x8_t __b, const int __lane)
        -:27097:{
        -:27098:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27099:}
        -:27100:
        -:27101:__extension__ extern __inline void
        -:27102:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27103:vst1q_lane_p64 (poly64_t *__a, poly64x2_t __b, const int __lane)
        -:27104:{
        -:27105:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27106:}
        -:27107:
        -:27108:__extension__ extern __inline void
        -:27109:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27110:vst1q_lane_s8 (int8_t *__a, int8x16_t __b, const int __lane)
        -:27111:{
        -:27112:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27113:}
        -:27114:
        -:27115:__extension__ extern __inline void
        -:27116:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27117:vst1q_lane_s16 (int16_t *__a, int16x8_t __b, const int __lane)
        -:27118:{
        -:27119:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27120:}
        -:27121:
        -:27122:__extension__ extern __inline void
        -:27123:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27124:vst1q_lane_s32 (int32_t *__a, int32x4_t __b, const int __lane)
        -:27125:{
        -:27126:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27127:}
        -:27128:
        -:27129:__extension__ extern __inline void
        -:27130:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27131:vst1q_lane_s64 (int64_t *__a, int64x2_t __b, const int __lane)
        -:27132:{
        -:27133:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27134:}
        -:27135:
        -:27136:__extension__ extern __inline void
        -:27137:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27138:vst1q_lane_u8 (uint8_t *__a, uint8x16_t __b, const int __lane)
        -:27139:{
        -:27140:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27141:}
        -:27142:
        -:27143:__extension__ extern __inline void
        -:27144:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27145:vst1q_lane_u16 (uint16_t *__a, uint16x8_t __b, const int __lane)
        -:27146:{
        -:27147:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27148:}
        -:27149:
        -:27150:__extension__ extern __inline void
        -:27151:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27152:vst1q_lane_u32 (uint32_t *__a, uint32x4_t __b, const int __lane)
        -:27153:{
        -:27154:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27155:}
        -:27156:
        -:27157:__extension__ extern __inline void
        -:27158:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27159:vst1q_lane_u64 (uint64_t *__a, uint64x2_t __b, const int __lane)
        -:27160:{
        -:27161:  *__a = __aarch64_vget_lane_any (__b, __lane);
        -:27162:}
        -:27163:
        -:27164:/* vstn */
        -:27165:
        -:27166:__extension__ extern __inline void
        -:27167:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27168:vst2_s64 (int64_t * __a, int64x1x2_t val)
        -:27169:{
        -:27170:  __builtin_aarch64_simd_oi __o;
        -:27171:  int64x2x2_t temp;
        -:27172:  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27173:  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27174:  __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) temp.val[0], 0);
        -:27175:  __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) temp.val[1], 1);
        -:27176:  __builtin_aarch64_st2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27177:}
        -:27178:
        -:27179:__extension__ extern __inline void
        -:27180:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27181:vst2_u64 (uint64_t * __a, uint64x1x2_t val)
        -:27182:{
        -:27183:  __builtin_aarch64_simd_oi __o;
        -:27184:  uint64x2x2_t temp;
        -:27185:  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27186:  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27187:  __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) temp.val[0], 0);
        -:27188:  __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) temp.val[1], 1);
        -:27189:  __builtin_aarch64_st2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27190:}
        -:27191:
        -:27192:__extension__ extern __inline void
        -:27193:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27194:vst2_f64 (float64_t * __a, float64x1x2_t val)
        -:27195:{
        -:27196:  __builtin_aarch64_simd_oi __o;
        -:27197:  float64x2x2_t temp;
        -:27198:  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27199:  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27200:  __o = __builtin_aarch64_set_qregoiv2df (__o, (float64x2_t) temp.val[0], 0);
        -:27201:  __o = __builtin_aarch64_set_qregoiv2df (__o, (float64x2_t) temp.val[1], 1);
        -:27202:  __builtin_aarch64_st2df ((__builtin_aarch64_simd_df *) __a, __o);
        -:27203:}
        -:27204:
        -:27205:__extension__ extern __inline void
        -:27206:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27207:vst2_s8 (int8_t * __a, int8x8x2_t val)
        -:27208:{
        -:27209:  __builtin_aarch64_simd_oi __o;
        -:27210:  int8x16x2_t temp;
        -:27211:  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27212:  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27213:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:27214:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:27215:  __builtin_aarch64_st2v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27216:}
        -:27217:
        -:27218:__extension__ extern __inline void
        -:27219:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27220:vst2_p8 (poly8_t * __a, poly8x8x2_t val)
        -:27221:{
        -:27222:  __builtin_aarch64_simd_oi __o;
        -:27223:  poly8x16x2_t temp;
        -:27224:  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27225:  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27226:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:27227:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:27228:  __builtin_aarch64_st2v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27229:}
        -:27230:
        -:27231:__extension__ extern __inline void
        -:27232:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27233:vst2_s16 (int16_t * __a, int16x4x2_t val)
        -:27234:{
        -:27235:  __builtin_aarch64_simd_oi __o;
        -:27236:  int16x8x2_t temp;
        -:27237:  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27238:  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27239:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:27240:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:27241:  __builtin_aarch64_st2v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27242:}
        -:27243:
        -:27244:__extension__ extern __inline void
        -:27245:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27246:vst2_p16 (poly16_t * __a, poly16x4x2_t val)
        -:27247:{
        -:27248:  __builtin_aarch64_simd_oi __o;
        -:27249:  poly16x8x2_t temp;
        -:27250:  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27251:  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27252:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:27253:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:27254:  __builtin_aarch64_st2v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27255:}
        -:27256:
        -:27257:__extension__ extern __inline void
        -:27258:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27259:vst2_s32 (int32_t * __a, int32x2x2_t val)
        -:27260:{
        -:27261:  __builtin_aarch64_simd_oi __o;
        -:27262:  int32x4x2_t temp;
        -:27263:  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27264:  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27265:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) temp.val[0], 0);
        -:27266:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) temp.val[1], 1);
        -:27267:  __builtin_aarch64_st2v2si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27268:}
        -:27269:
        -:27270:__extension__ extern __inline void
        -:27271:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27272:vst2_u8 (uint8_t * __a, uint8x8x2_t val)
        -:27273:{
        -:27274:  __builtin_aarch64_simd_oi __o;
        -:27275:  uint8x16x2_t temp;
        -:27276:  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:27277:  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:27278:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:27279:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:27280:  __builtin_aarch64_st2v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27281:}
        -:27282:
        -:27283:__extension__ extern __inline void
        -:27284:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27285:vst2_u16 (uint16_t * __a, uint16x4x2_t val)
        -:27286:{
        -:27287:  __builtin_aarch64_simd_oi __o;
        -:27288:  uint16x8x2_t temp;
        -:27289:  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:27290:  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:27291:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:27292:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:27293:  __builtin_aarch64_st2v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27294:}
        -:27295:
        -:27296:__extension__ extern __inline void
        -:27297:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27298:vst2_u32 (uint32_t * __a, uint32x2x2_t val)
        -:27299:{
        -:27300:  __builtin_aarch64_simd_oi __o;
        -:27301:  uint32x4x2_t temp;
        -:27302:  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:27303:  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:27304:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) temp.val[0], 0);
        -:27305:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) temp.val[1], 1);
        -:27306:  __builtin_aarch64_st2v2si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27307:}
        -:27308:
        -:27309:__extension__ extern __inline void
        -:27310:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27311:vst2_f16 (float16_t * __a, float16x4x2_t val)
        -:27312:{
        -:27313:  __builtin_aarch64_simd_oi __o;
        -:27314:  float16x8x2_t temp;
        -:27315:  temp.val[0] = vcombine_f16 (val.val[0], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:27316:  temp.val[1] = vcombine_f16 (val.val[1], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:27317:  __o = __builtin_aarch64_set_qregoiv8hf (__o, temp.val[0], 0);
        -:27318:  __o = __builtin_aarch64_set_qregoiv8hf (__o, temp.val[1], 1);
        -:27319:  __builtin_aarch64_st2v4hf (__a, __o);
        -:27320:}
        -:27321:
        -:27322:__extension__ extern __inline void
        -:27323:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27324:vst2_f32 (float32_t * __a, float32x2x2_t val)
        -:27325:{
        -:27326:  __builtin_aarch64_simd_oi __o;
        -:27327:  float32x4x2_t temp;
        -:27328:  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:27329:  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:27330:  __o = __builtin_aarch64_set_qregoiv4sf (__o, (float32x4_t) temp.val[0], 0);
        -:27331:  __o = __builtin_aarch64_set_qregoiv4sf (__o, (float32x4_t) temp.val[1], 1);
        -:27332:  __builtin_aarch64_st2v2sf ((__builtin_aarch64_simd_sf *) __a, __o);
        -:27333:}
        -:27334:
        -:27335:__extension__ extern __inline void
        -:27336:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27337:vst2_p64 (poly64_t * __a, poly64x1x2_t val)
        -:27338:{
        -:27339:  __builtin_aarch64_simd_oi __o;
        -:27340:  poly64x2x2_t temp;
        -:27341:  temp.val[0] = vcombine_p64 (val.val[0], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:27342:  temp.val[1] = vcombine_p64 (val.val[1], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:27343:  __o = __builtin_aarch64_set_qregoiv2di_ssps (__o,
        -:27344:					       (poly64x2_t) temp.val[0], 0);
        -:27345:  __o = __builtin_aarch64_set_qregoiv2di_ssps (__o,
        -:27346:					       (poly64x2_t) temp.val[1], 1);
        -:27347:  __builtin_aarch64_st2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27348:}
        -:27349:
        -:27350:__extension__ extern __inline void
        -:27351:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27352:vst2q_s8 (int8_t * __a, int8x16x2_t val)
        -:27353:{
        -:27354:  __builtin_aarch64_simd_oi __o;
        -:27355:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) val.val[0], 0);
        -:27356:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) val.val[1], 1);
        -:27357:  __builtin_aarch64_st2v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27358:}
        -:27359:
        -:27360:__extension__ extern __inline void
        -:27361:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27362:vst2q_p8 (poly8_t * __a, poly8x16x2_t val)
        -:27363:{
        -:27364:  __builtin_aarch64_simd_oi __o;
        -:27365:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) val.val[0], 0);
        -:27366:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) val.val[1], 1);
        -:27367:  __builtin_aarch64_st2v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27368:}
        -:27369:
        -:27370:__extension__ extern __inline void
        -:27371:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27372:vst2q_s16 (int16_t * __a, int16x8x2_t val)
        -:27373:{
        -:27374:  __builtin_aarch64_simd_oi __o;
        -:27375:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) val.val[0], 0);
        -:27376:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) val.val[1], 1);
        -:27377:  __builtin_aarch64_st2v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27378:}
        -:27379:
        -:27380:__extension__ extern __inline void
        -:27381:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27382:vst2q_p16 (poly16_t * __a, poly16x8x2_t val)
        -:27383:{
        -:27384:  __builtin_aarch64_simd_oi __o;
        -:27385:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) val.val[0], 0);
        -:27386:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) val.val[1], 1);
        -:27387:  __builtin_aarch64_st2v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27388:}
        -:27389:
        -:27390:__extension__ extern __inline void
        -:27391:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27392:vst2q_s32 (int32_t * __a, int32x4x2_t val)
        -:27393:{
        -:27394:  __builtin_aarch64_simd_oi __o;
        -:27395:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) val.val[0], 0);
        -:27396:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) val.val[1], 1);
        -:27397:  __builtin_aarch64_st2v4si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27398:}
        -:27399:
        -:27400:__extension__ extern __inline void
        -:27401:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27402:vst2q_s64 (int64_t * __a, int64x2x2_t val)
        -:27403:{
        -:27404:  __builtin_aarch64_simd_oi __o;
        -:27405:  __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) val.val[0], 0);
        -:27406:  __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) val.val[1], 1);
        -:27407:  __builtin_aarch64_st2v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27408:}
        -:27409:
        -:27410:__extension__ extern __inline void
        -:27411:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27412:vst2q_u8 (uint8_t * __a, uint8x16x2_t val)
        -:27413:{
        -:27414:  __builtin_aarch64_simd_oi __o;
        -:27415:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) val.val[0], 0);
        -:27416:  __o = __builtin_aarch64_set_qregoiv16qi (__o, (int8x16_t) val.val[1], 1);
        -:27417:  __builtin_aarch64_st2v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27418:}
        -:27419:
        -:27420:__extension__ extern __inline void
        -:27421:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27422:vst2q_u16 (uint16_t * __a, uint16x8x2_t val)
        -:27423:{
        -:27424:  __builtin_aarch64_simd_oi __o;
        -:27425:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) val.val[0], 0);
        -:27426:  __o = __builtin_aarch64_set_qregoiv8hi (__o, (int16x8_t) val.val[1], 1);
        -:27427:  __builtin_aarch64_st2v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27428:}
        -:27429:
        -:27430:__extension__ extern __inline void
        -:27431:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27432:vst2q_u32 (uint32_t * __a, uint32x4x2_t val)
        -:27433:{
        -:27434:  __builtin_aarch64_simd_oi __o;
        -:27435:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) val.val[0], 0);
        -:27436:  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) val.val[1], 1);
        -:27437:  __builtin_aarch64_st2v4si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27438:}
        -:27439:
        -:27440:__extension__ extern __inline void
        -:27441:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27442:vst2q_u64 (uint64_t * __a, uint64x2x2_t val)
        -:27443:{
        -:27444:  __builtin_aarch64_simd_oi __o;
        -:27445:  __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) val.val[0], 0);
        -:27446:  __o = __builtin_aarch64_set_qregoiv2di (__o, (int64x2_t) val.val[1], 1);
        -:27447:  __builtin_aarch64_st2v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27448:}
        -:27449:
        -:27450:__extension__ extern __inline void
        -:27451:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27452:vst2q_f16 (float16_t * __a, float16x8x2_t val)
        -:27453:{
        -:27454:  __builtin_aarch64_simd_oi __o;
        -:27455:  __o = __builtin_aarch64_set_qregoiv8hf (__o, val.val[0], 0);
        -:27456:  __o = __builtin_aarch64_set_qregoiv8hf (__o, val.val[1], 1);
        -:27457:  __builtin_aarch64_st2v8hf (__a, __o);
        -:27458:}
        -:27459:
        -:27460:__extension__ extern __inline void
        -:27461:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27462:vst2q_f32 (float32_t * __a, float32x4x2_t val)
        -:27463:{
        -:27464:  __builtin_aarch64_simd_oi __o;
        -:27465:  __o = __builtin_aarch64_set_qregoiv4sf (__o, (float32x4_t) val.val[0], 0);
        -:27466:  __o = __builtin_aarch64_set_qregoiv4sf (__o, (float32x4_t) val.val[1], 1);
        -:27467:  __builtin_aarch64_st2v4sf ((__builtin_aarch64_simd_sf *) __a, __o);
        -:27468:}
        -:27469:
        -:27470:__extension__ extern __inline void
        -:27471:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27472:vst2q_f64 (float64_t * __a, float64x2x2_t val)
        -:27473:{
        -:27474:  __builtin_aarch64_simd_oi __o;
        -:27475:  __o = __builtin_aarch64_set_qregoiv2df (__o, (float64x2_t) val.val[0], 0);
        -:27476:  __o = __builtin_aarch64_set_qregoiv2df (__o, (float64x2_t) val.val[1], 1);
        -:27477:  __builtin_aarch64_st2v2df ((__builtin_aarch64_simd_df *) __a, __o);
        -:27478:}
        -:27479:
        -:27480:__extension__ extern __inline void
        -:27481:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27482:vst2q_p64 (poly64_t * __a, poly64x2x2_t val)
        -:27483:{
        -:27484:  __builtin_aarch64_simd_oi __o;
        -:27485:  __o = __builtin_aarch64_set_qregoiv2di_ssps (__o,
        -:27486:					       (poly64x2_t) val.val[0], 0);
        -:27487:  __o = __builtin_aarch64_set_qregoiv2di_ssps (__o,
        -:27488:					       (poly64x2_t) val.val[1], 1);
        -:27489:  __builtin_aarch64_st2v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27490:}
        -:27491:
        -:27492:__extension__ extern __inline void
        -:27493:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27494:vst3_s64 (int64_t * __a, int64x1x3_t val)
        -:27495:{
        -:27496:  __builtin_aarch64_simd_ci __o;
        -:27497:  int64x2x3_t temp;
        -:27498:  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27499:  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27500:  temp.val[2] = vcombine_s64 (val.val[2], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27501:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[0], 0);
        -:27502:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[1], 1);
        -:27503:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[2], 2);
        -:27504:  __builtin_aarch64_st3di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27505:}
        -:27506:
        -:27507:__extension__ extern __inline void
        -:27508:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27509:vst3_u64 (uint64_t * __a, uint64x1x3_t val)
        -:27510:{
        -:27511:  __builtin_aarch64_simd_ci __o;
        -:27512:  uint64x2x3_t temp;
        -:27513:  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27514:  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27515:  temp.val[2] = vcombine_u64 (val.val[2], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27516:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[0], 0);
        -:27517:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[1], 1);
        -:27518:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) temp.val[2], 2);
        -:27519:  __builtin_aarch64_st3di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27520:}
        -:27521:
        -:27522:__extension__ extern __inline void
        -:27523:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27524:vst3_f64 (float64_t * __a, float64x1x3_t val)
        -:27525:{
        -:27526:  __builtin_aarch64_simd_ci __o;
        -:27527:  float64x2x3_t temp;
        -:27528:  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27529:  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27530:  temp.val[2] = vcombine_f64 (val.val[2], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27531:  __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) temp.val[0], 0);
        -:27532:  __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) temp.val[1], 1);
        -:27533:  __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) temp.val[2], 2);
        -:27534:  __builtin_aarch64_st3df ((__builtin_aarch64_simd_df *) __a, __o);
        -:27535:}
        -:27536:
        -:27537:__extension__ extern __inline void
        -:27538:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27539:vst3_s8 (int8_t * __a, int8x8x3_t val)
        -:27540:{
        -:27541:  __builtin_aarch64_simd_ci __o;
        -:27542:  int8x16x3_t temp;
        -:27543:  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27544:  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27545:  temp.val[2] = vcombine_s8 (val.val[2], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27546:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:27547:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:27548:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[2], 2);
        -:27549:  __builtin_aarch64_st3v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27550:}
        -:27551:
        -:27552:__extension__ extern __inline void
        -:27553:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27554:vst3_p8 (poly8_t * __a, poly8x8x3_t val)
        -:27555:{
        -:27556:  __builtin_aarch64_simd_ci __o;
        -:27557:  poly8x16x3_t temp;
        -:27558:  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27559:  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27560:  temp.val[2] = vcombine_p8 (val.val[2], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27561:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:27562:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:27563:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[2], 2);
        -:27564:  __builtin_aarch64_st3v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27565:}
        -:27566:
        -:27567:__extension__ extern __inline void
        -:27568:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27569:vst3_s16 (int16_t * __a, int16x4x3_t val)
        -:27570:{
        -:27571:  __builtin_aarch64_simd_ci __o;
        -:27572:  int16x8x3_t temp;
        -:27573:  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27574:  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27575:  temp.val[2] = vcombine_s16 (val.val[2], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27576:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:27577:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:27578:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[2], 2);
        -:27579:  __builtin_aarch64_st3v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27580:}
        -:27581:
        -:27582:__extension__ extern __inline void
        -:27583:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27584:vst3_p16 (poly16_t * __a, poly16x4x3_t val)
        -:27585:{
        -:27586:  __builtin_aarch64_simd_ci __o;
        -:27587:  poly16x8x3_t temp;
        -:27588:  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27589:  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27590:  temp.val[2] = vcombine_p16 (val.val[2], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27591:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:27592:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:27593:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[2], 2);
        -:27594:  __builtin_aarch64_st3v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27595:}
        -:27596:
        -:27597:__extension__ extern __inline void
        -:27598:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27599:vst3_s32 (int32_t * __a, int32x2x3_t val)
        -:27600:{
        -:27601:  __builtin_aarch64_simd_ci __o;
        -:27602:  int32x4x3_t temp;
        -:27603:  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27604:  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27605:  temp.val[2] = vcombine_s32 (val.val[2], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27606:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[0], 0);
        -:27607:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[1], 1);
        -:27608:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[2], 2);
        -:27609:  __builtin_aarch64_st3v2si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27610:}
        -:27611:
        -:27612:__extension__ extern __inline void
        -:27613:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27614:vst3_u8 (uint8_t * __a, uint8x8x3_t val)
        -:27615:{
        -:27616:  __builtin_aarch64_simd_ci __o;
        -:27617:  uint8x16x3_t temp;
        -:27618:  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:27619:  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:27620:  temp.val[2] = vcombine_u8 (val.val[2], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:27621:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:27622:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:27623:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) temp.val[2], 2);
        -:27624:  __builtin_aarch64_st3v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27625:}
        -:27626:
        -:27627:__extension__ extern __inline void
        -:27628:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27629:vst3_u16 (uint16_t * __a, uint16x4x3_t val)
        -:27630:{
        -:27631:  __builtin_aarch64_simd_ci __o;
        -:27632:  uint16x8x3_t temp;
        -:27633:  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:27634:  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:27635:  temp.val[2] = vcombine_u16 (val.val[2], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:27636:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:27637:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:27638:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) temp.val[2], 2);
        -:27639:  __builtin_aarch64_st3v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27640:}
        -:27641:
        -:27642:__extension__ extern __inline void
        -:27643:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27644:vst3_u32 (uint32_t * __a, uint32x2x3_t val)
        -:27645:{
        -:27646:  __builtin_aarch64_simd_ci __o;
        -:27647:  uint32x4x3_t temp;
        -:27648:  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:27649:  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:27650:  temp.val[2] = vcombine_u32 (val.val[2], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:27651:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[0], 0);
        -:27652:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[1], 1);
        -:27653:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) temp.val[2], 2);
        -:27654:  __builtin_aarch64_st3v2si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27655:}
        -:27656:
        -:27657:__extension__ extern __inline void
        -:27658:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27659:vst3_f16 (float16_t * __a, float16x4x3_t val)
        -:27660:{
        -:27661:  __builtin_aarch64_simd_ci __o;
        -:27662:  float16x8x3_t temp;
        -:27663:  temp.val[0] = vcombine_f16 (val.val[0], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:27664:  temp.val[1] = vcombine_f16 (val.val[1], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:27665:  temp.val[2] = vcombine_f16 (val.val[2], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:27666:  __o = __builtin_aarch64_set_qregciv8hf (__o, (float16x8_t) temp.val[0], 0);
        -:27667:  __o = __builtin_aarch64_set_qregciv8hf (__o, (float16x8_t) temp.val[1], 1);
        -:27668:  __o = __builtin_aarch64_set_qregciv8hf (__o, (float16x8_t) temp.val[2], 2);
        -:27669:  __builtin_aarch64_st3v4hf ((__builtin_aarch64_simd_hf *) __a, __o);
        -:27670:}
        -:27671:
        -:27672:__extension__ extern __inline void
        -:27673:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27674:vst3_f32 (float32_t * __a, float32x2x3_t val)
        -:27675:{
        -:27676:  __builtin_aarch64_simd_ci __o;
        -:27677:  float32x4x3_t temp;
        -:27678:  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:27679:  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:27680:  temp.val[2] = vcombine_f32 (val.val[2], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:27681:  __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) temp.val[0], 0);
        -:27682:  __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) temp.val[1], 1);
        -:27683:  __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) temp.val[2], 2);
        -:27684:  __builtin_aarch64_st3v2sf ((__builtin_aarch64_simd_sf *) __a, __o);
        -:27685:}
        -:27686:
        -:27687:__extension__ extern __inline void
        -:27688:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27689:vst3_p64 (poly64_t * __a, poly64x1x3_t val)
        -:27690:{
        -:27691:  __builtin_aarch64_simd_ci __o;
        -:27692:  poly64x2x3_t temp;
        -:27693:  temp.val[0] = vcombine_p64 (val.val[0], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:27694:  temp.val[1] = vcombine_p64 (val.val[1], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:27695:  temp.val[2] = vcombine_p64 (val.val[2], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:27696:  __o = __builtin_aarch64_set_qregciv2di_ssps (__o,
        -:27697:					       (poly64x2_t) temp.val[0], 0);
        -:27698:  __o = __builtin_aarch64_set_qregciv2di_ssps (__o,
        -:27699:					       (poly64x2_t) temp.val[1], 1);
        -:27700:  __o = __builtin_aarch64_set_qregciv2di_ssps (__o,
        -:27701:					       (poly64x2_t) temp.val[2], 2);
        -:27702:  __builtin_aarch64_st3di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27703:}
        -:27704:
        -:27705:__extension__ extern __inline void
        -:27706:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27707:vst3q_s8 (int8_t * __a, int8x16x3_t val)
        -:27708:{
        -:27709:  __builtin_aarch64_simd_ci __o;
        -:27710:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[0], 0);
        -:27711:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[1], 1);
        -:27712:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[2], 2);
        -:27713:  __builtin_aarch64_st3v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27714:}
        -:27715:
        -:27716:__extension__ extern __inline void
        -:27717:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27718:vst3q_p8 (poly8_t * __a, poly8x16x3_t val)
        -:27719:{
        -:27720:  __builtin_aarch64_simd_ci __o;
        -:27721:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[0], 0);
        -:27722:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[1], 1);
        -:27723:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[2], 2);
        -:27724:  __builtin_aarch64_st3v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27725:}
        -:27726:
        -:27727:__extension__ extern __inline void
        -:27728:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27729:vst3q_s16 (int16_t * __a, int16x8x3_t val)
        -:27730:{
        -:27731:  __builtin_aarch64_simd_ci __o;
        -:27732:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[0], 0);
        -:27733:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[1], 1);
        -:27734:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[2], 2);
        -:27735:  __builtin_aarch64_st3v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27736:}
        -:27737:
        -:27738:__extension__ extern __inline void
        -:27739:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27740:vst3q_p16 (poly16_t * __a, poly16x8x3_t val)
        -:27741:{
        -:27742:  __builtin_aarch64_simd_ci __o;
        -:27743:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[0], 0);
        -:27744:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[1], 1);
        -:27745:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[2], 2);
        -:27746:  __builtin_aarch64_st3v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27747:}
        -:27748:
        -:27749:__extension__ extern __inline void
        -:27750:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27751:vst3q_s32 (int32_t * __a, int32x4x3_t val)
        -:27752:{
        -:27753:  __builtin_aarch64_simd_ci __o;
        -:27754:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) val.val[0], 0);
        -:27755:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) val.val[1], 1);
        -:27756:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) val.val[2], 2);
        -:27757:  __builtin_aarch64_st3v4si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27758:}
        -:27759:
        -:27760:__extension__ extern __inline void
        -:27761:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27762:vst3q_s64 (int64_t * __a, int64x2x3_t val)
        -:27763:{
        -:27764:  __builtin_aarch64_simd_ci __o;
        -:27765:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) val.val[0], 0);
        -:27766:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) val.val[1], 1);
        -:27767:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) val.val[2], 2);
        -:27768:  __builtin_aarch64_st3v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27769:}
        -:27770:
        -:27771:__extension__ extern __inline void
        -:27772:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27773:vst3q_u8 (uint8_t * __a, uint8x16x3_t val)
        -:27774:{
        -:27775:  __builtin_aarch64_simd_ci __o;
        -:27776:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[0], 0);
        -:27777:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[1], 1);
        -:27778:  __o = __builtin_aarch64_set_qregciv16qi (__o, (int8x16_t) val.val[2], 2);
        -:27779:  __builtin_aarch64_st3v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27780:}
        -:27781:
        -:27782:__extension__ extern __inline void
        -:27783:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27784:vst3q_u16 (uint16_t * __a, uint16x8x3_t val)
        -:27785:{
        -:27786:  __builtin_aarch64_simd_ci __o;
        -:27787:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[0], 0);
        -:27788:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[1], 1);
        -:27789:  __o = __builtin_aarch64_set_qregciv8hi (__o, (int16x8_t) val.val[2], 2);
        -:27790:  __builtin_aarch64_st3v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27791:}
        -:27792:
        -:27793:__extension__ extern __inline void
        -:27794:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27795:vst3q_u32 (uint32_t * __a, uint32x4x3_t val)
        -:27796:{
        -:27797:  __builtin_aarch64_simd_ci __o;
        -:27798:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) val.val[0], 0);
        -:27799:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) val.val[1], 1);
        -:27800:  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) val.val[2], 2);
        -:27801:  __builtin_aarch64_st3v4si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27802:}
        -:27803:
        -:27804:__extension__ extern __inline void
        -:27805:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27806:vst3q_u64 (uint64_t * __a, uint64x2x3_t val)
        -:27807:{
        -:27808:  __builtin_aarch64_simd_ci __o;
        -:27809:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) val.val[0], 0);
        -:27810:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) val.val[1], 1);
        -:27811:  __o = __builtin_aarch64_set_qregciv2di (__o, (int64x2_t) val.val[2], 2);
        -:27812:  __builtin_aarch64_st3v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27813:}
        -:27814:
        -:27815:__extension__ extern __inline void
        -:27816:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27817:vst3q_f16 (float16_t * __a, float16x8x3_t val)
        -:27818:{
        -:27819:  __builtin_aarch64_simd_ci __o;
        -:27820:  __o = __builtin_aarch64_set_qregciv8hf (__o, (float16x8_t) val.val[0], 0);
        -:27821:  __o = __builtin_aarch64_set_qregciv8hf (__o, (float16x8_t) val.val[1], 1);
        -:27822:  __o = __builtin_aarch64_set_qregciv8hf (__o, (float16x8_t) val.val[2], 2);
        -:27823:  __builtin_aarch64_st3v8hf ((__builtin_aarch64_simd_hf *) __a, __o);
        -:27824:}
        -:27825:
        -:27826:__extension__ extern __inline void
        -:27827:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27828:vst3q_f32 (float32_t * __a, float32x4x3_t val)
        -:27829:{
        -:27830:  __builtin_aarch64_simd_ci __o;
        -:27831:  __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) val.val[0], 0);
        -:27832:  __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) val.val[1], 1);
        -:27833:  __o = __builtin_aarch64_set_qregciv4sf (__o, (float32x4_t) val.val[2], 2);
        -:27834:  __builtin_aarch64_st3v4sf ((__builtin_aarch64_simd_sf *) __a, __o);
        -:27835:}
        -:27836:
        -:27837:__extension__ extern __inline void
        -:27838:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27839:vst3q_f64 (float64_t * __a, float64x2x3_t val)
        -:27840:{
        -:27841:  __builtin_aarch64_simd_ci __o;
        -:27842:  __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) val.val[0], 0);
        -:27843:  __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) val.val[1], 1);
        -:27844:  __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) val.val[2], 2);
        -:27845:  __builtin_aarch64_st3v2df ((__builtin_aarch64_simd_df *) __a, __o);
        -:27846:}
        -:27847:
        -:27848:__extension__ extern __inline void
        -:27849:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27850:vst3q_p64 (poly64_t * __a, poly64x2x3_t val)
        -:27851:{
        -:27852:  __builtin_aarch64_simd_ci __o;
        -:27853:  __o = __builtin_aarch64_set_qregciv2di_ssps (__o,
        -:27854:					       (poly64x2_t) val.val[0], 0);
        -:27855:  __o = __builtin_aarch64_set_qregciv2di_ssps (__o,
        -:27856:					       (poly64x2_t) val.val[1], 1);
        -:27857:  __o = __builtin_aarch64_set_qregciv2di_ssps (__o,
        -:27858:					       (poly64x2_t) val.val[2], 2);
        -:27859:  __builtin_aarch64_st3v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27860:}
        -:27861:
        -:27862:__extension__ extern __inline void
        -:27863:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27864:vst4_s64 (int64_t * __a, int64x1x4_t val)
        -:27865:{
        -:27866:  __builtin_aarch64_simd_xi __o;
        -:27867:  int64x2x4_t temp;
        -:27868:  temp.val[0] = vcombine_s64 (val.val[0], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27869:  temp.val[1] = vcombine_s64 (val.val[1], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27870:  temp.val[2] = vcombine_s64 (val.val[2], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27871:  temp.val[3] = vcombine_s64 (val.val[3], vcreate_s64 (__AARCH64_INT64_C (0)));
        -:27872:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[0], 0);
        -:27873:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[1], 1);
        -:27874:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[2], 2);
        -:27875:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[3], 3);
        -:27876:  __builtin_aarch64_st4di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27877:}
        -:27878:
        -:27879:__extension__ extern __inline void
        -:27880:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27881:vst4_u64 (uint64_t * __a, uint64x1x4_t val)
        -:27882:{
        -:27883:  __builtin_aarch64_simd_xi __o;
        -:27884:  uint64x2x4_t temp;
        -:27885:  temp.val[0] = vcombine_u64 (val.val[0], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27886:  temp.val[1] = vcombine_u64 (val.val[1], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27887:  temp.val[2] = vcombine_u64 (val.val[2], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27888:  temp.val[3] = vcombine_u64 (val.val[3], vcreate_u64 (__AARCH64_UINT64_C (0)));
        -:27889:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[0], 0);
        -:27890:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[1], 1);
        -:27891:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[2], 2);
        -:27892:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) temp.val[3], 3);
        -:27893:  __builtin_aarch64_st4di ((__builtin_aarch64_simd_di *) __a, __o);
        -:27894:}
        -:27895:
        -:27896:__extension__ extern __inline void
        -:27897:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27898:vst4_f64 (float64_t * __a, float64x1x4_t val)
        -:27899:{
        -:27900:  __builtin_aarch64_simd_xi __o;
        -:27901:  float64x2x4_t temp;
        -:27902:  temp.val[0] = vcombine_f64 (val.val[0], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27903:  temp.val[1] = vcombine_f64 (val.val[1], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27904:  temp.val[2] = vcombine_f64 (val.val[2], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27905:  temp.val[3] = vcombine_f64 (val.val[3], vcreate_f64 (__AARCH64_UINT64_C (0)));
        -:27906:  __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) temp.val[0], 0);
        -:27907:  __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) temp.val[1], 1);
        -:27908:  __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) temp.val[2], 2);
        -:27909:  __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) temp.val[3], 3);
        -:27910:  __builtin_aarch64_st4df ((__builtin_aarch64_simd_df *) __a, __o);
        -:27911:}
        -:27912:
        -:27913:__extension__ extern __inline void
        -:27914:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27915:vst4_s8 (int8_t * __a, int8x8x4_t val)
        -:27916:{
        -:27917:  __builtin_aarch64_simd_xi __o;
        -:27918:  int8x16x4_t temp;
        -:27919:  temp.val[0] = vcombine_s8 (val.val[0], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27920:  temp.val[1] = vcombine_s8 (val.val[1], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27921:  temp.val[2] = vcombine_s8 (val.val[2], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27922:  temp.val[3] = vcombine_s8 (val.val[3], vcreate_s8 (__AARCH64_INT64_C (0)));
        -:27923:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:27924:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:27925:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[2], 2);
        -:27926:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[3], 3);
        -:27927:  __builtin_aarch64_st4v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27928:}
        -:27929:
        -:27930:__extension__ extern __inline void
        -:27931:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27932:vst4_p8 (poly8_t * __a, poly8x8x4_t val)
        -:27933:{
        -:27934:  __builtin_aarch64_simd_xi __o;
        -:27935:  poly8x16x4_t temp;
        -:27936:  temp.val[0] = vcombine_p8 (val.val[0], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27937:  temp.val[1] = vcombine_p8 (val.val[1], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27938:  temp.val[2] = vcombine_p8 (val.val[2], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27939:  temp.val[3] = vcombine_p8 (val.val[3], vcreate_p8 (__AARCH64_UINT64_C (0)));
        -:27940:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:27941:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:27942:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[2], 2);
        -:27943:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[3], 3);
        -:27944:  __builtin_aarch64_st4v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:27945:}
        -:27946:
        -:27947:__extension__ extern __inline void
        -:27948:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27949:vst4_s16 (int16_t * __a, int16x4x4_t val)
        -:27950:{
        -:27951:  __builtin_aarch64_simd_xi __o;
        -:27952:  int16x8x4_t temp;
        -:27953:  temp.val[0] = vcombine_s16 (val.val[0], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27954:  temp.val[1] = vcombine_s16 (val.val[1], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27955:  temp.val[2] = vcombine_s16 (val.val[2], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27956:  temp.val[3] = vcombine_s16 (val.val[3], vcreate_s16 (__AARCH64_INT64_C (0)));
        -:27957:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:27958:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:27959:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[2], 2);
        -:27960:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[3], 3);
        -:27961:  __builtin_aarch64_st4v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27962:}
        -:27963:
        -:27964:__extension__ extern __inline void
        -:27965:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27966:vst4_p16 (poly16_t * __a, poly16x4x4_t val)
        -:27967:{
        -:27968:  __builtin_aarch64_simd_xi __o;
        -:27969:  poly16x8x4_t temp;
        -:27970:  temp.val[0] = vcombine_p16 (val.val[0], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27971:  temp.val[1] = vcombine_p16 (val.val[1], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27972:  temp.val[2] = vcombine_p16 (val.val[2], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27973:  temp.val[3] = vcombine_p16 (val.val[3], vcreate_p16 (__AARCH64_UINT64_C (0)));
        -:27974:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:27975:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:27976:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[2], 2);
        -:27977:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[3], 3);
        -:27978:  __builtin_aarch64_st4v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:27979:}
        -:27980:
        -:27981:__extension__ extern __inline void
        -:27982:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:27983:vst4_s32 (int32_t * __a, int32x2x4_t val)
        -:27984:{
        -:27985:  __builtin_aarch64_simd_xi __o;
        -:27986:  int32x4x4_t temp;
        -:27987:  temp.val[0] = vcombine_s32 (val.val[0], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27988:  temp.val[1] = vcombine_s32 (val.val[1], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27989:  temp.val[2] = vcombine_s32 (val.val[2], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27990:  temp.val[3] = vcombine_s32 (val.val[3], vcreate_s32 (__AARCH64_INT64_C (0)));
        -:27991:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[0], 0);
        -:27992:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[1], 1);
        -:27993:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[2], 2);
        -:27994:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[3], 3);
        -:27995:  __builtin_aarch64_st4v2si ((__builtin_aarch64_simd_si *) __a, __o);
        -:27996:}
        -:27997:
        -:27998:__extension__ extern __inline void
        -:27999:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28000:vst4_u8 (uint8_t * __a, uint8x8x4_t val)
        -:28001:{
        -:28002:  __builtin_aarch64_simd_xi __o;
        -:28003:  uint8x16x4_t temp;
        -:28004:  temp.val[0] = vcombine_u8 (val.val[0], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:28005:  temp.val[1] = vcombine_u8 (val.val[1], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:28006:  temp.val[2] = vcombine_u8 (val.val[2], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:28007:  temp.val[3] = vcombine_u8 (val.val[3], vcreate_u8 (__AARCH64_UINT64_C (0)));
        -:28008:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[0], 0);
        -:28009:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[1], 1);
        -:28010:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[2], 2);
        -:28011:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) temp.val[3], 3);
        -:28012:  __builtin_aarch64_st4v8qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:28013:}
        -:28014:
        -:28015:__extension__ extern __inline void
        -:28016:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28017:vst4_u16 (uint16_t * __a, uint16x4x4_t val)
        -:28018:{
        -:28019:  __builtin_aarch64_simd_xi __o;
        -:28020:  uint16x8x4_t temp;
        -:28021:  temp.val[0] = vcombine_u16 (val.val[0], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:28022:  temp.val[1] = vcombine_u16 (val.val[1], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:28023:  temp.val[2] = vcombine_u16 (val.val[2], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:28024:  temp.val[3] = vcombine_u16 (val.val[3], vcreate_u16 (__AARCH64_UINT64_C (0)));
        -:28025:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[0], 0);
        -:28026:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[1], 1);
        -:28027:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[2], 2);
        -:28028:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) temp.val[3], 3);
        -:28029:  __builtin_aarch64_st4v4hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:28030:}
        -:28031:
        -:28032:__extension__ extern __inline void
        -:28033:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28034:vst4_u32 (uint32_t * __a, uint32x2x4_t val)
        -:28035:{
        -:28036:  __builtin_aarch64_simd_xi __o;
        -:28037:  uint32x4x4_t temp;
        -:28038:  temp.val[0] = vcombine_u32 (val.val[0], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:28039:  temp.val[1] = vcombine_u32 (val.val[1], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:28040:  temp.val[2] = vcombine_u32 (val.val[2], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:28041:  temp.val[3] = vcombine_u32 (val.val[3], vcreate_u32 (__AARCH64_UINT64_C (0)));
        -:28042:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[0], 0);
        -:28043:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[1], 1);
        -:28044:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[2], 2);
        -:28045:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) temp.val[3], 3);
        -:28046:  __builtin_aarch64_st4v2si ((__builtin_aarch64_simd_si *) __a, __o);
        -:28047:}
        -:28048:
        -:28049:__extension__ extern __inline void
        -:28050:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28051:vst4_f16 (float16_t * __a, float16x4x4_t val)
        -:28052:{
        -:28053:  __builtin_aarch64_simd_xi __o;
        -:28054:  float16x8x4_t temp;
        -:28055:  temp.val[0] = vcombine_f16 (val.val[0], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:28056:  temp.val[1] = vcombine_f16 (val.val[1], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:28057:  temp.val[2] = vcombine_f16 (val.val[2], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:28058:  temp.val[3] = vcombine_f16 (val.val[3], vcreate_f16 (__AARCH64_UINT64_C (0)));
        -:28059:  __o = __builtin_aarch64_set_qregxiv8hf (__o, (float16x8_t) temp.val[0], 0);
        -:28060:  __o = __builtin_aarch64_set_qregxiv8hf (__o, (float16x8_t) temp.val[1], 1);
        -:28061:  __o = __builtin_aarch64_set_qregxiv8hf (__o, (float16x8_t) temp.val[2], 2);
        -:28062:  __o = __builtin_aarch64_set_qregxiv8hf (__o, (float16x8_t) temp.val[3], 3);
        -:28063:  __builtin_aarch64_st4v4hf ((__builtin_aarch64_simd_hf *) __a, __o);
        -:28064:}
        -:28065:
        -:28066:__extension__ extern __inline void
        -:28067:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28068:vst4_f32 (float32_t * __a, float32x2x4_t val)
        -:28069:{
        -:28070:  __builtin_aarch64_simd_xi __o;
        -:28071:  float32x4x4_t temp;
        -:28072:  temp.val[0] = vcombine_f32 (val.val[0], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:28073:  temp.val[1] = vcombine_f32 (val.val[1], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:28074:  temp.val[2] = vcombine_f32 (val.val[2], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:28075:  temp.val[3] = vcombine_f32 (val.val[3], vcreate_f32 (__AARCH64_UINT64_C (0)));
        -:28076:  __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) temp.val[0], 0);
        -:28077:  __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) temp.val[1], 1);
        -:28078:  __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) temp.val[2], 2);
        -:28079:  __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) temp.val[3], 3);
        -:28080:  __builtin_aarch64_st4v2sf ((__builtin_aarch64_simd_sf *) __a, __o);
        -:28081:}
        -:28082:
        -:28083:__extension__ extern __inline void
        -:28084:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28085:vst4_p64 (poly64_t * __a, poly64x1x4_t val)
        -:28086:{
        -:28087:  __builtin_aarch64_simd_xi __o;
        -:28088:  poly64x2x4_t temp;
        -:28089:  temp.val[0] = vcombine_p64 (val.val[0], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:28090:  temp.val[1] = vcombine_p64 (val.val[1], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:28091:  temp.val[2] = vcombine_p64 (val.val[2], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:28092:  temp.val[3] = vcombine_p64 (val.val[3], vcreate_p64 (__AARCH64_UINT64_C (0)));
        -:28093:  __o = __builtin_aarch64_set_qregxiv2di_ssps (__o,
        -:28094:					       (poly64x2_t) temp.val[0], 0);
        -:28095:  __o = __builtin_aarch64_set_qregxiv2di_ssps (__o,
        -:28096:					       (poly64x2_t) temp.val[1], 1);
        -:28097:  __o = __builtin_aarch64_set_qregxiv2di_ssps (__o,
        -:28098:					       (poly64x2_t) temp.val[2], 2);
        -:28099:  __o = __builtin_aarch64_set_qregxiv2di_ssps (__o,
        -:28100:					       (poly64x2_t) temp.val[3], 3);
        -:28101:  __builtin_aarch64_st4di ((__builtin_aarch64_simd_di *) __a, __o);
        -:28102:}
        -:28103:
        -:28104:__extension__ extern __inline void
        -:28105:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28106:vst4q_s8 (int8_t * __a, int8x16x4_t val)
        -:28107:{
        -:28108:  __builtin_aarch64_simd_xi __o;
        -:28109:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[0], 0);
        -:28110:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[1], 1);
        -:28111:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[2], 2);
        -:28112:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[3], 3);
        -:28113:  __builtin_aarch64_st4v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:28114:}
        -:28115:
        -:28116:__extension__ extern __inline void
        -:28117:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28118:vst4q_p8 (poly8_t * __a, poly8x16x4_t val)
        -:28119:{
        -:28120:  __builtin_aarch64_simd_xi __o;
        -:28121:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[0], 0);
        -:28122:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[1], 1);
        -:28123:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[2], 2);
        -:28124:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[3], 3);
        -:28125:  __builtin_aarch64_st4v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:28126:}
        -:28127:
        -:28128:__extension__ extern __inline void
        -:28129:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28130:vst4q_s16 (int16_t * __a, int16x8x4_t val)
        -:28131:{
        -:28132:  __builtin_aarch64_simd_xi __o;
        -:28133:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[0], 0);
        -:28134:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[1], 1);
        -:28135:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[2], 2);
        -:28136:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[3], 3);
        -:28137:  __builtin_aarch64_st4v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:28138:}
        -:28139:
        -:28140:__extension__ extern __inline void
        -:28141:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28142:vst4q_p16 (poly16_t * __a, poly16x8x4_t val)
        -:28143:{
        -:28144:  __builtin_aarch64_simd_xi __o;
        -:28145:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[0], 0);
        -:28146:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[1], 1);
        -:28147:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[2], 2);
        -:28148:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[3], 3);
        -:28149:  __builtin_aarch64_st4v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:28150:}
        -:28151:
        -:28152:__extension__ extern __inline void
        -:28153:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28154:vst4q_s32 (int32_t * __a, int32x4x4_t val)
        -:28155:{
        -:28156:  __builtin_aarch64_simd_xi __o;
        -:28157:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) val.val[0], 0);
        -:28158:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) val.val[1], 1);
        -:28159:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) val.val[2], 2);
        -:28160:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) val.val[3], 3);
        -:28161:  __builtin_aarch64_st4v4si ((__builtin_aarch64_simd_si *) __a, __o);
        -:28162:}
        -:28163:
        -:28164:__extension__ extern __inline void
        -:28165:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28166:vst4q_s64 (int64_t * __a, int64x2x4_t val)
        -:28167:{
        -:28168:  __builtin_aarch64_simd_xi __o;
        -:28169:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) val.val[0], 0);
        -:28170:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) val.val[1], 1);
        -:28171:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) val.val[2], 2);
        -:28172:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) val.val[3], 3);
        -:28173:  __builtin_aarch64_st4v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:28174:}
        -:28175:
        -:28176:__extension__ extern __inline void
        -:28177:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28178:vst4q_u8 (uint8_t * __a, uint8x16x4_t val)
        -:28179:{
        -:28180:  __builtin_aarch64_simd_xi __o;
        -:28181:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[0], 0);
        -:28182:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[1], 1);
        -:28183:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[2], 2);
        -:28184:  __o = __builtin_aarch64_set_qregxiv16qi (__o, (int8x16_t) val.val[3], 3);
        -:28185:  __builtin_aarch64_st4v16qi ((__builtin_aarch64_simd_qi *) __a, __o);
        -:28186:}
        -:28187:
        -:28188:__extension__ extern __inline void
        -:28189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28190:vst4q_u16 (uint16_t * __a, uint16x8x4_t val)
        -:28191:{
        -:28192:  __builtin_aarch64_simd_xi __o;
        -:28193:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[0], 0);
        -:28194:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[1], 1);
        -:28195:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[2], 2);
        -:28196:  __o = __builtin_aarch64_set_qregxiv8hi (__o, (int16x8_t) val.val[3], 3);
        -:28197:  __builtin_aarch64_st4v8hi ((__builtin_aarch64_simd_hi *) __a, __o);
        -:28198:}
        -:28199:
        -:28200:__extension__ extern __inline void
        -:28201:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28202:vst4q_u32 (uint32_t * __a, uint32x4x4_t val)
        -:28203:{
        -:28204:  __builtin_aarch64_simd_xi __o;
        -:28205:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) val.val[0], 0);
        -:28206:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) val.val[1], 1);
        -:28207:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) val.val[2], 2);
        -:28208:  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) val.val[3], 3);
        -:28209:  __builtin_aarch64_st4v4si ((__builtin_aarch64_simd_si *) __a, __o);
        -:28210:}
        -:28211:
        -:28212:__extension__ extern __inline void
        -:28213:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28214:vst4q_u64 (uint64_t * __a, uint64x2x4_t val)
        -:28215:{
        -:28216:  __builtin_aarch64_simd_xi __o;
        -:28217:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) val.val[0], 0);
        -:28218:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) val.val[1], 1);
        -:28219:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) val.val[2], 2);
        -:28220:  __o = __builtin_aarch64_set_qregxiv2di (__o, (int64x2_t) val.val[3], 3);
        -:28221:  __builtin_aarch64_st4v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:28222:}
        -:28223:
        -:28224:__extension__ extern __inline void
        -:28225:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28226:vst4q_f16 (float16_t * __a, float16x8x4_t val)
        -:28227:{
        -:28228:  __builtin_aarch64_simd_xi __o;
        -:28229:  __o = __builtin_aarch64_set_qregxiv8hf (__o, (float16x8_t) val.val[0], 0);
        -:28230:  __o = __builtin_aarch64_set_qregxiv8hf (__o, (float16x8_t) val.val[1], 1);
        -:28231:  __o = __builtin_aarch64_set_qregxiv8hf (__o, (float16x8_t) val.val[2], 2);
        -:28232:  __o = __builtin_aarch64_set_qregxiv8hf (__o, (float16x8_t) val.val[3], 3);
        -:28233:  __builtin_aarch64_st4v8hf ((__builtin_aarch64_simd_hf *) __a, __o);
        -:28234:}
        -:28235:
        -:28236:__extension__ extern __inline void
        -:28237:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28238:vst4q_f32 (float32_t * __a, float32x4x4_t val)
        -:28239:{
        -:28240:  __builtin_aarch64_simd_xi __o;
        -:28241:  __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) val.val[0], 0);
        -:28242:  __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) val.val[1], 1);
        -:28243:  __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) val.val[2], 2);
        -:28244:  __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) val.val[3], 3);
        -:28245:  __builtin_aarch64_st4v4sf ((__builtin_aarch64_simd_sf *) __a, __o);
        -:28246:}
        -:28247:
        -:28248:__extension__ extern __inline void
        -:28249:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28250:vst4q_f64 (float64_t * __a, float64x2x4_t val)
        -:28251:{
        -:28252:  __builtin_aarch64_simd_xi __o;
        -:28253:  __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) val.val[0], 0);
        -:28254:  __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) val.val[1], 1);
        -:28255:  __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) val.val[2], 2);
        -:28256:  __o = __builtin_aarch64_set_qregxiv2df (__o, (float64x2_t) val.val[3], 3);
        -:28257:  __builtin_aarch64_st4v2df ((__builtin_aarch64_simd_df *) __a, __o);
        -:28258:}
        -:28259:
        -:28260:__extension__ extern __inline void
        -:28261:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28262:vst4q_p64 (poly64_t * __a, poly64x2x4_t val)
        -:28263:{
        -:28264:  __builtin_aarch64_simd_xi __o;
        -:28265:  __o = __builtin_aarch64_set_qregxiv2di_ssps (__o,
        -:28266:					       (poly64x2_t) val.val[0], 0);
        -:28267:  __o = __builtin_aarch64_set_qregxiv2di_ssps (__o,
        -:28268:					       (poly64x2_t) val.val[1], 1);
        -:28269:  __o = __builtin_aarch64_set_qregxiv2di_ssps (__o,
        -:28270:					       (poly64x2_t) val.val[2], 2);
        -:28271:  __o = __builtin_aarch64_set_qregxiv2di_ssps (__o,
        -:28272:					       (poly64x2_t) val.val[3], 3);
        -:28273:  __builtin_aarch64_st4v2di ((__builtin_aarch64_simd_di *) __a, __o);
        -:28274:}
        -:28275:
        -:28276:/* vsub */
        -:28277:
        -:28278:__extension__ extern __inline int64_t
        -:28279:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28280:vsubd_s64 (int64_t __a, int64_t __b)
        -:28281:{
        -:28282:  return __a - __b;
        -:28283:}
        -:28284:
        -:28285:__extension__ extern __inline uint64_t
        -:28286:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28287:vsubd_u64 (uint64_t __a, uint64_t __b)
        -:28288:{
        -:28289:  return __a - __b;
        -:28290:}
        -:28291:
        -:28292:/* vtbx1  */
        -:28293:
        -:28294:__extension__ extern __inline int8x8_t
        -:28295:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28296:vtbx1_s8 (int8x8_t __r, int8x8_t __tab, int8x8_t __idx)
        -:28297:{
        -:28298:  uint8x8_t __mask = vclt_u8 (vreinterpret_u8_s8 (__idx),
        -:28299:			      vmov_n_u8 (8));
        -:28300:  int8x8_t __tbl = vtbl1_s8 (__tab, __idx);
        -:28301:
        -:28302:  return vbsl_s8 (__mask, __tbl, __r);
        -:28303:}
        -:28304:
        -:28305:__extension__ extern __inline uint8x8_t
        -:28306:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28307:vtbx1_u8 (uint8x8_t __r, uint8x8_t __tab, uint8x8_t __idx)
        -:28308:{
        -:28309:  uint8x8_t __mask = vclt_u8 (__idx, vmov_n_u8 (8));
        -:28310:  uint8x8_t __tbl = vtbl1_u8 (__tab, __idx);
        -:28311:
        -:28312:  return vbsl_u8 (__mask, __tbl, __r);
        -:28313:}
        -:28314:
        -:28315:__extension__ extern __inline poly8x8_t
        -:28316:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28317:vtbx1_p8 (poly8x8_t __r, poly8x8_t __tab, uint8x8_t __idx)
        -:28318:{
        -:28319:  uint8x8_t __mask = vclt_u8 (__idx, vmov_n_u8 (8));
        -:28320:  poly8x8_t __tbl = vtbl1_p8 (__tab, __idx);
        -:28321:
        -:28322:  return vbsl_p8 (__mask, __tbl, __r);
        -:28323:}
        -:28324:
        -:28325:/* vtbx3  */
        -:28326:
        -:28327:__extension__ extern __inline int8x8_t
        -:28328:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28329:vtbx3_s8 (int8x8_t __r, int8x8x3_t __tab, int8x8_t __idx)
        -:28330:{
        -:28331:  uint8x8_t __mask = vclt_u8 (vreinterpret_u8_s8 (__idx),
        -:28332:			      vmov_n_u8 (24));
        -:28333:  int8x8_t __tbl = vtbl3_s8 (__tab, __idx);
        -:28334:
        -:28335:  return vbsl_s8 (__mask, __tbl, __r);
        -:28336:}
        -:28337:
        -:28338:__extension__ extern __inline uint8x8_t
        -:28339:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28340:vtbx3_u8 (uint8x8_t __r, uint8x8x3_t __tab, uint8x8_t __idx)
        -:28341:{
        -:28342:  uint8x8_t __mask = vclt_u8 (__idx, vmov_n_u8 (24));
        -:28343:  uint8x8_t __tbl = vtbl3_u8 (__tab, __idx);
        -:28344:
        -:28345:  return vbsl_u8 (__mask, __tbl, __r);
        -:28346:}
        -:28347:
        -:28348:__extension__ extern __inline poly8x8_t
        -:28349:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28350:vtbx3_p8 (poly8x8_t __r, poly8x8x3_t __tab, uint8x8_t __idx)
        -:28351:{
        -:28352:  uint8x8_t __mask = vclt_u8 (__idx, vmov_n_u8 (24));
        -:28353:  poly8x8_t __tbl = vtbl3_p8 (__tab, __idx);
        -:28354:
        -:28355:  return vbsl_p8 (__mask, __tbl, __r);
        -:28356:}
        -:28357:
        -:28358:/* vtbx4  */
        -:28359:
        -:28360:__extension__ extern __inline int8x8_t
        -:28361:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28362:vtbx4_s8 (int8x8_t __r, int8x8x4_t __tab, int8x8_t __idx)
        -:28363:{
        -:28364:  int8x8_t result;
        -:28365:  int8x16x2_t temp;
        -:28366:  __builtin_aarch64_simd_oi __o;
        -:28367:  temp.val[0] = vcombine_s8 (__tab.val[0], __tab.val[1]);
        -:28368:  temp.val[1] = vcombine_s8 (__tab.val[2], __tab.val[3]);
        -:28369:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:28370:					   (int8x16_t) temp.val[0], 0);
        -:28371:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:28372:					   (int8x16_t) temp.val[1], 1);
        -:28373:  result = __builtin_aarch64_tbx4v8qi (__r, __o, __idx);
        -:28374:  return result;
        -:28375:}
        -:28376:
        -:28377:__extension__ extern __inline uint8x8_t
        -:28378:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28379:vtbx4_u8 (uint8x8_t __r, uint8x8x4_t __tab, uint8x8_t __idx)
        -:28380:{
        -:28381:  uint8x8_t result;
        -:28382:  uint8x16x2_t temp;
        -:28383:  __builtin_aarch64_simd_oi __o;
        -:28384:  temp.val[0] = vcombine_u8 (__tab.val[0], __tab.val[1]);
        -:28385:  temp.val[1] = vcombine_u8 (__tab.val[2], __tab.val[3]);
        -:28386:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:28387:					   (int8x16_t) temp.val[0], 0);
        -:28388:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:28389:					   (int8x16_t) temp.val[1], 1);
        -:28390:  result = (uint8x8_t)__builtin_aarch64_tbx4v8qi ((int8x8_t)__r, __o,
        -:28391:						  (int8x8_t)__idx);
        -:28392:  return result;
        -:28393:}
        -:28394:
        -:28395:__extension__ extern __inline poly8x8_t
        -:28396:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28397:vtbx4_p8 (poly8x8_t __r, poly8x8x4_t __tab, uint8x8_t __idx)
        -:28398:{
        -:28399:  poly8x8_t result;
        -:28400:  poly8x16x2_t temp;
        -:28401:  __builtin_aarch64_simd_oi __o;
        -:28402:  temp.val[0] = vcombine_p8 (__tab.val[0], __tab.val[1]);
        -:28403:  temp.val[1] = vcombine_p8 (__tab.val[2], __tab.val[3]);
        -:28404:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:28405:					   (int8x16_t) temp.val[0], 0);
        -:28406:  __o = __builtin_aarch64_set_qregoiv16qi (__o,
        -:28407:					   (int8x16_t) temp.val[1], 1);
        -:28408:  result = (poly8x8_t)__builtin_aarch64_tbx4v8qi ((int8x8_t)__r, __o,
        -:28409:						  (int8x8_t)__idx);
        -:28410:  return result;
        -:28411:}
        -:28412:
        -:28413:/* vtrn */
        -:28414:
        -:28415:__extension__ extern __inline float16x4_t
        -:28416:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28417:vtrn1_f16 (float16x4_t __a, float16x4_t __b)
        -:28418:{
        -:28419:#ifdef __AARCH64EB__
        -:28420:  return __builtin_shuffle (__a, __b, (uint16x4_t) {5, 1, 7, 3});
        -:28421:#else
        -:28422:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 4, 2, 6});
        -:28423:#endif
        -:28424:}
        -:28425:
        -:28426:__extension__ extern __inline float32x2_t
        -:28427:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28428:vtrn1_f32 (float32x2_t __a, float32x2_t __b)
        -:28429:{
        -:28430:#ifdef __AARCH64EB__
        -:28431:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:28432:#else
        -:28433:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:28434:#endif
        -:28435:}
        -:28436:
        -:28437:__extension__ extern __inline poly8x8_t
        -:28438:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28439:vtrn1_p8 (poly8x8_t __a, poly8x8_t __b)
        -:28440:{
        -:28441:#ifdef __AARCH64EB__
        -:28442:  return __builtin_shuffle (__a, __b, (uint8x8_t) {9, 1, 11, 3, 13, 5, 15, 7});
        -:28443:#else
        -:28444:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 8, 2, 10, 4, 12, 6, 14});
        -:28445:#endif
        -:28446:}
        -:28447:
        -:28448:__extension__ extern __inline poly16x4_t
        -:28449:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28450:vtrn1_p16 (poly16x4_t __a, poly16x4_t __b)
        -:28451:{
        -:28452:#ifdef __AARCH64EB__
        -:28453:  return __builtin_shuffle (__a, __b, (uint16x4_t) {5, 1, 7, 3});
        -:28454:#else
        -:28455:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 4, 2, 6});
        -:28456:#endif
        -:28457:}
        -:28458:
        -:28459:__extension__ extern __inline int8x8_t
        -:28460:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28461:vtrn1_s8 (int8x8_t __a, int8x8_t __b)
        -:28462:{
        -:28463:#ifdef __AARCH64EB__
        -:28464:  return __builtin_shuffle (__a, __b, (uint8x8_t) {9, 1, 11, 3, 13, 5, 15, 7});
        -:28465:#else
        -:28466:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 8, 2, 10, 4, 12, 6, 14});
        -:28467:#endif
        -:28468:}
        -:28469:
        -:28470:__extension__ extern __inline int16x4_t
        -:28471:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28472:vtrn1_s16 (int16x4_t __a, int16x4_t __b)
        -:28473:{
        -:28474:#ifdef __AARCH64EB__
        -:28475:  return __builtin_shuffle (__a, __b, (uint16x4_t) {5, 1, 7, 3});
        -:28476:#else
        -:28477:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 4, 2, 6});
        -:28478:#endif
        -:28479:}
        -:28480:
        -:28481:__extension__ extern __inline int32x2_t
        -:28482:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28483:vtrn1_s32 (int32x2_t __a, int32x2_t __b)
        -:28484:{
        -:28485:#ifdef __AARCH64EB__
        -:28486:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:28487:#else
        -:28488:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:28489:#endif
        -:28490:}
        -:28491:
        -:28492:__extension__ extern __inline uint8x8_t
        -:28493:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28494:vtrn1_u8 (uint8x8_t __a, uint8x8_t __b)
        -:28495:{
        -:28496:#ifdef __AARCH64EB__
        -:28497:  return __builtin_shuffle (__a, __b, (uint8x8_t) {9, 1, 11, 3, 13, 5, 15, 7});
        -:28498:#else
        -:28499:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 8, 2, 10, 4, 12, 6, 14});
        -:28500:#endif
        -:28501:}
        -:28502:
        -:28503:__extension__ extern __inline uint16x4_t
        -:28504:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28505:vtrn1_u16 (uint16x4_t __a, uint16x4_t __b)
        -:28506:{
        -:28507:#ifdef __AARCH64EB__
        -:28508:  return __builtin_shuffle (__a, __b, (uint16x4_t) {5, 1, 7, 3});
        -:28509:#else
        -:28510:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 4, 2, 6});
        -:28511:#endif
        -:28512:}
        -:28513:
        -:28514:__extension__ extern __inline uint32x2_t
        -:28515:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28516:vtrn1_u32 (uint32x2_t __a, uint32x2_t __b)
        -:28517:{
        -:28518:#ifdef __AARCH64EB__
        -:28519:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:28520:#else
        -:28521:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:28522:#endif
        -:28523:}
        -:28524:
        -:28525:__extension__ extern __inline float16x8_t
        -:28526:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28527:vtrn1q_f16 (float16x8_t __a, float16x8_t __b)
        -:28528:{
        -:28529:#ifdef __AARCH64EB__
        -:28530:  return __builtin_shuffle (__a, __b, (uint16x8_t) {9, 1, 11, 3, 13, 5, 15, 7});
        -:28531:#else
        -:28532:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 8, 2, 10, 4, 12, 6, 14});
        -:28533:#endif
        -:28534:}
        -:28535:
        -:28536:__extension__ extern __inline float32x4_t
        -:28537:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28538:vtrn1q_f32 (float32x4_t __a, float32x4_t __b)
        -:28539:{
        -:28540:#ifdef __AARCH64EB__
        -:28541:  return __builtin_shuffle (__a, __b, (uint32x4_t) {5, 1, 7, 3});
        -:28542:#else
        -:28543:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 4, 2, 6});
        -:28544:#endif
        -:28545:}
        -:28546:
        -:28547:__extension__ extern __inline float64x2_t
        -:28548:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28549:vtrn1q_f64 (float64x2_t __a, float64x2_t __b)
        -:28550:{
        -:28551:#ifdef __AARCH64EB__
        -:28552:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:28553:#else
        -:28554:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:28555:#endif
        -:28556:}
        -:28557:
        -:28558:__extension__ extern __inline poly8x16_t
        -:28559:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28560:vtrn1q_p8 (poly8x16_t __a, poly8x16_t __b)
        -:28561:{
        -:28562:#ifdef __AARCH64EB__
        -:28563:  return __builtin_shuffle (__a, __b,
        -:28564:      (uint8x16_t) {17, 1, 19, 3, 21, 5, 23, 7, 25, 9, 27, 11, 29, 13, 31, 15});
        -:28565:#else
        -:28566:  return __builtin_shuffle (__a, __b,
        -:28567:      (uint8x16_t) {0, 16, 2, 18, 4, 20, 6, 22, 8, 24, 10, 26, 12, 28, 14, 30});
        -:28568:#endif
        -:28569:}
        -:28570:
        -:28571:__extension__ extern __inline poly16x8_t
        -:28572:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28573:vtrn1q_p16 (poly16x8_t __a, poly16x8_t __b)
        -:28574:{
        -:28575:#ifdef __AARCH64EB__
        -:28576:  return __builtin_shuffle (__a, __b, (uint16x8_t) {9, 1, 11, 3, 13, 5, 15, 7});
        -:28577:#else
        -:28578:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 8, 2, 10, 4, 12, 6, 14});
        -:28579:#endif
        -:28580:}
        -:28581:
        -:28582:__extension__ extern __inline int8x16_t
        -:28583:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28584:vtrn1q_s8 (int8x16_t __a, int8x16_t __b)
        -:28585:{
        -:28586:#ifdef __AARCH64EB__
        -:28587:  return __builtin_shuffle (__a, __b,
        -:28588:      (uint8x16_t) {17, 1, 19, 3, 21, 5, 23, 7, 25, 9, 27, 11, 29, 13, 31, 15});
        -:28589:#else
        -:28590:  return __builtin_shuffle (__a, __b,
        -:28591:      (uint8x16_t) {0, 16, 2, 18, 4, 20, 6, 22, 8, 24, 10, 26, 12, 28, 14, 30});
        -:28592:#endif
        -:28593:}
        -:28594:
        -:28595:__extension__ extern __inline int16x8_t
        -:28596:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28597:vtrn1q_s16 (int16x8_t __a, int16x8_t __b)
        -:28598:{
        -:28599:#ifdef __AARCH64EB__
        -:28600:  return __builtin_shuffle (__a, __b, (uint16x8_t) {9, 1, 11, 3, 13, 5, 15, 7});
        -:28601:#else
        -:28602:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 8, 2, 10, 4, 12, 6, 14});
        -:28603:#endif
        -:28604:}
        -:28605:
        -:28606:__extension__ extern __inline int32x4_t
        -:28607:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28608:vtrn1q_s32 (int32x4_t __a, int32x4_t __b)
        -:28609:{
        -:28610:#ifdef __AARCH64EB__
        -:28611:  return __builtin_shuffle (__a, __b, (uint32x4_t) {5, 1, 7, 3});
        -:28612:#else
        -:28613:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 4, 2, 6});
        -:28614:#endif
        -:28615:}
        -:28616:
        -:28617:__extension__ extern __inline int64x2_t
        -:28618:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28619:vtrn1q_s64 (int64x2_t __a, int64x2_t __b)
        -:28620:{
        -:28621:#ifdef __AARCH64EB__
        -:28622:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:28623:#else
        -:28624:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:28625:#endif
        -:28626:}
        -:28627:
        -:28628:__extension__ extern __inline uint8x16_t
        -:28629:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28630:vtrn1q_u8 (uint8x16_t __a, uint8x16_t __b)
        -:28631:{
        -:28632:#ifdef __AARCH64EB__
        -:28633:  return __builtin_shuffle (__a, __b,
        -:28634:      (uint8x16_t) {17, 1, 19, 3, 21, 5, 23, 7, 25, 9, 27, 11, 29, 13, 31, 15});
        -:28635:#else
        -:28636:  return __builtin_shuffle (__a, __b,
        -:28637:      (uint8x16_t) {0, 16, 2, 18, 4, 20, 6, 22, 8, 24, 10, 26, 12, 28, 14, 30});
        -:28638:#endif
        -:28639:}
        -:28640:
        -:28641:__extension__ extern __inline uint16x8_t
        -:28642:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28643:vtrn1q_u16 (uint16x8_t __a, uint16x8_t __b)
        -:28644:{
        -:28645:#ifdef __AARCH64EB__
        -:28646:  return __builtin_shuffle (__a, __b, (uint16x8_t) {9, 1, 11, 3, 13, 5, 15, 7});
        -:28647:#else
        -:28648:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 8, 2, 10, 4, 12, 6, 14});
        -:28649:#endif
        -:28650:}
        -:28651:
        -:28652:__extension__ extern __inline uint32x4_t
        -:28653:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28654:vtrn1q_u32 (uint32x4_t __a, uint32x4_t __b)
        -:28655:{
        -:28656:#ifdef __AARCH64EB__
        -:28657:  return __builtin_shuffle (__a, __b, (uint32x4_t) {5, 1, 7, 3});
        -:28658:#else
        -:28659:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 4, 2, 6});
        -:28660:#endif
        -:28661:}
        -:28662:
        -:28663:__extension__ extern __inline uint64x2_t
        -:28664:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28665:vtrn1q_u64 (uint64x2_t __a, uint64x2_t __b)
        -:28666:{
        -:28667:#ifdef __AARCH64EB__
        -:28668:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:28669:#else
        -:28670:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:28671:#endif
        -:28672:}
        -:28673:
        -:28674:__extension__ extern __inline float16x4_t
        -:28675:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28676:vtrn2_f16 (float16x4_t __a, float16x4_t __b)
        -:28677:{
        -:28678:#ifdef __AARCH64EB__
        -:28679:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 0, 6, 2});
        -:28680:#else
        -:28681:  return __builtin_shuffle (__a, __b, (uint16x4_t) {1, 5, 3, 7});
        -:28682:#endif
        -:28683:}
        -:28684:
        -:28685:__extension__ extern __inline float32x2_t
        -:28686:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28687:vtrn2_f32 (float32x2_t __a, float32x2_t __b)
        -:28688:{
        -:28689:#ifdef __AARCH64EB__
        -:28690:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:28691:#else
        -:28692:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:28693:#endif
        -:28694:}
        -:28695:
        -:28696:__extension__ extern __inline poly8x8_t
        -:28697:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28698:vtrn2_p8 (poly8x8_t __a, poly8x8_t __b)
        -:28699:{
        -:28700:#ifdef __AARCH64EB__
        -:28701:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 0, 10, 2, 12, 4, 14, 6});
        -:28702:#else
        -:28703:  return __builtin_shuffle (__a, __b, (uint8x8_t) {1, 9, 3, 11, 5, 13, 7, 15});
        -:28704:#endif
        -:28705:}
        -:28706:
        -:28707:__extension__ extern __inline poly16x4_t
        -:28708:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28709:vtrn2_p16 (poly16x4_t __a, poly16x4_t __b)
        -:28710:{
        -:28711:#ifdef __AARCH64EB__
        -:28712:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 0, 6, 2});
        -:28713:#else
        -:28714:  return __builtin_shuffle (__a, __b, (uint16x4_t) {1, 5, 3, 7});
        -:28715:#endif
        -:28716:}
        -:28717:
        -:28718:__extension__ extern __inline int8x8_t
        -:28719:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28720:vtrn2_s8 (int8x8_t __a, int8x8_t __b)
        -:28721:{
        -:28722:#ifdef __AARCH64EB__
        -:28723:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 0, 10, 2, 12, 4, 14, 6});
        -:28724:#else
        -:28725:  return __builtin_shuffle (__a, __b, (uint8x8_t) {1, 9, 3, 11, 5, 13, 7, 15});
        -:28726:#endif
        -:28727:}
        -:28728:
        -:28729:__extension__ extern __inline int16x4_t
        -:28730:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28731:vtrn2_s16 (int16x4_t __a, int16x4_t __b)
        -:28732:{
        -:28733:#ifdef __AARCH64EB__
        -:28734:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 0, 6, 2});
        -:28735:#else
        -:28736:  return __builtin_shuffle (__a, __b, (uint16x4_t) {1, 5, 3, 7});
        -:28737:#endif
        -:28738:}
        -:28739:
        -:28740:__extension__ extern __inline int32x2_t
        -:28741:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28742:vtrn2_s32 (int32x2_t __a, int32x2_t __b)
        -:28743:{
        -:28744:#ifdef __AARCH64EB__
        -:28745:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:28746:#else
        -:28747:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:28748:#endif
        -:28749:}
        -:28750:
        -:28751:__extension__ extern __inline uint8x8_t
        -:28752:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28753:vtrn2_u8 (uint8x8_t __a, uint8x8_t __b)
        -:28754:{
        -:28755:#ifdef __AARCH64EB__
        -:28756:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 0, 10, 2, 12, 4, 14, 6});
        -:28757:#else
        -:28758:  return __builtin_shuffle (__a, __b, (uint8x8_t) {1, 9, 3, 11, 5, 13, 7, 15});
        -:28759:#endif
        -:28760:}
        -:28761:
        -:28762:__extension__ extern __inline uint16x4_t
        -:28763:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28764:vtrn2_u16 (uint16x4_t __a, uint16x4_t __b)
        -:28765:{
        -:28766:#ifdef __AARCH64EB__
        -:28767:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 0, 6, 2});
        -:28768:#else
        -:28769:  return __builtin_shuffle (__a, __b, (uint16x4_t) {1, 5, 3, 7});
        -:28770:#endif
        -:28771:}
        -:28772:
        -:28773:__extension__ extern __inline uint32x2_t
        -:28774:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28775:vtrn2_u32 (uint32x2_t __a, uint32x2_t __b)
        -:28776:{
        -:28777:#ifdef __AARCH64EB__
        -:28778:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:28779:#else
        -:28780:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:28781:#endif
        -:28782:}
        -:28783:
        -:28784:__extension__ extern __inline float16x8_t
        -:28785:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28786:vtrn2q_f16 (float16x8_t __a, float16x8_t __b)
        -:28787:{
        -:28788:#ifdef __AARCH64EB__
        -:28789:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 0, 10, 2, 12, 4, 14, 6});
        -:28790:#else
        -:28791:  return __builtin_shuffle (__a, __b, (uint16x8_t) {1, 9, 3, 11, 5, 13, 7, 15});
        -:28792:#endif
        -:28793:}
        -:28794:
        -:28795:__extension__ extern __inline float32x4_t
        -:28796:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28797:vtrn2q_f32 (float32x4_t __a, float32x4_t __b)
        -:28798:{
        -:28799:#ifdef __AARCH64EB__
        -:28800:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 0, 6, 2});
        -:28801:#else
        -:28802:  return __builtin_shuffle (__a, __b, (uint32x4_t) {1, 5, 3, 7});
        -:28803:#endif
        -:28804:}
        -:28805:
        -:28806:__extension__ extern __inline float64x2_t
        -:28807:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28808:vtrn2q_f64 (float64x2_t __a, float64x2_t __b)
        -:28809:{
        -:28810:#ifdef __AARCH64EB__
        -:28811:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:28812:#else
        -:28813:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:28814:#endif
        -:28815:}
        -:28816:
        -:28817:__extension__ extern __inline poly8x16_t
        -:28818:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28819:vtrn2q_p8 (poly8x16_t __a, poly8x16_t __b)
        -:28820:{
        -:28821:#ifdef __AARCH64EB__
        -:28822:  return __builtin_shuffle (__a, __b,
        -:28823:      (uint8x16_t) {16, 0, 18, 2, 20, 4, 22, 6, 24, 8, 26, 10, 28, 12, 30, 14});
        -:28824:#else
        -:28825:  return __builtin_shuffle (__a, __b,
        -:28826:      (uint8x16_t) {1, 17, 3, 19, 5, 21, 7, 23, 9, 25, 11, 27, 13, 29, 15, 31});
        -:28827:#endif
        -:28828:}
        -:28829:
        -:28830:__extension__ extern __inline poly16x8_t
        -:28831:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28832:vtrn2q_p16 (poly16x8_t __a, poly16x8_t __b)
        -:28833:{
        -:28834:#ifdef __AARCH64EB__
        -:28835:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 0, 10, 2, 12, 4, 14, 6});
        -:28836:#else
        -:28837:  return __builtin_shuffle (__a, __b, (uint16x8_t) {1, 9, 3, 11, 5, 13, 7, 15});
        -:28838:#endif
        -:28839:}
        -:28840:
        -:28841:__extension__ extern __inline int8x16_t
        -:28842:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28843:vtrn2q_s8 (int8x16_t __a, int8x16_t __b)
        -:28844:{
        -:28845:#ifdef __AARCH64EB__
        -:28846:  return __builtin_shuffle (__a, __b,
        -:28847:      (uint8x16_t) {16, 0, 18, 2, 20, 4, 22, 6, 24, 8, 26, 10, 28, 12, 30, 14});
        -:28848:#else
        -:28849:  return __builtin_shuffle (__a, __b,
        -:28850:      (uint8x16_t) {1, 17, 3, 19, 5, 21, 7, 23, 9, 25, 11, 27, 13, 29, 15, 31});
        -:28851:#endif
        -:28852:}
        -:28853:
        -:28854:__extension__ extern __inline int16x8_t
        -:28855:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28856:vtrn2q_s16 (int16x8_t __a, int16x8_t __b)
        -:28857:{
        -:28858:#ifdef __AARCH64EB__
        -:28859:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 0, 10, 2, 12, 4, 14, 6});
        -:28860:#else
        -:28861:  return __builtin_shuffle (__a, __b, (uint16x8_t) {1, 9, 3, 11, 5, 13, 7, 15});
        -:28862:#endif
        -:28863:}
        -:28864:
        -:28865:__extension__ extern __inline int32x4_t
        -:28866:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28867:vtrn2q_s32 (int32x4_t __a, int32x4_t __b)
        -:28868:{
        -:28869:#ifdef __AARCH64EB__
        -:28870:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 0, 6, 2});
        -:28871:#else
        -:28872:  return __builtin_shuffle (__a, __b, (uint32x4_t) {1, 5, 3, 7});
        -:28873:#endif
        -:28874:}
        -:28875:
        -:28876:__extension__ extern __inline int64x2_t
        -:28877:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28878:vtrn2q_s64 (int64x2_t __a, int64x2_t __b)
        -:28879:{
        -:28880:#ifdef __AARCH64EB__
        -:28881:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:28882:#else
        -:28883:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:28884:#endif
        -:28885:}
        -:28886:
        -:28887:__extension__ extern __inline uint8x16_t
        -:28888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28889:vtrn2q_u8 (uint8x16_t __a, uint8x16_t __b)
        -:28890:{
        -:28891:#ifdef __AARCH64EB__
        -:28892:  return __builtin_shuffle (__a, __b,
        -:28893:      (uint8x16_t) {16, 0, 18, 2, 20, 4, 22, 6, 24, 8, 26, 10, 28, 12, 30, 14});
        -:28894:#else
        -:28895:  return __builtin_shuffle (__a, __b,
        -:28896:      (uint8x16_t) {1, 17, 3, 19, 5, 21, 7, 23, 9, 25, 11, 27, 13, 29, 15, 31});
        -:28897:#endif
        -:28898:}
        -:28899:
        -:28900:__extension__ extern __inline uint16x8_t
        -:28901:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28902:vtrn2q_u16 (uint16x8_t __a, uint16x8_t __b)
        -:28903:{
        -:28904:#ifdef __AARCH64EB__
        -:28905:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 0, 10, 2, 12, 4, 14, 6});
        -:28906:#else
        -:28907:  return __builtin_shuffle (__a, __b, (uint16x8_t) {1, 9, 3, 11, 5, 13, 7, 15});
        -:28908:#endif
        -:28909:}
        -:28910:
        -:28911:__extension__ extern __inline uint32x4_t
        -:28912:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28913:vtrn2q_u32 (uint32x4_t __a, uint32x4_t __b)
        -:28914:{
        -:28915:#ifdef __AARCH64EB__
        -:28916:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 0, 6, 2});
        -:28917:#else
        -:28918:  return __builtin_shuffle (__a, __b, (uint32x4_t) {1, 5, 3, 7});
        -:28919:#endif
        -:28920:}
        -:28921:
        -:28922:__extension__ extern __inline uint64x2_t
        -:28923:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28924:vtrn2q_u64 (uint64x2_t __a, uint64x2_t __b)
        -:28925:{
        -:28926:#ifdef __AARCH64EB__
        -:28927:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:28928:#else
        -:28929:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:28930:#endif
        -:28931:}
        -:28932:
        -:28933:__extension__ extern __inline float16x4x2_t
        -:28934:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28935:vtrn_f16 (float16x4_t __a, float16x4_t __b)
        -:28936:{
        -:28937:  return (float16x4x2_t) {vtrn1_f16 (__a, __b), vtrn2_f16 (__a, __b)};
        -:28938:}
        -:28939:
        -:28940:__extension__ extern __inline float32x2x2_t
        -:28941:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28942:vtrn_f32 (float32x2_t a, float32x2_t b)
        -:28943:{
        -:28944:  return (float32x2x2_t) {vtrn1_f32 (a, b), vtrn2_f32 (a, b)};
        -:28945:}
        -:28946:
        -:28947:__extension__ extern __inline poly8x8x2_t
        -:28948:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28949:vtrn_p8 (poly8x8_t a, poly8x8_t b)
        -:28950:{
        -:28951:  return (poly8x8x2_t) {vtrn1_p8 (a, b), vtrn2_p8 (a, b)};
        -:28952:}
        -:28953:
        -:28954:__extension__ extern __inline poly16x4x2_t
        -:28955:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28956:vtrn_p16 (poly16x4_t a, poly16x4_t b)
        -:28957:{
        -:28958:  return (poly16x4x2_t) {vtrn1_p16 (a, b), vtrn2_p16 (a, b)};
        -:28959:}
        -:28960:
        -:28961:__extension__ extern __inline int8x8x2_t
        -:28962:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28963:vtrn_s8 (int8x8_t a, int8x8_t b)
        -:28964:{
        -:28965:  return (int8x8x2_t) {vtrn1_s8 (a, b), vtrn2_s8 (a, b)};
        -:28966:}
        -:28967:
        -:28968:__extension__ extern __inline int16x4x2_t
        -:28969:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28970:vtrn_s16 (int16x4_t a, int16x4_t b)
        -:28971:{
        -:28972:  return (int16x4x2_t) {vtrn1_s16 (a, b), vtrn2_s16 (a, b)};
        -:28973:}
        -:28974:
        -:28975:__extension__ extern __inline int32x2x2_t
        -:28976:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28977:vtrn_s32 (int32x2_t a, int32x2_t b)
        -:28978:{
        -:28979:  return (int32x2x2_t) {vtrn1_s32 (a, b), vtrn2_s32 (a, b)};
        -:28980:}
        -:28981:
        -:28982:__extension__ extern __inline uint8x8x2_t
        -:28983:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28984:vtrn_u8 (uint8x8_t a, uint8x8_t b)
        -:28985:{
        -:28986:  return (uint8x8x2_t) {vtrn1_u8 (a, b), vtrn2_u8 (a, b)};
        -:28987:}
        -:28988:
        -:28989:__extension__ extern __inline uint16x4x2_t
        -:28990:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28991:vtrn_u16 (uint16x4_t a, uint16x4_t b)
        -:28992:{
        -:28993:  return (uint16x4x2_t) {vtrn1_u16 (a, b), vtrn2_u16 (a, b)};
        -:28994:}
        -:28995:
        -:28996:__extension__ extern __inline uint32x2x2_t
        -:28997:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:28998:vtrn_u32 (uint32x2_t a, uint32x2_t b)
        -:28999:{
        -:29000:  return (uint32x2x2_t) {vtrn1_u32 (a, b), vtrn2_u32 (a, b)};
        -:29001:}
        -:29002:
        -:29003:__extension__ extern __inline float16x8x2_t
        -:29004:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29005:vtrnq_f16 (float16x8_t __a, float16x8_t __b)
        -:29006:{
        -:29007:  return (float16x8x2_t) {vtrn1q_f16 (__a, __b), vtrn2q_f16 (__a, __b)};
        -:29008:}
        -:29009:
        -:29010:__extension__ extern __inline float32x4x2_t
        -:29011:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29012:vtrnq_f32 (float32x4_t a, float32x4_t b)
        -:29013:{
        -:29014:  return (float32x4x2_t) {vtrn1q_f32 (a, b), vtrn2q_f32 (a, b)};
        -:29015:}
        -:29016:
        -:29017:__extension__ extern __inline poly8x16x2_t
        -:29018:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29019:vtrnq_p8 (poly8x16_t a, poly8x16_t b)
        -:29020:{
        -:29021:  return (poly8x16x2_t) {vtrn1q_p8 (a, b), vtrn2q_p8 (a, b)};
        -:29022:}
        -:29023:
        -:29024:__extension__ extern __inline poly16x8x2_t
        -:29025:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29026:vtrnq_p16 (poly16x8_t a, poly16x8_t b)
        -:29027:{
        -:29028:  return (poly16x8x2_t) {vtrn1q_p16 (a, b), vtrn2q_p16 (a, b)};
        -:29029:}
        -:29030:
        -:29031:__extension__ extern __inline int8x16x2_t
        -:29032:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29033:vtrnq_s8 (int8x16_t a, int8x16_t b)
        -:29034:{
        -:29035:  return (int8x16x2_t) {vtrn1q_s8 (a, b), vtrn2q_s8 (a, b)};
        -:29036:}
        -:29037:
        -:29038:__extension__ extern __inline int16x8x2_t
        -:29039:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29040:vtrnq_s16 (int16x8_t a, int16x8_t b)
        -:29041:{
        -:29042:  return (int16x8x2_t) {vtrn1q_s16 (a, b), vtrn2q_s16 (a, b)};
        -:29043:}
        -:29044:
        -:29045:__extension__ extern __inline int32x4x2_t
        -:29046:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29047:vtrnq_s32 (int32x4_t a, int32x4_t b)
        -:29048:{
        -:29049:  return (int32x4x2_t) {vtrn1q_s32 (a, b), vtrn2q_s32 (a, b)};
        -:29050:}
        -:29051:
        -:29052:__extension__ extern __inline uint8x16x2_t
        -:29053:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29054:vtrnq_u8 (uint8x16_t a, uint8x16_t b)
        -:29055:{
        -:29056:  return (uint8x16x2_t) {vtrn1q_u8 (a, b), vtrn2q_u8 (a, b)};
        -:29057:}
        -:29058:
        -:29059:__extension__ extern __inline uint16x8x2_t
        -:29060:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29061:vtrnq_u16 (uint16x8_t a, uint16x8_t b)
        -:29062:{
        -:29063:  return (uint16x8x2_t) {vtrn1q_u16 (a, b), vtrn2q_u16 (a, b)};
        -:29064:}
        -:29065:
        -:29066:__extension__ extern __inline uint32x4x2_t
        -:29067:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29068:vtrnq_u32 (uint32x4_t a, uint32x4_t b)
        -:29069:{
        -:29070:  return (uint32x4x2_t) {vtrn1q_u32 (a, b), vtrn2q_u32 (a, b)};
        -:29071:}
        -:29072:
        -:29073:/* vtst */
        -:29074:
        -:29075:__extension__ extern __inline uint8x8_t
        -:29076:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29077:vtst_s8 (int8x8_t __a, int8x8_t __b)
        -:29078:{
        -:29079:  return (uint8x8_t) ((__a & __b) != 0);
        -:29080:}
        -:29081:
        -:29082:__extension__ extern __inline uint16x4_t
        -:29083:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29084:vtst_s16 (int16x4_t __a, int16x4_t __b)
        -:29085:{
        -:29086:  return (uint16x4_t) ((__a & __b) != 0);
        -:29087:}
        -:29088:
        -:29089:__extension__ extern __inline uint32x2_t
        -:29090:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29091:vtst_s32 (int32x2_t __a, int32x2_t __b)
        -:29092:{
        -:29093:  return (uint32x2_t) ((__a & __b) != 0);
        -:29094:}
        -:29095:
        -:29096:__extension__ extern __inline uint64x1_t
        -:29097:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29098:vtst_s64 (int64x1_t __a, int64x1_t __b)
        -:29099:{
        -:29100:  return (uint64x1_t) ((__a & __b) != __AARCH64_INT64_C (0));
        -:29101:}
        -:29102:
        -:29103:__extension__ extern __inline uint8x8_t
        -:29104:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29105:vtst_u8 (uint8x8_t __a, uint8x8_t __b)
        -:29106:{
        -:29107:  return ((__a & __b) != 0);
        -:29108:}
        -:29109:
        -:29110:__extension__ extern __inline uint16x4_t
        -:29111:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29112:vtst_u16 (uint16x4_t __a, uint16x4_t __b)
        -:29113:{
        -:29114:  return ((__a & __b) != 0);
        -:29115:}
        -:29116:
        -:29117:__extension__ extern __inline uint32x2_t
        -:29118:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29119:vtst_u32 (uint32x2_t __a, uint32x2_t __b)
        -:29120:{
        -:29121:  return ((__a & __b) != 0);
        -:29122:}
        -:29123:
        -:29124:__extension__ extern __inline uint64x1_t
        -:29125:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29126:vtst_u64 (uint64x1_t __a, uint64x1_t __b)
        -:29127:{
        -:29128:  return ((__a & __b) != __AARCH64_UINT64_C (0));
        -:29129:}
        -:29130:
        -:29131:__extension__ extern __inline uint8x16_t
        -:29132:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29133:vtstq_s8 (int8x16_t __a, int8x16_t __b)
        -:29134:{
        -:29135:  return (uint8x16_t) ((__a & __b) != 0);
        -:29136:}
        -:29137:
        -:29138:__extension__ extern __inline uint16x8_t
        -:29139:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29140:vtstq_s16 (int16x8_t __a, int16x8_t __b)
        -:29141:{
        -:29142:  return (uint16x8_t) ((__a & __b) != 0);
        -:29143:}
        -:29144:
        -:29145:__extension__ extern __inline uint32x4_t
        -:29146:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29147:vtstq_s32 (int32x4_t __a, int32x4_t __b)
        -:29148:{
        -:29149:  return (uint32x4_t) ((__a & __b) != 0);
        -:29150:}
        -:29151:
        -:29152:__extension__ extern __inline uint64x2_t
        -:29153:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29154:vtstq_s64 (int64x2_t __a, int64x2_t __b)
        -:29155:{
        -:29156:  return (uint64x2_t) ((__a & __b) != __AARCH64_INT64_C (0));
        -:29157:}
        -:29158:
        -:29159:__extension__ extern __inline uint8x16_t
        -:29160:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29161:vtstq_u8 (uint8x16_t __a, uint8x16_t __b)
        -:29162:{
        -:29163:  return ((__a & __b) != 0);
        -:29164:}
        -:29165:
        -:29166:__extension__ extern __inline uint16x8_t
        -:29167:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29168:vtstq_u16 (uint16x8_t __a, uint16x8_t __b)
        -:29169:{
        -:29170:  return ((__a & __b) != 0);
        -:29171:}
        -:29172:
        -:29173:__extension__ extern __inline uint32x4_t
        -:29174:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29175:vtstq_u32 (uint32x4_t __a, uint32x4_t __b)
        -:29176:{
        -:29177:  return ((__a & __b) != 0);
        -:29178:}
        -:29179:
        -:29180:__extension__ extern __inline uint64x2_t
        -:29181:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29182:vtstq_u64 (uint64x2_t __a, uint64x2_t __b)
        -:29183:{
        -:29184:  return ((__a & __b) != __AARCH64_UINT64_C (0));
        -:29185:}
        -:29186:
        -:29187:__extension__ extern __inline uint64_t
        -:29188:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29189:vtstd_s64 (int64_t __a, int64_t __b)
        -:29190:{
        -:29191:  return (__a & __b) ? -1ll : 0ll;
        -:29192:}
        -:29193:
        -:29194:__extension__ extern __inline uint64_t
        -:29195:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29196:vtstd_u64 (uint64_t __a, uint64_t __b)
        -:29197:{
        -:29198:  return (__a & __b) ? -1ll : 0ll;
        -:29199:}
        -:29200:
        -:29201:/* vuqadd */
        -:29202:
        -:29203:__extension__ extern __inline int8x8_t
        -:29204:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29205:vuqadd_s8 (int8x8_t __a, uint8x8_t __b)
        -:29206:{
        -:29207:  return __builtin_aarch64_suqaddv8qi_ssu (__a,  __b);
        -:29208:}
        -:29209:
        -:29210:__extension__ extern __inline int16x4_t
        -:29211:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29212:vuqadd_s16 (int16x4_t __a, uint16x4_t __b)
        -:29213:{
        -:29214:  return __builtin_aarch64_suqaddv4hi_ssu (__a,  __b);
        -:29215:}
        -:29216:
        -:29217:__extension__ extern __inline int32x2_t
        -:29218:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29219:vuqadd_s32 (int32x2_t __a, uint32x2_t __b)
        -:29220:{
        -:29221:  return __builtin_aarch64_suqaddv2si_ssu (__a,  __b);
        -:29222:}
        -:29223:
        -:29224:__extension__ extern __inline int64x1_t
        -:29225:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29226:vuqadd_s64 (int64x1_t __a, uint64x1_t __b)
        -:29227:{
        -:29228:  return (int64x1_t) {__builtin_aarch64_suqadddi_ssu (__a[0], __b[0])};
        -:29229:}
        -:29230:
        -:29231:__extension__ extern __inline int8x16_t
        -:29232:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29233:vuqaddq_s8 (int8x16_t __a, uint8x16_t __b)
        -:29234:{
        -:29235:  return __builtin_aarch64_suqaddv16qi_ssu (__a,  __b);
        -:29236:}
        -:29237:
        -:29238:__extension__ extern __inline int16x8_t
        -:29239:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29240:vuqaddq_s16 (int16x8_t __a, uint16x8_t __b)
        -:29241:{
        -:29242:  return __builtin_aarch64_suqaddv8hi_ssu (__a,  __b);
        -:29243:}
        -:29244:
        -:29245:__extension__ extern __inline int32x4_t
        -:29246:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29247:vuqaddq_s32 (int32x4_t __a, uint32x4_t __b)
        -:29248:{
        -:29249:  return __builtin_aarch64_suqaddv4si_ssu (__a,  __b);
        -:29250:}
        -:29251:
        -:29252:__extension__ extern __inline int64x2_t
        -:29253:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29254:vuqaddq_s64 (int64x2_t __a, uint64x2_t __b)
        -:29255:{
        -:29256:  return __builtin_aarch64_suqaddv2di_ssu (__a,  __b);
        -:29257:}
        -:29258:
        -:29259:__extension__ extern __inline int8_t
        -:29260:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29261:vuqaddb_s8 (int8_t __a, uint8_t __b)
        -:29262:{
        -:29263:  return __builtin_aarch64_suqaddqi_ssu (__a,  __b);
        -:29264:}
        -:29265:
        -:29266:__extension__ extern __inline int16_t
        -:29267:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29268:vuqaddh_s16 (int16_t __a, uint16_t __b)
        -:29269:{
        -:29270:  return __builtin_aarch64_suqaddhi_ssu (__a,  __b);
        -:29271:}
        -:29272:
        -:29273:__extension__ extern __inline int32_t
        -:29274:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29275:vuqadds_s32 (int32_t __a, uint32_t __b)
        -:29276:{
        -:29277:  return __builtin_aarch64_suqaddsi_ssu (__a,  __b);
        -:29278:}
        -:29279:
        -:29280:__extension__ extern __inline int64_t
        -:29281:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29282:vuqaddd_s64 (int64_t __a, uint64_t __b)
        -:29283:{
        -:29284:  return __builtin_aarch64_suqadddi_ssu (__a,  __b);
        -:29285:}
        -:29286:
        -:29287:#define __DEFINTERLEAVE(op, rettype, intype, funcsuffix, Q) 		\
        -:29288:  __extension__ extern __inline rettype					\
        -:29289:  __attribute__ ((__always_inline__, __gnu_inline__, __artificial__)) \
        -:29290:  v ## op ## Q ## _ ## funcsuffix (intype a, intype b)			\
        -:29291:  {									\
        -:29292:    return (rettype) {v ## op ## 1 ## Q ## _ ## funcsuffix (a, b),	\
        -:29293:		      v ## op ## 2 ## Q ## _ ## funcsuffix (a, b)};	\
        -:29294:  }
        -:29295:
        -:29296:#define __INTERLEAVE_LIST(op)					\
        -:29297:  __DEFINTERLEAVE (op, float16x4x2_t, float16x4_t, f16,)	\
        -:29298:  __DEFINTERLEAVE (op, float32x2x2_t, float32x2_t, f32,)	\
        -:29299:  __DEFINTERLEAVE (op, poly8x8x2_t, poly8x8_t, p8,)		\
        -:29300:  __DEFINTERLEAVE (op, poly16x4x2_t, poly16x4_t, p16,)		\
        -:29301:  __DEFINTERLEAVE (op, int8x8x2_t, int8x8_t, s8,)		\
        -:29302:  __DEFINTERLEAVE (op, int16x4x2_t, int16x4_t, s16,)		\
        -:29303:  __DEFINTERLEAVE (op, int32x2x2_t, int32x2_t, s32,)		\
        -:29304:  __DEFINTERLEAVE (op, uint8x8x2_t, uint8x8_t, u8,)		\
        -:29305:  __DEFINTERLEAVE (op, uint16x4x2_t, uint16x4_t, u16,)		\
        -:29306:  __DEFINTERLEAVE (op, uint32x2x2_t, uint32x2_t, u32,)		\
        -:29307:  __DEFINTERLEAVE (op, float16x8x2_t, float16x8_t, f16, q)	\
        -:29308:  __DEFINTERLEAVE (op, float32x4x2_t, float32x4_t, f32, q)	\
        -:29309:  __DEFINTERLEAVE (op, poly8x16x2_t, poly8x16_t, p8, q)		\
        -:29310:  __DEFINTERLEAVE (op, poly16x8x2_t, poly16x8_t, p16, q)	\
        -:29311:  __DEFINTERLEAVE (op, int8x16x2_t, int8x16_t, s8, q)		\
        -:29312:  __DEFINTERLEAVE (op, int16x8x2_t, int16x8_t, s16, q)		\
        -:29313:  __DEFINTERLEAVE (op, int32x4x2_t, int32x4_t, s32, q)		\
        -:29314:  __DEFINTERLEAVE (op, uint8x16x2_t, uint8x16_t, u8, q)		\
        -:29315:  __DEFINTERLEAVE (op, uint16x8x2_t, uint16x8_t, u16, q)	\
        -:29316:  __DEFINTERLEAVE (op, uint32x4x2_t, uint32x4_t, u32, q)
        -:29317:
        -:29318:/* vuzp */
        -:29319:
        -:29320:__extension__ extern __inline float16x4_t
        -:29321:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29322:vuzp1_f16 (float16x4_t __a, float16x4_t __b)
        -:29323:{
        -:29324:#ifdef __AARCH64EB__
        -:29325:  return __builtin_shuffle (__a, __b, (uint16x4_t) {5, 7, 1, 3});
        -:29326:#else
        -:29327:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 2, 4, 6});
        -:29328:#endif
        -:29329:}
        -:29330:
        -:29331:__extension__ extern __inline float32x2_t
        -:29332:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29333:vuzp1_f32 (float32x2_t __a, float32x2_t __b)
        -:29334:{
        -:29335:#ifdef __AARCH64EB__
        -:29336:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:29337:#else
        -:29338:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:29339:#endif
        -:29340:}
        -:29341:
        -:29342:__extension__ extern __inline poly8x8_t
        -:29343:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29344:vuzp1_p8 (poly8x8_t __a, poly8x8_t __b)
        -:29345:{
        -:29346:#ifdef __AARCH64EB__
        -:29347:  return __builtin_shuffle (__a, __b, (uint8x8_t) {9, 11, 13, 15, 1, 3, 5, 7});
        -:29348:#else
        -:29349:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 2, 4, 6, 8, 10, 12, 14});
        -:29350:#endif
        -:29351:}
        -:29352:
        -:29353:__extension__ extern __inline poly16x4_t
        -:29354:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29355:vuzp1_p16 (poly16x4_t __a, poly16x4_t __b)
        -:29356:{
        -:29357:#ifdef __AARCH64EB__
        -:29358:  return __builtin_shuffle (__a, __b, (uint16x4_t) {5, 7, 1, 3});
        -:29359:#else
        -:29360:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 2, 4, 6});
        -:29361:#endif
        -:29362:}
        -:29363:
        -:29364:__extension__ extern __inline int8x8_t
        -:29365:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29366:vuzp1_s8 (int8x8_t __a, int8x8_t __b)
        -:29367:{
        -:29368:#ifdef __AARCH64EB__
        -:29369:  return __builtin_shuffle (__a, __b, (uint8x8_t) {9, 11, 13, 15, 1, 3, 5, 7});
        -:29370:#else
        -:29371:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 2, 4, 6, 8, 10, 12, 14});
        -:29372:#endif
        -:29373:}
        -:29374:
        -:29375:__extension__ extern __inline int16x4_t
        -:29376:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29377:vuzp1_s16 (int16x4_t __a, int16x4_t __b)
        -:29378:{
        -:29379:#ifdef __AARCH64EB__
        -:29380:  return __builtin_shuffle (__a, __b, (uint16x4_t) {5, 7, 1, 3});
        -:29381:#else
        -:29382:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 2, 4, 6});
        -:29383:#endif
        -:29384:}
        -:29385:
        -:29386:__extension__ extern __inline int32x2_t
        -:29387:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29388:vuzp1_s32 (int32x2_t __a, int32x2_t __b)
        -:29389:{
        -:29390:#ifdef __AARCH64EB__
        -:29391:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:29392:#else
        -:29393:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:29394:#endif
        -:29395:}
        -:29396:
        -:29397:__extension__ extern __inline uint8x8_t
        -:29398:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29399:vuzp1_u8 (uint8x8_t __a, uint8x8_t __b)
        -:29400:{
        -:29401:#ifdef __AARCH64EB__
        -:29402:  return __builtin_shuffle (__a, __b, (uint8x8_t) {9, 11, 13, 15, 1, 3, 5, 7});
        -:29403:#else
        -:29404:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 2, 4, 6, 8, 10, 12, 14});
        -:29405:#endif
        -:29406:}
        -:29407:
        -:29408:__extension__ extern __inline uint16x4_t
        -:29409:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29410:vuzp1_u16 (uint16x4_t __a, uint16x4_t __b)
        -:29411:{
        -:29412:#ifdef __AARCH64EB__
        -:29413:  return __builtin_shuffle (__a, __b, (uint16x4_t) {5, 7, 1, 3});
        -:29414:#else
        -:29415:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 2, 4, 6});
        -:29416:#endif
        -:29417:}
        -:29418:
        -:29419:__extension__ extern __inline uint32x2_t
        -:29420:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29421:vuzp1_u32 (uint32x2_t __a, uint32x2_t __b)
        -:29422:{
        -:29423:#ifdef __AARCH64EB__
        -:29424:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:29425:#else
        -:29426:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:29427:#endif
        -:29428:}
        -:29429:
        -:29430:__extension__ extern __inline float16x8_t
        -:29431:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29432:vuzp1q_f16 (float16x8_t __a, float16x8_t __b)
        -:29433:{
        -:29434:#ifdef __AARCH64EB__
        -:29435:  return __builtin_shuffle (__a, __b, (uint16x8_t) {9, 11, 13, 15, 1, 3, 5, 7});
        -:29436:#else
        -:29437:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 2, 4, 6, 8, 10, 12, 14});
        -:29438:#endif
        -:29439:}
        -:29440:
        -:29441:__extension__ extern __inline float32x4_t
        -:29442:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29443:vuzp1q_f32 (float32x4_t __a, float32x4_t __b)
        -:29444:{
        -:29445:#ifdef __AARCH64EB__
        -:29446:  return __builtin_shuffle (__a, __b, (uint32x4_t) {5, 7, 1, 3});
        -:29447:#else
        -:29448:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 2, 4, 6});
        -:29449:#endif
        -:29450:}
        -:29451:
        -:29452:__extension__ extern __inline float64x2_t
        -:29453:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29454:vuzp1q_f64 (float64x2_t __a, float64x2_t __b)
        -:29455:{
        -:29456:#ifdef __AARCH64EB__
        -:29457:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:29458:#else
        -:29459:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:29460:#endif
        -:29461:}
        -:29462:
        -:29463:__extension__ extern __inline poly8x16_t
        -:29464:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29465:vuzp1q_p8 (poly8x16_t __a, poly8x16_t __b)
        -:29466:{
        -:29467:#ifdef __AARCH64EB__
        -:29468:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:29469:      {17, 19, 21, 23, 25, 27, 29, 31, 1, 3, 5, 7, 9, 11, 13, 15});
        -:29470:#else
        -:29471:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:29472:      {0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30});
        -:29473:#endif
        -:29474:}
        -:29475:
        -:29476:__extension__ extern __inline poly16x8_t
        -:29477:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29478:vuzp1q_p16 (poly16x8_t __a, poly16x8_t __b)
        -:29479:{
        -:29480:#ifdef __AARCH64EB__
        -:29481:  return __builtin_shuffle (__a, __b, (uint16x8_t) {9, 11, 13, 15, 1, 3, 5, 7});
        -:29482:#else
        -:29483:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 2, 4, 6, 8, 10, 12, 14});
        -:29484:#endif
        -:29485:}
        -:29486:
        -:29487:__extension__ extern __inline int8x16_t
        -:29488:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29489:vuzp1q_s8 (int8x16_t __a, int8x16_t __b)
        -:29490:{
        -:29491:#ifdef __AARCH64EB__
        -:29492:  return __builtin_shuffle (__a, __b,
        -:29493:      (uint8x16_t) {17, 19, 21, 23, 25, 27, 29, 31, 1, 3, 5, 7, 9, 11, 13, 15});
        -:29494:#else
        -:29495:  return __builtin_shuffle (__a, __b,
        -:29496:      (uint8x16_t) {0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30});
        -:29497:#endif
        -:29498:}
        -:29499:
        -:29500:__extension__ extern __inline int16x8_t
        -:29501:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29502:vuzp1q_s16 (int16x8_t __a, int16x8_t __b)
        -:29503:{
        -:29504:#ifdef __AARCH64EB__
        -:29505:  return __builtin_shuffle (__a, __b, (uint16x8_t) {9, 11, 13, 15, 1, 3, 5, 7});
        -:29506:#else
        -:29507:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 2, 4, 6, 8, 10, 12, 14});
        -:29508:#endif
        -:29509:}
        -:29510:
        -:29511:__extension__ extern __inline int32x4_t
        -:29512:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29513:vuzp1q_s32 (int32x4_t __a, int32x4_t __b)
        -:29514:{
        -:29515:#ifdef __AARCH64EB__
        -:29516:  return __builtin_shuffle (__a, __b, (uint32x4_t) {5, 7, 1, 3});
        -:29517:#else
        -:29518:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 2, 4, 6});
        -:29519:#endif
        -:29520:}
        -:29521:
        -:29522:__extension__ extern __inline int64x2_t
        -:29523:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29524:vuzp1q_s64 (int64x2_t __a, int64x2_t __b)
        -:29525:{
        -:29526:#ifdef __AARCH64EB__
        -:29527:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:29528:#else
        -:29529:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:29530:#endif
        -:29531:}
        -:29532:
        -:29533:__extension__ extern __inline uint8x16_t
        -:29534:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29535:vuzp1q_u8 (uint8x16_t __a, uint8x16_t __b)
        -:29536:{
        -:29537:#ifdef __AARCH64EB__
        -:29538:  return __builtin_shuffle (__a, __b,
        -:29539:      (uint8x16_t) {17, 19, 21, 23, 25, 27, 29, 31, 1, 3, 5, 7, 9, 11, 13, 15});
        -:29540:#else
        -:29541:  return __builtin_shuffle (__a, __b,
        -:29542:      (uint8x16_t) {0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30});
        -:29543:#endif
        -:29544:}
        -:29545:
        -:29546:__extension__ extern __inline uint16x8_t
        -:29547:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29548:vuzp1q_u16 (uint16x8_t __a, uint16x8_t __b)
        -:29549:{
        -:29550:#ifdef __AARCH64EB__
        -:29551:  return __builtin_shuffle (__a, __b, (uint16x8_t) {9, 11, 13, 15, 1, 3, 5, 7});
        -:29552:#else
        -:29553:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 2, 4, 6, 8, 10, 12, 14});
        -:29554:#endif
        -:29555:}
        -:29556:
        -:29557:__extension__ extern __inline uint32x4_t
        -:29558:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29559:vuzp1q_u32 (uint32x4_t __a, uint32x4_t __b)
        -:29560:{
        -:29561:#ifdef __AARCH64EB__
        -:29562:  return __builtin_shuffle (__a, __b, (uint32x4_t) {5, 7, 1, 3});
        -:29563:#else
        -:29564:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 2, 4, 6});
        -:29565:#endif
        -:29566:}
        -:29567:
        -:29568:__extension__ extern __inline uint64x2_t
        -:29569:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29570:vuzp1q_u64 (uint64x2_t __a, uint64x2_t __b)
        -:29571:{
        -:29572:#ifdef __AARCH64EB__
        -:29573:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:29574:#else
        -:29575:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:29576:#endif
        -:29577:}
        -:29578:
        -:29579:__extension__ extern __inline float16x4_t
        -:29580:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29581:vuzp2_f16 (float16x4_t __a, float16x4_t __b)
        -:29582:{
        -:29583:#ifdef __AARCH64EB__
        -:29584:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 6, 0, 2});
        -:29585:#else
        -:29586:  return __builtin_shuffle (__a, __b, (uint16x4_t) {1, 3, 5, 7});
        -:29587:#endif
        -:29588:}
        -:29589:
        -:29590:__extension__ extern __inline float32x2_t
        -:29591:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29592:vuzp2_f32 (float32x2_t __a, float32x2_t __b)
        -:29593:{
        -:29594:#ifdef __AARCH64EB__
        -:29595:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:29596:#else
        -:29597:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:29598:#endif
        -:29599:}
        -:29600:
        -:29601:__extension__ extern __inline poly8x8_t
        -:29602:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29603:vuzp2_p8 (poly8x8_t __a, poly8x8_t __b)
        -:29604:{
        -:29605:#ifdef __AARCH64EB__
        -:29606:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 10, 12, 14, 0, 2, 4, 6});
        -:29607:#else
        -:29608:  return __builtin_shuffle (__a, __b, (uint8x8_t) {1, 3, 5, 7, 9, 11, 13, 15});
        -:29609:#endif
        -:29610:}
        -:29611:
        -:29612:__extension__ extern __inline poly16x4_t
        -:29613:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29614:vuzp2_p16 (poly16x4_t __a, poly16x4_t __b)
        -:29615:{
        -:29616:#ifdef __AARCH64EB__
        -:29617:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 6, 0, 2});
        -:29618:#else
        -:29619:  return __builtin_shuffle (__a, __b, (uint16x4_t) {1, 3, 5, 7});
        -:29620:#endif
        -:29621:}
        -:29622:
        -:29623:__extension__ extern __inline int8x8_t
        -:29624:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29625:vuzp2_s8 (int8x8_t __a, int8x8_t __b)
        -:29626:{
        -:29627:#ifdef __AARCH64EB__
        -:29628:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 10, 12, 14, 0, 2, 4, 6});
        -:29629:#else
        -:29630:  return __builtin_shuffle (__a, __b, (uint8x8_t) {1, 3, 5, 7, 9, 11, 13, 15});
        -:29631:#endif
        -:29632:}
        -:29633:
        -:29634:__extension__ extern __inline int16x4_t
        -:29635:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29636:vuzp2_s16 (int16x4_t __a, int16x4_t __b)
        -:29637:{
        -:29638:#ifdef __AARCH64EB__
        -:29639:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 6, 0, 2});
        -:29640:#else
        -:29641:  return __builtin_shuffle (__a, __b, (uint16x4_t) {1, 3, 5, 7});
        -:29642:#endif
        -:29643:}
        -:29644:
        -:29645:__extension__ extern __inline int32x2_t
        -:29646:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29647:vuzp2_s32 (int32x2_t __a, int32x2_t __b)
        -:29648:{
        -:29649:#ifdef __AARCH64EB__
        -:29650:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:29651:#else
        -:29652:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:29653:#endif
        -:29654:}
        -:29655:
        -:29656:__extension__ extern __inline uint8x8_t
        -:29657:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29658:vuzp2_u8 (uint8x8_t __a, uint8x8_t __b)
        -:29659:{
        -:29660:#ifdef __AARCH64EB__
        -:29661:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 10, 12, 14, 0, 2, 4, 6});
        -:29662:#else
        -:29663:  return __builtin_shuffle (__a, __b, (uint8x8_t) {1, 3, 5, 7, 9, 11, 13, 15});
        -:29664:#endif
        -:29665:}
        -:29666:
        -:29667:__extension__ extern __inline uint16x4_t
        -:29668:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29669:vuzp2_u16 (uint16x4_t __a, uint16x4_t __b)
        -:29670:{
        -:29671:#ifdef __AARCH64EB__
        -:29672:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 6, 0, 2});
        -:29673:#else
        -:29674:  return __builtin_shuffle (__a, __b, (uint16x4_t) {1, 3, 5, 7});
        -:29675:#endif
        -:29676:}
        -:29677:
        -:29678:__extension__ extern __inline uint32x2_t
        -:29679:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29680:vuzp2_u32 (uint32x2_t __a, uint32x2_t __b)
        -:29681:{
        -:29682:#ifdef __AARCH64EB__
        -:29683:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:29684:#else
        -:29685:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:29686:#endif
        -:29687:}
        -:29688:
        -:29689:__extension__ extern __inline float16x8_t
        -:29690:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29691:vuzp2q_f16 (float16x8_t __a, float16x8_t __b)
        -:29692:{
        -:29693:#ifdef __AARCH64EB__
        -:29694:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 10, 12, 14, 0, 2, 4, 6});
        -:29695:#else
        -:29696:  return __builtin_shuffle (__a, __b, (uint16x8_t) {1, 3, 5, 7, 9, 11, 13, 15});
        -:29697:#endif
        -:29698:}
        -:29699:
        -:29700:__extension__ extern __inline float32x4_t
        -:29701:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29702:vuzp2q_f32 (float32x4_t __a, float32x4_t __b)
        -:29703:{
        -:29704:#ifdef __AARCH64EB__
        -:29705:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 6, 0, 2});
        -:29706:#else
        -:29707:  return __builtin_shuffle (__a, __b, (uint32x4_t) {1, 3, 5, 7});
        -:29708:#endif
        -:29709:}
        -:29710:
        -:29711:__extension__ extern __inline float64x2_t
        -:29712:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29713:vuzp2q_f64 (float64x2_t __a, float64x2_t __b)
        -:29714:{
        -:29715:#ifdef __AARCH64EB__
        -:29716:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:29717:#else
        -:29718:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:29719:#endif
        -:29720:}
        -:29721:
        -:29722:__extension__ extern __inline poly8x16_t
        -:29723:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29724:vuzp2q_p8 (poly8x16_t __a, poly8x16_t __b)
        -:29725:{
        -:29726:#ifdef __AARCH64EB__
        -:29727:  return __builtin_shuffle (__a, __b,
        -:29728:      (uint8x16_t) {16, 18, 20, 22, 24, 26, 28, 30, 0, 2, 4, 6, 8, 10, 12, 14});
        -:29729:#else
        -:29730:  return __builtin_shuffle (__a, __b,
        -:29731:      (uint8x16_t) {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31});
        -:29732:#endif
        -:29733:}
        -:29734:
        -:29735:__extension__ extern __inline poly16x8_t
        -:29736:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29737:vuzp2q_p16 (poly16x8_t __a, poly16x8_t __b)
        -:29738:{
        -:29739:#ifdef __AARCH64EB__
        -:29740:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 10, 12, 14, 0, 2, 4, 6});
        -:29741:#else
        -:29742:  return __builtin_shuffle (__a, __b, (uint16x8_t) {1, 3, 5, 7, 9, 11, 13, 15});
        -:29743:#endif
        -:29744:}
        -:29745:
        -:29746:__extension__ extern __inline int8x16_t
        -:29747:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29748:vuzp2q_s8 (int8x16_t __a, int8x16_t __b)
        -:29749:{
        -:29750:#ifdef __AARCH64EB__
        -:29751:  return __builtin_shuffle (__a, __b,
        -:29752:      (uint8x16_t) {16, 18, 20, 22, 24, 26, 28, 30, 0, 2, 4, 6, 8, 10, 12, 14});
        -:29753:#else
        -:29754:  return __builtin_shuffle (__a, __b,
        -:29755:      (uint8x16_t) {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31});
        -:29756:#endif
        -:29757:}
        -:29758:
        -:29759:__extension__ extern __inline int16x8_t
        -:29760:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29761:vuzp2q_s16 (int16x8_t __a, int16x8_t __b)
        -:29762:{
        -:29763:#ifdef __AARCH64EB__
        -:29764:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 10, 12, 14, 0, 2, 4, 6});
        -:29765:#else
        -:29766:  return __builtin_shuffle (__a, __b, (uint16x8_t) {1, 3, 5, 7, 9, 11, 13, 15});
        -:29767:#endif
        -:29768:}
        -:29769:
        -:29770:__extension__ extern __inline int32x4_t
        -:29771:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29772:vuzp2q_s32 (int32x4_t __a, int32x4_t __b)
        -:29773:{
        -:29774:#ifdef __AARCH64EB__
        -:29775:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 6, 0, 2});
        -:29776:#else
        -:29777:  return __builtin_shuffle (__a, __b, (uint32x4_t) {1, 3, 5, 7});
        -:29778:#endif
        -:29779:}
        -:29780:
        -:29781:__extension__ extern __inline int64x2_t
        -:29782:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29783:vuzp2q_s64 (int64x2_t __a, int64x2_t __b)
        -:29784:{
        -:29785:#ifdef __AARCH64EB__
        -:29786:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:29787:#else
        -:29788:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:29789:#endif
        -:29790:}
        -:29791:
        -:29792:__extension__ extern __inline uint8x16_t
        -:29793:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29794:vuzp2q_u8 (uint8x16_t __a, uint8x16_t __b)
        -:29795:{
        -:29796:#ifdef __AARCH64EB__
        -:29797:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:29798:      {16, 18, 20, 22, 24, 26, 28, 30, 0, 2, 4, 6, 8, 10, 12, 14});
        -:29799:#else
        -:29800:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:29801:      {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31});
        -:29802:#endif
        -:29803:}
        -:29804:
        -:29805:__extension__ extern __inline uint16x8_t
        -:29806:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29807:vuzp2q_u16 (uint16x8_t __a, uint16x8_t __b)
        -:29808:{
        -:29809:#ifdef __AARCH64EB__
        -:29810:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 10, 12, 14, 0, 2, 4, 6});
        -:29811:#else
        -:29812:  return __builtin_shuffle (__a, __b, (uint16x8_t) {1, 3, 5, 7, 9, 11, 13, 15});
        -:29813:#endif
        -:29814:}
        -:29815:
        -:29816:__extension__ extern __inline uint32x4_t
        -:29817:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29818:vuzp2q_u32 (uint32x4_t __a, uint32x4_t __b)
        -:29819:{
        -:29820:#ifdef __AARCH64EB__
        -:29821:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 6, 0, 2});
        -:29822:#else
        -:29823:  return __builtin_shuffle (__a, __b, (uint32x4_t) {1, 3, 5, 7});
        -:29824:#endif
        -:29825:}
        -:29826:
        -:29827:__extension__ extern __inline uint64x2_t
        -:29828:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29829:vuzp2q_u64 (uint64x2_t __a, uint64x2_t __b)
        -:29830:{
        -:29831:#ifdef __AARCH64EB__
        -:29832:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:29833:#else
        -:29834:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:29835:#endif
        -:29836:}
        -:29837:
        -:29838:__INTERLEAVE_LIST (uzp)
        -:29839:
        -:29840:/* vzip */
        -:29841:
        -:29842:__extension__ extern __inline float16x4_t
        -:29843:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29844:vzip1_f16 (float16x4_t __a, float16x4_t __b)
        -:29845:{
        -:29846:#ifdef __AARCH64EB__
        -:29847:  return __builtin_shuffle (__a, __b, (uint16x4_t) {6, 2, 7, 3});
        -:29848:#else
        -:29849:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 4, 1, 5});
        -:29850:#endif
        -:29851:}
        -:29852:
        -:29853:__extension__ extern __inline float32x2_t
        -:29854:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29855:vzip1_f32 (float32x2_t __a, float32x2_t __b)
        -:29856:{
        -:29857:#ifdef __AARCH64EB__
        -:29858:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:29859:#else
        -:29860:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:29861:#endif
        -:29862:}
        -:29863:
        -:29864:__extension__ extern __inline poly8x8_t
        -:29865:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29866:vzip1_p8 (poly8x8_t __a, poly8x8_t __b)
        -:29867:{
        -:29868:#ifdef __AARCH64EB__
        -:29869:  return __builtin_shuffle (__a, __b, (uint8x8_t) {12, 4, 13, 5, 14, 6, 15, 7});
        -:29870:#else
        -:29871:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 8, 1, 9, 2, 10, 3, 11});
        -:29872:#endif
        -:29873:}
        -:29874:
        -:29875:__extension__ extern __inline poly16x4_t
        -:29876:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29877:vzip1_p16 (poly16x4_t __a, poly16x4_t __b)
        -:29878:{
        -:29879:#ifdef __AARCH64EB__
        -:29880:  return __builtin_shuffle (__a, __b, (uint16x4_t) {6, 2, 7, 3});
        -:29881:#else
        -:29882:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 4, 1, 5});
        -:29883:#endif
        -:29884:}
        -:29885:
        -:29886:__extension__ extern __inline int8x8_t
        -:29887:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29888:vzip1_s8 (int8x8_t __a, int8x8_t __b)
        -:29889:{
        -:29890:#ifdef __AARCH64EB__
        -:29891:  return __builtin_shuffle (__a, __b, (uint8x8_t) {12, 4, 13, 5, 14, 6, 15, 7});
        -:29892:#else
        -:29893:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 8, 1, 9, 2, 10, 3, 11});
        -:29894:#endif
        -:29895:}
        -:29896:
        -:29897:__extension__ extern __inline int16x4_t
        -:29898:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29899:vzip1_s16 (int16x4_t __a, int16x4_t __b)
        -:29900:{
        -:29901:#ifdef __AARCH64EB__
        -:29902:  return __builtin_shuffle (__a, __b, (uint16x4_t) {6, 2, 7, 3});
        -:29903:#else
        -:29904:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 4, 1, 5});
        -:29905:#endif
        -:29906:}
        -:29907:
        -:29908:__extension__ extern __inline int32x2_t
        -:29909:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29910:vzip1_s32 (int32x2_t __a, int32x2_t __b)
        -:29911:{
        -:29912:#ifdef __AARCH64EB__
        -:29913:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:29914:#else
        -:29915:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:29916:#endif
        -:29917:}
        -:29918:
        -:29919:__extension__ extern __inline uint8x8_t
        -:29920:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29921:vzip1_u8 (uint8x8_t __a, uint8x8_t __b)
        -:29922:{
        -:29923:#ifdef __AARCH64EB__
        -:29924:  return __builtin_shuffle (__a, __b, (uint8x8_t) {12, 4, 13, 5, 14, 6, 15, 7});
        -:29925:#else
        -:29926:  return __builtin_shuffle (__a, __b, (uint8x8_t) {0, 8, 1, 9, 2, 10, 3, 11});
        -:29927:#endif
        -:29928:}
        -:29929:
        -:29930:__extension__ extern __inline uint16x4_t
        -:29931:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29932:vzip1_u16 (uint16x4_t __a, uint16x4_t __b)
        -:29933:{
        -:29934:#ifdef __AARCH64EB__
        -:29935:  return __builtin_shuffle (__a, __b, (uint16x4_t) {6, 2, 7, 3});
        -:29936:#else
        -:29937:  return __builtin_shuffle (__a, __b, (uint16x4_t) {0, 4, 1, 5});
        -:29938:#endif
        -:29939:}
        -:29940:
        -:29941:__extension__ extern __inline uint32x2_t
        -:29942:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29943:vzip1_u32 (uint32x2_t __a, uint32x2_t __b)
        -:29944:{
        -:29945:#ifdef __AARCH64EB__
        -:29946:  return __builtin_shuffle (__a, __b, (uint32x2_t) {3, 1});
        -:29947:#else
        -:29948:  return __builtin_shuffle (__a, __b, (uint32x2_t) {0, 2});
        -:29949:#endif
        -:29950:}
        -:29951:
        -:29952:__extension__ extern __inline float16x8_t
        -:29953:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29954:vzip1q_f16 (float16x8_t __a, float16x8_t __b)
        -:29955:{
        -:29956:#ifdef __AARCH64EB__
        -:29957:  return __builtin_shuffle (__a, __b,
        -:29958:			    (uint16x8_t) {12, 4, 13, 5, 14, 6, 15, 7});
        -:29959:#else
        -:29960:  return __builtin_shuffle (__a, __b,
        -:29961:			    (uint16x8_t) {0, 8, 1, 9, 2, 10, 3, 11});
        -:29962:#endif
        -:29963:}
        -:29964:
        -:29965:__extension__ extern __inline float32x4_t
        -:29966:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29967:vzip1q_f32 (float32x4_t __a, float32x4_t __b)
        -:29968:{
        -:29969:#ifdef __AARCH64EB__
        -:29970:  return __builtin_shuffle (__a, __b, (uint32x4_t) {6, 2, 7, 3});
        -:29971:#else
        -:29972:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 4, 1, 5});
        -:29973:#endif
        -:29974:}
        -:29975:
        -:29976:__extension__ extern __inline float64x2_t
        -:29977:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29978:vzip1q_f64 (float64x2_t __a, float64x2_t __b)
        -:29979:{
        -:29980:#ifdef __AARCH64EB__
        -:29981:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:29982:#else
        -:29983:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:29984:#endif
        -:29985:}
        -:29986:
        -:29987:__extension__ extern __inline poly8x16_t
        -:29988:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:29989:vzip1q_p8 (poly8x16_t __a, poly8x16_t __b)
        -:29990:{
        -:29991:#ifdef __AARCH64EB__
        -:29992:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:29993:      {24, 8, 25, 9, 26, 10, 27, 11, 28, 12, 29, 13, 30, 14, 31, 15});
        -:29994:#else
        -:29995:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:29996:      {0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23});
        -:29997:#endif
        -:29998:}
        -:29999:
        -:30000:__extension__ extern __inline poly16x8_t
        -:30001:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30002:vzip1q_p16 (poly16x8_t __a, poly16x8_t __b)
        -:30003:{
        -:30004:#ifdef __AARCH64EB__
        -:30005:  return __builtin_shuffle (__a, __b, (uint16x8_t)
        -:30006:      {12, 4, 13, 5, 14, 6, 15, 7});
        -:30007:#else
        -:30008:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 8, 1, 9, 2, 10, 3, 11});
        -:30009:#endif
        -:30010:}
        -:30011:
        -:30012:__extension__ extern __inline int8x16_t
        -:30013:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30014:vzip1q_s8 (int8x16_t __a, int8x16_t __b)
        -:30015:{
        -:30016:#ifdef __AARCH64EB__
        -:30017:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30018:      {24, 8, 25, 9, 26, 10, 27, 11, 28, 12, 29, 13, 30, 14, 31, 15});
        -:30019:#else
        -:30020:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30021:      {0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23});
        -:30022:#endif
        -:30023:}
        -:30024:
        -:30025:__extension__ extern __inline int16x8_t
        -:30026:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30027:vzip1q_s16 (int16x8_t __a, int16x8_t __b)
        -:30028:{
        -:30029:#ifdef __AARCH64EB__
        -:30030:  return __builtin_shuffle (__a, __b, (uint16x8_t)
        -:30031:      {12, 4, 13, 5, 14, 6, 15, 7});
        -:30032:#else
        -:30033:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 8, 1, 9, 2, 10, 3, 11});
        -:30034:#endif
        -:30035:}
        -:30036:
        -:30037:__extension__ extern __inline int32x4_t
        -:30038:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30039:vzip1q_s32 (int32x4_t __a, int32x4_t __b)
        -:30040:{
        -:30041:#ifdef __AARCH64EB__
        -:30042:  return __builtin_shuffle (__a, __b, (uint32x4_t) {6, 2, 7, 3});
        -:30043:#else
        -:30044:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 4, 1, 5});
        -:30045:#endif
        -:30046:}
        -:30047:
        -:30048:__extension__ extern __inline int64x2_t
        -:30049:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30050:vzip1q_s64 (int64x2_t __a, int64x2_t __b)
        -:30051:{
        -:30052:#ifdef __AARCH64EB__
        -:30053:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:30054:#else
        -:30055:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:30056:#endif
        -:30057:}
        -:30058:
        -:30059:__extension__ extern __inline uint8x16_t
        -:30060:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30061:vzip1q_u8 (uint8x16_t __a, uint8x16_t __b)
        -:30062:{
        -:30063:#ifdef __AARCH64EB__
        -:30064:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30065:      {24, 8, 25, 9, 26, 10, 27, 11, 28, 12, 29, 13, 30, 14, 31, 15});
        -:30066:#else
        -:30067:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30068:      {0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23});
        -:30069:#endif
        -:30070:}
        -:30071:
        -:30072:__extension__ extern __inline uint16x8_t
        -:30073:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30074:vzip1q_u16 (uint16x8_t __a, uint16x8_t __b)
        -:30075:{
        -:30076:#ifdef __AARCH64EB__
        -:30077:  return __builtin_shuffle (__a, __b, (uint16x8_t)
        -:30078:      {12, 4, 13, 5, 14, 6, 15, 7});
        -:30079:#else
        -:30080:  return __builtin_shuffle (__a, __b, (uint16x8_t) {0, 8, 1, 9, 2, 10, 3, 11});
        -:30081:#endif
        -:30082:}
        -:30083:
        -:30084:__extension__ extern __inline uint32x4_t
        -:30085:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30086:vzip1q_u32 (uint32x4_t __a, uint32x4_t __b)
        -:30087:{
        -:30088:#ifdef __AARCH64EB__
        -:30089:  return __builtin_shuffle (__a, __b, (uint32x4_t) {6, 2, 7, 3});
        -:30090:#else
        -:30091:  return __builtin_shuffle (__a, __b, (uint32x4_t) {0, 4, 1, 5});
        -:30092:#endif
        -:30093:}
        -:30094:
        -:30095:__extension__ extern __inline uint64x2_t
        -:30096:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30097:vzip1q_u64 (uint64x2_t __a, uint64x2_t __b)
        -:30098:{
        -:30099:#ifdef __AARCH64EB__
        -:30100:  return __builtin_shuffle (__a, __b, (uint64x2_t) {3, 1});
        -:30101:#else
        -:30102:  return __builtin_shuffle (__a, __b, (uint64x2_t) {0, 2});
        -:30103:#endif
        -:30104:}
        -:30105:
        -:30106:__extension__ extern __inline float16x4_t
        -:30107:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30108:vzip2_f16 (float16x4_t __a, float16x4_t __b)
        -:30109:{
        -:30110:#ifdef __AARCH64EB__
        -:30111:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 0, 5, 1});
        -:30112:#else
        -:30113:  return __builtin_shuffle (__a, __b, (uint16x4_t) {2, 6, 3, 7});
        -:30114:#endif
        -:30115:}
        -:30116:
        -:30117:__extension__ extern __inline float32x2_t
        -:30118:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30119:vzip2_f32 (float32x2_t __a, float32x2_t __b)
        -:30120:{
        -:30121:#ifdef __AARCH64EB__
        -:30122:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:30123:#else
        -:30124:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:30125:#endif
        -:30126:}
        -:30127:
        -:30128:__extension__ extern __inline poly8x8_t
        -:30129:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30130:vzip2_p8 (poly8x8_t __a, poly8x8_t __b)
        -:30131:{
        -:30132:#ifdef __AARCH64EB__
        -:30133:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 0, 9, 1, 10, 2, 11, 3});
        -:30134:#else
        -:30135:  return __builtin_shuffle (__a, __b, (uint8x8_t) {4, 12, 5, 13, 6, 14, 7, 15});
        -:30136:#endif
        -:30137:}
        -:30138:
        -:30139:__extension__ extern __inline poly16x4_t
        -:30140:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30141:vzip2_p16 (poly16x4_t __a, poly16x4_t __b)
        -:30142:{
        -:30143:#ifdef __AARCH64EB__
        -:30144:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 0, 5, 1});
        -:30145:#else
        -:30146:  return __builtin_shuffle (__a, __b, (uint16x4_t) {2, 6, 3, 7});
        -:30147:#endif
        -:30148:}
        -:30149:
        -:30150:__extension__ extern __inline int8x8_t
        -:30151:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30152:vzip2_s8 (int8x8_t __a, int8x8_t __b)
        -:30153:{
        -:30154:#ifdef __AARCH64EB__
        -:30155:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 0, 9, 1, 10, 2, 11, 3});
        -:30156:#else
        -:30157:  return __builtin_shuffle (__a, __b, (uint8x8_t) {4, 12, 5, 13, 6, 14, 7, 15});
        -:30158:#endif
        -:30159:}
        -:30160:
        -:30161:__extension__ extern __inline int16x4_t
        -:30162:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30163:vzip2_s16 (int16x4_t __a, int16x4_t __b)
        -:30164:{
        -:30165:#ifdef __AARCH64EB__
        -:30166:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 0, 5, 1});
        -:30167:#else
        -:30168:  return __builtin_shuffle (__a, __b, (uint16x4_t) {2, 6, 3, 7});
        -:30169:#endif
        -:30170:}
        -:30171:
        -:30172:__extension__ extern __inline int32x2_t
        -:30173:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30174:vzip2_s32 (int32x2_t __a, int32x2_t __b)
        -:30175:{
        -:30176:#ifdef __AARCH64EB__
        -:30177:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:30178:#else
        -:30179:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:30180:#endif
        -:30181:}
        -:30182:
        -:30183:__extension__ extern __inline uint8x8_t
        -:30184:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30185:vzip2_u8 (uint8x8_t __a, uint8x8_t __b)
        -:30186:{
        -:30187:#ifdef __AARCH64EB__
        -:30188:  return __builtin_shuffle (__a, __b, (uint8x8_t) {8, 0, 9, 1, 10, 2, 11, 3});
        -:30189:#else
        -:30190:  return __builtin_shuffle (__a, __b, (uint8x8_t) {4, 12, 5, 13, 6, 14, 7, 15});
        -:30191:#endif
        -:30192:}
        -:30193:
        -:30194:__extension__ extern __inline uint16x4_t
        -:30195:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30196:vzip2_u16 (uint16x4_t __a, uint16x4_t __b)
        -:30197:{
        -:30198:#ifdef __AARCH64EB__
        -:30199:  return __builtin_shuffle (__a, __b, (uint16x4_t) {4, 0, 5, 1});
        -:30200:#else
        -:30201:  return __builtin_shuffle (__a, __b, (uint16x4_t) {2, 6, 3, 7});
        -:30202:#endif
        -:30203:}
        -:30204:
        -:30205:__extension__ extern __inline uint32x2_t
        -:30206:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30207:vzip2_u32 (uint32x2_t __a, uint32x2_t __b)
        -:30208:{
        -:30209:#ifdef __AARCH64EB__
        -:30210:  return __builtin_shuffle (__a, __b, (uint32x2_t) {2, 0});
        -:30211:#else
        -:30212:  return __builtin_shuffle (__a, __b, (uint32x2_t) {1, 3});
        -:30213:#endif
        -:30214:}
        -:30215:
        -:30216:__extension__ extern __inline float16x8_t
        -:30217:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30218:vzip2q_f16 (float16x8_t __a, float16x8_t __b)
        -:30219:{
        -:30220:#ifdef __AARCH64EB__
        -:30221:  return __builtin_shuffle (__a, __b,
        -:30222:			    (uint16x8_t) {8, 0, 9, 1, 10, 2, 11, 3});
        -:30223:#else
        -:30224:  return __builtin_shuffle (__a, __b,
        -:30225:			    (uint16x8_t) {4, 12, 5, 13, 6, 14, 7, 15});
        -:30226:#endif
        -:30227:}
        -:30228:
        -:30229:__extension__ extern __inline float32x4_t
        -:30230:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30231:vzip2q_f32 (float32x4_t __a, float32x4_t __b)
        -:30232:{
        -:30233:#ifdef __AARCH64EB__
        -:30234:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 0, 5, 1});
        -:30235:#else
        -:30236:  return __builtin_shuffle (__a, __b, (uint32x4_t) {2, 6, 3, 7});
        -:30237:#endif
        -:30238:}
        -:30239:
        -:30240:__extension__ extern __inline float64x2_t
        -:30241:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30242:vzip2q_f64 (float64x2_t __a, float64x2_t __b)
        -:30243:{
        -:30244:#ifdef __AARCH64EB__
        -:30245:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:30246:#else
        -:30247:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:30248:#endif
        -:30249:}
        -:30250:
        -:30251:__extension__ extern __inline poly8x16_t
        -:30252:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30253:vzip2q_p8 (poly8x16_t __a, poly8x16_t __b)
        -:30254:{
        -:30255:#ifdef __AARCH64EB__
        -:30256:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30257:      {16, 0, 17, 1, 18, 2, 19, 3, 20, 4, 21, 5, 22, 6, 23, 7});
        -:30258:#else
        -:30259:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30260:      {8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31});
        -:30261:#endif
        -:30262:}
        -:30263:
        -:30264:__extension__ extern __inline poly16x8_t
        -:30265:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30266:vzip2q_p16 (poly16x8_t __a, poly16x8_t __b)
        -:30267:{
        -:30268:#ifdef __AARCH64EB__
        -:30269:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 0, 9, 1, 10, 2, 11, 3});
        -:30270:#else
        -:30271:  return __builtin_shuffle (__a, __b, (uint16x8_t)
        -:30272:      {4, 12, 5, 13, 6, 14, 7, 15});
        -:30273:#endif
        -:30274:}
        -:30275:
        -:30276:__extension__ extern __inline int8x16_t
        -:30277:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30278:vzip2q_s8 (int8x16_t __a, int8x16_t __b)
        -:30279:{
        -:30280:#ifdef __AARCH64EB__
        -:30281:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30282:      {16, 0, 17, 1, 18, 2, 19, 3, 20, 4, 21, 5, 22, 6, 23, 7});
        -:30283:#else
        -:30284:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30285:      {8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31});
        -:30286:#endif
        -:30287:}
        -:30288:
        -:30289:__extension__ extern __inline int16x8_t
        -:30290:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30291:vzip2q_s16 (int16x8_t __a, int16x8_t __b)
        -:30292:{
        -:30293:#ifdef __AARCH64EB__
        -:30294:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 0, 9, 1, 10, 2, 11, 3});
        -:30295:#else
        -:30296:  return __builtin_shuffle (__a, __b, (uint16x8_t)
        -:30297:      {4, 12, 5, 13, 6, 14, 7, 15});
        -:30298:#endif
        -:30299:}
        -:30300:
        -:30301:__extension__ extern __inline int32x4_t
        -:30302:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30303:vzip2q_s32 (int32x4_t __a, int32x4_t __b)
        -:30304:{
        -:30305:#ifdef __AARCH64EB__
        -:30306:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 0, 5, 1});
        -:30307:#else
        -:30308:  return __builtin_shuffle (__a, __b, (uint32x4_t) {2, 6, 3, 7});
        -:30309:#endif
        -:30310:}
        -:30311:
        -:30312:__extension__ extern __inline int64x2_t
        -:30313:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30314:vzip2q_s64 (int64x2_t __a, int64x2_t __b)
        -:30315:{
        -:30316:#ifdef __AARCH64EB__
        -:30317:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:30318:#else
        -:30319:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:30320:#endif
        -:30321:}
        -:30322:
        -:30323:__extension__ extern __inline uint8x16_t
        -:30324:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30325:vzip2q_u8 (uint8x16_t __a, uint8x16_t __b)
        -:30326:{
        -:30327:#ifdef __AARCH64EB__
        -:30328:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30329:      {16, 0, 17, 1, 18, 2, 19, 3, 20, 4, 21, 5, 22, 6, 23, 7});
        -:30330:#else
        -:30331:  return __builtin_shuffle (__a, __b, (uint8x16_t)
        -:30332:      {8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31});
        -:30333:#endif
        -:30334:}
        -:30335:
        -:30336:__extension__ extern __inline uint16x8_t
        -:30337:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30338:vzip2q_u16 (uint16x8_t __a, uint16x8_t __b)
        -:30339:{
        -:30340:#ifdef __AARCH64EB__
        -:30341:  return __builtin_shuffle (__a, __b, (uint16x8_t) {8, 0, 9, 1, 10, 2, 11, 3});
        -:30342:#else
        -:30343:  return __builtin_shuffle (__a, __b, (uint16x8_t)
        -:30344:      {4, 12, 5, 13, 6, 14, 7, 15});
        -:30345:#endif
        -:30346:}
        -:30347:
        -:30348:__extension__ extern __inline uint32x4_t
        -:30349:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30350:vzip2q_u32 (uint32x4_t __a, uint32x4_t __b)
        -:30351:{
        -:30352:#ifdef __AARCH64EB__
        -:30353:  return __builtin_shuffle (__a, __b, (uint32x4_t) {4, 0, 5, 1});
        -:30354:#else
        -:30355:  return __builtin_shuffle (__a, __b, (uint32x4_t) {2, 6, 3, 7});
        -:30356:#endif
        -:30357:}
        -:30358:
        -:30359:__extension__ extern __inline uint64x2_t
        -:30360:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30361:vzip2q_u64 (uint64x2_t __a, uint64x2_t __b)
        -:30362:{
        -:30363:#ifdef __AARCH64EB__
        -:30364:  return __builtin_shuffle (__a, __b, (uint64x2_t) {2, 0});
        -:30365:#else
        -:30366:  return __builtin_shuffle (__a, __b, (uint64x2_t) {1, 3});
        -:30367:#endif
        -:30368:}
        -:30369:
        -:30370:__INTERLEAVE_LIST (zip)
        -:30371:
        -:30372:#undef __INTERLEAVE_LIST
        -:30373:#undef __DEFINTERLEAVE
        -:30374:
        -:30375:/* End of optimal implementations in approved order.  */
        -:30376:
        -:30377:#pragma GCC pop_options
        -:30378:
        -:30379:/* ARMv8.2-A FP16 intrinsics.  */
        -:30380:
        -:30381:#include "arm_fp16.h"
        -:30382:
        -:30383:#pragma GCC push_options
        -:30384:#pragma GCC target ("arch=armv8.2-a+fp16")
        -:30385:
        -:30386:/* ARMv8.2-A FP16 one operand vector intrinsics.  */
        -:30387:
        -:30388:__extension__ extern __inline float16x4_t
        -:30389:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30390:vabs_f16 (float16x4_t __a)
        -:30391:{
        -:30392:  return __builtin_aarch64_absv4hf (__a);
        -:30393:}
        -:30394:
        -:30395:__extension__ extern __inline float16x8_t
        -:30396:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30397:vabsq_f16 (float16x8_t __a)
        -:30398:{
        -:30399:  return __builtin_aarch64_absv8hf (__a);
        -:30400:}
        -:30401:
        -:30402:__extension__ extern __inline uint16x4_t
        -:30403:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30404:vceqz_f16 (float16x4_t __a)
        -:30405:{
        -:30406:  return __builtin_aarch64_cmeqv4hf_uss (__a, vdup_n_f16 (0.0f));
        -:30407:}
        -:30408:
        -:30409:__extension__ extern __inline uint16x8_t
        -:30410:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30411:vceqzq_f16 (float16x8_t __a)
        -:30412:{
        -:30413:  return __builtin_aarch64_cmeqv8hf_uss (__a, vdupq_n_f16 (0.0f));
        -:30414:}
        -:30415:
        -:30416:__extension__ extern __inline uint16x4_t
        -:30417:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30418:vcgez_f16 (float16x4_t __a)
        -:30419:{
        -:30420:  return __builtin_aarch64_cmgev4hf_uss (__a, vdup_n_f16 (0.0f));
        -:30421:}
        -:30422:
        -:30423:__extension__ extern __inline uint16x8_t
        -:30424:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30425:vcgezq_f16 (float16x8_t __a)
        -:30426:{
        -:30427:  return __builtin_aarch64_cmgev8hf_uss (__a, vdupq_n_f16 (0.0f));
        -:30428:}
        -:30429:
        -:30430:__extension__ extern __inline uint16x4_t
        -:30431:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30432:vcgtz_f16 (float16x4_t __a)
        -:30433:{
        -:30434:  return __builtin_aarch64_cmgtv4hf_uss (__a, vdup_n_f16 (0.0f));
        -:30435:}
        -:30436:
        -:30437:__extension__ extern __inline uint16x8_t
        -:30438:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30439:vcgtzq_f16 (float16x8_t __a)
        -:30440:{
        -:30441:  return __builtin_aarch64_cmgtv8hf_uss (__a, vdupq_n_f16 (0.0f));
        -:30442:}
        -:30443:
        -:30444:__extension__ extern __inline uint16x4_t
        -:30445:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30446:vclez_f16 (float16x4_t __a)
        -:30447:{
        -:30448:  return __builtin_aarch64_cmlev4hf_uss (__a, vdup_n_f16 (0.0f));
        -:30449:}
        -:30450:
        -:30451:__extension__ extern __inline uint16x8_t
        -:30452:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30453:vclezq_f16 (float16x8_t __a)
        -:30454:{
        -:30455:  return __builtin_aarch64_cmlev8hf_uss (__a, vdupq_n_f16 (0.0f));
        -:30456:}
        -:30457:
        -:30458:__extension__ extern __inline uint16x4_t
        -:30459:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30460:vcltz_f16 (float16x4_t __a)
        -:30461:{
        -:30462:  return __builtin_aarch64_cmltv4hf_uss (__a, vdup_n_f16 (0.0f));
        -:30463:}
        -:30464:
        -:30465:__extension__ extern __inline uint16x8_t
        -:30466:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30467:vcltzq_f16 (float16x8_t __a)
        -:30468:{
        -:30469:  return __builtin_aarch64_cmltv8hf_uss (__a, vdupq_n_f16 (0.0f));
        -:30470:}
        -:30471:
        -:30472:__extension__ extern __inline float16x4_t
        -:30473:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30474:vcvt_f16_s16 (int16x4_t __a)
        -:30475:{
        -:30476:  return __builtin_aarch64_floatv4hiv4hf (__a);
        -:30477:}
        -:30478:
        -:30479:__extension__ extern __inline float16x8_t
        -:30480:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30481:vcvtq_f16_s16 (int16x8_t __a)
        -:30482:{
        -:30483:  return __builtin_aarch64_floatv8hiv8hf (__a);
        -:30484:}
        -:30485:
        -:30486:__extension__ extern __inline float16x4_t
        -:30487:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30488:vcvt_f16_u16 (uint16x4_t __a)
        -:30489:{
        -:30490:  return __builtin_aarch64_floatunsv4hiv4hf ((int16x4_t) __a);
        -:30491:}
        -:30492:
        -:30493:__extension__ extern __inline float16x8_t
        -:30494:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30495:vcvtq_f16_u16 (uint16x8_t __a)
        -:30496:{
        -:30497:  return __builtin_aarch64_floatunsv8hiv8hf ((int16x8_t) __a);
        -:30498:}
        -:30499:
        -:30500:__extension__ extern __inline int16x4_t
        -:30501:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30502:vcvt_s16_f16 (float16x4_t __a)
        -:30503:{
        -:30504:  return __builtin_aarch64_lbtruncv4hfv4hi (__a);
        -:30505:}
        -:30506:
        -:30507:__extension__ extern __inline int16x8_t
        -:30508:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30509:vcvtq_s16_f16 (float16x8_t __a)
        -:30510:{
        -:30511:  return __builtin_aarch64_lbtruncv8hfv8hi (__a);
        -:30512:}
        -:30513:
        -:30514:__extension__ extern __inline uint16x4_t
        -:30515:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30516:vcvt_u16_f16 (float16x4_t __a)
        -:30517:{
        -:30518:  return __builtin_aarch64_lbtruncuv4hfv4hi_us (__a);
        -:30519:}
        -:30520:
        -:30521:__extension__ extern __inline uint16x8_t
        -:30522:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30523:vcvtq_u16_f16 (float16x8_t __a)
        -:30524:{
        -:30525:  return __builtin_aarch64_lbtruncuv8hfv8hi_us (__a);
        -:30526:}
        -:30527:
        -:30528:__extension__ extern __inline int16x4_t
        -:30529:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30530:vcvta_s16_f16 (float16x4_t __a)
        -:30531:{
        -:30532:  return __builtin_aarch64_lroundv4hfv4hi (__a);
        -:30533:}
        -:30534:
        -:30535:__extension__ extern __inline int16x8_t
        -:30536:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30537:vcvtaq_s16_f16 (float16x8_t __a)
        -:30538:{
        -:30539:  return __builtin_aarch64_lroundv8hfv8hi (__a);
        -:30540:}
        -:30541:
        -:30542:__extension__ extern __inline uint16x4_t
        -:30543:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30544:vcvta_u16_f16 (float16x4_t __a)
        -:30545:{
        -:30546:  return __builtin_aarch64_lrounduv4hfv4hi_us (__a);
        -:30547:}
        -:30548:
        -:30549:__extension__ extern __inline uint16x8_t
        -:30550:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30551:vcvtaq_u16_f16 (float16x8_t __a)
        -:30552:{
        -:30553:  return __builtin_aarch64_lrounduv8hfv8hi_us (__a);
        -:30554:}
        -:30555:
        -:30556:__extension__ extern __inline int16x4_t
        -:30557:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30558:vcvtm_s16_f16 (float16x4_t __a)
        -:30559:{
        -:30560:  return __builtin_aarch64_lfloorv4hfv4hi (__a);
        -:30561:}
        -:30562:
        -:30563:__extension__ extern __inline int16x8_t
        -:30564:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30565:vcvtmq_s16_f16 (float16x8_t __a)
        -:30566:{
        -:30567:  return __builtin_aarch64_lfloorv8hfv8hi (__a);
        -:30568:}
        -:30569:
        -:30570:__extension__ extern __inline uint16x4_t
        -:30571:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30572:vcvtm_u16_f16 (float16x4_t __a)
        -:30573:{
        -:30574:  return __builtin_aarch64_lflooruv4hfv4hi_us (__a);
        -:30575:}
        -:30576:
        -:30577:__extension__ extern __inline uint16x8_t
        -:30578:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30579:vcvtmq_u16_f16 (float16x8_t __a)
        -:30580:{
        -:30581:  return __builtin_aarch64_lflooruv8hfv8hi_us (__a);
        -:30582:}
        -:30583:
        -:30584:__extension__ extern __inline int16x4_t
        -:30585:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30586:vcvtn_s16_f16 (float16x4_t __a)
        -:30587:{
        -:30588:  return __builtin_aarch64_lfrintnv4hfv4hi (__a);
        -:30589:}
        -:30590:
        -:30591:__extension__ extern __inline int16x8_t
        -:30592:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30593:vcvtnq_s16_f16 (float16x8_t __a)
        -:30594:{
        -:30595:  return __builtin_aarch64_lfrintnv8hfv8hi (__a);
        -:30596:}
        -:30597:
        -:30598:__extension__ extern __inline uint16x4_t
        -:30599:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30600:vcvtn_u16_f16 (float16x4_t __a)
        -:30601:{
        -:30602:  return __builtin_aarch64_lfrintnuv4hfv4hi_us (__a);
        -:30603:}
        -:30604:
        -:30605:__extension__ extern __inline uint16x8_t
        -:30606:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30607:vcvtnq_u16_f16 (float16x8_t __a)
        -:30608:{
        -:30609:  return __builtin_aarch64_lfrintnuv8hfv8hi_us (__a);
        -:30610:}
        -:30611:
        -:30612:__extension__ extern __inline int16x4_t
        -:30613:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30614:vcvtp_s16_f16 (float16x4_t __a)
        -:30615:{
        -:30616:  return __builtin_aarch64_lceilv4hfv4hi (__a);
        -:30617:}
        -:30618:
        -:30619:__extension__ extern __inline int16x8_t
        -:30620:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30621:vcvtpq_s16_f16 (float16x8_t __a)
        -:30622:{
        -:30623:  return __builtin_aarch64_lceilv8hfv8hi (__a);
        -:30624:}
        -:30625:
        -:30626:__extension__ extern __inline uint16x4_t
        -:30627:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30628:vcvtp_u16_f16 (float16x4_t __a)
        -:30629:{
        -:30630:  return __builtin_aarch64_lceiluv4hfv4hi_us (__a);
        -:30631:}
        -:30632:
        -:30633:__extension__ extern __inline uint16x8_t
        -:30634:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30635:vcvtpq_u16_f16 (float16x8_t __a)
        -:30636:{
        -:30637:  return __builtin_aarch64_lceiluv8hfv8hi_us (__a);
        -:30638:}
        -:30639:
        -:30640:__extension__ extern __inline float16x4_t
        -:30641:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30642:vneg_f16 (float16x4_t __a)
        -:30643:{
        -:30644:  return -__a;
        -:30645:}
        -:30646:
        -:30647:__extension__ extern __inline float16x8_t
        -:30648:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30649:vnegq_f16 (float16x8_t __a)
        -:30650:{
        -:30651:  return -__a;
        -:30652:}
        -:30653:
        -:30654:__extension__ extern __inline float16x4_t
        -:30655:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30656:vrecpe_f16 (float16x4_t __a)
        -:30657:{
        -:30658:  return __builtin_aarch64_frecpev4hf (__a);
        -:30659:}
        -:30660:
        -:30661:__extension__ extern __inline float16x8_t
        -:30662:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30663:vrecpeq_f16 (float16x8_t __a)
        -:30664:{
        -:30665:  return __builtin_aarch64_frecpev8hf (__a);
        -:30666:}
        -:30667:
        -:30668:__extension__ extern __inline float16x4_t
        -:30669:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30670:vrnd_f16 (float16x4_t __a)
        -:30671:{
        -:30672:  return __builtin_aarch64_btruncv4hf (__a);
        -:30673:}
        -:30674:
        -:30675:__extension__ extern __inline float16x8_t
        -:30676:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30677:vrndq_f16 (float16x8_t __a)
        -:30678:{
        -:30679:  return __builtin_aarch64_btruncv8hf (__a);
        -:30680:}
        -:30681:
        -:30682:__extension__ extern __inline float16x4_t
        -:30683:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30684:vrnda_f16 (float16x4_t __a)
        -:30685:{
        -:30686:  return __builtin_aarch64_roundv4hf (__a);
        -:30687:}
        -:30688:
        -:30689:__extension__ extern __inline float16x8_t
        -:30690:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30691:vrndaq_f16 (float16x8_t __a)
        -:30692:{
        -:30693:  return __builtin_aarch64_roundv8hf (__a);
        -:30694:}
        -:30695:
        -:30696:__extension__ extern __inline float16x4_t
        -:30697:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30698:vrndi_f16 (float16x4_t __a)
        -:30699:{
        -:30700:  return __builtin_aarch64_nearbyintv4hf (__a);
        -:30701:}
        -:30702:
        -:30703:__extension__ extern __inline float16x8_t
        -:30704:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30705:vrndiq_f16 (float16x8_t __a)
        -:30706:{
        -:30707:  return __builtin_aarch64_nearbyintv8hf (__a);
        -:30708:}
        -:30709:
        -:30710:__extension__ extern __inline float16x4_t
        -:30711:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30712:vrndm_f16 (float16x4_t __a)
        -:30713:{
        -:30714:  return __builtin_aarch64_floorv4hf (__a);
        -:30715:}
        -:30716:
        -:30717:__extension__ extern __inline float16x8_t
        -:30718:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30719:vrndmq_f16 (float16x8_t __a)
        -:30720:{
        -:30721:  return __builtin_aarch64_floorv8hf (__a);
        -:30722:}
        -:30723:
        -:30724:__extension__ extern __inline float16x4_t
        -:30725:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30726:vrndn_f16 (float16x4_t __a)
        -:30727:{
        -:30728:  return __builtin_aarch64_frintnv4hf (__a);
        -:30729:}
        -:30730:
        -:30731:__extension__ extern __inline float16x8_t
        -:30732:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30733:vrndnq_f16 (float16x8_t __a)
        -:30734:{
        -:30735:  return __builtin_aarch64_frintnv8hf (__a);
        -:30736:}
        -:30737:
        -:30738:__extension__ extern __inline float16x4_t
        -:30739:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30740:vrndp_f16 (float16x4_t __a)
        -:30741:{
        -:30742:  return __builtin_aarch64_ceilv4hf (__a);
        -:30743:}
        -:30744:
        -:30745:__extension__ extern __inline float16x8_t
        -:30746:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30747:vrndpq_f16 (float16x8_t __a)
        -:30748:{
        -:30749:  return __builtin_aarch64_ceilv8hf (__a);
        -:30750:}
        -:30751:
        -:30752:__extension__ extern __inline float16x4_t
        -:30753:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30754:vrndx_f16 (float16x4_t __a)
        -:30755:{
        -:30756:  return __builtin_aarch64_rintv4hf (__a);
        -:30757:}
        -:30758:
        -:30759:__extension__ extern __inline float16x8_t
        -:30760:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30761:vrndxq_f16 (float16x8_t __a)
        -:30762:{
        -:30763:  return __builtin_aarch64_rintv8hf (__a);
        -:30764:}
        -:30765:
        -:30766:__extension__ extern __inline float16x4_t
        -:30767:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30768:vrsqrte_f16 (float16x4_t a)
        -:30769:{
        -:30770:  return __builtin_aarch64_rsqrtev4hf (a);
        -:30771:}
        -:30772:
        -:30773:__extension__ extern __inline float16x8_t
        -:30774:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30775:vrsqrteq_f16 (float16x8_t a)
        -:30776:{
        -:30777:  return __builtin_aarch64_rsqrtev8hf (a);
        -:30778:}
        -:30779:
        -:30780:__extension__ extern __inline float16x4_t
        -:30781:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30782:vsqrt_f16 (float16x4_t a)
        -:30783:{
        -:30784:  return __builtin_aarch64_sqrtv4hf (a);
        -:30785:}
        -:30786:
        -:30787:__extension__ extern __inline float16x8_t
        -:30788:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30789:vsqrtq_f16 (float16x8_t a)
        -:30790:{
        -:30791:  return __builtin_aarch64_sqrtv8hf (a);
        -:30792:}
        -:30793:
        -:30794:/* ARMv8.2-A FP16 two operands vector intrinsics.  */
        -:30795:
        -:30796:__extension__ extern __inline float16x4_t
        -:30797:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30798:vadd_f16 (float16x4_t __a, float16x4_t __b)
        -:30799:{
        -:30800:  return __a + __b;
        -:30801:}
        -:30802:
        -:30803:__extension__ extern __inline float16x8_t
        -:30804:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30805:vaddq_f16 (float16x8_t __a, float16x8_t __b)
        -:30806:{
        -:30807:  return __a + __b;
        -:30808:}
        -:30809:
        -:30810:__extension__ extern __inline float16x4_t
        -:30811:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30812:vabd_f16 (float16x4_t a, float16x4_t b)
        -:30813:{
        -:30814:  return __builtin_aarch64_fabdv4hf (a, b);
        -:30815:}
        -:30816:
        -:30817:__extension__ extern __inline float16x8_t
        -:30818:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30819:vabdq_f16 (float16x8_t a, float16x8_t b)
        -:30820:{
        -:30821:  return __builtin_aarch64_fabdv8hf (a, b);
        -:30822:}
        -:30823:
        -:30824:__extension__ extern __inline uint16x4_t
        -:30825:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30826:vcage_f16 (float16x4_t __a, float16x4_t __b)
        -:30827:{
        -:30828:  return __builtin_aarch64_facgev4hf_uss (__a, __b);
        -:30829:}
        -:30830:
        -:30831:__extension__ extern __inline uint16x8_t
        -:30832:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30833:vcageq_f16 (float16x8_t __a, float16x8_t __b)
        -:30834:{
        -:30835:  return __builtin_aarch64_facgev8hf_uss (__a, __b);
        -:30836:}
        -:30837:
        -:30838:__extension__ extern __inline uint16x4_t
        -:30839:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30840:vcagt_f16 (float16x4_t __a, float16x4_t __b)
        -:30841:{
        -:30842:  return __builtin_aarch64_facgtv4hf_uss (__a, __b);
        -:30843:}
        -:30844:
        -:30845:__extension__ extern __inline uint16x8_t
        -:30846:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30847:vcagtq_f16 (float16x8_t __a, float16x8_t __b)
        -:30848:{
        -:30849:  return __builtin_aarch64_facgtv8hf_uss (__a, __b);
        -:30850:}
        -:30851:
        -:30852:__extension__ extern __inline uint16x4_t
        -:30853:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30854:vcale_f16 (float16x4_t __a, float16x4_t __b)
        -:30855:{
        -:30856:  return __builtin_aarch64_faclev4hf_uss (__a, __b);
        -:30857:}
        -:30858:
        -:30859:__extension__ extern __inline uint16x8_t
        -:30860:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30861:vcaleq_f16 (float16x8_t __a, float16x8_t __b)
        -:30862:{
        -:30863:  return __builtin_aarch64_faclev8hf_uss (__a, __b);
        -:30864:}
        -:30865:
        -:30866:__extension__ extern __inline uint16x4_t
        -:30867:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30868:vcalt_f16 (float16x4_t __a, float16x4_t __b)
        -:30869:{
        -:30870:  return __builtin_aarch64_facltv4hf_uss (__a, __b);
        -:30871:}
        -:30872:
        -:30873:__extension__ extern __inline uint16x8_t
        -:30874:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30875:vcaltq_f16 (float16x8_t __a, float16x8_t __b)
        -:30876:{
        -:30877:  return __builtin_aarch64_facltv8hf_uss (__a, __b);
        -:30878:}
        -:30879:
        -:30880:__extension__ extern __inline uint16x4_t
        -:30881:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30882:vceq_f16 (float16x4_t __a, float16x4_t __b)
        -:30883:{
        -:30884:  return __builtin_aarch64_cmeqv4hf_uss (__a, __b);
        -:30885:}
        -:30886:
        -:30887:__extension__ extern __inline uint16x8_t
        -:30888:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30889:vceqq_f16 (float16x8_t __a, float16x8_t __b)
        -:30890:{
        -:30891:  return __builtin_aarch64_cmeqv8hf_uss (__a, __b);
        -:30892:}
        -:30893:
        -:30894:__extension__ extern __inline uint16x4_t
        -:30895:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30896:vcge_f16 (float16x4_t __a, float16x4_t __b)
        -:30897:{
        -:30898:  return __builtin_aarch64_cmgev4hf_uss (__a, __b);
        -:30899:}
        -:30900:
        -:30901:__extension__ extern __inline uint16x8_t
        -:30902:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30903:vcgeq_f16 (float16x8_t __a, float16x8_t __b)
        -:30904:{
        -:30905:  return __builtin_aarch64_cmgev8hf_uss (__a, __b);
        -:30906:}
        -:30907:
        -:30908:__extension__ extern __inline uint16x4_t
        -:30909:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30910:vcgt_f16 (float16x4_t __a, float16x4_t __b)
        -:30911:{
        -:30912:  return __builtin_aarch64_cmgtv4hf_uss (__a, __b);
        -:30913:}
        -:30914:
        -:30915:__extension__ extern __inline uint16x8_t
        -:30916:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30917:vcgtq_f16 (float16x8_t __a, float16x8_t __b)
        -:30918:{
        -:30919:  return __builtin_aarch64_cmgtv8hf_uss (__a, __b);
        -:30920:}
        -:30921:
        -:30922:__extension__ extern __inline uint16x4_t
        -:30923:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30924:vcle_f16 (float16x4_t __a, float16x4_t __b)
        -:30925:{
        -:30926:  return __builtin_aarch64_cmlev4hf_uss (__a, __b);
        -:30927:}
        -:30928:
        -:30929:__extension__ extern __inline uint16x8_t
        -:30930:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30931:vcleq_f16 (float16x8_t __a, float16x8_t __b)
        -:30932:{
        -:30933:  return __builtin_aarch64_cmlev8hf_uss (__a, __b);
        -:30934:}
        -:30935:
        -:30936:__extension__ extern __inline uint16x4_t
        -:30937:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30938:vclt_f16 (float16x4_t __a, float16x4_t __b)
        -:30939:{
        -:30940:  return __builtin_aarch64_cmltv4hf_uss (__a, __b);
        -:30941:}
        -:30942:
        -:30943:__extension__ extern __inline uint16x8_t
        -:30944:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30945:vcltq_f16 (float16x8_t __a, float16x8_t __b)
        -:30946:{
        -:30947:  return __builtin_aarch64_cmltv8hf_uss (__a, __b);
        -:30948:}
        -:30949:
        -:30950:__extension__ extern __inline float16x4_t
        -:30951:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30952:vcvt_n_f16_s16 (int16x4_t __a, const int __b)
        -:30953:{
        -:30954:  return __builtin_aarch64_scvtfv4hi (__a, __b);
        -:30955:}
        -:30956:
        -:30957:__extension__ extern __inline float16x8_t
        -:30958:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30959:vcvtq_n_f16_s16 (int16x8_t __a, const int __b)
        -:30960:{
        -:30961:  return __builtin_aarch64_scvtfv8hi (__a, __b);
        -:30962:}
        -:30963:
        -:30964:__extension__ extern __inline float16x4_t
        -:30965:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30966:vcvt_n_f16_u16 (uint16x4_t __a, const int __b)
        -:30967:{
        -:30968:  return __builtin_aarch64_ucvtfv4hi_sus (__a, __b);
        -:30969:}
        -:30970:
        -:30971:__extension__ extern __inline float16x8_t
        -:30972:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30973:vcvtq_n_f16_u16 (uint16x8_t __a, const int __b)
        -:30974:{
        -:30975:  return __builtin_aarch64_ucvtfv8hi_sus (__a, __b);
        -:30976:}
        -:30977:
        -:30978:__extension__ extern __inline int16x4_t
        -:30979:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30980:vcvt_n_s16_f16 (float16x4_t __a, const int __b)
        -:30981:{
        -:30982:  return __builtin_aarch64_fcvtzsv4hf (__a, __b);
        -:30983:}
        -:30984:
        -:30985:__extension__ extern __inline int16x8_t
        -:30986:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30987:vcvtq_n_s16_f16 (float16x8_t __a, const int __b)
        -:30988:{
        -:30989:  return __builtin_aarch64_fcvtzsv8hf (__a, __b);
        -:30990:}
        -:30991:
        -:30992:__extension__ extern __inline uint16x4_t
        -:30993:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:30994:vcvt_n_u16_f16 (float16x4_t __a, const int __b)
        -:30995:{
        -:30996:  return __builtin_aarch64_fcvtzuv4hf_uss (__a, __b);
        -:30997:}
        -:30998:
        -:30999:__extension__ extern __inline uint16x8_t
        -:31000:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31001:vcvtq_n_u16_f16 (float16x8_t __a, const int __b)
        -:31002:{
        -:31003:  return __builtin_aarch64_fcvtzuv8hf_uss (__a, __b);
        -:31004:}
        -:31005:
        -:31006:__extension__ extern __inline float16x4_t
        -:31007:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31008:vdiv_f16 (float16x4_t __a, float16x4_t __b)
        -:31009:{
        -:31010:  return __a / __b;
        -:31011:}
        -:31012:
        -:31013:__extension__ extern __inline float16x8_t
        -:31014:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31015:vdivq_f16 (float16x8_t __a, float16x8_t __b)
        -:31016:{
        -:31017:  return __a / __b;
        -:31018:}
        -:31019:
        -:31020:__extension__ extern __inline float16x4_t
        -:31021:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31022:vmax_f16 (float16x4_t __a, float16x4_t __b)
        -:31023:{
        -:31024:  return __builtin_aarch64_smax_nanv4hf (__a, __b);
        -:31025:}
        -:31026:
        -:31027:__extension__ extern __inline float16x8_t
        -:31028:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31029:vmaxq_f16 (float16x8_t __a, float16x8_t __b)
        -:31030:{
        -:31031:  return __builtin_aarch64_smax_nanv8hf (__a, __b);
        -:31032:}
        -:31033:
        -:31034:__extension__ extern __inline float16x4_t
        -:31035:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31036:vmaxnm_f16 (float16x4_t __a, float16x4_t __b)
        -:31037:{
        -:31038:  return __builtin_aarch64_fmaxv4hf (__a, __b);
        -:31039:}
        -:31040:
        -:31041:__extension__ extern __inline float16x8_t
        -:31042:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31043:vmaxnmq_f16 (float16x8_t __a, float16x8_t __b)
        -:31044:{
        -:31045:  return __builtin_aarch64_fmaxv8hf (__a, __b);
        -:31046:}
        -:31047:
        -:31048:__extension__ extern __inline float16x4_t
        -:31049:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31050:vmin_f16 (float16x4_t __a, float16x4_t __b)
        -:31051:{
        -:31052:  return __builtin_aarch64_smin_nanv4hf (__a, __b);
        -:31053:}
        -:31054:
        -:31055:__extension__ extern __inline float16x8_t
        -:31056:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31057:vminq_f16 (float16x8_t __a, float16x8_t __b)
        -:31058:{
        -:31059:  return __builtin_aarch64_smin_nanv8hf (__a, __b);
        -:31060:}
        -:31061:
        -:31062:__extension__ extern __inline float16x4_t
        -:31063:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31064:vminnm_f16 (float16x4_t __a, float16x4_t __b)
        -:31065:{
        -:31066:  return __builtin_aarch64_fminv4hf (__a, __b);
        -:31067:}
        -:31068:
        -:31069:__extension__ extern __inline float16x8_t
        -:31070:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31071:vminnmq_f16 (float16x8_t __a, float16x8_t __b)
        -:31072:{
        -:31073:  return __builtin_aarch64_fminv8hf (__a, __b);
        -:31074:}
        -:31075:
        -:31076:__extension__ extern __inline float16x4_t
        -:31077:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31078:vmul_f16 (float16x4_t __a, float16x4_t __b)
        -:31079:{
        -:31080:  return __a * __b;
        -:31081:}
        -:31082:
        -:31083:__extension__ extern __inline float16x8_t
        -:31084:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31085:vmulq_f16 (float16x8_t __a, float16x8_t __b)
        -:31086:{
        -:31087:  return __a * __b;
        -:31088:}
        -:31089:
        -:31090:__extension__ extern __inline float16x4_t
        -:31091:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31092:vmulx_f16 (float16x4_t __a, float16x4_t __b)
        -:31093:{
        -:31094:  return __builtin_aarch64_fmulxv4hf (__a, __b);
        -:31095:}
        -:31096:
        -:31097:__extension__ extern __inline float16x8_t
        -:31098:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31099:vmulxq_f16 (float16x8_t __a, float16x8_t __b)
        -:31100:{
        -:31101:  return __builtin_aarch64_fmulxv8hf (__a, __b);
        -:31102:}
        -:31103:
        -:31104:__extension__ extern __inline float16x4_t
        -:31105:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31106:vpadd_f16 (float16x4_t a, float16x4_t b)
        -:31107:{
        -:31108:  return __builtin_aarch64_faddpv4hf (a, b);
        -:31109:}
        -:31110:
        -:31111:__extension__ extern __inline float16x8_t
        -:31112:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31113:vpaddq_f16 (float16x8_t a, float16x8_t b)
        -:31114:{
        -:31115:  return __builtin_aarch64_faddpv8hf (a, b);
        -:31116:}
        -:31117:
        -:31118:__extension__ extern __inline float16x4_t
        -:31119:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31120:vpmax_f16 (float16x4_t a, float16x4_t b)
        -:31121:{
        -:31122:  return __builtin_aarch64_smax_nanpv4hf (a, b);
        -:31123:}
        -:31124:
        -:31125:__extension__ extern __inline float16x8_t
        -:31126:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31127:vpmaxq_f16 (float16x8_t a, float16x8_t b)
        -:31128:{
        -:31129:  return __builtin_aarch64_smax_nanpv8hf (a, b);
        -:31130:}
        -:31131:
        -:31132:__extension__ extern __inline float16x4_t
        -:31133:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31134:vpmaxnm_f16 (float16x4_t a, float16x4_t b)
        -:31135:{
        -:31136:  return __builtin_aarch64_smaxpv4hf (a, b);
        -:31137:}
        -:31138:
        -:31139:__extension__ extern __inline float16x8_t
        -:31140:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31141:vpmaxnmq_f16 (float16x8_t a, float16x8_t b)
        -:31142:{
        -:31143:  return __builtin_aarch64_smaxpv8hf (a, b);
        -:31144:}
        -:31145:
        -:31146:__extension__ extern __inline float16x4_t
        -:31147:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31148:vpmin_f16 (float16x4_t a, float16x4_t b)
        -:31149:{
        -:31150:  return __builtin_aarch64_smin_nanpv4hf (a, b);
        -:31151:}
        -:31152:
        -:31153:__extension__ extern __inline float16x8_t
        -:31154:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31155:vpminq_f16 (float16x8_t a, float16x8_t b)
        -:31156:{
        -:31157:  return __builtin_aarch64_smin_nanpv8hf (a, b);
        -:31158:}
        -:31159:
        -:31160:__extension__ extern __inline float16x4_t
        -:31161:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31162:vpminnm_f16 (float16x4_t a, float16x4_t b)
        -:31163:{
        -:31164:  return __builtin_aarch64_sminpv4hf (a, b);
        -:31165:}
        -:31166:
        -:31167:__extension__ extern __inline float16x8_t
        -:31168:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31169:vpminnmq_f16 (float16x8_t a, float16x8_t b)
        -:31170:{
        -:31171:  return __builtin_aarch64_sminpv8hf (a, b);
        -:31172:}
        -:31173:
        -:31174:__extension__ extern __inline float16x4_t
        -:31175:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31176:vrecps_f16 (float16x4_t __a, float16x4_t __b)
        -:31177:{
        -:31178:  return __builtin_aarch64_frecpsv4hf (__a, __b);
        -:31179:}
        -:31180:
        -:31181:__extension__ extern __inline float16x8_t
        -:31182:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31183:vrecpsq_f16 (float16x8_t __a, float16x8_t __b)
        -:31184:{
        -:31185:  return __builtin_aarch64_frecpsv8hf (__a, __b);
        -:31186:}
        -:31187:
        -:31188:__extension__ extern __inline float16x4_t
        -:31189:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31190:vrsqrts_f16 (float16x4_t a, float16x4_t b)
        -:31191:{
        -:31192:  return __builtin_aarch64_rsqrtsv4hf (a, b);
        -:31193:}
        -:31194:
        -:31195:__extension__ extern __inline float16x8_t
        -:31196:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31197:vrsqrtsq_f16 (float16x8_t a, float16x8_t b)
        -:31198:{
        -:31199:  return __builtin_aarch64_rsqrtsv8hf (a, b);
        -:31200:}
        -:31201:
        -:31202:__extension__ extern __inline float16x4_t
        -:31203:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31204:vsub_f16 (float16x4_t __a, float16x4_t __b)
        -:31205:{
        -:31206:  return __a - __b;
        -:31207:}
        -:31208:
        -:31209:__extension__ extern __inline float16x8_t
        -:31210:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31211:vsubq_f16 (float16x8_t __a, float16x8_t __b)
        -:31212:{
        -:31213:  return __a - __b;
        -:31214:}
        -:31215:
        -:31216:/* ARMv8.2-A FP16 three operands vector intrinsics.  */
        -:31217:
        -:31218:__extension__ extern __inline float16x4_t
        -:31219:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31220:vfma_f16 (float16x4_t __a, float16x4_t __b, float16x4_t __c)
        -:31221:{
        -:31222:  return __builtin_aarch64_fmav4hf (__b, __c, __a);
        -:31223:}
        -:31224:
        -:31225:__extension__ extern __inline float16x8_t
        -:31226:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31227:vfmaq_f16 (float16x8_t __a, float16x8_t __b, float16x8_t __c)
        -:31228:{
        -:31229:  return __builtin_aarch64_fmav8hf (__b, __c, __a);
        -:31230:}
        -:31231:
        -:31232:__extension__ extern __inline float16x4_t
        -:31233:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31234:vfms_f16 (float16x4_t __a, float16x4_t __b, float16x4_t __c)
        -:31235:{
        -:31236:  return __builtin_aarch64_fnmav4hf (__b, __c, __a);
        -:31237:}
        -:31238:
        -:31239:__extension__ extern __inline float16x8_t
        -:31240:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31241:vfmsq_f16 (float16x8_t __a, float16x8_t __b, float16x8_t __c)
        -:31242:{
        -:31243:  return __builtin_aarch64_fnmav8hf (__b, __c, __a);
        -:31244:}
        -:31245:
        -:31246:/* ARMv8.2-A FP16 lane vector intrinsics.  */
        -:31247:
        -:31248:__extension__ extern __inline float16_t
        -:31249:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31250:vfmah_lane_f16 (float16_t __a, float16_t __b,
        -:31251:		float16x4_t __c, const int __lane)
        -:31252:{
        -:31253:  return vfmah_f16 (__a, __b, __aarch64_vget_lane_any (__c, __lane));
        -:31254:}
        -:31255:
        -:31256:__extension__ extern __inline float16_t
        -:31257:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31258:vfmah_laneq_f16 (float16_t __a, float16_t __b,
        -:31259:		 float16x8_t __c, const int __lane)
        -:31260:{
        -:31261:  return vfmah_f16 (__a, __b, __aarch64_vget_lane_any (__c, __lane));
        -:31262:}
        -:31263:
        -:31264:__extension__ extern __inline float16x4_t
        -:31265:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31266:vfma_lane_f16 (float16x4_t __a, float16x4_t __b,
        -:31267:	       float16x4_t __c, const int __lane)
        -:31268:{
        -:31269:  return vfma_f16 (__a, __b, __aarch64_vdup_lane_f16 (__c, __lane));
        -:31270:}
        -:31271:
        -:31272:__extension__ extern __inline float16x8_t
        -:31273:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31274:vfmaq_lane_f16 (float16x8_t __a, float16x8_t __b,
        -:31275:		float16x4_t __c, const int __lane)
        -:31276:{
        -:31277:  return vfmaq_f16 (__a, __b, __aarch64_vdupq_lane_f16 (__c, __lane));
        -:31278:}
        -:31279:
        -:31280:__extension__ extern __inline float16x4_t
        -:31281:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31282:vfma_laneq_f16 (float16x4_t __a, float16x4_t __b,
        -:31283:		float16x8_t __c, const int __lane)
        -:31284:{
        -:31285:  return vfma_f16 (__a, __b, __aarch64_vdup_laneq_f16 (__c, __lane));
        -:31286:}
        -:31287:
        -:31288:__extension__ extern __inline float16x8_t
        -:31289:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31290:vfmaq_laneq_f16 (float16x8_t __a, float16x8_t __b,
        -:31291:		 float16x8_t __c, const int __lane)
        -:31292:{
        -:31293:  return vfmaq_f16 (__a, __b, __aarch64_vdupq_laneq_f16 (__c, __lane));
        -:31294:}
        -:31295:
        -:31296:__extension__ extern __inline float16x4_t
        -:31297:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31298:vfma_n_f16 (float16x4_t __a, float16x4_t __b, float16_t __c)
        -:31299:{
        -:31300:  return vfma_f16 (__a, __b, vdup_n_f16 (__c));
        -:31301:}
        -:31302:
        -:31303:__extension__ extern __inline float16x8_t
        -:31304:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31305:vfmaq_n_f16 (float16x8_t __a, float16x8_t __b, float16_t __c)
        -:31306:{
        -:31307:  return vfmaq_f16 (__a, __b, vdupq_n_f16 (__c));
        -:31308:}
        -:31309:
        -:31310:__extension__ extern __inline float16_t
        -:31311:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31312:vfmsh_lane_f16 (float16_t __a, float16_t __b,
        -:31313:		float16x4_t __c, const int __lane)
        -:31314:{
        -:31315:  return vfmsh_f16 (__a, __b, __aarch64_vget_lane_any (__c, __lane));
        -:31316:}
        -:31317:
        -:31318:__extension__ extern __inline float16_t
        -:31319:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31320:vfmsh_laneq_f16 (float16_t __a, float16_t __b,
        -:31321:		 float16x8_t __c, const int __lane)
        -:31322:{
        -:31323:  return vfmsh_f16 (__a, __b, __aarch64_vget_lane_any (__c, __lane));
        -:31324:}
        -:31325:
        -:31326:__extension__ extern __inline float16x4_t
        -:31327:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31328:vfms_lane_f16 (float16x4_t __a, float16x4_t __b,
        -:31329:	       float16x4_t __c, const int __lane)
        -:31330:{
        -:31331:  return vfms_f16 (__a, __b, __aarch64_vdup_lane_f16 (__c, __lane));
        -:31332:}
        -:31333:
        -:31334:__extension__ extern __inline float16x8_t
        -:31335:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31336:vfmsq_lane_f16 (float16x8_t __a, float16x8_t __b,
        -:31337:		float16x4_t __c, const int __lane)
        -:31338:{
        -:31339:  return vfmsq_f16 (__a, __b, __aarch64_vdupq_lane_f16 (__c, __lane));
        -:31340:}
        -:31341:
        -:31342:__extension__ extern __inline float16x4_t
        -:31343:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31344:vfms_laneq_f16 (float16x4_t __a, float16x4_t __b,
        -:31345:		float16x8_t __c, const int __lane)
        -:31346:{
        -:31347:  return vfms_f16 (__a, __b, __aarch64_vdup_laneq_f16 (__c, __lane));
        -:31348:}
        -:31349:
        -:31350:__extension__ extern __inline float16x8_t
        -:31351:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31352:vfmsq_laneq_f16 (float16x8_t __a, float16x8_t __b,
        -:31353:		 float16x8_t __c, const int __lane)
        -:31354:{
        -:31355:  return vfmsq_f16 (__a, __b, __aarch64_vdupq_laneq_f16 (__c, __lane));
        -:31356:}
        -:31357:
        -:31358:__extension__ extern __inline float16x4_t
        -:31359:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31360:vfms_n_f16 (float16x4_t __a, float16x4_t __b, float16_t __c)
        -:31361:{
        -:31362:  return vfms_f16 (__a, __b, vdup_n_f16 (__c));
        -:31363:}
        -:31364:
        -:31365:__extension__ extern __inline float16x8_t
        -:31366:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31367:vfmsq_n_f16 (float16x8_t __a, float16x8_t __b, float16_t __c)
        -:31368:{
        -:31369:  return vfmsq_f16 (__a, __b, vdupq_n_f16 (__c));
        -:31370:}
        -:31371:
        -:31372:__extension__ extern __inline float16_t
        -:31373:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31374:vmulh_lane_f16 (float16_t __a, float16x4_t __b, const int __lane)
        -:31375:{
        -:31376:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:31377:}
        -:31378:
        -:31379:__extension__ extern __inline float16x4_t
        -:31380:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31381:vmul_lane_f16 (float16x4_t __a, float16x4_t __b, const int __lane)
        -:31382:{
        -:31383:  return vmul_f16 (__a, vdup_n_f16 (__aarch64_vget_lane_any (__b, __lane)));
        -:31384:}
        -:31385:
        -:31386:__extension__ extern __inline float16x8_t
        -:31387:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31388:vmulq_lane_f16 (float16x8_t __a, float16x4_t __b, const int __lane)
        -:31389:{
        -:31390:  return vmulq_f16 (__a, vdupq_n_f16 (__aarch64_vget_lane_any (__b, __lane)));
        -:31391:}
        -:31392:
        -:31393:__extension__ extern __inline float16_t
        -:31394:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31395:vmulh_laneq_f16 (float16_t __a, float16x8_t __b, const int __lane)
        -:31396:{
        -:31397:  return __a * __aarch64_vget_lane_any (__b, __lane);
        -:31398:}
        -:31399:
        -:31400:__extension__ extern __inline float16x4_t
        -:31401:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31402:vmul_laneq_f16 (float16x4_t __a, float16x8_t __b, const int __lane)
        -:31403:{
        -:31404:  return vmul_f16 (__a, vdup_n_f16 (__aarch64_vget_lane_any (__b, __lane)));
        -:31405:}
        -:31406:
        -:31407:__extension__ extern __inline float16x8_t
        -:31408:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31409:vmulq_laneq_f16 (float16x8_t __a, float16x8_t __b, const int __lane)
        -:31410:{
        -:31411:  return vmulq_f16 (__a, vdupq_n_f16 (__aarch64_vget_lane_any (__b, __lane)));
        -:31412:}
        -:31413:
        -:31414:__extension__ extern __inline float16x4_t
        -:31415:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31416:vmul_n_f16 (float16x4_t __a, float16_t __b)
        -:31417:{
        -:31418:  return vmul_lane_f16 (__a, vdup_n_f16 (__b), 0);
        -:31419:}
        -:31420:
        -:31421:__extension__ extern __inline float16x8_t
        -:31422:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31423:vmulq_n_f16 (float16x8_t __a, float16_t __b)
        -:31424:{
        -:31425:  return vmulq_laneq_f16 (__a, vdupq_n_f16 (__b), 0);
        -:31426:}
        -:31427:
        -:31428:__extension__ extern __inline float16_t
        -:31429:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31430:vmulxh_lane_f16 (float16_t __a, float16x4_t __b, const int __lane)
        -:31431:{
        -:31432:  return vmulxh_f16 (__a, __aarch64_vget_lane_any (__b, __lane));
        -:31433:}
        -:31434:
        -:31435:__extension__ extern __inline float16x4_t
        -:31436:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31437:vmulx_lane_f16 (float16x4_t __a, float16x4_t __b, const int __lane)
        -:31438:{
        -:31439:  return vmulx_f16 (__a, __aarch64_vdup_lane_f16 (__b, __lane));
        -:31440:}
        -:31441:
        -:31442:__extension__ extern __inline float16x8_t
        -:31443:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31444:vmulxq_lane_f16 (float16x8_t __a, float16x4_t __b, const int __lane)
        -:31445:{
        -:31446:  return vmulxq_f16 (__a, __aarch64_vdupq_lane_f16 (__b, __lane));
        -:31447:}
        -:31448:
        -:31449:__extension__ extern __inline float16_t
        -:31450:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31451:vmulxh_laneq_f16 (float16_t __a, float16x8_t __b, const int __lane)
        -:31452:{
        -:31453:  return vmulxh_f16 (__a, __aarch64_vget_lane_any (__b, __lane));
        -:31454:}
        -:31455:
        -:31456:__extension__ extern __inline float16x4_t
        -:31457:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31458:vmulx_laneq_f16 (float16x4_t __a, float16x8_t __b, const int __lane)
        -:31459:{
        -:31460:  return vmulx_f16 (__a, __aarch64_vdup_laneq_f16 (__b, __lane));
        -:31461:}
        -:31462:
        -:31463:__extension__ extern __inline float16x8_t
        -:31464:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31465:vmulxq_laneq_f16 (float16x8_t __a, float16x8_t __b, const int __lane)
        -:31466:{
        -:31467:  return vmulxq_f16 (__a, __aarch64_vdupq_laneq_f16 (__b, __lane));
        -:31468:}
        -:31469:
        -:31470:__extension__ extern __inline float16x4_t
        -:31471:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31472:vmulx_n_f16 (float16x4_t __a, float16_t __b)
        -:31473:{
        -:31474:  return vmulx_f16 (__a, vdup_n_f16 (__b));
        -:31475:}
        -:31476:
        -:31477:__extension__ extern __inline float16x8_t
        -:31478:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31479:vmulxq_n_f16 (float16x8_t __a, float16_t __b)
        -:31480:{
        -:31481:  return vmulxq_f16 (__a, vdupq_n_f16 (__b));
        -:31482:}
        -:31483:
        -:31484:/* ARMv8.2-A FP16 reduction vector intrinsics.  */
        -:31485:
        -:31486:__extension__ extern __inline float16_t
        -:31487:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31488:vmaxv_f16 (float16x4_t __a)
        -:31489:{
        -:31490:  return __builtin_aarch64_reduc_smax_nan_scal_v4hf (__a);
        -:31491:}
        -:31492:
        -:31493:__extension__ extern __inline float16_t
        -:31494:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31495:vmaxvq_f16 (float16x8_t __a)
        -:31496:{
        -:31497:  return __builtin_aarch64_reduc_smax_nan_scal_v8hf (__a);
        -:31498:}
        -:31499:
        -:31500:__extension__ extern __inline float16_t
        -:31501:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31502:vminv_f16 (float16x4_t __a)
        -:31503:{
        -:31504:  return __builtin_aarch64_reduc_smin_nan_scal_v4hf (__a);
        -:31505:}
        -:31506:
        -:31507:__extension__ extern __inline float16_t
        -:31508:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31509:vminvq_f16 (float16x8_t __a)
        -:31510:{
        -:31511:  return __builtin_aarch64_reduc_smin_nan_scal_v8hf (__a);
        -:31512:}
        -:31513:
        -:31514:__extension__ extern __inline float16_t
        -:31515:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31516:vmaxnmv_f16 (float16x4_t __a)
        -:31517:{
        -:31518:  return __builtin_aarch64_reduc_smax_scal_v4hf (__a);
        -:31519:}
        -:31520:
        -:31521:__extension__ extern __inline float16_t
        -:31522:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31523:vmaxnmvq_f16 (float16x8_t __a)
        -:31524:{
        -:31525:  return __builtin_aarch64_reduc_smax_scal_v8hf (__a);
        -:31526:}
        -:31527:
        -:31528:__extension__ extern __inline float16_t
        -:31529:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31530:vminnmv_f16 (float16x4_t __a)
        -:31531:{
        -:31532:  return __builtin_aarch64_reduc_smin_scal_v4hf (__a);
        -:31533:}
        -:31534:
        -:31535:__extension__ extern __inline float16_t
        -:31536:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31537:vminnmvq_f16 (float16x8_t __a)
        -:31538:{
        -:31539:  return __builtin_aarch64_reduc_smin_scal_v8hf (__a);
        -:31540:}
        -:31541:
        -:31542:#pragma GCC pop_options
        -:31543:
        -:31544:/* AdvSIMD Dot Product intrinsics.  */
        -:31545:
        -:31546:#pragma GCC push_options
        -:31547:#pragma GCC target ("arch=armv8.2-a+dotprod")
        -:31548:
        -:31549:__extension__ extern __inline uint32x2_t
        -:31550:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31551:vdot_u32 (uint32x2_t __r, uint8x8_t __a, uint8x8_t __b)
        -:31552:{
        -:31553:  return __builtin_aarch64_udotv8qi_uuuu (__r, __a, __b);
        -:31554:}
        -:31555:
        -:31556:__extension__ extern __inline uint32x4_t
        -:31557:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31558:vdotq_u32 (uint32x4_t __r, uint8x16_t __a, uint8x16_t __b)
        -:31559:{
        -:31560:  return __builtin_aarch64_udotv16qi_uuuu (__r, __a, __b);
        -:31561:}
        -:31562:
        -:31563:__extension__ extern __inline int32x2_t
        -:31564:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31565:vdot_s32 (int32x2_t __r, int8x8_t __a, int8x8_t __b)
        -:31566:{
        -:31567:  return __builtin_aarch64_sdotv8qi (__r, __a, __b);
        -:31568:}
        -:31569:
        -:31570:__extension__ extern __inline int32x4_t
        -:31571:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31572:vdotq_s32 (int32x4_t __r, int8x16_t __a, int8x16_t __b)
        -:31573:{
        -:31574:  return __builtin_aarch64_sdotv16qi (__r, __a, __b);
        -:31575:}
        -:31576:
        -:31577:__extension__ extern __inline uint32x2_t
        -:31578:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31579:vdot_lane_u32 (uint32x2_t __r, uint8x8_t __a, uint8x8_t __b, const int __index)
        -:31580:{
        -:31581:  return __builtin_aarch64_udot_lanev8qi_uuuus (__r, __a, __b, __index);
        -:31582:}
        -:31583:
        -:31584:__extension__ extern __inline uint32x2_t
        -:31585:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31586:vdot_laneq_u32 (uint32x2_t __r, uint8x8_t __a, uint8x16_t __b,
        -:31587:		const int __index)
        -:31588:{
        -:31589:  return __builtin_aarch64_udot_laneqv8qi_uuuus (__r, __a, __b, __index);
        -:31590:}
        -:31591:
        -:31592:__extension__ extern __inline uint32x4_t
        -:31593:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31594:vdotq_lane_u32 (uint32x4_t __r, uint8x16_t __a, uint8x8_t __b,
        -:31595:		const int __index)
        -:31596:{
        -:31597:  return __builtin_aarch64_udot_lanev16qi_uuuus (__r, __a, __b, __index);
        -:31598:}
        -:31599:
        -:31600:__extension__ extern __inline uint32x4_t
        -:31601:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31602:vdotq_laneq_u32 (uint32x4_t __r, uint8x16_t __a, uint8x16_t __b,
        -:31603:		 const int __index)
        -:31604:{
        -:31605:  return __builtin_aarch64_udot_laneqv16qi_uuuus (__r, __a, __b, __index);
        -:31606:}
        -:31607:
        -:31608:__extension__ extern __inline int32x2_t
        -:31609:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31610:vdot_lane_s32 (int32x2_t __r, int8x8_t __a, int8x8_t __b, const int __index)
        -:31611:{
        -:31612:  return __builtin_aarch64_sdot_lanev8qi (__r, __a, __b, __index);
        -:31613:}
        -:31614:
        -:31615:__extension__ extern __inline int32x2_t
        -:31616:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31617:vdot_laneq_s32 (int32x2_t __r, int8x8_t __a, int8x16_t __b, const int __index)
        -:31618:{
        -:31619:  return __builtin_aarch64_sdot_laneqv8qi (__r, __a, __b, __index);
        -:31620:}
        -:31621:
        -:31622:__extension__ extern __inline int32x4_t
        -:31623:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31624:vdotq_lane_s32 (int32x4_t __r, int8x16_t __a, int8x8_t __b, const int __index)
        -:31625:{
        -:31626:  return __builtin_aarch64_sdot_lanev16qi (__r, __a, __b, __index);
        -:31627:}
        -:31628:
        -:31629:__extension__ extern __inline int32x4_t
        -:31630:__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))
        -:31631:vdotq_laneq_s32 (int32x4_t __r, int8x16_t __a, int8x16_t __b, const int __index)
        -:31632:{
        -:31633:  return __builtin_aarch64_sdot_laneqv16qi (__r, __a, __b, __index);
        -:31634:}
        -:31635:#pragma GCC pop_options
        -:31636:
        -:31637:#undef __aarch64_vget_lane_any
        -:31638:
        -:31639:#undef __aarch64_vdup_lane_any
        -:31640:#undef __aarch64_vdup_lane_f16
        -:31641:#undef __aarch64_vdup_lane_f32
        -:31642:#undef __aarch64_vdup_lane_f64
        -:31643:#undef __aarch64_vdup_lane_p8
        -:31644:#undef __aarch64_vdup_lane_p16
        -:31645:#undef __aarch64_vdup_lane_s8
        -:31646:#undef __aarch64_vdup_lane_s16
        -:31647:#undef __aarch64_vdup_lane_s32
        -:31648:#undef __aarch64_vdup_lane_s64
        -:31649:#undef __aarch64_vdup_lane_u8
        -:31650:#undef __aarch64_vdup_lane_u16
        -:31651:#undef __aarch64_vdup_lane_u32
        -:31652:#undef __aarch64_vdup_lane_u64
        -:31653:#undef __aarch64_vdup_laneq_f16
        -:31654:#undef __aarch64_vdup_laneq_f32
        -:31655:#undef __aarch64_vdup_laneq_f64
        -:31656:#undef __aarch64_vdup_laneq_p8
        -:31657:#undef __aarch64_vdup_laneq_p16
        -:31658:#undef __aarch64_vdup_laneq_s8
        -:31659:#undef __aarch64_vdup_laneq_s16
        -:31660:#undef __aarch64_vdup_laneq_s32
        -:31661:#undef __aarch64_vdup_laneq_s64
        -:31662:#undef __aarch64_vdup_laneq_u8
        -:31663:#undef __aarch64_vdup_laneq_u16
        -:31664:#undef __aarch64_vdup_laneq_u32
        -:31665:#undef __aarch64_vdup_laneq_u64
        -:31666:#undef __aarch64_vdupq_lane_f16
        -:31667:#undef __aarch64_vdupq_lane_f32
        -:31668:#undef __aarch64_vdupq_lane_f64
        -:31669:#undef __aarch64_vdupq_lane_p8
        -:31670:#undef __aarch64_vdupq_lane_p16
        -:31671:#undef __aarch64_vdupq_lane_s8
        -:31672:#undef __aarch64_vdupq_lane_s16
        -:31673:#undef __aarch64_vdupq_lane_s32
        -:31674:#undef __aarch64_vdupq_lane_s64
        -:31675:#undef __aarch64_vdupq_lane_u8
        -:31676:#undef __aarch64_vdupq_lane_u16
        -:31677:#undef __aarch64_vdupq_lane_u32
        -:31678:#undef __aarch64_vdupq_lane_u64
        -:31679:#undef __aarch64_vdupq_laneq_f16
        -:31680:#undef __aarch64_vdupq_laneq_f32
        -:31681:#undef __aarch64_vdupq_laneq_f64
        -:31682:#undef __aarch64_vdupq_laneq_p8
        -:31683:#undef __aarch64_vdupq_laneq_p16
        -:31684:#undef __aarch64_vdupq_laneq_s8
        -:31685:#undef __aarch64_vdupq_laneq_s16
        -:31686:#undef __aarch64_vdupq_laneq_s32
        -:31687:#undef __aarch64_vdupq_laneq_s64
        -:31688:#undef __aarch64_vdupq_laneq_u8
        -:31689:#undef __aarch64_vdupq_laneq_u16
        -:31690:#undef __aarch64_vdupq_laneq_u32
        -:31691:#undef __aarch64_vdupq_laneq_u64
        -:31692:
        -:31693:#endif
